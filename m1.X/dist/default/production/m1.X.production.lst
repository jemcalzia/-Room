

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 13 13:05:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.05
    43                           ; Generated 20/12/2018 GMT
    44                           ; 
    45                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310                           
   311                           	psect	idataBANK0
   312  0F1C                     __pidataBANK0:	
   313                           
   314                           ;initializer for _humedad
   315  0F1C  343E               	retlw	62
   316                           
   317                           ;initializer for _temperatura
   318  0F1D  341B               	retlw	27
   319                           
   320                           	psect	strings
   321  07E8                     __pstrings:	
   322  07E8                     stringtab:	
   323  07E8                     __stringtab:	
   324  07E8                     stringcode:	
   325                           ;	String table - string pointers are 1 byte each
   326                           
   327  07E8                     stringdir:	
   328  07E8  3007               	movlw	high stringdir
   329  07E9  008A               	movwf	10
   330  07EA  0804               	movf	4,w
   331  07EB  0A84               	incf	4,f
   332  07EC  0782               	addwf	2,f
   333  07ED                     __stringbase:	
   334  07ED  3400               	retlw	0
   335  07EE                     __end_of__stringtab:	
   336  07EE                     _dpowers:	
   337  07EE  3401               	retlw	1
   338  07EF  3400               	retlw	0
   339  07F0  340A               	retlw	10
   340  07F1  3400               	retlw	0
   341  07F2  3464               	retlw	100
   342  07F3  3400               	retlw	0
   343  07F4  34E8               	retlw	232
   344  07F5  3403               	retlw	3
   345  07F6  3410               	retlw	16
   346  07F7  3427               	retlw	39
   347  07F8                     __end_of_dpowers:	
   348  000E                     _TMR1	set	14
   349  000C                     _PIR1bits	set	12
   350  000B                     _INTCONbits	set	11
   351  0010                     _T1CONbits	set	16
   352  001A                     _RCREG	set	26
   353  0019                     _TXREG	set	25
   354  0018                     _RCSTAbits	set	24
   355  0008                     _PORTDbits	set	8
   356  0005                     _PORTA	set	5
   357  0006                     _PORTB	set	6
   358  0013                     _SSPBUF	set	19
   359  0014                     _SSPCON	set	20
   360  0065                     _RCIF	set	101
   361  0064                     _TXIF	set	100
   362  00C4                     _CREN	set	196
   363  0029                     _RA1	set	41
   364  0028                     _RA0	set	40
   365  0063                     _SSPIF	set	99
   366  005E                     _PEIE	set	94
   367  005F                     _GIE	set	95
   368  008C                     _PIE1bits	set	140
   369  009A                     _SPBRGH	set	154
   370  0098                     _TXSTAbits	set	152
   371  0087                     _TRISCbits	set	135
   372  0088                     _TRISD	set	136
   373  0086                     _TRISB	set	134
   374  0085                     _TRISA	set	133
   375  008F                     _OSCCONbits	set	143
   376  0091                     _SSPCON2bits	set	145
   377  0094                     _SSPSTAT	set	148
   378  0093                     _SSPADD	set	147
   379  0091                     _SSPCON2	set	145
   380  0463                     _SSPIE	set	1123
   381  048B                     _RCEN	set	1163
   382  043C                     _TRISC4	set	1084
   383  043B                     _TRISC3	set	1083
   384  0187                     _BAUDCTLbits	set	391
   385  0189                     _ANSELH	set	393
   386  0188                     _ANSEL	set	392
   387  07F8                     STR_1:	
   388  07F8  3425               	retlw	37	;'%'
   389  07F9  3464               	retlw	100	;'d'
   390  07FA  3420               	retlw	32	;' '
   391  07FB  3400               	retlw	0
   392  07FC                     STR_8:	
   393  07FC  343A               	retlw	58	;':'
   394  07FD  3425               	retlw	37	;'%'
   395  07FE  3464               	retlw	100	;'d'
   396  07FF  3400               	retlw	0
   397  07F8                     
   398                           ; #config settings
   399  0000                     
   400                           	psect	cinit
   401  000F                     start_initialization:	
   402  000F                     __initialization:	
   403                           
   404                           ; Initialize objects allocated to BANK0
   405  000F  120A  158A  271C  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   406  0014  00E6               	movwf	__pdataBANK0& (0+127)
   407  0015  120A  158A  271D  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   408  001A  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   409                           
   410                           ; Clear objects allocated to BANK0
   411  001B  1383               	bcf	3,7	;select IRP bank0
   412  001C  3020               	movlw	low __pbssBANK0
   413  001D  0084               	movwf	4
   414  001E  304D               	movlw	low (__pbssBANK0+45)
   415  001F  120A  158A  2742   	fcall	clear_ram0
   416                           
   417                           ; Clear objects allocated to COMMON
   418  0022  01F8               	clrf	__pbssCOMMON& (0+127)
   419  0023  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   420  0024  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   421  0025                     end_of_initialization:	
   422                           ;End of C runtime variable initialization code
   423                           
   424  0025                     __end_of__initialization:	
   425  0025  0183               	clrf	3
   426  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   427                           
   428                           	psect	bssCOMMON
   429  0078                     __pbssCOMMON:	
   430  0078                     _valor_CONT:	
   431  0078                     	ds	1
   432  0079                     _variableADC:	
   433  0079                     	ds	1
   434  007A                     _t1_count:	
   435  007A                     	ds	1
   436                           
   437                           	psect	bssBANK0
   438  0020                     __pbssBANK0:	
   439  0020                     _convertido:	
   440  0020                     	ds	4
   441  0024                     _counter:	
   442  0024                     	ds	1
   443  0025                     _hum:	
   444  0025                     	ds	1
   445  0026                     _pir:	
   446  0026                     	ds	1
   447  0027                     _luz:	
   448  0027                     	ds	1
   449  0028                     _puerta:	
   450  0028                     	ds	1
   451  0029                     _horaIzq:	
   452  0029                     	ds	1
   453  002A                     _horaDer:	
   454  002A                     	ds	1
   455  002B                     _minutoIzq:	
   456  002B                     	ds	1
   457  002C                     _minutoDer:	
   458  002C                     	ds	1
   459  002D                     _segundoIzq:	
   460  002D                     	ds	1
   461  002E                     _segundoDer:	
   462  002E                     	ds	1
   463  002F                     _cual_dato:	
   464  002F                     	ds	1
   465  0030                     _segundo:	
   466  0030                     	ds	1
   467  0031                     _ap:	
   468  0031                     	ds	1
   469  0032                     _hr:	
   470  0032                     	ds	1
   471  0033                     _hora:	
   472  0033                     	ds	1
   473  0034                     _minuto:	
   474  0034                     	ds	1
   475  0035                     _unitario:	
   476  0035                     	ds	1
   477  0036                     _apoyo_unitario:	
   478  0036                     	ds	1
   479  0037                     _decimal:	
   480  0037                     	ds	1
   481  0038                     _a:	
   482  0038                     	ds	1
   483  0039                     _show:	
   484  0039                     	ds	20
   485                           
   486                           	psect	dataBANK0
   487  0066                     __pdataBANK0:	
   488  0066                     _humedad:	
   489  0066                     	ds	1
   490  0067                     _temperatura:	
   491  0067                     	ds	1
   492                           
   493                           	psect	clrtext
   494  0F42                     clear_ram0:	
   495                           ;	Called with FSR containing the base address, and
   496                           ;	W with the last address+1
   497                           
   498  0F42  0064               	clrwdt	;clear the watchdog before getting into this loop
   499  0F43                     clrloop0:	
   500  0F43  0180               	clrf	0	;clear RAM location pointed to by FSR
   501  0F44  0A84               	incf	4,f	;increment pointer
   502  0F45  0604               	xorwf	4,w	;XOR with final address
   503  0F46  1903               	btfsc	3,2	;have we reached the end yet?
   504  0F47  3400               	retlw	0	;all done for this memory range, return
   505  0F48  0604               	xorwf	4,w	;XOR again to restore value
   506  0F49  2F43               	goto	clrloop0	;do the next byte
   507                           
   508                           	psect	cstackCOMMON
   509  0070                     __pcstackCOMMON:	
   510  0070                     ?_I2C_Master_Wait:	
   511  0070                     ?_I2C_Master_Start:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_I2C_Master_RepeatedStart:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_I2C_Master_Stop:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_oscilator_begin:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_LCD8_write:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_LCD8_cmd:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_LCD8_clear:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_LCD8_begin:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_LCD8_strWrite:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_setup:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_UART_Tx:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_UART_Rx:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_main:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_isr:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ??_isr:	
   554                           ; 1 bytes @ 0x0
   555                           
   556                           
   557                           ; 1 bytes @ 0x0
   558  0070                     	ds	3
   559  0073                     ?_timer1_begin:	
   560  0073                     ??_I2C_Master_Wait:	
   561                           ; 1 bytes @ 0x3
   562                           
   563  0073                     ??_I2C_Master_Start:	
   564                           ; 1 bytes @ 0x3
   565                           
   566  0073                     ??_I2C_Master_RepeatedStart:	
   567                           ; 1 bytes @ 0x3
   568                           
   569  0073                     ??_I2C_Master_Stop:	
   570                           ; 1 bytes @ 0x3
   571                           
   572  0073                     ?_I2C_Master_Write:	
   573                           ; 1 bytes @ 0x3
   574                           
   575  0073                     ??_oscilator_begin:	
   576                           ; 1 bytes @ 0x3
   577                           
   578  0073                     ??_LCD8_write:	
   579                           ; 1 bytes @ 0x3
   580                           
   581  0073                     ??_LCD8_cmd:	
   582                           ; 1 bytes @ 0x3
   583                           
   584  0073                     ??_UART_Tx:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0073                     ??_UART_Rx:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0073                     ??___lldiv:	
   591                           ; 1 bytes @ 0x3
   592                           
   593  0073                     ?_I2C_Master_Read:	
   594                           ; 1 bytes @ 0x3
   595                           
   596  0073                     ?___lwdiv:	
   597                           ; 2 bytes @ 0x3
   598                           
   599  0073                     UART_Tx@val:	
   600                           ; 2 bytes @ 0x3
   601                           
   602  0073                     timer1_begin@prescaler:	
   603                           ; 1 bytes @ 0x3
   604                           
   605  0073                     I2C_Master_Write@d:	
   606                           ; 1 bytes @ 0x3
   607                           
   608  0073                     I2C_Master_Read@a:	
   609                           ; 2 bytes @ 0x3
   610                           
   611  0073                     ___lwdiv@divisor:	
   612                           ; 2 bytes @ 0x3
   613                           
   614                           
   615                           ; 2 bytes @ 0x3
   616  0073                     	ds	1
   617  0074                     ??_timer1_begin:	
   618  0074                     ??_I2C_Master_Init:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0074                     oscilator_begin@freq:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     LCD8_write@data:	
   625                           ; 1 bytes @ 0x4
   626                           
   627                           
   628                           ; 1 bytes @ 0x4
   629  0074                     	ds	1
   630  0075                     ??_I2C_Master_Write:	
   631  0075                     ??_I2C_Master_Read:	
   632                           ; 1 bytes @ 0x5
   633                           
   634  0075                     ??_write_ds1307:	
   635                           ; 1 bytes @ 0x5
   636                           
   637  0075                     ??_LCD8_strWrite:	
   638                           ; 1 bytes @ 0x5
   639                           
   640  0075                     LCD8_cmd@data:	
   641                           ; 1 bytes @ 0x5
   642                           
   643  0075                     ___lwdiv@dividend:	
   644                           ; 1 bytes @ 0x5
   645                           
   646                           
   647                           ; 2 bytes @ 0x5
   648  0075                     	ds	1
   649  0076                     ?_LCD8_set_cursor:	
   650  0076                     ??_LCD8_clear:	
   651                           ; 1 bytes @ 0x6
   652                           
   653  0076                     ??_LCD8_begin:	
   654                           ; 1 bytes @ 0x6
   655                           
   656  0076                     LCD8_set_cursor@column:	
   657                           ; 1 bytes @ 0x6
   658                           
   659  0076                     LCD8_strWrite@i:	
   660                           ; 1 bytes @ 0x6
   661                           
   662  0076                     timer1_begin@offset:	
   663                           ; 1 bytes @ 0x6
   664                           
   665                           
   666                           ; 1 bytes @ 0x6
   667  0076                     	ds	1
   668  0077                     ??_read_DS1307:	
   669  0077                     ??_LCD8_set_cursor:	
   670                           ; 1 bytes @ 0x7
   671                           
   672  0077                     ??___lwdiv:	
   673                           ; 1 bytes @ 0x7
   674                           
   675  0077                     LCD8_strWrite@data:	
   676                           ; 1 bytes @ 0x7
   677                           
   678                           
   679                           ; 1 bytes @ 0x7
   680  0077                     	ds	1
   681                           
   682                           	psect	cstackBANK0
   683  004D                     __pcstackBANK0:	
   684  004D                     ?_write_ds1307:	
   685  004D                     ?___lldiv:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  004D                     LCD8_set_cursor@cursor:	
   689                           ; 4 bytes @ 0x0
   690                           
   691  004D                     ___lwdiv@counter:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  004D                     I2C_Master_Read@temp:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  004D                     write_ds1307@address:	
   698                           ; 2 bytes @ 0x0
   699                           
   700  004D                     ___lldiv@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703                           
   704                           ; 4 bytes @ 0x0
   705  004D                     	ds	1
   706  004E                     LCD8_set_cursor@row:	
   707  004E                     ___lwdiv@quotient:	
   708                           ; 1 bytes @ 0x1
   709                           
   710                           
   711                           ; 2 bytes @ 0x1
   712  004E                     	ds	1
   713  004F                     ?_read_DS1307:	
   714  004F                     read_DS1307@direccion:	
   715                           ; 2 bytes @ 0x2
   716                           
   717  004F                     write_ds1307@w_data:	
   718                           ; 2 bytes @ 0x2
   719                           
   720                           
   721                           ; 2 bytes @ 0x2
   722  004F                     	ds	1
   723  0050                     ?___lwmod:	
   724  0050                     ___lwmod@divisor:	
   725                           ; 2 bytes @ 0x3
   726                           
   727                           
   728                           ; 2 bytes @ 0x3
   729  0050                     	ds	1
   730  0051                     read_DS1307@tiempo:	
   731  0051                     ___lldiv@dividend:	
   732                           ; 2 bytes @ 0x4
   733                           
   734                           
   735                           ; 4 bytes @ 0x4
   736  0051                     	ds	1
   737  0052                     ___lwmod@dividend:	
   738                           
   739                           ; 2 bytes @ 0x5
   740  0052                     	ds	2
   741  0054                     ??___lwmod:	
   742                           
   743                           ; 1 bytes @ 0x7
   744  0054                     	ds	1
   745  0055                     ___lwmod@counter:	
   746  0055                     ___lldiv@quotient:	
   747                           ; 1 bytes @ 0x8
   748                           
   749                           
   750                           ; 4 bytes @ 0x8
   751  0055                     	ds	1
   752  0056                     ?_sprintf:	
   753  0056                     sprintf@f:	
   754                           ; 2 bytes @ 0x9
   755                           
   756                           
   757                           ; 1 bytes @ 0x9
   758  0056                     	ds	3
   759  0059                     ??_sprintf:	
   760  0059                     ___lldiv@counter:	
   761                           ; 1 bytes @ 0xC
   762                           
   763                           
   764                           ; 1 bytes @ 0xC
   765  0059                     	ds	1
   766  005A                     ?_I2C_Master_Init:	
   767  005A                     I2C_Master_Init@c:	
   768                           ; 1 bytes @ 0xD
   769                           
   770                           
   771                           ; 4 bytes @ 0xD
   772  005A                     	ds	2
   773  005C                     sprintf@ap:	
   774                           
   775                           ; 1 bytes @ 0xF
   776  005C                     	ds	1
   777  005D                     sprintf@flag:	
   778                           
   779                           ; 1 bytes @ 0x10
   780  005D                     	ds	1
   781  005E                     ??_setup:	
   782  005E                     sprintf@prec:	
   783                           ; 1 bytes @ 0x11
   784                           
   785                           
   786                           ; 1 bytes @ 0x11
   787  005E                     	ds	1
   788  005F                     sprintf@val:	
   789                           
   790                           ; 2 bytes @ 0x12
   791  005F                     	ds	2
   792  0061                     sprintf@c:	
   793                           
   794                           ; 1 bytes @ 0x14
   795  0061                     	ds	1
   796  0062                     sprintf@sp:	
   797                           
   798                           ; 1 bytes @ 0x15
   799  0062                     	ds	1
   800  0063                     ??_main:	
   801                           
   802                           ; 1 bytes @ 0x16
   803  0063                     	ds	3
   804                           
   805                           	psect	maintext
   806  0029                     __pmaintext:	
   807 ;;
   808 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   809 ;;
   810 ;; *************** function _main *****************
   811 ;; Defined at:
   812 ;;		line 110 in file "main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : B00/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0
   828 ;;      Temps:          0       3       0       0       0
   829 ;;      Totals:         0       3       0       0       0
   830 ;;Total ram usage:        3 bytes
   831 ;; Hardware stack levels required when called:    5
   832 ;; This function calls:
   833 ;;		_I2C_Master_Read
   834 ;;		_I2C_Master_Start
   835 ;;		_I2C_Master_Stop
   836 ;;		_I2C_Master_Write
   837 ;;		_LCD8_set_cursor
   838 ;;		_LCD8_strWrite
   839 ;;		_UART_Rx
   840 ;;		_UART_Tx
   841 ;;		_read_DS1307
   842 ;;		_setup
   843 ;;		_sprintf
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _main
   851  0029                     _main:	
   852                           
   853                           ;main.c: 112:     setup();
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   857  0029  120A  118A  257F  120A  118A  	fcall	_setup
   858  002E                     l2458:	
   859                           
   860                           ;main.c: 115:         PORTDbits.RD2 =0;
   861  002E  1283               	bcf	3,5	;RP0=0, select bank0
   862  002F  1303               	bcf	3,6	;RP1=0, select bank0
   863  0030  1108               	bcf	8,2	;volatile
   864                           
   865                           ;main.c: 117:         counter++;
   866  0031  3001               	movlw	1
   867  0032  00E3               	movwf	??_main
   868  0033  0863               	movf	??_main,w
   869  0034  07A4               	addwf	_counter,f
   870                           
   871                           ;main.c: 119:             I2C_Master_Start();
   872  0035  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
   873                           
   874                           ;main.c: 120:             I2C_Master_Write(0x20);
   875  003A  3020               	movlw	32
   876  003B  00F3               	movwf	I2C_Master_Write@d
   877  003C  3000               	movlw	0
   878  003D  00F4               	movwf	I2C_Master_Write@d+1
   879  003E  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
   880                           
   881                           ;main.c: 121:             I2C_Master_Write(0x1);
   882  0043  3001               	movlw	1
   883  0044  00F3               	movwf	I2C_Master_Write@d
   884  0045  3000               	movlw	0
   885  0046  00F4               	movwf	I2C_Master_Write@d+1
   886  0047  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
   887                           
   888                           ;main.c: 122:             I2C_Master_Stop();
   889  004C  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
   890                           
   891                           ;main.c: 123:             _delay((unsigned long)((10)*(8000000/4000.0)));
   892  0051  301A               	movlw	26
   893  0052  1283               	bcf	3,5	;RP0=0, select bank0
   894  0053  1303               	bcf	3,6	;RP1=0, select bank0
   895  0054  00E4               	movwf	??_main+1
   896  0055  30F7               	movlw	247
   897  0056  00E3               	movwf	??_main
   898  0057                     u1467:	
   899  0057  0BE3               	decfsz	??_main,f
   900  0058  2857               	goto	u1467
   901  0059  0BE4               	decfsz	??_main+1,f
   902  005A  2857               	goto	u1467
   903  005B  285C               	nop2
   904                           
   905                           ;main.c: 127:             I2C_Master_Start();
   906  005C  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
   907                           
   908                           ;main.c: 128:             I2C_Master_Write(0x21);
   909  0061  3021               	movlw	33
   910  0062  00F3               	movwf	I2C_Master_Write@d
   911  0063  3000               	movlw	0
   912  0064  00F4               	movwf	I2C_Master_Write@d+1
   913  0065  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
   914                           
   915                           ;main.c: 129:             puerta = I2C_Master_Read(0);
   916  006A  3000               	movlw	0
   917  006B  00F3               	movwf	I2C_Master_Read@a
   918  006C  00F4               	movwf	I2C_Master_Read@a+1
   919  006D  120A  118A  2792  120A  118A  	fcall	_I2C_Master_Read
   920  0072  0873               	movf	?_I2C_Master_Read,w
   921  0073  1283               	bcf	3,5	;RP0=0, select bank0
   922  0074  1303               	bcf	3,6	;RP1=0, select bank0
   923  0075  00E3               	movwf	??_main
   924  0076  0863               	movf	??_main,w
   925  0077  00A8               	movwf	_puerta
   926                           
   927                           ;main.c: 130:             I2C_Master_Stop();
   928  0078  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
   929                           
   930                           ;main.c: 131:            _delay((unsigned long)((10)*(8000000/4000.0)));
   931  007D  301A               	movlw	26
   932  007E  1283               	bcf	3,5	;RP0=0, select bank0
   933  007F  1303               	bcf	3,6	;RP1=0, select bank0
   934  0080  00E4               	movwf	??_main+1
   935  0081  30F7               	movlw	247
   936  0082  00E3               	movwf	??_main
   937  0083                     u1477:	
   938  0083  0BE3               	decfsz	??_main,f
   939  0084  2883               	goto	u1477
   940  0085  0BE4               	decfsz	??_main+1,f
   941  0086  2883               	goto	u1477
   942  0087  2888               	nop2
   943                           
   944                           ;main.c: 135:             I2C_Master_Start();
   945  0088  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
   946                           
   947                           ;main.c: 136:             I2C_Master_Write(0x20);
   948  008D  3020               	movlw	32
   949  008E  00F3               	movwf	I2C_Master_Write@d
   950  008F  3000               	movlw	0
   951  0090  00F4               	movwf	I2C_Master_Write@d+1
   952  0091  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
   953                           
   954                           ;main.c: 137:             I2C_Master_Write(0x2);
   955  0096  3002               	movlw	2
   956  0097  00F3               	movwf	I2C_Master_Write@d
   957  0098  3000               	movlw	0
   958  0099  00F4               	movwf	I2C_Master_Write@d+1
   959  009A  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
   960                           
   961                           ;main.c: 138:             I2C_Master_Stop();
   962  009F  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
   963                           
   964                           ;main.c: 139:             _delay((unsigned long)((10)*(8000000/4000.0)));
   965  00A4  301A               	movlw	26
   966  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   967  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   968  00A7  00E4               	movwf	??_main+1
   969  00A8  30F7               	movlw	247
   970  00A9  00E3               	movwf	??_main
   971  00AA                     u1487:	
   972  00AA  0BE3               	decfsz	??_main,f
   973  00AB  28AA               	goto	u1487
   974  00AC  0BE4               	decfsz	??_main+1,f
   975  00AD  28AA               	goto	u1487
   976  00AE  28AF               	nop2
   977                           
   978                           ;main.c: 143:             I2C_Master_Start();
   979  00AF  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
   980                           
   981                           ;main.c: 144:             I2C_Master_Write(0x21);
   982  00B4  3021               	movlw	33
   983  00B5  00F3               	movwf	I2C_Master_Write@d
   984  00B6  3000               	movlw	0
   985  00B7  00F4               	movwf	I2C_Master_Write@d+1
   986  00B8  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
   987                           
   988                           ;main.c: 145:             luz = I2C_Master_Read(0);
   989  00BD  3000               	movlw	0
   990  00BE  00F3               	movwf	I2C_Master_Read@a
   991  00BF  00F4               	movwf	I2C_Master_Read@a+1
   992  00C0  120A  118A  2792  120A  118A  	fcall	_I2C_Master_Read
   993  00C5  0873               	movf	?_I2C_Master_Read,w
   994  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   995  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   996  00C8  00E3               	movwf	??_main
   997  00C9  0863               	movf	??_main,w
   998  00CA  00A7               	movwf	_luz
   999                           
  1000                           ;main.c: 146:             I2C_Master_Stop();
  1001  00CB  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1002                           
  1003                           ;main.c: 147:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1004  00D0  301A               	movlw	26
  1005  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1006  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1007  00D3  00E4               	movwf	??_main+1
  1008  00D4  30F7               	movlw	247
  1009  00D5  00E3               	movwf	??_main
  1010  00D6                     u1497:	
  1011  00D6  0BE3               	decfsz	??_main,f
  1012  00D7  28D6               	goto	u1497
  1013  00D8  0BE4               	decfsz	??_main+1,f
  1014  00D9  28D6               	goto	u1497
  1015  00DA  28DB               	nop2
  1016                           
  1017                           ;main.c: 153:             segundo = read_DS1307(0);
  1018  00DB  3000               	movlw	0
  1019  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1020  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1021  00DE  00CF               	movwf	read_DS1307@direccion
  1022  00DF  00D0               	movwf	read_DS1307@direccion+1
  1023  00E0  120A  118A  26A9  120A  118A  	fcall	_read_DS1307
  1024  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1025  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1026  00E7  084F               	movf	?_read_DS1307,w
  1027  00E8  00E3               	movwf	??_main
  1028  00E9  0863               	movf	??_main,w
  1029  00EA  00B0               	movwf	_segundo
  1030                           
  1031                           ;main.c: 154:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1032  00EB  301A               	movlw	26
  1033  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1034  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1035  00EE  00E4               	movwf	??_main+1
  1036  00EF  30F7               	movlw	247
  1037  00F0  00E3               	movwf	??_main
  1038  00F1                     u1507:	
  1039  00F1  0BE3               	decfsz	??_main,f
  1040  00F2  28F1               	goto	u1507
  1041  00F3  0BE4               	decfsz	??_main+1,f
  1042  00F4  28F1               	goto	u1507
  1043  00F5  28F6               	nop2
  1044                           
  1045                           ;main.c: 155:             minuto = read_DS1307(1);
  1046  00F6  3001               	movlw	1
  1047  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1048  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1049  00F9  00CF               	movwf	read_DS1307@direccion
  1050  00FA  3000               	movlw	0
  1051  00FB  00D0               	movwf	read_DS1307@direccion+1
  1052  00FC  120A  118A  26A9  120A  118A  	fcall	_read_DS1307
  1053  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0103  084F               	movf	?_read_DS1307,w
  1056  0104  00E3               	movwf	??_main
  1057  0105  0863               	movf	??_main,w
  1058  0106  00B4               	movwf	_minuto
  1059                           
  1060                           ;main.c: 156:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1061  0107  301A               	movlw	26
  1062  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1064  010A  00E4               	movwf	??_main+1
  1065  010B  30F7               	movlw	247
  1066  010C  00E3               	movwf	??_main
  1067  010D                     u1517:	
  1068  010D  0BE3               	decfsz	??_main,f
  1069  010E  290D               	goto	u1517
  1070  010F  0BE4               	decfsz	??_main+1,f
  1071  0110  290D               	goto	u1517
  1072  0111  2912               	nop2
  1073                           
  1074                           ;main.c: 157:             hora = read_DS1307(2);
  1075  0112  3002               	movlw	2
  1076  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0115  00CF               	movwf	read_DS1307@direccion
  1079  0116  3000               	movlw	0
  1080  0117  00D0               	movwf	read_DS1307@direccion+1
  1081  0118  120A  118A  26A9  120A  118A  	fcall	_read_DS1307
  1082  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1083  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1084  011F  084F               	movf	?_read_DS1307,w
  1085  0120  00E3               	movwf	??_main
  1086  0121  0863               	movf	??_main,w
  1087  0122  00B3               	movwf	_hora
  1088                           
  1089                           ;main.c: 158:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1090  0123  301A               	movlw	26
  1091  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0126  00E4               	movwf	??_main+1
  1094  0127  30F7               	movlw	247
  1095  0128  00E3               	movwf	??_main
  1096  0129                     u1527:	
  1097  0129  0BE3               	decfsz	??_main,f
  1098  012A  2929               	goto	u1527
  1099  012B  0BE4               	decfsz	??_main+1,f
  1100  012C  2929               	goto	u1527
  1101  012D  292E               	nop2
  1102                           
  1103                           ;main.c: 159:             hr = hora & 0b00011111;
  1104  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1105  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0130  0833               	movf	_hora,w
  1107  0131  391F               	andlw	31
  1108  0132  00E3               	movwf	??_main
  1109  0133  0863               	movf	??_main,w
  1110  0134  00B2               	movwf	_hr
  1111                           
  1112                           ;main.c: 160:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1113  0135  301A               	movlw	26
  1114  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0138  00E4               	movwf	??_main+1
  1117  0139  30F7               	movlw	247
  1118  013A  00E3               	movwf	??_main
  1119  013B                     u1537:	
  1120  013B  0BE3               	decfsz	??_main,f
  1121  013C  293B               	goto	u1537
  1122  013D  0BE4               	decfsz	??_main+1,f
  1123  013E  293B               	goto	u1537
  1124  013F  2940               	nop2
  1125                           
  1126                           ;main.c: 161:             ap = hora & 0b00100000;
  1127  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0142  0833               	movf	_hora,w
  1130  0143  3920               	andlw	32
  1131  0144  00E3               	movwf	??_main
  1132  0145  0863               	movf	??_main,w
  1133  0146  00B1               	movwf	_ap
  1134                           
  1135                           ;main.c: 162:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1136  0147  301A               	movlw	26
  1137  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1139  014A  00E4               	movwf	??_main+1
  1140  014B  30F7               	movlw	247
  1141  014C  00E3               	movwf	??_main
  1142  014D                     u1547:	
  1143  014D  0BE3               	decfsz	??_main,f
  1144  014E  294D               	goto	u1547
  1145  014F  0BE4               	decfsz	??_main+1,f
  1146  0150  294D               	goto	u1547
  1147  0151  2952               	nop2
  1148                           
  1149                           ;main.c: 166:             I2C_Master_Start();
  1150  0152  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
  1151                           
  1152                           ;main.c: 167:             I2C_Master_Write(0x30);
  1153  0157  3030               	movlw	48
  1154  0158  00F3               	movwf	I2C_Master_Write@d
  1155  0159  3000               	movlw	0
  1156  015A  00F4               	movwf	I2C_Master_Write@d+1
  1157  015B  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1158                           
  1159                           ;main.c: 168:             I2C_Master_Write(minuto);
  1160  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0162  0834               	movf	_minuto,w
  1163  0163  00E3               	movwf	??_main
  1164  0164  01E4               	clrf	??_main+1
  1165  0165  0863               	movf	??_main,w
  1166  0166  00F3               	movwf	I2C_Master_Write@d
  1167  0167  0864               	movf	??_main+1,w
  1168  0168  00F4               	movwf	I2C_Master_Write@d+1
  1169  0169  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1170                           
  1171                           ;main.c: 169:             I2C_Master_Stop();
  1172  016E  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1173                           
  1174                           ;main.c: 170:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1175  0173  301A               	movlw	26
  1176  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0176  00E4               	movwf	??_main+1
  1179  0177  30F7               	movlw	247
  1180  0178  00E3               	movwf	??_main
  1181  0179                     u1557:	
  1182  0179  0BE3               	decfsz	??_main,f
  1183  017A  2979               	goto	u1557
  1184  017B  0BE4               	decfsz	??_main+1,f
  1185  017C  2979               	goto	u1557
  1186  017D  297E               	nop2
  1187                           
  1188                           ;main.c: 174:             I2C_Master_Start();
  1189  017E  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
  1190                           
  1191                           ;main.c: 175:             I2C_Master_Write(0x31);
  1192  0183  3031               	movlw	49
  1193  0184  00F3               	movwf	I2C_Master_Write@d
  1194  0185  3000               	movlw	0
  1195  0186  00F4               	movwf	I2C_Master_Write@d+1
  1196  0187  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1197                           
  1198                           ;main.c: 176:             pir = I2C_Master_Read(0);
  1199  018C  3000               	movlw	0
  1200  018D  00F3               	movwf	I2C_Master_Read@a
  1201  018E  00F4               	movwf	I2C_Master_Read@a+1
  1202  018F  120A  118A  2792  120A  118A  	fcall	_I2C_Master_Read
  1203  0194  0873               	movf	?_I2C_Master_Read,w
  1204  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0197  00E3               	movwf	??_main
  1207  0198  0863               	movf	??_main,w
  1208  0199  00A6               	movwf	_pir
  1209                           
  1210                           ;main.c: 177:             I2C_Master_Stop();
  1211  019A  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1212                           
  1213                           ;main.c: 178:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1214  019F  301A               	movlw	26
  1215  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1216  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1217  01A2  00E4               	movwf	??_main+1
  1218  01A3  30F7               	movlw	247
  1219  01A4  00E3               	movwf	??_main
  1220  01A5                     u1567:	
  1221  01A5  0BE3               	decfsz	??_main,f
  1222  01A6  29A5               	goto	u1567
  1223  01A7  0BE4               	decfsz	??_main+1,f
  1224  01A8  29A5               	goto	u1567
  1225  01A9  29AA               	nop2
  1226                           
  1227                           ;main.c: 186:             I2C_Master_Start();
  1228  01AA  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
  1229                           
  1230                           ;main.c: 187:             I2C_Master_Write(0x30);
  1231  01AF  3030               	movlw	48
  1232  01B0  00F3               	movwf	I2C_Master_Write@d
  1233  01B1  3000               	movlw	0
  1234  01B2  00F4               	movwf	I2C_Master_Write@d+1
  1235  01B3  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1236                           
  1237                           ;main.c: 188:             I2C_Master_Write(hr);
  1238  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1239  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1240  01BA  0832               	movf	_hr,w
  1241  01BB  00E3               	movwf	??_main
  1242  01BC  01E4               	clrf	??_main+1
  1243  01BD  0863               	movf	??_main,w
  1244  01BE  00F3               	movwf	I2C_Master_Write@d
  1245  01BF  0864               	movf	??_main+1,w
  1246  01C0  00F4               	movwf	I2C_Master_Write@d+1
  1247  01C1  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1248                           
  1249                           ;main.c: 189:             I2C_Master_Stop();
  1250  01C6  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1251                           
  1252                           ;main.c: 190:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1253  01CB  301A               	movlw	26
  1254  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1255  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1256  01CE  00E4               	movwf	??_main+1
  1257  01CF  30F7               	movlw	247
  1258  01D0  00E3               	movwf	??_main
  1259  01D1                     u1577:	
  1260  01D1  0BE3               	decfsz	??_main,f
  1261  01D2  29D1               	goto	u1577
  1262  01D3  0BE4               	decfsz	??_main+1,f
  1263  01D4  29D1               	goto	u1577
  1264  01D5  29D6               	nop2
  1265                           
  1266                           ;main.c: 199:             I2C_Master_Start();
  1267  01D6  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
  1268                           
  1269                           ;main.c: 200:             I2C_Master_Write(0x40);
  1270  01DB  3040               	movlw	64
  1271  01DC  00F3               	movwf	I2C_Master_Write@d
  1272  01DD  3000               	movlw	0
  1273  01DE  00F4               	movwf	I2C_Master_Write@d+1
  1274  01DF  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1275                           
  1276                           ;main.c: 201:             I2C_Master_Write(0x1);
  1277  01E4  3001               	movlw	1
  1278  01E5  00F3               	movwf	I2C_Master_Write@d
  1279  01E6  3000               	movlw	0
  1280  01E7  00F4               	movwf	I2C_Master_Write@d+1
  1281  01E8  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1282                           
  1283                           ;main.c: 202:             I2C_Master_Stop();
  1284  01ED  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1285                           
  1286                           ;main.c: 203:            _delay((unsigned long)((10)*(8000000/4000.0)));
  1287  01F2  301A               	movlw	26
  1288  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1289  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1290  01F5  00E4               	movwf	??_main+1
  1291  01F6  30F7               	movlw	247
  1292  01F7  00E3               	movwf	??_main
  1293  01F8                     u1587:	
  1294  01F8  0BE3               	decfsz	??_main,f
  1295  01F9  29F8               	goto	u1587
  1296  01FA  0BE4               	decfsz	??_main+1,f
  1297  01FB  29F8               	goto	u1587
  1298  01FC  29FD               	nop2
  1299                           
  1300                           ;main.c: 205:             I2C_Master_Start();
  1301  01FD  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
  1302                           
  1303                           ;main.c: 206:             I2C_Master_Write(0x41);
  1304  0202  3041               	movlw	65
  1305  0203  00F3               	movwf	I2C_Master_Write@d
  1306  0204  3000               	movlw	0
  1307  0205  00F4               	movwf	I2C_Master_Write@d+1
  1308  0206  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1309                           
  1310                           ;main.c: 207:             hum = I2C_Master_Read(0);
  1311  020B  3000               	movlw	0
  1312  020C  00F3               	movwf	I2C_Master_Read@a
  1313  020D  00F4               	movwf	I2C_Master_Read@a+1
  1314  020E  120A  118A  2792  120A  118A  	fcall	_I2C_Master_Read
  1315  0213  0873               	movf	?_I2C_Master_Read,w
  1316  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0216  00E3               	movwf	??_main
  1319  0217  0863               	movf	??_main,w
  1320  0218  00A5               	movwf	_hum
  1321                           
  1322                           ;main.c: 208:             I2C_Master_Stop();
  1323  0219  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1324                           
  1325                           ;main.c: 209:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1326  021E  301A               	movlw	26
  1327  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0221  00E4               	movwf	??_main+1
  1330  0222  30F7               	movlw	247
  1331  0223  00E3               	movwf	??_main
  1332  0224                     u1597:	
  1333  0224  0BE3               	decfsz	??_main,f
  1334  0225  2A24               	goto	u1597
  1335  0226  0BE4               	decfsz	??_main+1,f
  1336  0227  2A24               	goto	u1597
  1337  0228  2A29               	nop2
  1338                           
  1339                           ;main.c: 213:             I2C_Master_Start();
  1340  0229  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
  1341                           
  1342                           ;main.c: 214:             I2C_Master_Write(0x40);
  1343  022E  3040               	movlw	64
  1344  022F  00F3               	movwf	I2C_Master_Write@d
  1345  0230  3000               	movlw	0
  1346  0231  00F4               	movwf	I2C_Master_Write@d+1
  1347  0232  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1348                           
  1349                           ;main.c: 215:             I2C_Master_Write(0x2);
  1350  0237  3002               	movlw	2
  1351  0238  00F3               	movwf	I2C_Master_Write@d
  1352  0239  3000               	movlw	0
  1353  023A  00F4               	movwf	I2C_Master_Write@d+1
  1354  023B  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1355                           
  1356                           ;main.c: 216:             I2C_Master_Stop();
  1357  0240  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1358                           
  1359                           ;main.c: 217:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1360  0245  301A               	movlw	26
  1361  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0248  00E4               	movwf	??_main+1
  1364  0249  30F7               	movlw	247
  1365  024A  00E3               	movwf	??_main
  1366  024B                     u1607:	
  1367  024B  0BE3               	decfsz	??_main,f
  1368  024C  2A4B               	goto	u1607
  1369  024D  0BE4               	decfsz	??_main+1,f
  1370  024E  2A4B               	goto	u1607
  1371  024F  2A50               	nop2
  1372                           
  1373                           ;main.c: 220:             I2C_Master_Start();
  1374  0250  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
  1375                           
  1376                           ;main.c: 221:             I2C_Master_Write(0x41);
  1377  0255  3041               	movlw	65
  1378  0256  00F3               	movwf	I2C_Master_Write@d
  1379  0257  3000               	movlw	0
  1380  0258  00F4               	movwf	I2C_Master_Write@d+1
  1381  0259  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  1382                           
  1383                           ;main.c: 222:             temperatura = I2C_Master_Read(0);
  1384  025E  3000               	movlw	0
  1385  025F  00F3               	movwf	I2C_Master_Read@a
  1386  0260  00F4               	movwf	I2C_Master_Read@a+1
  1387  0261  120A  118A  2792  120A  118A  	fcall	_I2C_Master_Read
  1388  0266  0873               	movf	?_I2C_Master_Read,w
  1389  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0269  00E3               	movwf	??_main
  1392  026A  0863               	movf	??_main,w
  1393  026B  00E7               	movwf	_temperatura
  1394                           
  1395                           ;main.c: 223:             I2C_Master_Stop();
  1396  026C  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1397                           
  1398                           ;main.c: 224:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1399  0271  301A               	movlw	26
  1400  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0274  00E4               	movwf	??_main+1
  1403  0275  30F7               	movlw	247
  1404  0276  00E3               	movwf	??_main
  1405  0277                     u1617:	
  1406  0277  0BE3               	decfsz	??_main,f
  1407  0278  2A77               	goto	u1617
  1408  0279  0BE4               	decfsz	??_main+1,f
  1409  027A  2A77               	goto	u1617
  1410  027B  2A7C               	nop2
  1411                           
  1412                           ;main.c: 255:             PORTDbits.RD7 = 1;
  1413  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1414  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1415  027E  1788               	bsf	8,7	;volatile
  1416                           
  1417                           ;main.c: 256:             cual_dato = UART_Rx();
  1418  027F  120A  158A  271E  120A  118A  	fcall	_UART_Rx
  1419  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1420  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1421  0286  00E3               	movwf	??_main
  1422  0287  0863               	movf	??_main,w
  1423  0288  00AF               	movwf	_cual_dato
  1424                           
  1425                           ;main.c: 258:         if(cual_dato == 1U){
  1426  0289  032F               	decf	_cual_dato,w
  1427  028A  1D03               	btfss	3,2
  1428  028B  2A8E               	goto	l2600
  1429                           
  1430                           ;main.c: 259:             UART_Tx(hum);
  1431  028C  0825               	movf	_hum,w
  1432  028D  2AB1               	goto	L1
  1433  028E                     l2600:	
  1434                           ;main.c: 260:         }else if(cual_dato == 2U){
  1435                           
  1436  028E  3002               	movlw	2
  1437  028F  062F               	xorwf	_cual_dato,w
  1438  0290  1D03               	btfss	3,2
  1439  0291  2A94               	goto	l2604
  1440                           
  1441                           ;main.c: 261:             UART_Tx(puerta);
  1442  0292  0828               	movf	_puerta,w
  1443  0293  2AB1               	goto	L1
  1444  0294                     l2604:	
  1445                           ;main.c: 262:         }else if(cual_dato == 3U){
  1446                           
  1447  0294  3003               	movlw	3
  1448  0295  062F               	xorwf	_cual_dato,w
  1449  0296  1D03               	btfss	3,2
  1450  0297  2A9A               	goto	l2608
  1451                           
  1452                           ;main.c: 263:             UART_Tx(temperatura);
  1453  0298  0867               	movf	_temperatura,w
  1454  0299  2AB1               	goto	L1
  1455  029A                     l2608:	
  1456                           ;main.c: 264:         }else if(cual_dato == 4U){
  1457                           
  1458  029A  3004               	movlw	4
  1459  029B  062F               	xorwf	_cual_dato,w
  1460  029C  1D03               	btfss	3,2
  1461  029D  2AA0               	goto	l2612
  1462                           
  1463                           ;main.c: 265:             UART_Tx(pir);
  1464  029E  0826               	movf	_pir,w
  1465  029F  2AB1               	goto	L1
  1466  02A0                     l2612:	
  1467                           ;main.c: 266:         }else if(cual_dato == 5U){
  1468                           
  1469  02A0  3005               	movlw	5
  1470  02A1  062F               	xorwf	_cual_dato,w
  1471  02A2  1D03               	btfss	3,2
  1472  02A3  2AA6               	goto	l2616
  1473                           
  1474                           ;main.c: 267:             UART_Tx(hr);
  1475  02A4  0832               	movf	_hr,w
  1476  02A5  2AB1               	goto	L1
  1477  02A6                     l2616:	
  1478                           ;main.c: 268:         }else if(cual_dato == 6U){
  1479                           
  1480  02A6  3006               	movlw	6
  1481  02A7  062F               	xorwf	_cual_dato,w
  1482  02A8  1D03               	btfss	3,2
  1483  02A9  2AAC               	goto	l2620
  1484                           
  1485                           ;main.c: 269:             UART_Tx(minuto);
  1486  02AA  0834               	movf	_minuto,w
  1487  02AB  2AB1               	goto	L1
  1488  02AC                     l2620:	
  1489                           ;main.c: 270:         }else if(cual_dato == 7U){
  1490                           
  1491  02AC  3007               	movlw	7
  1492  02AD  062F               	xorwf	_cual_dato,w
  1493  02AE  1D03               	btfss	3,2
  1494  02AF  2AB6               	goto	l2624
  1495                           
  1496                           ;main.c: 271:             UART_Tx(luz);
  1497  02B0  0827               	movf	_luz,w
  1498  02B1                     L1:	
  1499  02B1  120A  158A  2753  120A  118A  	fcall	_UART_Tx
  1500  02B6                     l2624:	
  1501                           
  1502                           ;main.c: 273:             PORTDbits.RD7 = 0;
  1503  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1504  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1505  02B8  1388               	bcf	8,7	;volatile
  1506                           
  1507                           ;main.c: 274:             if(luz<100){
  1508  02B9  3064               	movlw	100
  1509  02BA  0227               	subwf	_luz,w
  1510  02BB  1803               	skipnc
  1511  02BC  2ADC               	goto	l2634
  1512                           
  1513                           ;main.c: 275:             sprintf(show,"%d ",luz);
  1514  02BD  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1515  02BE  00E3               	movwf	??_main
  1516  02BF  0863               	movf	??_main,w
  1517  02C0  00D6               	movwf	sprintf@f
  1518  02C1  0827               	movf	_luz,w
  1519  02C2  00E4               	movwf	??_main+1
  1520  02C3  01E5               	clrf	??_main+2
  1521  02C4  0864               	movf	??_main+1,w
  1522  02C5  00D7               	movwf	?_sprintf+1
  1523  02C6  0865               	movf	??_main+2,w
  1524  02C7  00D8               	movwf	?_sprintf+2
  1525  02C8  3039               	movlw	(low (_show| 0))& (0+255)
  1526  02C9  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1527                           
  1528                           ;main.c: 276:             LCD8_set_cursor(2,1);
  1529  02CE  01F6               	clrf	LCD8_set_cursor@column
  1530  02CF  0AF6               	incf	LCD8_set_cursor@column,f
  1531  02D0  3002               	movlw	2
  1532  02D1  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1533                           
  1534                           ;main.c: 277:             LCD8_strWrite(show);
  1535  02D6  3039               	movlw	(low (_show| 0))& (0+255)
  1536  02D7  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1537  02DC                     l2634:	
  1538                           
  1539                           ;main.c: 280:             if(luz>99){
  1540  02DC  3064               	movlw	100
  1541  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1542  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1543  02DF  0227               	subwf	_luz,w
  1544  02E0  1C03               	skipc
  1545  02E1  2B01               	goto	l2642
  1546                           
  1547                           ;main.c: 281:             sprintf(show,"%d",luz);
  1548  02E2  3010               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  1549  02E3  00E3               	movwf	??_main
  1550  02E4  0863               	movf	??_main,w
  1551  02E5  00D6               	movwf	sprintf@f
  1552  02E6  0827               	movf	_luz,w
  1553  02E7  00E4               	movwf	??_main+1
  1554  02E8  01E5               	clrf	??_main+2
  1555  02E9  0864               	movf	??_main+1,w
  1556  02EA  00D7               	movwf	?_sprintf+1
  1557  02EB  0865               	movf	??_main+2,w
  1558  02EC  00D8               	movwf	?_sprintf+2
  1559  02ED  3039               	movlw	(low (_show| 0))& (0+255)
  1560  02EE  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1561                           
  1562                           ;main.c: 282:             LCD8_set_cursor(2,1);
  1563  02F3  01F6               	clrf	LCD8_set_cursor@column
  1564  02F4  0AF6               	incf	LCD8_set_cursor@column,f
  1565  02F5  3002               	movlw	2
  1566  02F6  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1567                           
  1568                           ;main.c: 283:             LCD8_strWrite(show);
  1569  02FB  3039               	movlw	(low (_show| 0))& (0+255)
  1570  02FC  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1571  0301                     l2642:	
  1572                           
  1573                           ;main.c: 286:             sprintf (show,"%d",puerta);
  1574  0301  3010               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  1575  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0304  00E3               	movwf	??_main
  1578  0305  0863               	movf	??_main,w
  1579  0306  00D6               	movwf	sprintf@f
  1580  0307  0828               	movf	_puerta,w
  1581  0308  00E4               	movwf	??_main+1
  1582  0309  01E5               	clrf	??_main+2
  1583  030A  0864               	movf	??_main+1,w
  1584  030B  00D7               	movwf	?_sprintf+1
  1585  030C  0865               	movf	??_main+2,w
  1586  030D  00D8               	movwf	?_sprintf+2
  1587  030E  3039               	movlw	(low (_show| 0))& (0+255)
  1588  030F  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1589                           
  1590                           ;main.c: 287:             LCD8_set_cursor(1,1);
  1591  0314  01F6               	clrf	LCD8_set_cursor@column
  1592  0315  0AF6               	incf	LCD8_set_cursor@column,f
  1593  0316  3001               	movlw	1
  1594  0317  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1595                           
  1596                           ;main.c: 288:             LCD8_strWrite(show);
  1597  031C  3039               	movlw	(low (_show| 0))& (0+255)
  1598  031D  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1599                           
  1600                           ;main.c: 292:              if(puerta <100){
  1601  0322  3064               	movlw	100
  1602  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0325  0228               	subwf	_puerta,w
  1605  0326  1803               	skipnc
  1606  0327  2B47               	goto	l2654
  1607                           
  1608                           ;main.c: 293:             sprintf(show,"%d ",puerta);
  1609  0328  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1610  0329  00E3               	movwf	??_main
  1611  032A  0863               	movf	??_main,w
  1612  032B  00D6               	movwf	sprintf@f
  1613  032C  0828               	movf	_puerta,w
  1614  032D  00E4               	movwf	??_main+1
  1615  032E  01E5               	clrf	??_main+2
  1616  032F  0864               	movf	??_main+1,w
  1617  0330  00D7               	movwf	?_sprintf+1
  1618  0331  0865               	movf	??_main+2,w
  1619  0332  00D8               	movwf	?_sprintf+2
  1620  0333  3039               	movlw	(low (_show| 0))& (0+255)
  1621  0334  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1622                           
  1623                           ;main.c: 294:             LCD8_set_cursor(1,1);
  1624  0339  01F6               	clrf	LCD8_set_cursor@column
  1625  033A  0AF6               	incf	LCD8_set_cursor@column,f
  1626  033B  3001               	movlw	1
  1627  033C  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1628                           
  1629                           ;main.c: 295:             LCD8_strWrite(show);
  1630  0341  3039               	movlw	(low (_show| 0))& (0+255)
  1631  0342  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1632  0347                     l2654:	
  1633                           
  1634                           ;main.c: 298:             if(puerta>99){
  1635  0347  3064               	movlw	100
  1636  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1638  034A  0228               	subwf	_puerta,w
  1639  034B  1C03               	skipc
  1640  034C  2B6C               	goto	l2662
  1641                           
  1642                           ;main.c: 299:             sprintf(show,"%d",puerta);
  1643  034D  3010               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  1644  034E  00E3               	movwf	??_main
  1645  034F  0863               	movf	??_main,w
  1646  0350  00D6               	movwf	sprintf@f
  1647  0351  0828               	movf	_puerta,w
  1648  0352  00E4               	movwf	??_main+1
  1649  0353  01E5               	clrf	??_main+2
  1650  0354  0864               	movf	??_main+1,w
  1651  0355  00D7               	movwf	?_sprintf+1
  1652  0356  0865               	movf	??_main+2,w
  1653  0357  00D8               	movwf	?_sprintf+2
  1654  0358  3039               	movlw	(low (_show| 0))& (0+255)
  1655  0359  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1656                           
  1657                           ;main.c: 300:             LCD8_set_cursor(1,1);
  1658  035E  01F6               	clrf	LCD8_set_cursor@column
  1659  035F  0AF6               	incf	LCD8_set_cursor@column,f
  1660  0360  3001               	movlw	1
  1661  0361  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1662                           
  1663                           ;main.c: 301:             LCD8_strWrite(show);
  1664  0366  3039               	movlw	(low (_show| 0))& (0+255)
  1665  0367  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1666  036C                     l2662:	
  1667                           
  1668                           ;main.c: 306:             sprintf (show,"%d",pir);
  1669  036C  3010               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  1670  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1671  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1672  036F  00E3               	movwf	??_main
  1673  0370  0863               	movf	??_main,w
  1674  0371  00D6               	movwf	sprintf@f
  1675  0372  0826               	movf	_pir,w
  1676  0373  00E4               	movwf	??_main+1
  1677  0374  01E5               	clrf	??_main+2
  1678  0375  0864               	movf	??_main+1,w
  1679  0376  00D7               	movwf	?_sprintf+1
  1680  0377  0865               	movf	??_main+2,w
  1681  0378  00D8               	movwf	?_sprintf+2
  1682  0379  3039               	movlw	(low (_show| 0))& (0+255)
  1683  037A  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1684                           
  1685                           ;main.c: 307:             LCD8_set_cursor(1,6);
  1686  037F  3006               	movlw	6
  1687  0380  1283               	bcf	3,5	;RP0=0, select bank0
  1688  0381  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0382  00E3               	movwf	??_main
  1690  0383  0863               	movf	??_main,w
  1691  0384  00F6               	movwf	LCD8_set_cursor@column
  1692  0385  3001               	movlw	1
  1693  0386  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1694                           
  1695                           ;main.c: 308:             LCD8_strWrite(show);
  1696  038B  3039               	movlw	(low (_show| 0))& (0+255)
  1697  038C  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1698                           
  1699                           ;main.c: 310:             sprintf (show,"%d",hr);
  1700  0391  3010               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  1701  0392  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0393  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0394  00E3               	movwf	??_main
  1704  0395  0863               	movf	??_main,w
  1705  0396  00D6               	movwf	sprintf@f
  1706  0397  0832               	movf	_hr,w
  1707  0398  00E4               	movwf	??_main+1
  1708  0399  01E5               	clrf	??_main+2
  1709  039A  0864               	movf	??_main+1,w
  1710  039B  00D7               	movwf	?_sprintf+1
  1711  039C  0865               	movf	??_main+2,w
  1712  039D  00D8               	movwf	?_sprintf+2
  1713  039E  3039               	movlw	(low (_show| 0))& (0+255)
  1714  039F  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1715                           
  1716                           ;main.c: 311:             LCD8_set_cursor(1,10);
  1717  03A4  300A               	movlw	10
  1718  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1719  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1720  03A7  00E3               	movwf	??_main
  1721  03A8  0863               	movf	??_main,w
  1722  03A9  00F6               	movwf	LCD8_set_cursor@column
  1723  03AA  3001               	movlw	1
  1724  03AB  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1725                           
  1726                           ;main.c: 312:             LCD8_strWrite(show);
  1727  03B0  3039               	movlw	(low (_show| 0))& (0+255)
  1728  03B1  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1729                           
  1730                           ;main.c: 314:             sprintf (show,":%d",minuto);
  1731  03B6  300F               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1732  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1733  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1734  03B9  00E3               	movwf	??_main
  1735  03BA  0863               	movf	??_main,w
  1736  03BB  00D6               	movwf	sprintf@f
  1737  03BC  0834               	movf	_minuto,w
  1738  03BD  00E4               	movwf	??_main+1
  1739  03BE  01E5               	clrf	??_main+2
  1740  03BF  0864               	movf	??_main+1,w
  1741  03C0  00D7               	movwf	?_sprintf+1
  1742  03C1  0865               	movf	??_main+2,w
  1743  03C2  00D8               	movwf	?_sprintf+2
  1744  03C3  3039               	movlw	(low (_show| 0))& (0+255)
  1745  03C4  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1746                           
  1747                           ;main.c: 315:             LCD8_set_cursor(1,11);
  1748  03C9  300B               	movlw	11
  1749  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1750  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1751  03CC  00E3               	movwf	??_main
  1752  03CD  0863               	movf	??_main,w
  1753  03CE  00F6               	movwf	LCD8_set_cursor@column
  1754  03CF  3001               	movlw	1
  1755  03D0  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1756                           
  1757                           ;main.c: 316:             LCD8_strWrite(show);
  1758  03D5  3039               	movlw	(low (_show| 0))& (0+255)
  1759  03D6  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1760                           
  1761                           ;main.c: 318:             sprintf (show,"%d",hum);
  1762  03DB  3010               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  1763  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1764  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1765  03DE  00E3               	movwf	??_main
  1766  03DF  0863               	movf	??_main,w
  1767  03E0  00D6               	movwf	sprintf@f
  1768  03E1  0825               	movf	_hum,w
  1769  03E2  00E4               	movwf	??_main+1
  1770  03E3  01E5               	clrf	??_main+2
  1771  03E4  0864               	movf	??_main+1,w
  1772  03E5  00D7               	movwf	?_sprintf+1
  1773  03E6  0865               	movf	??_main+2,w
  1774  03E7  00D8               	movwf	?_sprintf+2
  1775  03E8  3039               	movlw	(low (_show| 0))& (0+255)
  1776  03E9  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1777                           
  1778                           ;main.c: 319:             LCD8_set_cursor(2,6);
  1779  03EE  3006               	movlw	6
  1780  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1781  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1782  03F1  00E3               	movwf	??_main
  1783  03F2  0863               	movf	??_main,w
  1784  03F3  00F6               	movwf	LCD8_set_cursor@column
  1785  03F4  3002               	movlw	2
  1786  03F5  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1787                           
  1788                           ;main.c: 320:             LCD8_strWrite(show);
  1789  03FA  3039               	movlw	(low (_show| 0))& (0+255)
  1790  03FB  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1791                           
  1792                           ;main.c: 322:             if(hum <100){
  1793  0400  3064               	movlw	100
  1794  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0403  0225               	subwf	_hum,w
  1797  0404  1803               	skipnc
  1798  0405  2C29               	goto	l2690
  1799                           
  1800                           ;main.c: 323:             sprintf(show,"%d ",hum);
  1801  0406  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1802  0407  00E3               	movwf	??_main
  1803  0408  0863               	movf	??_main,w
  1804  0409  00D6               	movwf	sprintf@f
  1805  040A  0825               	movf	_hum,w
  1806  040B  00E4               	movwf	??_main+1
  1807  040C  01E5               	clrf	??_main+2
  1808  040D  0864               	movf	??_main+1,w
  1809  040E  00D7               	movwf	?_sprintf+1
  1810  040F  0865               	movf	??_main+2,w
  1811  0410  00D8               	movwf	?_sprintf+2
  1812  0411  3039               	movlw	(low (_show| 0))& (0+255)
  1813  0412  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1814                           
  1815                           ;main.c: 324:             LCD8_set_cursor(2,6);
  1816  0417  3006               	movlw	6
  1817  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1819  041A  00E3               	movwf	??_main
  1820  041B  0863               	movf	??_main,w
  1821  041C  00F6               	movwf	LCD8_set_cursor@column
  1822  041D  3002               	movlw	2
  1823  041E  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1824                           
  1825                           ;main.c: 325:             LCD8_strWrite(show);
  1826  0423  3039               	movlw	(low (_show| 0))& (0+255)
  1827  0424  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1828  0429                     l2690:	
  1829                           
  1830                           ;main.c: 328:             if(hum>99){
  1831  0429  3064               	movlw	100
  1832  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1833  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1834  042C  0225               	subwf	_hum,w
  1835  042D  1C03               	skipc
  1836  042E  2C52               	goto	l2698
  1837                           
  1838                           ;main.c: 329:             sprintf(show,"%d",hum);
  1839  042F  3010               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  1840  0430  00E3               	movwf	??_main
  1841  0431  0863               	movf	??_main,w
  1842  0432  00D6               	movwf	sprintf@f
  1843  0433  0825               	movf	_hum,w
  1844  0434  00E4               	movwf	??_main+1
  1845  0435  01E5               	clrf	??_main+2
  1846  0436  0864               	movf	??_main+1,w
  1847  0437  00D7               	movwf	?_sprintf+1
  1848  0438  0865               	movf	??_main+2,w
  1849  0439  00D8               	movwf	?_sprintf+2
  1850  043A  3039               	movlw	(low (_show| 0))& (0+255)
  1851  043B  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1852                           
  1853                           ;main.c: 330:             LCD8_set_cursor(2,6);
  1854  0440  3006               	movlw	6
  1855  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0443  00E3               	movwf	??_main
  1858  0444  0863               	movf	??_main,w
  1859  0445  00F6               	movwf	LCD8_set_cursor@column
  1860  0446  3002               	movlw	2
  1861  0447  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1862                           
  1863                           ;main.c: 331:             LCD8_strWrite(show);
  1864  044C  3039               	movlw	(low (_show| 0))& (0+255)
  1865  044D  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1866  0452                     l2698:	
  1867                           
  1868                           ;main.c: 334:             if(temperatura <100){
  1869  0452  3064               	movlw	100
  1870  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1872  0455  0267               	subwf	_temperatura,w
  1873  0456  1803               	skipnc
  1874  0457  2C7B               	goto	l2706
  1875                           
  1876                           ;main.c: 335:             sprintf(show,"%d ",temperatura);
  1877  0458  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1878  0459  00E3               	movwf	??_main
  1879  045A  0863               	movf	??_main,w
  1880  045B  00D6               	movwf	sprintf@f
  1881  045C  0867               	movf	_temperatura,w
  1882  045D  00E4               	movwf	??_main+1
  1883  045E  01E5               	clrf	??_main+2
  1884  045F  0864               	movf	??_main+1,w
  1885  0460  00D7               	movwf	?_sprintf+1
  1886  0461  0865               	movf	??_main+2,w
  1887  0462  00D8               	movwf	?_sprintf+2
  1888  0463  3039               	movlw	(low (_show| 0))& (0+255)
  1889  0464  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1890                           
  1891                           ;main.c: 336:             LCD8_set_cursor(2,11);
  1892  0469  300B               	movlw	11
  1893  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1894  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1895  046C  00E3               	movwf	??_main
  1896  046D  0863               	movf	??_main,w
  1897  046E  00F6               	movwf	LCD8_set_cursor@column
  1898  046F  3002               	movlw	2
  1899  0470  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1900                           
  1901                           ;main.c: 337:             LCD8_strWrite(show);
  1902  0475  3039               	movlw	(low (_show| 0))& (0+255)
  1903  0476  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1904  047B                     l2706:	
  1905                           
  1906                           ;main.c: 340:             if(temperatura>99){
  1907  047B  3064               	movlw	100
  1908  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1909  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1910  047E  0267               	subwf	_temperatura,w
  1911  047F  1C03               	skipc
  1912  0480  282E               	goto	l2458
  1913                           
  1914                           ;main.c: 341:             sprintf(show,"%d",temperatura);
  1915  0481  3010               	movlw	(low (((STR_8+1)-__stringbase)| (0+32768)))& (0+255)
  1916  0482  00E3               	movwf	??_main
  1917  0483  0863               	movf	??_main,w
  1918  0484  00D6               	movwf	sprintf@f
  1919  0485  0867               	movf	_temperatura,w
  1920  0486  00E4               	movwf	??_main+1
  1921  0487  01E5               	clrf	??_main+2
  1922  0488  0864               	movf	??_main+1,w
  1923  0489  00D7               	movwf	?_sprintf+1
  1924  048A  0865               	movf	??_main+2,w
  1925  048B  00D8               	movwf	?_sprintf+2
  1926  048C  3039               	movlw	(low (_show| 0))& (0+255)
  1927  048D  120A  118A  24A5  120A  118A  	fcall	_sprintf
  1928                           
  1929                           ;main.c: 342:             LCD8_set_cursor(2,11);
  1930  0492  300B               	movlw	11
  1931  0493  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0494  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0495  00E3               	movwf	??_main
  1934  0496  0863               	movf	??_main,w
  1935  0497  00F6               	movwf	LCD8_set_cursor@column
  1936  0498  3002               	movlw	2
  1937  0499  120A  158A  27AC  120A  118A  	fcall	_LCD8_set_cursor
  1938                           
  1939                           ;main.c: 343:             LCD8_strWrite(show);
  1940  049E  3039               	movlw	(low (_show| 0))& (0+255)
  1941  049F  120A  158A  27C5  120A  118A  	fcall	_LCD8_strWrite
  1942  04A4  282E               	goto	l2458
  1943  04A5                     __end_of_main:	
  1944                           
  1945                           	psect	text1
  1946  04A5                     __ptext1:	
  1947 ;; *************** function _sprintf *****************
  1948 ;; Defined at:
  1949 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  sp              1    wreg     PTR unsigned char 
  1952 ;;		 -> show(20), 
  1953 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1954 ;;		 -> STR_13(3), STR_12(4), STR_11(3), STR_10(4), 
  1955 ;;		 -> STR_9(3), STR_8(4), STR_7(3), STR_6(3), 
  1956 ;;		 -> STR_5(3), STR_4(4), STR_3(3), STR_2(3), 
  1957 ;;		 -> STR_1(4), 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1960 ;;		 -> show(20), 
  1961 ;;  tmpval          4    0        struct .
  1962 ;;  val             2   18[BANK0 ] unsigned int 
  1963 ;;  cp              2    0        PTR const unsigned char 
  1964 ;;  len             2    0        unsigned int 
  1965 ;;  c               1   20[BANK0 ] unsigned char 
  1966 ;;  prec            1   17[BANK0 ] char 
  1967 ;;  flag            1   16[BANK0 ] unsigned char 
  1968 ;;  ap              1   15[BANK0 ] PTR void [1]
  1969 ;;		 -> ?_sprintf(2), 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  2    9[BANK0 ] int 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         0       3       0       0       0
  1980 ;;      Locals:         0       7       0       0       0
  1981 ;;      Temps:          0       3       0       0       0
  1982 ;;      Totals:         0      13       0       0       0
  1983 ;;Total ram usage:       13 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    2
  1986 ;; This function calls:
  1987 ;;		___lwdiv
  1988 ;;		___lwmod
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _sprintf
  1996  04A5                     _sprintf:	
  1997                           
  1998                           ;incstack = 0
  1999                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2000                           ;sprintf@sp stored from wreg
  2001  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2002  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2003  04A7  00E2               	movwf	sprintf@sp
  2004                           
  2005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2006  04A8  3057               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2007  04A9  00D9               	movwf	??_sprintf
  2008  04AA  0859               	movf	??_sprintf,w
  2009  04AB  00DC               	movwf	sprintf@ap
  2010  04AC                     l2442:	
  2011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2012                           
  2013                           
  2014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2015  04AC  3001               	movlw	1
  2016  04AD  07D6               	addwf	sprintf@f,f
  2017  04AE  30FF               	movlw	-1
  2018  04AF  0756               	addwf	sprintf@f,w
  2019  04B0  0084               	movwf	4
  2020  04B1  120A  118A  27E8  120A  118A  	fcall	stringdir
  2021  04B6  00D9               	movwf	??_sprintf
  2022  04B7  0859               	movf	??_sprintf,w
  2023  04B8  00E1               	movwf	sprintf@c
  2024  04B9  0861               	movf	sprintf@c,w
  2025  04BA  1903               	btfsc	3,2
  2026  04BB  2D7A               	goto	l2444
  2027                           
  2028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2029  04BC  3025               	movlw	37
  2030  04BD  0661               	xorwf	sprintf@c,w
  2031  04BE  1903               	btfsc	3,2
  2032  04BF  2CCC               	goto	l2398
  2033                           
  2034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2035  04C0  0861               	movf	sprintf@c,w
  2036  04C1  00D9               	movwf	??_sprintf
  2037  04C2  0862               	movf	sprintf@sp,w
  2038  04C3  0084               	movwf	4
  2039  04C4  0859               	movf	??_sprintf,w
  2040  04C5  1383               	bcf	3,7	;select IRP bank0
  2041  04C6  0080               	movwf	0
  2042  04C7  3001               	movlw	1
  2043  04C8  00D9               	movwf	??_sprintf
  2044  04C9  0859               	movf	??_sprintf,w
  2045  04CA  07E2               	addwf	sprintf@sp,f
  2046                           
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2048  04CB  2CAC               	goto	l2442
  2049  04CC                     l2398:	
  2050                           
  2051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2052  04CC  01DD               	clrf	sprintf@flag
  2053                           
  2054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2055  04CD  3001               	movlw	1
  2056  04CE  07D6               	addwf	sprintf@f,f
  2057  04CF  30FF               	movlw	-1
  2058  04D0  0756               	addwf	sprintf@f,w
  2059  04D1  0084               	movwf	4
  2060  04D2  120A  118A  27E8  120A  118A  	fcall	stringdir
  2061  04D7  00E1               	movwf	sprintf@c
  2062  04D8  00D9               	movwf	??_sprintf
  2063  04D9  01DA               	clrf	??_sprintf+1
  2064                           
  2065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2066                           ; Switch size 1, requested type "simple"
  2067                           ; Number of cases is 1, Range of values is 0 to 0
  2068                           ; switch strategies available:
  2069                           ; Name         Instructions Cycles
  2070                           ; simple_byte            4     3 (average)
  2071                           ; direct_byte           11     8 (fixed)
  2072                           ; jumptable            260     6 (fixed)
  2073                           ;	Chosen strategy is simple_byte
  2074  04DA  085A               	movf	??_sprintf+1,w
  2075  04DB  3A00               	xorlw	0	; case 0
  2076  04DC  1903               	skipnz
  2077  04DD  2CDF               	goto	l2734
  2078  04DE  2CAC               	goto	l2442
  2079  04DF                     l2734:	
  2080                           
  2081                           ; Switch size 1, requested type "simple"
  2082                           ; Number of cases is 3, Range of values is 0 to 105
  2083                           ; switch strategies available:
  2084                           ; Name         Instructions Cycles
  2085                           ; simple_byte           10     6 (average)
  2086                           ; jumptable            260     6 (fixed)
  2087                           ;	Chosen strategy is simple_byte
  2088  04DF  0859               	movf	??_sprintf,w
  2089  04E0  3A00               	xorlw	0	; case 0
  2090  04E1  1903               	skipnz
  2091  04E2  2D7A               	goto	l2444
  2092  04E3  3A64               	xorlw	100	; case 100
  2093  04E4  1903               	skipnz
  2094  04E5  2CEA               	goto	l2404
  2095  04E6  3A0D               	xorlw	13	; case 105
  2096  04E7  1903               	skipnz
  2097  04E8  2CEA               	goto	l2404
  2098  04E9  2CAC               	goto	l2442
  2099  04EA                     l2404:	
  2100                           
  2101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2102  04EA  085C               	movf	sprintf@ap,w
  2103  04EB  0084               	movwf	4
  2104  04EC  1383               	bcf	3,7	;select IRP bank0
  2105  04ED  0800               	movf	0,w
  2106  04EE  00DF               	movwf	sprintf@val
  2107  04EF  0A84               	incf	4,f
  2108  04F0  0800               	movf	0,w
  2109  04F1  00E0               	movwf	sprintf@val+1
  2110  04F2  3002               	movlw	2
  2111  04F3  00D9               	movwf	??_sprintf
  2112  04F4  0859               	movf	??_sprintf,w
  2113  04F5  07DC               	addwf	sprintf@ap,f
  2114                           
  2115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2116  04F6  1FE0               	btfss	sprintf@val+1,7
  2117  04F7  2D01               	goto	l2414
  2118                           
  2119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2120  04F8  3003               	movlw	3
  2121  04F9  00D9               	movwf	??_sprintf
  2122  04FA  0859               	movf	??_sprintf,w
  2123  04FB  04DD               	iorwf	sprintf@flag,f
  2124                           
  2125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2126  04FC  09DF               	comf	sprintf@val,f
  2127  04FD  09E0               	comf	sprintf@val+1,f
  2128  04FE  0ADF               	incf	sprintf@val,f
  2129  04FF  1903               	skipnz
  2130  0500  0AE0               	incf	sprintf@val+1,f
  2131  0501                     l2414:	
  2132                           
  2133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2134  0501  01E1               	clrf	sprintf@c
  2135  0502  0AE1               	incf	sprintf@c,f
  2136  0503                     l2420:	
  2137                           
  2138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2139  0503  0861               	movf	sprintf@c,w
  2140  0504  00D9               	movwf	??_sprintf
  2141  0505  0759               	addwf	??_sprintf,w
  2142  0506  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2143  0507  0084               	movwf	4
  2144  0508  120A  118A  27E8  120A  118A  	fcall	stringdir
  2145  050D  00DA               	movwf	??_sprintf+1
  2146  050E  120A  118A  27E8  120A  118A  	fcall	stringdir
  2147  0513  00DB               	movwf	??_sprintf+2
  2148  0514  085B               	movf	??_sprintf+2,w
  2149  0515  0260               	subwf	sprintf@val+1,w
  2150  0516  1D03               	skipz
  2151  0517  2D1A               	goto	u1265
  2152  0518  085A               	movf	??_sprintf+1,w
  2153  0519  025F               	subwf	sprintf@val,w
  2154  051A                     u1265:	
  2155  051A  1C03               	btfss	3,0
  2156  051B  2D24               	goto	l2426
  2157  051C  3001               	movlw	1
  2158  051D  00D9               	movwf	??_sprintf
  2159  051E  0859               	movf	??_sprintf,w
  2160  051F  07E1               	addwf	sprintf@c,f
  2161  0520  3005               	movlw	5
  2162  0521  0661               	xorwf	sprintf@c,w
  2163  0522  1D03               	btfss	3,2
  2164  0523  2D03               	goto	l2420
  2165  0524                     l2426:	
  2166                           
  2167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2168  0524  085D               	movf	sprintf@flag,w
  2169  0525  3903               	andlw	3
  2170  0526  1903               	btfsc	3,2
  2171  0527  2D33               	goto	l2432
  2172                           
  2173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2174  0528  302D               	movlw	45
  2175  0529  00D9               	movwf	??_sprintf
  2176  052A  0862               	movf	sprintf@sp,w
  2177  052B  0084               	movwf	4
  2178  052C  0859               	movf	??_sprintf,w
  2179  052D  1383               	bcf	3,7	;select IRP bank0
  2180  052E  0080               	movwf	0
  2181  052F  3001               	movlw	1
  2182  0530  00D9               	movwf	??_sprintf
  2183  0531  0859               	movf	??_sprintf,w
  2184  0532  07E2               	addwf	sprintf@sp,f
  2185  0533                     l2432:	
  2186                           
  2187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2188  0533  0861               	movf	sprintf@c,w
  2189  0534  00D9               	movwf	??_sprintf
  2190  0535  0859               	movf	??_sprintf,w
  2191  0536  00DE               	movwf	sprintf@prec
  2192  0537                     l2440:	
  2193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2194                           
  2195                           
  2196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2197  0537  30FF               	movlw	255
  2198  0538  00D9               	movwf	??_sprintf
  2199  0539  0859               	movf	??_sprintf,w
  2200  053A  07DE               	addwf	sprintf@prec,f
  2201  053B  0A5E               	incf	sprintf@prec,w
  2202  053C  1903               	btfsc	3,2
  2203  053D  2CAC               	goto	l2442
  2204                           
  2205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2206  053E  300A               	movlw	10
  2207  053F  00D0               	movwf	___lwmod@divisor
  2208  0540  3000               	movlw	0
  2209  0541  00D1               	movwf	___lwmod@divisor+1
  2210  0542  085E               	movf	sprintf@prec,w
  2211  0543  00D9               	movwf	??_sprintf
  2212  0544  0759               	addwf	??_sprintf,w
  2213  0545  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2214  0546  0084               	movwf	4
  2215  0547  120A  118A  27E8  120A  118A  	fcall	stringdir
  2216  054C  00F3               	movwf	___lwdiv@divisor
  2217  054D  120A  118A  27E8  120A  118A  	fcall	stringdir
  2218  0552  00F4               	movwf	___lwdiv@divisor+1
  2219  0553  0860               	movf	sprintf@val+1,w
  2220  0554  00F6               	movwf	___lwdiv@dividend+1
  2221  0555  085F               	movf	sprintf@val,w
  2222  0556  00F5               	movwf	___lwdiv@dividend
  2223  0557  120A  118A  26E8  120A  118A  	fcall	___lwdiv
  2224  055C  0874               	movf	?___lwdiv+1,w
  2225  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2226  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2227  055F  00D3               	movwf	___lwmod@dividend+1
  2228  0560  0873               	movf	?___lwdiv,w
  2229  0561  00D2               	movwf	___lwmod@dividend
  2230  0562  120A  118A  275E  120A  118A  	fcall	___lwmod
  2231  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0569  0850               	movf	?___lwmod,w
  2234  056A  3E30               	addlw	48
  2235  056B  00DA               	movwf	??_sprintf+1
  2236  056C  085A               	movf	??_sprintf+1,w
  2237  056D  00E1               	movwf	sprintf@c
  2238                           
  2239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2240  056E  0861               	movf	sprintf@c,w
  2241  056F  00D9               	movwf	??_sprintf
  2242  0570  0862               	movf	sprintf@sp,w
  2243  0571  0084               	movwf	4
  2244  0572  0859               	movf	??_sprintf,w
  2245  0573  1383               	bcf	3,7	;select IRP bank0
  2246  0574  0080               	movwf	0
  2247  0575  3001               	movlw	1
  2248  0576  00D9               	movwf	??_sprintf
  2249  0577  0859               	movf	??_sprintf,w
  2250  0578  07E2               	addwf	sprintf@sp,f
  2251  0579  2D37               	goto	l2440
  2252  057A                     l2444:	
  2253                           
  2254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2255  057A  0862               	movf	sprintf@sp,w
  2256  057B  0084               	movwf	4
  2257  057C  1383               	bcf	3,7	;select IRP bank0
  2258  057D  0180               	clrf	0
  2259  057E  0008               	return
  2260  057F                     __end_of_sprintf:	
  2261                           
  2262                           	psect	text2
  2263  075E                     __ptext2:	
  2264 ;; *************** function ___lwmod *****************
  2265 ;; Defined at:
  2266 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  divisor         2    3[BANK0 ] unsigned int 
  2269 ;;  dividend        2    5[BANK0 ] unsigned int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  counter         1    8[BANK0 ] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2    3[BANK0 ] unsigned int 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         0       4       0       0       0
  2282 ;;      Locals:         0       1       0       0       0
  2283 ;;      Temps:          0       1       0       0       0
  2284 ;;      Totals:         0       6       0       0       0
  2285 ;;Total ram usage:        6 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    1
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_sprintf
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           
  2296                           ;psect for function ___lwmod
  2297  075E                     ___lwmod:	
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2301  075E  1283               	bcf	3,5	;RP0=0, select bank0
  2302  075F  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0760  0850               	movf	___lwmod@divisor,w
  2304  0761  0451               	iorwf	___lwmod@divisor+1,w
  2305  0762  1903               	btfsc	3,2
  2306  0763  2F8D               	goto	l1760
  2307  0764  01D5               	clrf	___lwmod@counter
  2308  0765  0AD5               	incf	___lwmod@counter,f
  2309  0766                     l1750:	
  2310  0766  1BD1               	btfsc	___lwmod@divisor+1,7
  2311  0767  2F74               	goto	l1752
  2312  0768  3001               	movlw	1
  2313  0769                     u725:	
  2314  0769  1003               	clrc
  2315  076A  0DD0               	rlf	___lwmod@divisor,f
  2316  076B  0DD1               	rlf	___lwmod@divisor+1,f
  2317  076C  3EFF               	addlw	-1
  2318  076D  1D03               	skipz
  2319  076E  2F69               	goto	u725
  2320  076F  3001               	movlw	1
  2321  0770  00D4               	movwf	??___lwmod
  2322  0771  0854               	movf	??___lwmod,w
  2323  0772  07D5               	addwf	___lwmod@counter,f
  2324  0773  2F66               	goto	l1750
  2325  0774                     l1752:	
  2326  0774  0851               	movf	___lwmod@divisor+1,w
  2327  0775  0253               	subwf	___lwmod@dividend+1,w
  2328  0776  1D03               	skipz
  2329  0777  2F7A               	goto	u745
  2330  0778  0850               	movf	___lwmod@divisor,w
  2331  0779  0252               	subwf	___lwmod@dividend,w
  2332  077A                     u745:	
  2333  077A  1C03               	skipc
  2334  077B  2F82               	goto	l1756
  2335  077C  0850               	movf	___lwmod@divisor,w
  2336  077D  02D2               	subwf	___lwmod@dividend,f
  2337  077E  0851               	movf	___lwmod@divisor+1,w
  2338  077F  1C03               	skipc
  2339  0780  03D3               	decf	___lwmod@dividend+1,f
  2340  0781  02D3               	subwf	___lwmod@dividend+1,f
  2341  0782                     l1756:	
  2342  0782  3001               	movlw	1
  2343  0783                     u755:	
  2344  0783  1003               	clrc
  2345  0784  0CD1               	rrf	___lwmod@divisor+1,f
  2346  0785  0CD0               	rrf	___lwmod@divisor,f
  2347  0786  3EFF               	addlw	-1
  2348  0787  1D03               	skipz
  2349  0788  2F83               	goto	u755
  2350  0789  3001               	movlw	1
  2351  078A  02D5               	subwf	___lwmod@counter,f
  2352  078B  1D03               	btfss	3,2
  2353  078C  2F74               	goto	l1752
  2354  078D                     l1760:	
  2355  078D  0853               	movf	___lwmod@dividend+1,w
  2356  078E  00D1               	movwf	?___lwmod+1
  2357  078F  0852               	movf	___lwmod@dividend,w
  2358  0790  00D0               	movwf	?___lwmod
  2359  0791  0008               	return
  2360  0792                     __end_of___lwmod:	
  2361                           
  2362                           	psect	text3
  2363  06E8                     __ptext3:	
  2364 ;; *************** function ___lwdiv *****************
  2365 ;; Defined at:
  2366 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  divisor         2    3[COMMON] unsigned int 
  2369 ;;  dividend        2    5[COMMON] unsigned int 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  quotient        2    1[BANK0 ] unsigned int 
  2372 ;;  counter         1    0[BANK0 ] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  2    3[COMMON] unsigned int 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         4       0       0       0       0
  2383 ;;      Locals:         0       3       0       0       0
  2384 ;;      Temps:          1       0       0       0       0
  2385 ;;      Totals:         5       3       0       0       0
  2386 ;;Total ram usage:        8 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_sprintf
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function ___lwdiv
  2398  06E8                     ___lwdiv:	
  2399                           
  2400                           ;incstack = 0
  2401                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2402  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2403  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2404  06EA  01CE               	clrf	___lwdiv@quotient
  2405  06EB  01CF               	clrf	___lwdiv@quotient+1
  2406  06EC  0873               	movf	___lwdiv@divisor,w
  2407  06ED  0474               	iorwf	___lwdiv@divisor+1,w
  2408  06EE  1903               	btfsc	3,2
  2409  06EF  2F21               	goto	l2324
  2410  06F0  01CD               	clrf	___lwdiv@counter
  2411  06F1  0ACD               	incf	___lwdiv@counter,f
  2412  06F2                     l2312:	
  2413  06F2  1BF4               	btfsc	___lwdiv@divisor+1,7
  2414  06F3  2F00               	goto	l2314
  2415  06F4  3001               	movlw	1
  2416  06F5                     u1165:	
  2417  06F5  1003               	clrc
  2418  06F6  0DF3               	rlf	___lwdiv@divisor,f
  2419  06F7  0DF4               	rlf	___lwdiv@divisor+1,f
  2420  06F8  3EFF               	addlw	-1
  2421  06F9  1D03               	skipz
  2422  06FA  2EF5               	goto	u1165
  2423  06FB  3001               	movlw	1
  2424  06FC  00F7               	movwf	??___lwdiv
  2425  06FD  0877               	movf	??___lwdiv,w
  2426  06FE  07CD               	addwf	___lwdiv@counter,f
  2427  06FF  2EF2               	goto	l2312
  2428  0700                     l2314:	
  2429  0700  3001               	movlw	1
  2430  0701                     u1185:	
  2431  0701  1003               	clrc
  2432  0702  0DCE               	rlf	___lwdiv@quotient,f
  2433  0703  0DCF               	rlf	___lwdiv@quotient+1,f
  2434  0704  3EFF               	addlw	-1
  2435  0705  1D03               	skipz
  2436  0706  2F01               	goto	u1185
  2437  0707  0874               	movf	___lwdiv@divisor+1,w
  2438  0708  0276               	subwf	___lwdiv@dividend+1,w
  2439  0709  1D03               	skipz
  2440  070A  2F0D               	goto	u1195
  2441  070B  0873               	movf	___lwdiv@divisor,w
  2442  070C  0275               	subwf	___lwdiv@dividend,w
  2443  070D                     u1195:	
  2444  070D  1C03               	skipc
  2445  070E  2F16               	goto	l2320
  2446  070F  0873               	movf	___lwdiv@divisor,w
  2447  0710  02F5               	subwf	___lwdiv@dividend,f
  2448  0711  0874               	movf	___lwdiv@divisor+1,w
  2449  0712  1C03               	skipc
  2450  0713  03F6               	decf	___lwdiv@dividend+1,f
  2451  0714  02F6               	subwf	___lwdiv@dividend+1,f
  2452  0715  144E               	bsf	___lwdiv@quotient,0
  2453  0716                     l2320:	
  2454  0716  3001               	movlw	1
  2455  0717                     u1205:	
  2456  0717  1003               	clrc
  2457  0718  0CF4               	rrf	___lwdiv@divisor+1,f
  2458  0719  0CF3               	rrf	___lwdiv@divisor,f
  2459  071A  3EFF               	addlw	-1
  2460  071B  1D03               	skipz
  2461  071C  2F17               	goto	u1205
  2462  071D  3001               	movlw	1
  2463  071E  02CD               	subwf	___lwdiv@counter,f
  2464  071F  1D03               	btfss	3,2
  2465  0720  2F00               	goto	l2314
  2466  0721                     l2324:	
  2467  0721  084F               	movf	___lwdiv@quotient+1,w
  2468  0722  00F4               	movwf	?___lwdiv+1
  2469  0723  084E               	movf	___lwdiv@quotient,w
  2470  0724  00F3               	movwf	?___lwdiv
  2471  0725  0008               	return
  2472  0726                     __end_of___lwdiv:	
  2473                           
  2474                           	psect	text4
  2475  057F                     __ptext4:	
  2476 ;; *************** function _setup *****************
  2477 ;; Defined at:
  2478 ;;		line 54 in file "main.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0
  2494 ;;      Temps:          0       1       0       0       0
  2495 ;;      Totals:         0       1       0       0       0
  2496 ;;Total ram usage:        1 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    4
  2499 ;; This function calls:
  2500 ;;		_I2C_Master_Init
  2501 ;;		_LCD8_begin
  2502 ;;		_LCD8_clear
  2503 ;;		_oscilator_begin
  2504 ;;		_timer1_begin
  2505 ;;		_write_ds1307
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function _setup
  2513  057F                     _setup:	
  2514                           
  2515                           ;main.c: 56:     oscilator_begin(7);
  2516                           
  2517                           ;incstack = 0
  2518                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2519  057F  3007               	movlw	7
  2520  0580  120A  158A  2768  120A  118A  	fcall	_oscilator_begin
  2521                           
  2522                           ;main.c: 57:     I2C_Master_Init(100000);
  2523  0585  3000               	movlw	0
  2524  0586  1283               	bcf	3,5	;RP0=0, select bank0
  2525  0587  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0588  00DD               	movwf	I2C_Master_Init@c+3
  2527  0589  3001               	movlw	1
  2528  058A  00DC               	movwf	I2C_Master_Init@c+2
  2529  058B  3086               	movlw	134
  2530  058C  00DB               	movwf	I2C_Master_Init@c+1
  2531  058D  30A0               	movlw	160
  2532  058E  00DA               	movwf	I2C_Master_Init@c
  2533  058F  120A  118A  2726  120A  118A  	fcall	_I2C_Master_Init
  2534                           
  2535                           ;main.c: 59:     TRISA = 0;
  2536  0594  1683               	bsf	3,5	;RP0=1, select bank1
  2537  0595  1303               	bcf	3,6	;RP1=0, select bank1
  2538  0596  0185               	clrf	5	;volatile
  2539                           
  2540                           ;main.c: 60:     TRISB = 0;
  2541  0597  0186               	clrf	6	;volatile
  2542                           
  2543                           ;main.c: 61:     TRISD = 0;
  2544  0598  0188               	clrf	8	;volatile
  2545                           
  2546                           ;main.c: 62:     TRISCbits.TRISC7 = 1;
  2547  0599  1787               	bsf	7,7	;volatile
  2548                           
  2549                           ;main.c: 63:     ANSEL = 0;
  2550  059A  1683               	bsf	3,5	;RP0=1, select bank3
  2551  059B  1703               	bsf	3,6	;RP1=1, select bank3
  2552  059C  0188               	clrf	8	;volatile
  2553                           
  2554                           ;main.c: 64:     ANSELH = 0;
  2555  059D  0189               	clrf	9	;volatile
  2556                           
  2557                           ;main.c: 65:     PORTA = 0;
  2558  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2559  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2560  05A0  0185               	clrf	5	;volatile
  2561                           
  2562                           ;main.c: 66:     PORTB = 0;
  2563  05A1  0186               	clrf	6	;volatile
  2564                           
  2565                           ;main.c: 67:     PORTDbits.RD2 = 0;
  2566  05A2  1108               	bcf	8,2	;volatile
  2567                           
  2568                           ;main.c: 69:     LCD8_begin();
  2569  05A3  120A  118A  2655  120A  118A  	fcall	_LCD8_begin
  2570                           
  2571                           ;main.c: 70:     LCD8_clear();
  2572  05A8  120A  158A  275D  120A  118A  	fcall	_LCD8_clear
  2573                           
  2574                           ;main.c: 71:     timer1_begin(0,3);
  2575  05AD  3003               	movlw	3
  2576  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  2577  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  2578  05B0  00DE               	movwf	??_setup
  2579  05B1  085E               	movf	??_setup,w
  2580  05B2  00F3               	movwf	timer1_begin@prescaler
  2581  05B3  3000               	movlw	0
  2582  05B4  120A  158A  27E0  120A  118A  	fcall	_timer1_begin
  2583                           
  2584                           ;main.c: 74:     BAUDCTLbits.BRG16 = 0;
  2585  05B9  1683               	bsf	3,5	;RP0=1, select bank3
  2586  05BA  1703               	bsf	3,6	;RP1=1, select bank3
  2587  05BB  1187               	bcf	7,3	;volatile
  2588                           
  2589                           ;main.c: 75:     TXSTAbits.BRGH = 1;
  2590  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  2591  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  2592  05BE  1518               	bsf	24,2	;volatile
  2593                           
  2594                           ;main.c: 76:     SPBRGH = 0x0;
  2595  05BF  019A               	clrf	26	;volatile
  2596                           
  2597                           ;main.c: 77:     SPBRGH = 0x51;
  2598  05C0  3051               	movlw	81
  2599  05C1  009A               	movwf	26	;volatile
  2600                           
  2601                           ;main.c: 78:     TXSTAbits.SYNC = 0;
  2602  05C2  1218               	bcf	24,4	;volatile
  2603                           
  2604                           ;main.c: 79:     RCSTAbits.SPEN = 1;
  2605  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2606  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2607  05C5  1798               	bsf	24,7	;volatile
  2608                           
  2609                           ;main.c: 80:     TXSTAbits.TX9 = 0;
  2610  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  2611  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  2612  05C8  1318               	bcf	24,6	;volatile
  2613                           
  2614                           ;main.c: 81:     TXSTAbits.TXEN = 1;
  2615  05C9  1698               	bsf	24,5	;volatile
  2616                           
  2617                           ;main.c: 82:     CREN = 1;
  2618  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2619  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2620  05CC  1618               	bsf	24,4	;volatile
  2621                           
  2622                           ;main.c: 87:     write_ds1307(0, 0U);
  2623  05CD  3000               	movlw	0
  2624  05CE  00CD               	movwf	write_ds1307@address
  2625  05CF  00CE               	movwf	write_ds1307@address+1
  2626  05D0  3000               	movlw	0
  2627  05D1  00CF               	movwf	write_ds1307@w_data
  2628  05D2  00D0               	movwf	write_ds1307@w_data+1
  2629  05D3  120A  118A  27C0  120A  118A  	fcall	_write_ds1307
  2630                           
  2631                           ;main.c: 88:     write_ds1307(1, 1U);
  2632  05D8  3001               	movlw	1
  2633  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2634  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2635  05DB  00CD               	movwf	write_ds1307@address
  2636  05DC  3000               	movlw	0
  2637  05DD  00CE               	movwf	write_ds1307@address+1
  2638  05DE  3001               	movlw	1
  2639  05DF  00CF               	movwf	write_ds1307@w_data
  2640  05E0  3000               	movlw	0
  2641  05E1  00D0               	movwf	write_ds1307@w_data+1
  2642  05E2  120A  118A  27C0  120A  118A  	fcall	_write_ds1307
  2643                           
  2644                           ;main.c: 89:     write_ds1307(2, 4U);
  2645  05E7  3002               	movlw	2
  2646  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  2647  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  2648  05EA  00CD               	movwf	write_ds1307@address
  2649  05EB  3000               	movlw	0
  2650  05EC  00CE               	movwf	write_ds1307@address+1
  2651  05ED  3004               	movlw	4
  2652  05EE  00CF               	movwf	write_ds1307@w_data
  2653  05EF  3000               	movlw	0
  2654  05F0  00D0               	movwf	write_ds1307@w_data+1
  2655  05F1  120A  118A  27C0   	fcall	_write_ds1307
  2656  05F4  0008               	return
  2657  05F5                     __end_of_setup:	
  2658                           
  2659                           	psect	text5
  2660  07C0                     __ptext5:	
  2661 ;; *************** function _write_ds1307 *****************
  2662 ;; Defined at:
  2663 ;;		line 30 in file "./rtc.h"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  address         2    0[BANK0 ] short 
  2666 ;;  w_data          2    2[BANK0 ] short 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0, pclath, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2678 ;;      Params:         0       4       0       0       0
  2679 ;;      Locals:         0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0
  2681 ;;      Totals:         0       4       0       0       0
  2682 ;;Total ram usage:        4 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    3
  2685 ;; This function calls:
  2686 ;;		_I2C_Master_Start
  2687 ;;		_I2C_Master_Stop
  2688 ;;		_I2C_Master_Write
  2689 ;; This function is called by:
  2690 ;;		_setup
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _write_ds1307
  2696  07C0                     _write_ds1307:	
  2697                           
  2698                           ;./rtc.h: 30: void write_ds1307(short address, short w_data);./rtc.h: 31: {;./rtc.h: 32:
      +                             I2C_Master_Start();
  2699                           
  2700                           ;incstack = 0
  2701                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  2702  07C0  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
  2703                           
  2704                           ;./rtc.h: 34:   I2C_Master_Write(0xD0);
  2705  07C5  30D0               	movlw	208
  2706  07C6  00F3               	movwf	I2C_Master_Write@d
  2707  07C7  3000               	movlw	0
  2708  07C8  00F4               	movwf	I2C_Master_Write@d+1
  2709  07C9  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  2710                           
  2711                           ;./rtc.h: 35:   I2C_Master_Write(address);
  2712  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2713  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2714  07D0  084E               	movf	write_ds1307@address+1,w
  2715  07D1  00F4               	movwf	I2C_Master_Write@d+1
  2716  07D2  084D               	movf	write_ds1307@address,w
  2717  07D3  00F3               	movwf	I2C_Master_Write@d
  2718  07D4  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  2719                           
  2720                           ;./rtc.h: 36:   I2C_Master_Write(w_data);
  2721  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  2722  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  2723  07DB  0850               	movf	write_ds1307@w_data+1,w
  2724  07DC  00F4               	movwf	I2C_Master_Write@d+1
  2725  07DD  084F               	movf	write_ds1307@w_data,w
  2726  07DE  00F3               	movwf	I2C_Master_Write@d
  2727  07DF  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  2728                           
  2729                           ;./rtc.h: 37:   I2C_Master_Stop();
  2730  07E4  120A  158A  2733   	fcall	_I2C_Master_Stop
  2731  07E7  0008               	return
  2732  07E8                     __end_of_write_ds1307:	
  2733                           
  2734                           	psect	text6
  2735  0FE0                     __ptext6:	
  2736 ;; *************** function _timer1_begin *****************
  2737 ;; Defined at:
  2738 ;;		line 8 in file "timer1.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  offset          1    wreg     unsigned char 
  2741 ;;  prescaler       1    3[COMMON] unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  offset          1    6[COMMON] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         1       0       0       0       0
  2754 ;;      Locals:         1       0       0       0       0
  2755 ;;      Temps:          2       0       0       0       0
  2756 ;;      Totals:         4       0       0       0       0
  2757 ;;Total ram usage:        4 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_setup
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function _timer1_begin
  2769  0FE0                     _timer1_begin:	
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in _timer1_begin: [wreg+status,2+status,0]
  2773                           ;timer1_begin@offset stored from wreg
  2774  0FE0  00F6               	movwf	timer1_begin@offset
  2775                           
  2776                           ;timer1.c: 8: timer1_begin(uint8_t offset, uint8_t prescaler);timer1.c: 9:     {;timer1.
      +                          c: 10:     T1CONbits.T1GINV = 0;
  2777  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0FE3  1390               	bcf	16,7	;volatile
  2780                           
  2781                           ;timer1.c: 11:     T1CONbits.TMR1GE = 0;
  2782  0FE4  1310               	bcf	16,6	;volatile
  2783                           
  2784                           ;timer1.c: 12:     T1CONbits.T1CKPS = prescaler;
  2785  0FE5  0873               	movf	timer1_begin@prescaler,w
  2786  0FE6  00F4               	movwf	??_timer1_begin
  2787  0FE7  0EF4               	swapf	??_timer1_begin,f
  2788  0FE8  0810               	movf	16,w	;volatile
  2789  0FE9  0674               	xorwf	??_timer1_begin,w
  2790  0FEA  39CF               	andlw	-49
  2791  0FEB  0674               	xorwf	??_timer1_begin,w
  2792  0FEC  0090               	movwf	16	;volatile
  2793                           
  2794                           ;timer1.c: 13:     T1CONbits.T1OSCEN = 0;
  2795  0FED  1190               	bcf	16,3	;volatile
  2796                           
  2797                           ;timer1.c: 14:     T1CONbits.TMR1CS = 0;
  2798  0FEE  1090               	bcf	16,1	;volatile
  2799                           
  2800                           ;timer1.c: 15:     T1CONbits.TMR1ON = 1;
  2801  0FEF  1410               	bsf	16,0	;volatile
  2802                           
  2803                           ;timer1.c: 17:     INTCONbits.PEIE = 1;
  2804  0FF0  170B               	bsf	11,6	;volatile
  2805                           
  2806                           ;timer1.c: 18:     PIR1bits.TMR1IF = 0;
  2807  0FF1  100C               	bcf	12,0	;volatile
  2808                           
  2809                           ;timer1.c: 19:     PIE1bits.TMR1IE = 1;
  2810  0FF2  1683               	bsf	3,5	;RP0=1, select bank1
  2811  0FF3  1303               	bcf	3,6	;RP1=0, select bank1
  2812  0FF4  140C               	bsf	12,0	;volatile
  2813                           
  2814                           ;timer1.c: 20:     INTCONbits.GIE = 1;
  2815  0FF5  178B               	bsf	11,7	;volatile
  2816                           
  2817                           ;timer1.c: 21:     TMR1 = offset;
  2818  0FF6  0876               	movf	timer1_begin@offset,w
  2819  0FF7  00F4               	movwf	??_timer1_begin
  2820  0FF8  01F5               	clrf	??_timer1_begin+1
  2821  0FF9  0874               	movf	??_timer1_begin,w
  2822  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0FFC  008E               	movwf	14	;volatile
  2825  0FFD  0875               	movf	??_timer1_begin+1,w
  2826  0FFE  008F               	movwf	15	;volatile
  2827  0FFF  0008               	return
  2828  1000                     __end_of_timer1_begin:	
  2829                           
  2830                           	psect	text7
  2831  0F68                     __ptext7:	
  2832 ;; *************** function _oscilator_begin *****************
  2833 ;; Defined at:
  2834 ;;		line 9 in file "./Oscilator.h"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  freq            1    wreg     unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  freq            1    4[COMMON] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2848 ;;      Params:         0       0       0       0       0
  2849 ;;      Locals:         1       0       0       0       0
  2850 ;;      Temps:          1       0       0       0       0
  2851 ;;      Totals:         2       0       0       0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    1
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_setup
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function _oscilator_begin
  2864  0F68                     _oscilator_begin:	
  2865                           
  2866                           ;incstack = 0
  2867                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
  2868                           ;oscilator_begin@freq stored from wreg
  2869  0F68  00F4               	movwf	oscilator_begin@freq
  2870                           
  2871                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
  2872  0F69  0874               	movf	oscilator_begin@freq,w
  2873  0F6A  00F3               	movwf	??_oscilator_begin
  2874  0F6B  0EF3               	swapf	??_oscilator_begin,f
  2875  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  2876  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  2877  0F6E  080F               	movf	15,w	;volatile
  2878  0F6F  0673               	xorwf	??_oscilator_begin,w
  2879  0F70  398F               	andlw	-113
  2880  0F71  0673               	xorwf	??_oscilator_begin,w
  2881  0F72  008F               	movwf	15	;volatile
  2882                           
  2883                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
  2884  0F73  140F               	bsf	15,0	;volatile
  2885                           
  2886                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
  2887  0F74  118F               	bcf	15,3	;volatile
  2888  0F75  0008               	return
  2889  0F76                     __end_of_oscilator_begin:	
  2890                           
  2891                           	psect	text8
  2892  0F5D                     __ptext8:	
  2893 ;; *************** function _LCD8_clear *****************
  2894 ;; Defined at:
  2895 ;;		line 32 in file "./LCD8bit.h"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, pclath, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2909 ;;      Params:         0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    2
  2916 ;; This function calls:
  2917 ;;		_LCD8_cmd
  2918 ;; This function is called by:
  2919 ;;		_setup
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _LCD8_clear
  2925  0F5D                     _LCD8_clear:	
  2926                           
  2927                           ;./LCD8bit.h: 33:     LCD8_cmd(0);
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _LCD8_clear: [wreg+status,2+status,0+pclath+cstack]
  2931  0F5D  3000               	movlw	0
  2932  0F5E  120A  158A  2798  120A  158A  	fcall	_LCD8_cmd
  2933                           
  2934                           ;./LCD8bit.h: 34:     LCD8_cmd(1);
  2935  0F63  3001               	movlw	1
  2936  0F64  120A  158A  2798   	fcall	_LCD8_cmd
  2937  0F67  0008               	return
  2938  0F68                     __end_of_LCD8_clear:	
  2939                           
  2940                           	psect	text9
  2941  0655                     __ptext9:	
  2942 ;; *************** function _LCD8_begin *****************
  2943 ;; Defined at:
  2944 ;;		line 37 in file "./LCD8bit.h"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0, pclath, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0
  2960 ;;      Temps:          2       0       0       0       0
  2961 ;;      Totals:         2       0       0       0       0
  2962 ;;Total ram usage:        2 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    2
  2965 ;; This function calls:
  2966 ;;		_LCD8_cmd
  2967 ;; This function is called by:
  2968 ;;		_setup
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _LCD8_begin
  2974  0655                     _LCD8_begin:	
  2975                           
  2976                           ;./LCD8bit.h: 38:     PORTB = 0;
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _LCD8_begin: [wreg+status,2+status,0+pclath+cstack]
  2980  0655  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0656  1303               	bcf	3,6	;RP1=0, select bank0
  2982  0657  0186               	clrf	6	;volatile
  2983                           
  2984                           ;./LCD8bit.h: 39:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2985  0658  3034               	movlw	52
  2986  0659  00F7               	movwf	??_LCD8_begin+1
  2987  065A  30F1               	movlw	241
  2988  065B  00F6               	movwf	??_LCD8_begin
  2989  065C                     u1627:	
  2990  065C  0BF6               	decfsz	??_LCD8_begin,f
  2991  065D  2E5C               	goto	u1627
  2992  065E  0BF7               	decfsz	??_LCD8_begin+1,f
  2993  065F  2E5C               	goto	u1627
  2994  0660  2E61               	nop2
  2995                           
  2996                           ;./LCD8bit.h: 40:     LCD8_cmd(48);
  2997  0661  3030               	movlw	48
  2998  0662  120A  158A  2798  120A  118A  	fcall	_LCD8_cmd
  2999                           
  3000                           ;./LCD8bit.h: 41:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3001  0667  300D               	movlw	13
  3002  0668  00F7               	movwf	??_LCD8_begin+1
  3003  0669  30FB               	movlw	251
  3004  066A  00F6               	movwf	??_LCD8_begin
  3005  066B                     u1637:	
  3006  066B  0BF6               	decfsz	??_LCD8_begin,f
  3007  066C  2E6B               	goto	u1637
  3008  066D  0BF7               	decfsz	??_LCD8_begin+1,f
  3009  066E  2E6B               	goto	u1637
  3010  066F  2E70               	nop2
  3011                           
  3012                           ;./LCD8bit.h: 42:     LCD8_cmd(48);
  3013  0670  3030               	movlw	48
  3014  0671  120A  158A  2798  120A  118A  	fcall	_LCD8_cmd
  3015                           
  3016                           ;./LCD8bit.h: 43:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  3017  0676  306D               	movlw	109
  3018  0677  00F6               	movwf	??_LCD8_begin
  3019  0678                     u1647:	
  3020  0678  0BF6               	decfsz	??_LCD8_begin,f
  3021  0679  2E78               	goto	u1647
  3022  067A  2E7B               	nop2
  3023                           
  3024                           ;./LCD8bit.h: 44:     LCD8_cmd(48);
  3025  067B  3030               	movlw	48
  3026  067C  120A  158A  2798  120A  118A  	fcall	_LCD8_cmd
  3027                           
  3028                           ;./LCD8bit.h: 45:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  3029  0681  306D               	movlw	109
  3030  0682  00F6               	movwf	??_LCD8_begin
  3031  0683                     u1657:	
  3032  0683  0BF6               	decfsz	??_LCD8_begin,f
  3033  0684  2E83               	goto	u1657
  3034  0685  2E86               	nop2
  3035                           
  3036                           ;./LCD8bit.h: 47:     LCD8_cmd(0b111000);
  3037  0686  3038               	movlw	56
  3038  0687  120A  158A  2798  120A  118A  	fcall	_LCD8_cmd
  3039                           
  3040                           ;./LCD8bit.h: 48:     LCD8_cmd(0b10100);
  3041  068C  3014               	movlw	20
  3042  068D  120A  158A  2798  120A  118A  	fcall	_LCD8_cmd
  3043                           
  3044                           ;./LCD8bit.h: 49:     LCD8_cmd(1);
  3045  0692  3001               	movlw	1
  3046  0693  120A  158A  2798  120A  118A  	fcall	_LCD8_cmd
  3047                           
  3048                           ;./LCD8bit.h: 50:     LCD8_cmd(0b110);
  3049  0698  3006               	movlw	6
  3050  0699  120A  158A  2798  120A  118A  	fcall	_LCD8_cmd
  3051                           
  3052                           ;./LCD8bit.h: 51:     LCD8_cmd(0b1100);
  3053  069E  300C               	movlw	12
  3054  069F  120A  158A  2798  120A  118A  	fcall	_LCD8_cmd
  3055                           
  3056                           ;./LCD8bit.h: 52:     LCD8_cmd(0b10);
  3057  06A4  3002               	movlw	2
  3058  06A5  120A  158A  2798   	fcall	_LCD8_cmd
  3059  06A8  0008               	return
  3060  06A9                     __end_of_LCD8_begin:	
  3061                           
  3062                           	psect	text10
  3063  0726                     __ptext10:	
  3064 ;; *************** function _I2C_Master_Init *****************
  3065 ;; Defined at:
  3066 ;;		line 15 in file "./I2C.h"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  c               4   13[BANK0 ] const unsigned long 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, pclath, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3080 ;;      Params:         0       4       0       0       0
  3081 ;;      Locals:         0       0       0       0       0
  3082 ;;      Temps:          4       0       0       0       0
  3083 ;;      Totals:         4       4       0       0       0
  3084 ;;Total ram usage:        8 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    2
  3087 ;; This function calls:
  3088 ;;		___lldiv
  3089 ;; This function is called by:
  3090 ;;		_setup
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           
  3095                           ;psect for function _I2C_Master_Init
  3096  0726                     _I2C_Master_Init:	
  3097                           
  3098                           ;./I2C.h: 15: void I2C_Master_Init(const unsigned long c);./I2C.h: 16: {;./I2C.h: 17:   
      +                            SSPCON = 0b00101000;
  3099                           
  3100                           ;incstack = 0
  3101                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3102  0726  3028               	movlw	40
  3103  0727  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0728  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0729  0094               	movwf	20	;volatile
  3106                           
  3107                           ;./I2C.h: 18:     SSPCON2 = 0;
  3108  072A  1683               	bsf	3,5	;RP0=1, select bank1
  3109  072B  1303               	bcf	3,6	;RP1=0, select bank1
  3110  072C  0191               	clrf	17	;volatile
  3111                           
  3112                           ;./I2C.h: 19:     SSPADD = (8000000/(4*c))-1;
  3113  072D  1283               	bcf	3,5	;RP0=0, select bank0
  3114  072E  1303               	bcf	3,6	;RP1=0, select bank0
  3115  072F  085A               	movf	I2C_Master_Init@c,w
  3116  0730  00F4               	movwf	??_I2C_Master_Init
  3117  0731  085B               	movf	I2C_Master_Init@c+1,w
  3118  0732  00F5               	movwf	??_I2C_Master_Init+1
  3119  0733  085C               	movf	I2C_Master_Init@c+2,w
  3120  0734  00F6               	movwf	??_I2C_Master_Init+2
  3121  0735  085D               	movf	I2C_Master_Init@c+3,w
  3122  0736  00F7               	movwf	??_I2C_Master_Init+3
  3123  0737  3002               	movlw	2
  3124  0738                     u1135:	
  3125  0738  1003               	clrc
  3126  0739  0DF4               	rlf	??_I2C_Master_Init,f
  3127  073A  0DF5               	rlf	??_I2C_Master_Init+1,f
  3128  073B  0DF6               	rlf	??_I2C_Master_Init+2,f
  3129  073C  0DF7               	rlf	??_I2C_Master_Init+3,f
  3130  073D  3EFF               	addlw	-1
  3131  073E  1D03               	skipz
  3132  073F  2F38               	goto	u1135
  3133  0740  0877               	movf	??_I2C_Master_Init+3,w
  3134  0741  00D0               	movwf	___lldiv@divisor+3
  3135  0742  0876               	movf	??_I2C_Master_Init+2,w
  3136  0743  00CF               	movwf	___lldiv@divisor+2
  3137  0744  0875               	movf	??_I2C_Master_Init+1,w
  3138  0745  00CE               	movwf	___lldiv@divisor+1
  3139  0746  0874               	movf	??_I2C_Master_Init,w
  3140  0747  00CD               	movwf	___lldiv@divisor
  3141  0748  3000               	movlw	0
  3142  0749  00D4               	movwf	___lldiv@dividend+3
  3143  074A  307A               	movlw	122
  3144  074B  00D3               	movwf	___lldiv@dividend+2
  3145  074C  3012               	movlw	18
  3146  074D  00D2               	movwf	___lldiv@dividend+1
  3147  074E  3000               	movlw	0
  3148  074F  00D1               	movwf	___lldiv@dividend
  3149  0750  120A  118A  25F5   	fcall	___lldiv
  3150  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0754  1303               	bcf	3,6	;RP1=0, select bank0
  3152  0755  084D               	movf	?___lldiv,w
  3153  0756  3EFF               	addlw	255
  3154  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3155  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3156  0759  0093               	movwf	19	;volatile
  3157                           
  3158                           ;./I2C.h: 20:     SSPSTAT = 0;
  3159  075A  0194               	clrf	20	;volatile
  3160                           
  3161                           ;./I2C.h: 21:     TRISC3 = 1;
  3162  075B  1587               	bsf	7,3	;volatile
  3163                           
  3164                           ;./I2C.h: 22:     TRISC4 = 1;
  3165  075C  1607               	bsf	7,4	;volatile
  3166  075D  0008               	return
  3167  075E                     __end_of_I2C_Master_Init:	
  3168                           
  3169                           	psect	text11
  3170  05F5                     __ptext11:	
  3171 ;; *************** function ___lldiv *****************
  3172 ;; Defined at:
  3173 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  divisor         4    0[BANK0 ] unsigned long 
  3176 ;;  dividend        4    4[BANK0 ] unsigned long 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  quotient        4    8[BANK0 ] unsigned long 
  3179 ;;  counter         1   12[BANK0 ] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  4    0[BANK0 ] unsigned long 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       8       0       0       0
  3190 ;;      Locals:         0       5       0       0       0
  3191 ;;      Temps:          1       0       0       0       0
  3192 ;;      Totals:         1      13       0       0       0
  3193 ;;Total ram usage:       14 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_I2C_Master_Init
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           
  3204                           ;psect for function ___lldiv
  3205  05F5                     ___lldiv:	
  3206                           
  3207                           ;incstack = 0
  3208                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3209  05F5  3000               	movlw	0
  3210  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  3211  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  3212  05F8  00D8               	movwf	___lldiv@quotient+3
  3213  05F9  3000               	movlw	0
  3214  05FA  00D7               	movwf	___lldiv@quotient+2
  3215  05FB  3000               	movlw	0
  3216  05FC  00D6               	movwf	___lldiv@quotient+1
  3217  05FD  3000               	movlw	0
  3218  05FE  00D5               	movwf	___lldiv@quotient
  3219  05FF  0850               	movf	___lldiv@divisor+3,w
  3220  0600  044F               	iorwf	___lldiv@divisor+2,w
  3221  0601  044E               	iorwf	___lldiv@divisor+1,w
  3222  0602  044D               	iorwf	___lldiv@divisor,w
  3223  0603  1903               	skipnz
  3224  0604  2E4C               	goto	l2234
  3225  0605  01D9               	clrf	___lldiv@counter
  3226  0606  0AD9               	incf	___lldiv@counter,f
  3227  0607                     l2220:	
  3228  0607  1BD0               	btfsc	___lldiv@divisor+3,7
  3229  0608  2E17               	goto	l2222
  3230  0609  3001               	movlw	1
  3231  060A  00F3               	movwf	??___lldiv
  3232  060B                     u1075:	
  3233  060B  1003               	clrc
  3234  060C  0DCD               	rlf	___lldiv@divisor,f
  3235  060D  0DCE               	rlf	___lldiv@divisor+1,f
  3236  060E  0DCF               	rlf	___lldiv@divisor+2,f
  3237  060F  0DD0               	rlf	___lldiv@divisor+3,f
  3238  0610  0BF3               	decfsz	??___lldiv,f
  3239  0611  2E0B               	goto	u1075
  3240  0612  3001               	movlw	1
  3241  0613  00F3               	movwf	??___lldiv
  3242  0614  0873               	movf	??___lldiv,w
  3243  0615  07D9               	addwf	___lldiv@counter,f
  3244  0616  2E07               	goto	l2220
  3245  0617                     l2222:	
  3246  0617  3001               	movlw	1
  3247  0618  00F3               	movwf	??___lldiv
  3248  0619                     u1095:	
  3249  0619  1003               	clrc
  3250  061A  0DD5               	rlf	___lldiv@quotient,f
  3251  061B  0DD6               	rlf	___lldiv@quotient+1,f
  3252  061C  0DD7               	rlf	___lldiv@quotient+2,f
  3253  061D  0DD8               	rlf	___lldiv@quotient+3,f
  3254  061E  0BF3               	decfsz	??___lldiv,f
  3255  061F  2E19               	goto	u1095
  3256  0620  0850               	movf	___lldiv@divisor+3,w
  3257  0621  0254               	subwf	___lldiv@dividend+3,w
  3258  0622  1D03               	skipz
  3259  0623  2E2E               	goto	u1105
  3260  0624  084F               	movf	___lldiv@divisor+2,w
  3261  0625  0253               	subwf	___lldiv@dividend+2,w
  3262  0626  1D03               	skipz
  3263  0627  2E2E               	goto	u1105
  3264  0628  084E               	movf	___lldiv@divisor+1,w
  3265  0629  0252               	subwf	___lldiv@dividend+1,w
  3266  062A  1D03               	skipz
  3267  062B  2E2E               	goto	u1105
  3268  062C  084D               	movf	___lldiv@divisor,w
  3269  062D  0251               	subwf	___lldiv@dividend,w
  3270  062E                     u1105:	
  3271  062E  1C03               	skipc
  3272  062F  2E3F               	goto	l2230
  3273  0630  084D               	movf	___lldiv@divisor,w
  3274  0631  02D1               	subwf	___lldiv@dividend,f
  3275  0632  084E               	movf	___lldiv@divisor+1,w
  3276  0633  1C03               	skipc
  3277  0634  0F4E               	incfsz	___lldiv@divisor+1,w
  3278  0635  02D2               	subwf	___lldiv@dividend+1,f
  3279  0636  084F               	movf	___lldiv@divisor+2,w
  3280  0637  1C03               	skipc
  3281  0638  0F4F               	incfsz	___lldiv@divisor+2,w
  3282  0639  02D3               	subwf	___lldiv@dividend+2,f
  3283  063A  0850               	movf	___lldiv@divisor+3,w
  3284  063B  1C03               	skipc
  3285  063C  0F50               	incfsz	___lldiv@divisor+3,w
  3286  063D  02D4               	subwf	___lldiv@dividend+3,f
  3287  063E  1455               	bsf	___lldiv@quotient,0
  3288  063F                     l2230:	
  3289  063F  3001               	movlw	1
  3290  0640                     u1115:	
  3291  0640  1003               	clrc
  3292  0641  0CD0               	rrf	___lldiv@divisor+3,f
  3293  0642  0CCF               	rrf	___lldiv@divisor+2,f
  3294  0643  0CCE               	rrf	___lldiv@divisor+1,f
  3295  0644  0CCD               	rrf	___lldiv@divisor,f
  3296  0645  3EFF               	addlw	-1
  3297  0646  1D03               	skipz
  3298  0647  2E40               	goto	u1115
  3299  0648  3001               	movlw	1
  3300  0649  02D9               	subwf	___lldiv@counter,f
  3301  064A  1D03               	btfss	3,2
  3302  064B  2E17               	goto	l2222
  3303  064C                     l2234:	
  3304  064C  0858               	movf	___lldiv@quotient+3,w
  3305  064D  00D0               	movwf	?___lldiv+3
  3306  064E  0857               	movf	___lldiv@quotient+2,w
  3307  064F  00CF               	movwf	?___lldiv+2
  3308  0650  0856               	movf	___lldiv@quotient+1,w
  3309  0651  00CE               	movwf	?___lldiv+1
  3310  0652  0855               	movf	___lldiv@quotient,w
  3311  0653  00CD               	movwf	?___lldiv
  3312  0654  0008               	return
  3313  0655                     __end_of___lldiv:	
  3314                           
  3315                           	psect	text12
  3316  06A9                     __ptext12:	
  3317 ;; *************** function _read_DS1307 *****************
  3318 ;; Defined at:
  3319 ;;		line 17 in file "./rtc.h"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  direccion       2    2[BANK0 ] unsigned short 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  tiempo          2    4[BANK0 ] unsigned short 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  2    2[BANK0 ] unsigned short 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3333 ;;      Params:         0       2       0       0       0
  3334 ;;      Locals:         0       2       0       0       0
  3335 ;;      Temps:          0       0       0       0       0
  3336 ;;      Totals:         0       4       0       0       0
  3337 ;;Total ram usage:        4 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    3
  3340 ;; This function calls:
  3341 ;;		_I2C_Master_Read
  3342 ;;		_I2C_Master_RepeatedStart
  3343 ;;		_I2C_Master_Start
  3344 ;;		_I2C_Master_Stop
  3345 ;;		_I2C_Master_Write
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _read_DS1307
  3353  06A9                     _read_DS1307:	
  3354                           
  3355                           ;./rtc.h: 17: unsigned short read_DS1307(unsigned short direccion);./rtc.h: 18: {;./rtc.
      +                          h: 19:     unsigned short tiempo;;./rtc.h: 20:     I2C_Master_Start();
  3356                           
  3357                           ;incstack = 0
  3358                           ; Regs used in _read_DS1307: [wreg+status,2+status,0+pclath+cstack]
  3359  06A9  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Start
  3360                           
  3361                           ;./rtc.h: 21:     I2C_Master_Write(0xD0);
  3362  06AE  30D0               	movlw	208
  3363  06AF  00F3               	movwf	I2C_Master_Write@d
  3364  06B0  3000               	movlw	0
  3365  06B1  00F4               	movwf	I2C_Master_Write@d+1
  3366  06B2  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  3367                           
  3368                           ;./rtc.h: 22:     I2C_Master_Write(direccion);
  3369  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  3370  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  3371  06B9  0850               	movf	read_DS1307@direccion+1,w
  3372  06BA  00F4               	movwf	I2C_Master_Write@d+1
  3373  06BB  084F               	movf	read_DS1307@direccion,w
  3374  06BC  00F3               	movwf	I2C_Master_Write@d
  3375  06BD  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  3376                           
  3377                           ;./rtc.h: 23:     I2C_Master_RepeatedStart();
  3378  06C2  120A  158A  2725  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3379                           
  3380                           ;./rtc.h: 24:     I2C_Master_Write(0xD1);
  3381  06C7  30D1               	movlw	209
  3382  06C8  00F3               	movwf	I2C_Master_Write@d
  3383  06C9  3000               	movlw	0
  3384  06CA  00F4               	movwf	I2C_Master_Write@d+1
  3385  06CB  120A  158A  273A  120A  118A  	fcall	_I2C_Master_Write
  3386                           
  3387                           ;./rtc.h: 25:     tiempo = I2C_Master_Read(0);
  3388  06D0  3000               	movlw	0
  3389  06D1  00F3               	movwf	I2C_Master_Read@a
  3390  06D2  00F4               	movwf	I2C_Master_Read@a+1
  3391  06D3  120A  118A  2792  120A  118A  	fcall	_I2C_Master_Read
  3392  06D8  0874               	movf	?_I2C_Master_Read+1,w
  3393  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3394  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  3395  06DB  00D2               	movwf	read_DS1307@tiempo+1
  3396  06DC  0873               	movf	?_I2C_Master_Read,w
  3397  06DD  00D1               	movwf	read_DS1307@tiempo
  3398                           
  3399                           ;./rtc.h: 26:     I2C_Master_Stop();
  3400  06DE  120A  158A  2733   	fcall	_I2C_Master_Stop
  3401                           
  3402                           ;./rtc.h: 27:     return(tiempo);
  3403  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  3404  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  3405  06E3  0852               	movf	read_DS1307@tiempo+1,w
  3406  06E4  00D0               	movwf	?_read_DS1307+1
  3407  06E5  0851               	movf	read_DS1307@tiempo,w
  3408  06E6  00CF               	movwf	?_read_DS1307
  3409  06E7  0008               	return
  3410  06E8                     __end_of_read_DS1307:	
  3411                           
  3412                           	psect	text13
  3413  0F3A                     __ptext13:	
  3414 ;; *************** function _I2C_Master_Write *****************
  3415 ;; Defined at:
  3416 ;;		line 64 in file "./I2C.h"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  d               2    3[COMMON] unsigned int 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3430 ;;      Params:         2       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0
  3433 ;;      Totals:         2       0       0       0       0
  3434 ;;Total ram usage:        2 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    2
  3437 ;; This function calls:
  3438 ;;		_I2C_Master_Wait
  3439 ;; This function is called by:
  3440 ;;		_read_DS1307
  3441 ;;		_write_ds1307
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _I2C_Master_Write
  3448  0F3A                     _I2C_Master_Write:	
  3449                           
  3450                           ;./I2C.h: 64: void I2C_Master_Write(unsigned d);./I2C.h: 65: {;./I2C.h: 66:     I2C_Mast
      +                          er_Wait();
  3451                           
  3452                           ;incstack = 0
  3453                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3454  0F3A  120A  158A  274A   	fcall	_I2C_Master_Wait
  3455                           
  3456                           ;./I2C.h: 67:     SSPBUF = d;
  3457  0F3D  0873               	movf	I2C_Master_Write@d,w
  3458  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0F40  0093               	movwf	19	;volatile
  3461  0F41  0008               	return
  3462  0F42                     __end_of_I2C_Master_Write:	
  3463                           
  3464                           	psect	text14
  3465  0F33                     __ptext14:	
  3466 ;; *************** function _I2C_Master_Stop *****************
  3467 ;; Defined at:
  3468 ;;		line 54 in file "./I2C.h"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0, pclath, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0
  3485 ;;      Totals:         0       0       0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    2
  3489 ;; This function calls:
  3490 ;;		_I2C_Master_Wait
  3491 ;; This function is called by:
  3492 ;;		_read_DS1307
  3493 ;;		_write_ds1307
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function _I2C_Master_Stop
  3500  0F33                     _I2C_Master_Stop:	
  3501                           
  3502                           ;./I2C.h: 56:     I2C_Master_Wait();
  3503                           
  3504                           ;incstack = 0
  3505                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3506  0F33  120A  158A  274A   	fcall	_I2C_Master_Wait
  3507                           
  3508                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
  3509  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  3510  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  3511  0F38  1511               	bsf	17,2	;volatile
  3512  0F39  0008               	return
  3513  0F3A                     __end_of_I2C_Master_Stop:	
  3514                           
  3515                           	psect	text15
  3516  0F2C                     __ptext15:	
  3517 ;; *************** function _I2C_Master_Start *****************
  3518 ;; Defined at:
  3519 ;;		line 38 in file "./I2C.h"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, pclath, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3533 ;;      Params:         0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0
  3536 ;;      Totals:         0       0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    2
  3540 ;; This function calls:
  3541 ;;		_I2C_Master_Wait
  3542 ;; This function is called by:
  3543 ;;		_read_DS1307
  3544 ;;		_write_ds1307
  3545 ;;		_main
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function _I2C_Master_Start
  3551  0F2C                     _I2C_Master_Start:	
  3552                           
  3553                           ;./I2C.h: 40:     I2C_Master_Wait();
  3554                           
  3555                           ;incstack = 0
  3556                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3557  0F2C  120A  158A  274A   	fcall	_I2C_Master_Wait
  3558                           
  3559                           ;./I2C.h: 41:     SSPCON2bits.SEN = 1;
  3560  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  3561  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  3562  0F31  1411               	bsf	17,0	;volatile
  3563  0F32  0008               	return
  3564  0F33                     __end_of_I2C_Master_Start:	
  3565                           
  3566                           	psect	text16
  3567  0F25                     __ptext16:	
  3568 ;; *************** function _I2C_Master_RepeatedStart *****************
  3569 ;; Defined at:
  3570 ;;		line 46 in file "./I2C.h"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0, pclath, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3584 ;;      Params:         0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0
  3587 ;;      Totals:         0       0       0       0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    2
  3591 ;; This function calls:
  3592 ;;		_I2C_Master_Wait
  3593 ;; This function is called by:
  3594 ;;		_read_DS1307
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           
  3599                           ;psect for function _I2C_Master_RepeatedStart
  3600  0F25                     _I2C_Master_RepeatedStart:	
  3601                           
  3602                           ;./I2C.h: 48:     I2C_Master_Wait();
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3606  0F25  120A  158A  274A   	fcall	_I2C_Master_Wait
  3607                           
  3608                           ;./I2C.h: 49:     SSPCON2bits.RSEN = 1;
  3609  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  3610  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  3611  0F2A  1491               	bsf	17,1	;volatile
  3612  0F2B  0008               	return
  3613  0F2C                     __end_of_I2C_Master_RepeatedStart:	
  3614                           
  3615                           	psect	text17
  3616  0792                     __ptext17:	
  3617 ;; *************** function _I2C_Master_Read *****************
  3618 ;; Defined at:
  3619 ;;		line 73 in file "./I2C.h"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  a               2    3[COMMON] unsigned short 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  temp            2    0[BANK0 ] unsigned short 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2    3[COMMON] unsigned short 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0, pclath, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3633 ;;      Params:         2       0       0       0       0
  3634 ;;      Locals:         0       2       0       0       0
  3635 ;;      Temps:          2       0       0       0       0
  3636 ;;      Totals:         4       2       0       0       0
  3637 ;;Total ram usage:        6 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    2
  3640 ;; This function calls:
  3641 ;;		_I2C_Master_Wait
  3642 ;; This function is called by:
  3643 ;;		_read_DS1307
  3644 ;;		_main
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           
  3649                           ;psect for function _I2C_Master_Read
  3650  0792                     _I2C_Master_Read:	
  3651                           
  3652                           ;./I2C.h: 73: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 74: {;./I2C.h: 7
      +                          5:     unsigned short temp;;./I2C.h: 76:     I2C_Master_Wait();
  3653                           
  3654                           ;incstack = 0
  3655                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3656  0792  120A  158A  274A  120A  118A  	fcall	_I2C_Master_Wait
  3657                           
  3658                           ;./I2C.h: 77:     RCEN = 1;
  3659  0797  1683               	bsf	3,5	;RP0=1, select bank1
  3660  0798  1303               	bcf	3,6	;RP1=0, select bank1
  3661  0799  1591               	bsf	17,3	;volatile
  3662                           
  3663                           ;./I2C.h: 78:     I2C_Master_Wait();
  3664  079A  120A  158A  274A  120A  118A  	fcall	_I2C_Master_Wait
  3665                           
  3666                           ;./I2C.h: 79:     temp = SSPBUF;
  3667  079F  1283               	bcf	3,5	;RP0=0, select bank0
  3668  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  3669  07A1  0813               	movf	19,w	;volatile
  3670  07A2  00F5               	movwf	??_I2C_Master_Read
  3671  07A3  01F6               	clrf	??_I2C_Master_Read+1
  3672  07A4  0875               	movf	??_I2C_Master_Read,w
  3673  07A5  00CD               	movwf	I2C_Master_Read@temp
  3674  07A6  0876               	movf	??_I2C_Master_Read+1,w
  3675  07A7  00CE               	movwf	I2C_Master_Read@temp+1
  3676                           
  3677                           ;./I2C.h: 80:     I2C_Master_Wait();
  3678  07A8  120A  158A  274A  120A  118A  	fcall	_I2C_Master_Wait
  3679                           
  3680                           ;./I2C.h: 82:     if(a == 1){
  3681  07AD  0373               	decf	I2C_Master_Read@a,w
  3682  07AE  0474               	iorwf	I2C_Master_Read@a+1,w
  3683  07AF  1D03               	btfss	3,2
  3684  07B0  2FB5               	goto	l98
  3685                           
  3686                           ;./I2C.h: 83:         SSPCON2bits.ACKDT = 0;
  3687  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  3688  07B2  1303               	bcf	3,6	;RP1=0, select bank1
  3689  07B3  1291               	bcf	17,5	;volatile
  3690                           
  3691                           ;./I2C.h: 84:     }else{
  3692  07B4  2FB8               	goto	l99
  3693  07B5                     l98:	
  3694                           
  3695                           ;./I2C.h: 85:         SSPCON2bits.ACKDT = 1;
  3696  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  3697  07B6  1303               	bcf	3,6	;RP1=0, select bank1
  3698  07B7  1691               	bsf	17,5	;volatile
  3699  07B8                     l99:	
  3700                           ;./I2C.h: 86:     }
  3701                           
  3702                           
  3703                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  3704  07B8  1611               	bsf	17,4	;volatile
  3705                           
  3706                           ;./I2C.h: 88:     return temp;
  3707  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3708  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3709  07BB  084E               	movf	I2C_Master_Read@temp+1,w
  3710  07BC  00F4               	movwf	?_I2C_Master_Read+1
  3711  07BD  084D               	movf	I2C_Master_Read@temp,w
  3712  07BE  00F3               	movwf	?_I2C_Master_Read
  3713  07BF  0008               	return
  3714  07C0                     __end_of_I2C_Master_Read:	
  3715                           
  3716                           	psect	text18
  3717  0F4A                     __ptext18:	
  3718 ;; *************** function _I2C_Master_Wait *****************
  3719 ;; Defined at:
  3720 ;;		line 31 in file "./I2C.h"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3734 ;;      Params:         0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0
  3737 ;;      Totals:         0       0       0       0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    1
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_I2C_Master_Start
  3745 ;;		_I2C_Master_RepeatedStart
  3746 ;;		_I2C_Master_Stop
  3747 ;;		_I2C_Master_Write
  3748 ;;		_I2C_Master_Read
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           
  3753                           ;psect for function _I2C_Master_Wait
  3754  0F4A                     _I2C_Master_Wait:	
  3755  0F4A                     l80:	
  3756                           ;./I2C.h: 33:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3760                           
  3761  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  3762  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  3763  0F4C  1914               	btfsc	20,2	;volatile
  3764  0F4D  2F4A               	goto	l80
  3765  0F4E  0811               	movf	17,w	;volatile
  3766  0F4F  391F               	andlw	31
  3767  0F50  1903               	btfsc	3,2
  3768  0F51  0008               	return
  3769  0F52  2F4A               	goto	l80
  3770  0F53                     __end_of_I2C_Master_Wait:	
  3771                           
  3772                           	psect	text19
  3773  0F53                     __ptext19:	
  3774 ;; *************** function _UART_Tx *****************
  3775 ;; Defined at:
  3776 ;;		line 94 in file "main.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  val             1    wreg     unsigned char 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  val             1    3[COMMON] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3790 ;;      Params:         0       0       0       0       0
  3791 ;;      Locals:         1       0       0       0       0
  3792 ;;      Temps:          0       0       0       0       0
  3793 ;;      Totals:         1       0       0       0       0
  3794 ;;Total ram usage:        1 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_main
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           
  3805                           ;psect for function _UART_Tx
  3806  0F53                     _UART_Tx:	
  3807                           
  3808                           ;incstack = 0
  3809                           ; Regs used in _UART_Tx: [wreg]
  3810                           ;UART_Tx@val stored from wreg
  3811  0F53  00F3               	movwf	UART_Tx@val
  3812  0F54                     l217:	
  3813                           ;main.c: 94: void UART_Tx(unsigned char val);main.c: 95: {;main.c: 96:     while(TXIF ==
      +                           0);
  3814                           
  3815  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0F56  1E0C               	btfss	12,4	;volatile
  3818  0F57  2F54               	goto	l217
  3819                           
  3820                           ;main.c: 97:     TXIF = 0;
  3821  0F58  120C               	bcf	12,4	;volatile
  3822                           
  3823                           ;main.c: 98:     TXREG = val;
  3824  0F59  0873               	movf	UART_Tx@val,w
  3825  0F5A  0099               	movwf	25	;volatile
  3826                           
  3827                           ;main.c: 99:     PORTDbits.RD2 = 1;
  3828  0F5B  1508               	bsf	8,2	;volatile
  3829  0F5C  0008               	return
  3830  0F5D                     __end_of_UART_Tx:	
  3831                           
  3832                           	psect	text20
  3833  0F1E                     __ptext20:	
  3834 ;; *************** function _UART_Rx *****************
  3835 ;; Defined at:
  3836 ;;		line 103 in file "main.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      unsigned char 
  3843 ;; Registers used:
  3844 ;;		wreg
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0
  3853 ;;      Totals:         0       0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           
  3865                           ;psect for function _UART_Rx
  3866  0F1E                     _UART_Rx:	
  3867  0F1E                     l223:	
  3868                           ;main.c: 105:     while(RCIF == 0);
  3869                           
  3870                           ;incstack = 0
  3871                           ; Regs used in _UART_Rx: [wreg]
  3872                           
  3873  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  3874  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  3875  0F20  1E8C               	btfss	12,5	;volatile
  3876  0F21  2F1E               	goto	l223
  3877                           
  3878                           ;main.c: 106:     RCIF = 0;
  3879  0F22  128C               	bcf	12,5	;volatile
  3880                           
  3881                           ;main.c: 107:     return(RCREG);
  3882  0F23  081A               	movf	26,w	;volatile
  3883  0F24  0008               	return
  3884  0F25                     __end_of_UART_Rx:	
  3885                           
  3886                           	psect	text21
  3887  0FC5                     __ptext21:	
  3888 ;; *************** function _LCD8_strWrite *****************
  3889 ;; Defined at:
  3890 ;;		line 55 in file "./LCD8bit.h"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  data            1    wreg     PTR unsigned char 
  3893 ;;		 -> show(20), 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  data            1    7[COMMON] PTR unsigned char 
  3896 ;;		 -> show(20), 
  3897 ;;  i               1    6[COMMON] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3907 ;;      Params:         0       0       0       0       0
  3908 ;;      Locals:         2       0       0       0       0
  3909 ;;      Temps:          1       0       0       0       0
  3910 ;;      Totals:         3       0       0       0       0
  3911 ;;Total ram usage:        3 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    2
  3914 ;; This function calls:
  3915 ;;		_LCD8_write
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           
  3922                           ;psect for function _LCD8_strWrite
  3923  0FC5                     _LCD8_strWrite:	
  3924                           
  3925                           ;incstack = 0
  3926                           ; Regs used in _LCD8_strWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3927                           ;LCD8_strWrite@data stored from wreg
  3928  0FC5  00F7               	movwf	LCD8_strWrite@data
  3929                           
  3930                           ;./LCD8bit.h: 56:     char i;;./LCD8bit.h: 57:         for(i=0; data[i] !='\0';i++ )
  3931  0FC6  01F6               	clrf	LCD8_strWrite@i
  3932  0FC7                     l1784:	
  3933  0FC7  0876               	movf	LCD8_strWrite@i,w
  3934  0FC8  0777               	addwf	LCD8_strWrite@data,w
  3935  0FC9  00F5               	movwf	??_LCD8_strWrite
  3936  0FCA  0875               	movf	??_LCD8_strWrite,w
  3937  0FCB  0084               	movwf	4
  3938  0FCC  1383               	bcf	3,7	;select IRP bank0
  3939  0FCD  0800               	movf	0,w
  3940  0FCE  1903               	btfsc	3,2
  3941  0FCF  0008               	return
  3942                           
  3943                           ;./LCD8bit.h: 58:             LCD8_write(data[i]);
  3944  0FD0  0876               	movf	LCD8_strWrite@i,w
  3945  0FD1  0777               	addwf	LCD8_strWrite@data,w
  3946  0FD2  00F5               	movwf	??_LCD8_strWrite
  3947  0FD3  0875               	movf	??_LCD8_strWrite,w
  3948  0FD4  0084               	movwf	4
  3949  0FD5  0800               	movf	0,w
  3950  0FD6  120A  158A  2776  120A  158A  	fcall	_LCD8_write
  3951  0FDB  3001               	movlw	1
  3952  0FDC  00F5               	movwf	??_LCD8_strWrite
  3953  0FDD  0875               	movf	??_LCD8_strWrite,w
  3954  0FDE  07F6               	addwf	LCD8_strWrite@i,f
  3955  0FDF  2FC7               	goto	l1784
  3956  0FE0                     __end_of_LCD8_strWrite:	
  3957                           
  3958                           	psect	text22
  3959  0F76                     __ptext22:	
  3960 ;; *************** function _LCD8_write *****************
  3961 ;; Defined at:
  3962 ;;		line 4 in file "./LCD8bit.h"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  data            1    wreg     unsigned char 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  data            1    4[COMMON] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         1       0       0       0       0
  3978 ;;      Temps:          1       0       0       0       0
  3979 ;;      Totals:         2       0       0       0       0
  3980 ;;Total ram usage:        2 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_LCD8_strWrite
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function _LCD8_write
  3992  0F76                     _LCD8_write:	
  3993                           
  3994                           ;incstack = 0
  3995                           ; Regs used in _LCD8_write: [wreg]
  3996                           ;LCD8_write@data stored from wreg
  3997  0F76  00F4               	movwf	LCD8_write@data
  3998                           
  3999                           ;./LCD8bit.h: 5:     RA0 = 1;
  4000  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0F79  1405               	bsf	5,0	;volatile
  4003                           
  4004                           ;./LCD8bit.h: 6:     PORTB = data;
  4005  0F7A  0874               	movf	LCD8_write@data,w
  4006  0F7B  0086               	movwf	6	;volatile
  4007                           
  4008                           ;./LCD8bit.h: 7:     RA1 = 1;
  4009  0F7C  1485               	bsf	5,1	;volatile
  4010                           
  4011                           ;./LCD8bit.h: 8:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4012  0F7D  301A               	movlw	26
  4013  0F7E  00F3               	movwf	??_LCD8_write
  4014  0F7F                     u1667:	
  4015  0F7F  0BF3               	decfsz	??_LCD8_write,f
  4016  0F80  2F7F               	goto	u1667
  4017  0F81  0000               	nop
  4018                           
  4019                           ;./LCD8bit.h: 9:     RA1 = 0;
  4020  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  4021  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  4022  0F84  1085               	bcf	5,1	;volatile
  4023  0F85  0008               	return
  4024  0F86                     __end_of_LCD8_write:	
  4025                           
  4026                           	psect	text23
  4027  0FAC                     __ptext23:	
  4028 ;; *************** function _LCD8_set_cursor *****************
  4029 ;; Defined at:
  4030 ;;		line 21 in file "./LCD8bit.h"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  row             1    wreg     unsigned char 
  4033 ;;  column          1    6[COMMON] unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  row             1    1[BANK0 ] unsigned char 
  4036 ;;  cursor          1    0[BANK0 ] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0, pclath, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         1       0       0       0       0
  4047 ;;      Locals:         0       2       0       0       0
  4048 ;;      Temps:          1       0       0       0       0
  4049 ;;      Totals:         2       2       0       0       0
  4050 ;;Total ram usage:        4 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    2
  4053 ;; This function calls:
  4054 ;;		_LCD8_cmd
  4055 ;; This function is called by:
  4056 ;;		_main
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _LCD8_set_cursor
  4062  0FAC                     _LCD8_set_cursor:	
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in _LCD8_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4066                           ;LCD8_set_cursor@row stored from wreg
  4067  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  4069  0FAE  00CE               	movwf	LCD8_set_cursor@row
  4070                           
  4071                           ;./LCD8bit.h: 22:     char cursor;;./LCD8bit.h: 24:         if(row==1)
  4072  0FAF  034E               	decf	LCD8_set_cursor@row,w
  4073  0FB0  1D03               	btfss	3,2
  4074  0FB1  2FB7               	goto	l135
  4075                           
  4076                           ;./LCD8bit.h: 25:             cursor = 128 + column -1;
  4077  0FB2  0876               	movf	LCD8_set_cursor@column,w
  4078  0FB3  3E7F               	addlw	127
  4079  0FB4  00F7               	movwf	??_LCD8_set_cursor
  4080  0FB5  0877               	movf	??_LCD8_set_cursor,w
  4081  0FB6  00CD               	movwf	LCD8_set_cursor@cursor
  4082  0FB7                     l135:	
  4083                           
  4084                           ;./LCD8bit.h: 26:         if (row==2)
  4085  0FB7  3002               	movlw	2
  4086  0FB8  064E               	xorwf	LCD8_set_cursor@row,w
  4087  0FB9  1D03               	btfss	3,2
  4088  0FBA  2FC0               	goto	l2340
  4089                           
  4090                           ;./LCD8bit.h: 27:             cursor = 192 + column -1;
  4091  0FBB  0876               	movf	LCD8_set_cursor@column,w
  4092  0FBC  3EBF               	addlw	191
  4093  0FBD  00F7               	movwf	??_LCD8_set_cursor
  4094  0FBE  0877               	movf	??_LCD8_set_cursor,w
  4095  0FBF  00CD               	movwf	LCD8_set_cursor@cursor
  4096  0FC0                     l2340:	
  4097                           
  4098                           ;./LCD8bit.h: 29:         LCD8_cmd(cursor);
  4099  0FC0  084D               	movf	LCD8_set_cursor@cursor,w
  4100  0FC1  120A  158A  2798   	fcall	_LCD8_cmd
  4101  0FC4  0008               	return
  4102  0FC5                     __end_of_LCD8_set_cursor:	
  4103                           
  4104                           	psect	text24
  4105  0F98                     __ptext24:	
  4106 ;; *************** function _LCD8_cmd *****************
  4107 ;; Defined at:
  4108 ;;		line 12 in file "./LCD8bit.h"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  data            1    wreg     unsigned char 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  data            1    5[COMMON] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4122 ;;      Params:         0       0       0       0       0
  4123 ;;      Locals:         1       0       0       0       0
  4124 ;;      Temps:          2       0       0       0       0
  4125 ;;      Totals:         3       0       0       0       0
  4126 ;;Total ram usage:        3 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    1
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_LCD8_set_cursor
  4133 ;;		_LCD8_clear
  4134 ;;		_LCD8_begin
  4135 ;;		_LCD8_shiftR
  4136 ;;		_LCD8_shiftL
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           
  4141                           ;psect for function _LCD8_cmd
  4142  0F98                     _LCD8_cmd:	
  4143                           
  4144                           ;incstack = 0
  4145                           ; Regs used in _LCD8_cmd: [wreg]
  4146                           ;LCD8_cmd@data stored from wreg
  4147  0F98  00F5               	movwf	LCD8_cmd@data
  4148                           
  4149                           ;./LCD8bit.h: 13:     RA0 = 0;
  4150  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0F9B  1005               	bcf	5,0	;volatile
  4153                           
  4154                           ;./LCD8bit.h: 14:     PORTB = data;
  4155  0F9C  0875               	movf	LCD8_cmd@data,w
  4156  0F9D  0086               	movwf	6	;volatile
  4157                           
  4158                           ;./LCD8bit.h: 16:     RA1 = 1;
  4159  0F9E  1485               	bsf	5,1	;volatile
  4160                           
  4161                           ;./LCD8bit.h: 17:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4162  0F9F  300B               	movlw	11
  4163  0FA0  00F4               	movwf	??_LCD8_cmd+1
  4164  0FA1  3062               	movlw	98
  4165  0FA2  00F3               	movwf	??_LCD8_cmd
  4166  0FA3                     u1677:	
  4167  0FA3  0BF3               	decfsz	??_LCD8_cmd,f
  4168  0FA4  2FA3               	goto	u1677
  4169  0FA5  0BF4               	decfsz	??_LCD8_cmd+1,f
  4170  0FA6  2FA3               	goto	u1677
  4171  0FA7  0000               	nop
  4172                           
  4173                           ;./LCD8bit.h: 18:     RA1 = 0;
  4174  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  4176  0FAA  1085               	bcf	5,1	;volatile
  4177  0FAB  0008               	return
  4178  0FAC                     __end_of_LCD8_cmd:	
  4179                           
  4180                           	psect	text25
  4181  0F86                     __ptext25:	
  4182 ;; *************** function _isr *****************
  4183 ;; Defined at:
  4184 ;;		line 25 in file "timer1.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4198 ;;      Params:         0       0       0       0       0
  4199 ;;      Locals:         0       0       0       0       0
  4200 ;;      Temps:          3       0       0       0       0
  4201 ;;      Totals:         3       0       0       0       0
  4202 ;;Total ram usage:        3 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		Interrupt level 1
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _isr
  4213  0F86                     _isr:	
  4214                           
  4215                           ;timer1.c: 27:     if (PIR1bits.TMR1IF) {
  4216  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  4217  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  4218  0F88  1C0C               	btfss	12,0	;volatile
  4219  0F89  2F91               	goto	i1l276
  4220                           
  4221                           ;timer1.c: 28:         t1_count ++;
  4222  0F8A  3001               	movlw	1
  4223  0F8B  00F0               	movwf	??_isr
  4224  0F8C  0870               	movf	??_isr,w
  4225  0F8D  07FA               	addwf	_t1_count,f
  4226                           
  4227                           ;timer1.c: 29:         TMR1 = (0);
  4228  0F8E  018E               	clrf	14	;volatile
  4229  0F8F  018F               	clrf	15	;volatile
  4230                           
  4231                           ;timer1.c: 30:         PIR1bits.TMR1IF = 0;
  4232  0F90  100C               	bcf	12,0	;volatile
  4233  0F91                     i1l276:	
  4234  0F91  0872               	movf	??_isr+2,w
  4235  0F92  008A               	movwf	10
  4236  0F93  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  4237  0F94  0083               	movwf	3
  4238  0F95  0EFE               	swapf	126,f
  4239  0F96  0E7E               	swapf	126,w
  4240  0F97  0009               	retfie
  4241  0F98                     __end_of_isr:	
  4242  007E                     btemp	set	126	;btemp
  4243  007E                     wtemp0	set	126
  4244                           
  4245                           	psect	intentry
  4246  0004                     __pintentry:	
  4247                           ;incstack = 0
  4248                           ; Regs used in _isr: [wreg+status,2+status,0]
  4249                           
  4250  0004                     interrupt_function:	
  4251  007E                     saved_w	set	btemp
  4252  0004  00FE               	movwf	btemp
  4253  0005  0E03               	swapf	3,w
  4254  0006  00F1               	movwf	??_isr+1
  4255  0007  080A               	movf	10,w
  4256  0008  00F2               	movwf	??_isr+2
  4257  0009  120A  158A  2F86   	ljmp	_isr


Data Sizes:
    Strings     8
    Constant    10
    Data        2
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[3]), STR_10(CODE[4]), 
		 -> STR_9(CODE[3]), STR_8(CODE[4]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> show(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD8_strWrite@data	PTR unsigned char  size(1) Largest target is 20
		 -> show(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_LCD8_set_cursor
    _main->_LCD8_strWrite
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _setup->_LCD8_begin
    _write_ds1307->_I2C_Master_Write
    _LCD8_clear->_LCD8_cmd
    _LCD8_begin->_LCD8_cmd
    _I2C_Master_Init->___lldiv
    _read_DS1307->_I2C_Master_Read
    _LCD8_strWrite->_LCD8_write
    _LCD8_set_cursor->_LCD8_cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _read_DS1307->_I2C_Master_Read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14187
                                             22 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _LCD8_set_cursor
                      _LCD8_strWrite
                            _UART_Rx
                            _UART_Tx
                        _read_DS1307
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    3066
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    3449
                                             17 BANK0      1     1      0
                    _I2C_Master_Init
                         _LCD8_begin
                         _LCD8_clear
                    _oscilator_begin
                       _timer1_begin
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         4     0      4    2703
                                              0 BANK0      4     0      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _timer1_begin                                         4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _oscilator_begin                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD8_clear                                           0     0      0      31
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD8_begin                                           2     2      0      31
                                              6 COMMON     2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _read_DS1307                                          4     2      2    3041
                                              2 BANK0      4     2      2
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    2101
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     605
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Tx                                              1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD8_strWrite                                        3     3      0     541
                                              5 COMMON     3     3      0
                         _LCD8_write
 ---------------------------------------------------------------------------------
 (2) _LCD8_write                                           2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_set_cursor                                      4     3      1    1362
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (3) _LCD8_cmd                                             3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LCD8_set_cursor
     _LCD8_cmd
   _LCD8_strWrite
     _LCD8_write
   _UART_Rx
   _UART_Tx
   _read_DS1307
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _LCD8_begin
       _LCD8_cmd
     _LCD8_clear
       _LCD8_cmd
     _oscilator_begin
     _timer1_begin
     _write_ds1307
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      53      12        0.0%
ABS                  0      0      53       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 13 13:05:21 2019

               LCD8_set_cursor@row 004E                                  _a 0038  
                                pc 0002                        __CFG_CP$OFF 0000  
            LCD8_set_cursor@column 0076                                 l80 0F4A  
                               l98 07B5                                 l99 07B8  
                               _ap 0031                                 _hr 0032  
            LCD8_set_cursor@cursor 004D                                 fsr 0004  
                              l135 0FB7                                l223 0F1E  
                              l217 0F54                                _GIE 005F  
                              _RA0 0028                                _RA1 0029  
                     __CFG_CPD$OFF 0000                                u725 0769  
                              u745 077A                                u755 0783  
                              _hum 0025                                _isr 0F86  
                              _pir 0026                                _luz 0027  
                              fsr0 0004                                indf 0000  
                     __CFG_LVP$OFF 0000                               l2220 0607  
                             l2230 063F                               l2222 0617  
                             l2320 0716                               l2312 06F2  
                             l2234 064C                               l2314 0700  
                             l2340 0FC0                               l2324 0721  
                             l2420 0503                               l2404 04EA  
                             l2414 0501                               l2440 0537  
                             l2432 0533                               l2600 028E  
                             l2426 0524                               l2442 04AC  
                             l2444 057A                               l2620 02AC  
                             l2612 02A0                               l2604 0294  
                             l1750 0766                               l1752 0774  
                             l1760 078D                               l2616 02A6  
                             l2608 029A                               l2624 02B6  
                             l2706 047B                               l2642 0301  
                             l2634 02DC                               l2458 002E  
                             l1756 0782                               l2734 04DF  
                             l2398 04CC                               l2662 036C  
                             l2654 0347                               l1784 0FC7  
                             l2690 0429                               l2698 0452  
                             ?_isr 0070                               STR_1 07F8  
                             STR_2 07FD                               STR_3 07FD  
                             STR_4 07F8                               STR_5 07FD  
                             STR_6 07FD                               STR_7 07FD  
                             STR_8 07FC                               STR_9 07FD  
                             _CREN 00C4                               u1105 062E  
                             u1115 0640                               u1205 0717  
                             u1135 0738                               u1075 060B  
                             u1165 06F5                               u1095 0619  
                             u1185 0701                               u1265 051A  
                             u1195 070D                               u1507 00F1  
                             u1517 010D                               u1607 024B  
                             u1527 0129                               u1617 0277  
                             u1537 013B                               u1627 065C  
                             u1547 014D                               u1467 0057  
                             u1637 066B                               u1557 0179  
                             u1477 0083                               u1647 0678  
                             u1567 01A5                               u1487 00AA  
                             u1657 0683                               u1577 01D1  
                             u1497 00D6                               u1667 0F7F  
                             u1587 01F8                               u1677 0FA3  
                             u1597 0224                               _PEIE 005E  
                             _RCEN 048B                               _RCIF 0065  
                             _TMR1 000E                               _TXIF 0064  
                     __CFG_WRT$OFF 0000                    __end_of_UART_Rx 0F25  
                  __end_of_UART_Tx 0F5D   __end_of_I2C_Master_RepeatedStart 0F2C  
                             _main 0029                               _hora 0033  
                             _show 0039                               btemp 007E  
                             start 000C                      __CFG_IESO$OFF 0000  
                     ?_read_DS1307 004F            __end_of_oscilator_begin 0F76  
                 __end_of_LCD8_cmd 0FAC                     _apoyo_unitario 0036  
                            ??_isr 0070                __size_of_LCD8_begin 0054  
              __size_of_LCD8_clear 000B                   ?_I2C_Master_Init 005A  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                    _LCD8_set_cursor 0FAC  
                            ?_main 0070                __size_of_LCD8_write 0010  
                            STR_10 07F8                              STR_11 07FD  
                            STR_12 07F8                              STR_13 07FD  
                    __CFG_WDTE$OFF 0000                              _ANSEL 0188  
                  __end_of___lldiv 0655                    __end_of___lwdiv 0726  
                  __end_of___lwmod 0792                              i1l276 0F91  
                            _RCREG 001A                              _PORTA 0005  
                            _PORTB 0006                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _SSPIF 0063  
                            _TXREG 0019                  read_DS1307@tiempo 0051  
                   __CFG_FCMEN$OFF 0000                    __end_of_dpowers 07F8  
                            _setup 057F                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 057F  
                   __CFG_MCLRE$OFF 0000              __size_of_write_ds1307 0028  
                  __initialization 000F                       __end_of_main 04A5  
                           ??_main 0063                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                          ??_UART_Rx 0073  
                        ??_UART_Tx 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                             ?_setup 0070  
                           _ANSELH 0189                       _write_ds1307 07C0  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                   __CFG_PWRTE$OFF 0000           _I2C_Master_RepeatedStart 0F25  
          __end_of_LCD8_set_cursor 0FC5                   ?_oscilator_begin 0070  
                        ??___lldiv 0073                          ??___lwdiv 0077  
                        ??___lwmod 0054                             _minuto 0034  
                           _puerta 0028                             saved_w 007E  
                     ??_LCD8_begin 0076                          ??_sprintf 0059  
                     ??_LCD8_clear 0076                          ?_LCD8_cmd 0070  
                     ??_LCD8_write 0073            __end_of__initialization 0025  
                   __pcstackCOMMON 0070               __size_of_read_DS1307 003F  
                     __pidataBANK0 0F1C                      __end_of_setup 05F5  
               __end_of_LCD8_begin 06A9                 __end_of_LCD8_clear 0F68  
               __end_of_LCD8_write 0F86                            ??_setup 005E  
                       ??_LCD8_cmd 0073                         __pbssBANK0 0020  
            __end_of_LCD8_strWrite 0FE0                         __pmaintext 0029  
                 ?_LCD8_set_cursor 0076                         __pintentry 0004  
                          _UART_Rx 0F1E                            _UART_Tx 0F53  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 07E8                         _convertido 0020  
                          ___lldiv 05F5                            ___lwdiv 06E8  
                          ___lwmod 075E                            _decimal 0037  
                    ?_timer1_begin 0073                            __ptext1 04A5  
                          __ptext2 075E                            __ptext3 06E8  
                          __ptext4 057F                            __ptext5 07C0  
                          __ptext6 0FE0                            __ptext7 0F68  
                          __ptext8 0F5D                            __ptext9 0655  
                        _T1CONbits 0010                            _horaDer 002A  
                          _counter 0024                            _horaIzq 0029  
                          _dpowers 07EE                       __size_of_isr 0012  
                LCD8_strWrite@data 0077                            _humedad 0066  
                          _segundo 0030           __size_of_I2C_Master_Init 0038  
         __size_of_I2C_Master_Read 002E           __size_of_I2C_Master_Wait 0009  
         __size_of_I2C_Master_Stop 0007                            _sprintf 04A5  
                          clrloop0 0F43               end_of_initialization 0025  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 004D  
                       _segundoDer 002E                         _segundoIzq 002D  
                  ___lldiv@counter 0059                         _valor_CONT 0078  
                        _RCSTAbits 0018                   I2C_Master_Init@c 005A  
                 I2C_Master_Read@a 0073                     ??_timer1_begin 0074  
                        _PORTDbits 0008                          _TRISCbits 0087  
            timer1_begin@prescaler 0073                  __size_of_LCD8_cmd 0014  
                        _TXSTAbits 0098                        _BAUDCTLbits 0187  
         __size_of_oscilator_begin 000E                start_initialization 000F  
                      __end_of_isr 0F98                  ??_I2C_Master_Init 0074  
                ??_I2C_Master_Read 0075                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073           __CFG_FOSC$INTRC_NOCLKOUT 0000  
                    ??_read_DS1307 0077                        __pdataBANK0 0066  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 004D                           ?_UART_Rx 0070  
                         ?_UART_Tx 0070               __end_of_timer1_begin 1000  
                      sprintf@flag 005D                        sprintf@prec 005E  
                 _I2C_Master_Start 0F2C                   _I2C_Master_Write 0F3A  
                 ___lwdiv@dividend 0075                           ?___lldiv 004D  
                         ?___lwdiv 0073                           ?___lwmod 0050  
              __end_of_read_DS1307 06E8                     LCD8_strWrite@i 0076  
                        _cual_dato 002F                          __pstrings 07E8  
           __size_of_LCD8_strWrite 001B                 timer1_begin@offset 0076  
         __size_of_LCD8_set_cursor 0019                     LCD8_write@data 0074  
                 ___lwdiv@quotient 004E                           ?_sprintf 0056  
                ??_oscilator_begin 0073                     __size_of_setup 0076  
                         _LCD8_cmd 0F98                         UART_Tx@val 0073  
                    ?_write_ds1307 004D                  interrupt_function 0004  
                        _minutoDer 002C                          _minutoIzq 002B  
                        clear_ram0 0F42                           _PIE1bits 008C  
             read_DS1307@direccion 004F                           _PIR1bits 000C  
                      __stringbase 07ED                I2C_Master_Read@temp 004D  
                 __size_of_UART_Rx 0007                   __size_of_UART_Tx 000A  
                   ??_write_ds1307 0075                      _LCD8_strWrite 0FC5  
              oscilator_begin@freq 0074                        _read_DS1307 06A9  
                         _t1_count 007A  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0060  
                 __size_of___lwdiv 003E                   __size_of___lwmod 0034  
               __end_of__stringtab 07EE                         sprintf@val 005F  
                  _I2C_Master_Init 0726                    _I2C_Master_Read 0792  
                  _I2C_Master_Wait 0F4A                    _I2C_Master_Stop 0F33  
              write_ds1307@address 004D                    ___lwdiv@divisor 0073  
            __size_of_timer1_begin 0020                    ___lwdiv@counter 004D  
                         __ptext10 0726                           __ptext11 05F5  
                         __ptext20 0F1E                           __ptext12 06A9  
                         __ptext21 0FC5                           __ptext13 0F3A  
                         __ptext22 0F76                           __ptext14 0F33  
                         __ptext23 0FAC                           __ptext15 0F2C  
                         __ptext24 0F98                           __ptext16 0F25  
                         __ptext25 0F86                           __ptext17 0792  
                         __ptext18 0F4A                           __ptext19 0F53  
                __CFG_BOR4V$BOR40V 0000                  ??_LCD8_set_cursor 0077  
                       _LCD8_begin 0655                         _LCD8_clear 0F5D  
                 __size_of_sprintf 00DA                     ?_LCD8_strWrite 0070  
                       _LCD8_write 0F76                      __size_of_main 047C  
                     LCD8_cmd@data 0075                           _unitario 0035  
                     _timer1_begin 0FE0           __end_of_I2C_Master_Start 0F33  
         __end_of_I2C_Master_Write 0F42                         _INTCONbits 000B  
                         intlevel1 0000                          sprintf@ap 005C  
                        sprintf@sp 0062                   ___lwmod@dividend 0052  
                 ___lldiv@dividend 0051                 write_ds1307@w_data 004F  
                        stringcode 07E8                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 075E                        _variableADC 0079  
          __end_of_I2C_Master_Read 07C0            __end_of_I2C_Master_Wait 0F53  
             __end_of_write_ds1307 07E8            __end_of_I2C_Master_Stop 0F3A  
                  _oscilator_begin 0F68                        _temperatura 0067  
                         sprintf@c 0061                           sprintf@f 0056  
                 ___lldiv@quotient 0055                  I2C_Master_Write@d 0073  
                  ___lwmod@divisor 0050                    ___lwmod@counter 0055  
                         stringdir 07E8                           stringtab 07E8  
                      _SSPCON2bits 0091                    ??_LCD8_strWrite 0075  
                      ?_LCD8_begin 0070                        ?_LCD8_clear 0070  
                      ?_LCD8_write 0070  
