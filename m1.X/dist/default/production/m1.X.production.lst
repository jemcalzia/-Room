

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 09:15:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306                           
   307                           	psect	strings
   308  0511                     __pstrings:	
   309  0511                     stringtab:	
   310  0511                     __stringtab:	
   311                           
   312                           ;	String table - string pointers are 1 byte each
   313  0511  1BFF               	btfsc	btemp+1,7
   314  0512  2D1B               	ljmp	stringcode
   315  0513  1383               	bcf	3,7
   316  0514  187F               	btfsc	btemp+1,0
   317  0515  1783               	bsf	3,7
   318  0516  0800               	movf	0,w
   319  0517  0A84               	incf	4,f
   320  0518  1903               	skipnz
   321  0519  0AFF               	incf	btemp+1,f
   322  051A  0008               	return
   323  051B                     stringcode:	
   324  051B                     stringdir:	
   325  051B  3005               	movlw	high stringdir
   326  051C  008A               	movwf	10
   327  051D  0804               	movf	4,w
   328  051E  0A84               	incf	4,f
   329  051F  0782               	addwf	2,f
   330  0520                     __stringbase:	
   331  0520  3400               	retlw	0
   332  0521                     __end_of__stringtab:	
   333  0521                     _dpowers:	
   334  0521  3401               	retlw	1
   335  0522  3400               	retlw	0
   336  0523  340A               	retlw	10
   337  0524  3400               	retlw	0
   338  0525  3464               	retlw	100
   339  0526  3400               	retlw	0
   340  0527  34E8               	retlw	232
   341  0528  3403               	retlw	3
   342  0529  3410               	retlw	16
   343  052A  3427               	retlw	39
   344  052B                     __end_of_dpowers:	
   345  000E                     _TMR1	set	14
   346  000C                     _PIR1bits	set	12
   347  000B                     _INTCONbits	set	11
   348  0010                     _T1CONbits	set	16
   349  0006                     _PORTB	set	6
   350  0013                     _SSPBUF	set	19
   351  0014                     _SSPCON	set	20
   352  0029                     _RA1	set	41
   353  0028                     _RA0	set	40
   354  0063                     _SSPIF	set	99
   355  005E                     _PEIE	set	94
   356  005F                     _GIE	set	95
   357  008C                     _PIE1bits	set	140
   358  0085                     _TRISA	set	133
   359  008F                     _OSCCONbits	set	143
   360  0091                     _SSPCON2bits	set	145
   361  0094                     _SSPSTAT	set	148
   362  0093                     _SSPADD	set	147
   363  0091                     _SSPCON2	set	145
   364  0463                     _SSPIE	set	1123
   365  048B                     _RCEN	set	1163
   366  043C                     _TRISC4	set	1084
   367  043B                     _TRISC3	set	1083
   368  0188                     _ANSEL	set	392
   369  052B                     STR_1:	
   370  052B  3453               	retlw	83	;'S'
   371  052C  3469               	retlw	105	;'i'
   372  052D  3420               	retlw	32	;' '
   373  052E  3470               	retlw	112	;'p'
   374  052F  3475               	retlw	117	;'u'
   375  0530  3464               	retlw	100	;'d'
   376  0531  346F               	retlw	111	;'o'
   377  0532  3400               	retlw	0
   378  0533                     STR_4:	
   379  0533  3420               	retlw	32	;' '
   380  0534  3448               	retlw	72	;'H'
   381  0535  3425               	retlw	37	;'%'
   382  0536  3464               	retlw	100	;'d'
   383  0537  3400               	retlw	0
   384  0538                     STR_5:	
   385  0538  3420               	retlw	32	;' '
   386  0539  3454               	retlw	84	;'T'
   387  053A  3425               	retlw	37	;'%'
   388  053B  3464               	retlw	100	;'d'
   389  053C  3400               	retlw	0
   390  053D                     STR_3:	
   391  053D  343A               	retlw	58	;':'
   392  053E  3425               	retlw	37	;'%'
   393  053F  3464               	retlw	100	;'d'
   394  0540  3400               	retlw	0
   395  0541                     STR_6:	
   396  0541  3444               	retlw	68	;'D'
   397  0542  3425               	retlw	37	;'%'
   398  0543  3464               	retlw	100	;'d'
   399  0544  3400               	retlw	0
   400  0545                     STR_8:	
   401  0545  3453               	retlw	83	;'S'
   402  0546  3449               	retlw	73	;'I'
   403  0547  3400               	retlw	0
   404  0548                     STR_9:	
   405  0548  344E               	retlw	78	;'N'
   406  0549  344F               	retlw	79	;'O'
   407  054A  3400               	retlw	0
   408  053E                     
   409                           ; #config settings
   410  0000                     
   411                           	psect	cinit
   412  000F                     start_initialization:	
   413  000F                     __initialization:	
   414                           
   415                           ; Clear objects allocated to COMMON
   416  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   417  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   418  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   419                           
   420                           ; Clear objects allocated to BANK0
   421  0012  1383               	bcf	3,7	;select IRP bank0
   422  0013  3020               	movlw	low __pbssBANK0
   423  0014  0084               	movwf	4
   424  0015  304C               	movlw	low (__pbssBANK0+44)
   425  0016  120A  118A  26C8   	fcall	clear_ram0
   426  0019                     end_of_initialization:	
   427                           ;End of C runtime variable initialization code
   428                           
   429  0019                     __end_of__initialization:	
   430  0019  0183               	clrf	3
   431  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   432                           
   433                           	psect	bssCOMMON
   434  0078                     __pbssCOMMON:	
   435  0078                     _a:	
   436  0078                     	ds	1
   437  0079                     _valor_CONT:	
   438  0079                     	ds	1
   439  007A                     _variableADC:	
   440  007A                     	ds	1
   441                           
   442                           	psect	bssBANK0
   443  0020                     __pbssBANK0:	
   444  0020                     _convertido:	
   445  0020                     	ds	4
   446  0024                     _temperatura:	
   447  0024                     	ds	1
   448  0025                     _hum:	
   449  0025                     	ds	1
   450  0026                     _pir:	
   451  0026                     	ds	1
   452  0027                     _luz:	
   453  0027                     	ds	1
   454  0028                     _puerta:	
   455  0028                     	ds	1
   456  0029                     _horaIzq:	
   457  0029                     	ds	1
   458  002A                     _horaDer:	
   459  002A                     	ds	1
   460  002B                     _minutoIzq:	
   461  002B                     	ds	1
   462  002C                     _minutoDer:	
   463  002C                     	ds	1
   464  002D                     _segundoIzq:	
   465  002D                     	ds	1
   466  002E                     _segundoDer:	
   467  002E                     	ds	1
   468  002F                     _segundo:	
   469  002F                     	ds	1
   470  0030                     _ap:	
   471  0030                     	ds	1
   472  0031                     _hr:	
   473  0031                     	ds	1
   474  0032                     _hora:	
   475  0032                     	ds	1
   476  0033                     _minuto:	
   477  0033                     	ds	1
   478  0034                     _unitario:	
   479  0034                     	ds	1
   480  0035                     _apoyo_unitario:	
   481  0035                     	ds	1
   482  0036                     _decimal:	
   483  0036                     	ds	1
   484  0037                     _t1_count:	
   485  0037                     	ds	1
   486  0038                     _show:	
   487  0038                     	ds	20
   488                           
   489                           	psect	clrtext
   490  06C8                     clear_ram0:	
   491                           ;	Called with FSR containing the base address, and
   492                           ;	W with the last address+1
   493                           
   494  06C8  0064               	clrwdt	;clear the watchdog before getting into this loop
   495  06C9                     clrloop0:	
   496  06C9  0180               	clrf	0	;clear RAM location pointed to by FSR
   497  06CA  0A84               	incf	4,f	;increment pointer
   498  06CB  0604               	xorwf	4,w	;XOR with final address
   499  06CC  1903               	btfsc	3,2	;have we reached the end yet?
   500  06CD  3400               	retlw	0	;all done for this memory range, return
   501  06CE  0604               	xorwf	4,w	;XOR again to restore value
   502  06CF  2EC9               	goto	clrloop0	;do the next byte
   503                           
   504                           	psect	cstackCOMMON
   505  0070                     __pcstackCOMMON:	
   506  0070                     ?_I2C_Master_Wait:	
   507  0070                     ?_I2C_Master_Start:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_I2C_Master_RepeatedStart:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_I2C_Master_Stop:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_oscilator_begin:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_LCD8_write:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_LCD8_cmd:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_LCD8_clear:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_LCD8_begin:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_setup:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_main:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_isr:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ??_isr:	
   541                           ; 1 bytes @ 0x0
   542                           
   543                           
   544                           ; 1 bytes @ 0x0
   545  0070                     	ds	3
   546  0073                     ?_timer1_begin:	
   547  0073                     ??_I2C_Master_Wait:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0073                     ??_I2C_Master_Start:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     ??_I2C_Master_RepeatedStart:	
   554                           ; 1 bytes @ 0x3
   555                           
   556  0073                     ??_I2C_Master_Stop:	
   557                           ; 1 bytes @ 0x3
   558                           
   559  0073                     ?_I2C_Master_Write:	
   560                           ; 1 bytes @ 0x3
   561                           
   562  0073                     ??_oscilator_begin:	
   563                           ; 1 bytes @ 0x3
   564                           
   565  0073                     ??_LCD8_write:	
   566                           ; 1 bytes @ 0x3
   567                           
   568  0073                     ??_LCD8_cmd:	
   569                           ; 1 bytes @ 0x3
   570                           
   571  0073                     ??___lldiv:	
   572                           ; 1 bytes @ 0x3
   573                           
   574  0073                     ?_I2C_Master_Read:	
   575                           ; 1 bytes @ 0x3
   576                           
   577  0073                     ?___lwdiv:	
   578                           ; 2 bytes @ 0x3
   579                           
   580  0073                     timer1_begin@prescaler:	
   581                           ; 2 bytes @ 0x3
   582                           
   583  0073                     I2C_Master_Write@d:	
   584                           ; 1 bytes @ 0x3
   585                           
   586  0073                     I2C_Master_Read@a:	
   587                           ; 2 bytes @ 0x3
   588                           
   589  0073                     ___lwdiv@divisor:	
   590                           ; 2 bytes @ 0x3
   591                           
   592                           
   593                           ; 2 bytes @ 0x3
   594  0073                     	ds	1
   595  0074                     ??_timer1_begin:	
   596  0074                     ??_I2C_Master_Init:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0074                     oscilator_begin@freq:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0074                     LCD8_write@data:	
   603                           ; 1 bytes @ 0x4
   604                           
   605                           
   606                           ; 1 bytes @ 0x4
   607  0074                     	ds	1
   608  0075                     ??_I2C_Master_Write:	
   609  0075                     ??_I2C_Master_Read:	
   610                           ; 1 bytes @ 0x5
   611                           
   612  0075                     ??_write_ds1307:	
   613                           ; 1 bytes @ 0x5
   614                           
   615  0075                     ?_LCD8_strWrite:	
   616                           ; 1 bytes @ 0x5
   617                           
   618  0075                     LCD8_cmd@data:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0075                     LCD8_strWrite@data:	
   622                           ; 1 bytes @ 0x5
   623                           
   624  0075                     ___lwdiv@dividend:	
   625                           ; 2 bytes @ 0x5
   626                           
   627                           
   628                           ; 2 bytes @ 0x5
   629  0075                     	ds	1
   630  0076                     ?_LCD8_set_cursor:	
   631  0076                     ??_LCD8_clear:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0076                     ??_LCD8_begin:	
   635                           ; 1 bytes @ 0x6
   636                           
   637  0076                     LCD8_set_cursor@column:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0076                     timer1_begin@offset:	
   641                           ; 1 bytes @ 0x6
   642                           
   643                           
   644                           ; 1 bytes @ 0x6
   645  0076                     	ds	1
   646  0077                     ??_read_DS1307:	
   647  0077                     ??_LCD8_set_cursor:	
   648                           ; 1 bytes @ 0x7
   649                           
   650  0077                     ??_LCD8_strWrite:	
   651                           ; 1 bytes @ 0x7
   652                           
   653  0077                     ??___lwdiv:	
   654                           ; 1 bytes @ 0x7
   655                           
   656                           
   657                           ; 1 bytes @ 0x7
   658  0077                     	ds	1
   659                           
   660                           	psect	cstackBANK0
   661  004C                     __pcstackBANK0:	
   662  004C                     ?_write_ds1307:	
   663  004C                     ?___lldiv:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  004C                     LCD8_set_cursor@cursor:	
   667                           ; 4 bytes @ 0x0
   668                           
   669  004C                     LCD8_strWrite@i:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  004C                     ___lwdiv@counter:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  004C                     I2C_Master_Read@temp:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  004C                     write_ds1307@address:	
   679                           ; 2 bytes @ 0x0
   680                           
   681  004C                     ___lldiv@divisor:	
   682                           ; 2 bytes @ 0x0
   683                           
   684                           
   685                           ; 4 bytes @ 0x0
   686  004C                     	ds	1
   687  004D                     LCD8_set_cursor@row:	
   688  004D                     ___lwdiv@quotient:	
   689                           ; 1 bytes @ 0x1
   690                           
   691                           
   692                           ; 2 bytes @ 0x1
   693  004D                     	ds	1
   694  004E                     ?_read_DS1307:	
   695  004E                     read_DS1307@direccion:	
   696                           ; 2 bytes @ 0x2
   697                           
   698  004E                     write_ds1307@w_data:	
   699                           ; 2 bytes @ 0x2
   700                           
   701                           
   702                           ; 2 bytes @ 0x2
   703  004E                     	ds	1
   704  004F                     ?___lwmod:	
   705  004F                     ___lwmod@divisor:	
   706                           ; 2 bytes @ 0x3
   707                           
   708                           
   709                           ; 2 bytes @ 0x3
   710  004F                     	ds	1
   711  0050                     read_DS1307@tiempo:	
   712  0050                     ___lldiv@dividend:	
   713                           ; 2 bytes @ 0x4
   714                           
   715                           
   716                           ; 4 bytes @ 0x4
   717  0050                     	ds	1
   718  0051                     ___lwmod@dividend:	
   719                           
   720                           ; 2 bytes @ 0x5
   721  0051                     	ds	2
   722  0053                     ??___lwmod:	
   723                           
   724                           ; 1 bytes @ 0x7
   725  0053                     	ds	1
   726  0054                     ___lwmod@counter:	
   727  0054                     ___lldiv@quotient:	
   728                           ; 1 bytes @ 0x8
   729                           
   730                           
   731                           ; 4 bytes @ 0x8
   732  0054                     	ds	1
   733  0055                     ?_sprintf:	
   734  0055                     sprintf@f:	
   735                           ; 2 bytes @ 0x9
   736                           
   737                           
   738                           ; 1 bytes @ 0x9
   739  0055                     	ds	3
   740  0058                     ??_sprintf:	
   741  0058                     ___lldiv@counter:	
   742                           ; 1 bytes @ 0xC
   743                           
   744                           
   745                           ; 1 bytes @ 0xC
   746  0058                     	ds	1
   747  0059                     ?_I2C_Master_Init:	
   748  0059                     I2C_Master_Init@c:	
   749                           ; 1 bytes @ 0xD
   750                           
   751                           
   752                           ; 4 bytes @ 0xD
   753  0059                     	ds	2
   754  005B                     sprintf@ap:	
   755                           
   756                           ; 1 bytes @ 0xF
   757  005B                     	ds	1
   758  005C                     sprintf@flag:	
   759                           
   760                           ; 1 bytes @ 0x10
   761  005C                     	ds	1
   762  005D                     ??_setup:	
   763  005D                     sprintf@prec:	
   764                           ; 1 bytes @ 0x11
   765                           
   766                           
   767                           ; 1 bytes @ 0x11
   768  005D                     	ds	1
   769  005E                     sprintf@val:	
   770                           
   771                           ; 2 bytes @ 0x12
   772  005E                     	ds	2
   773  0060                     sprintf@sp:	
   774                           
   775                           ; 1 bytes @ 0x14
   776  0060                     	ds	1
   777  0061                     sprintf@c:	
   778                           
   779                           ; 1 bytes @ 0x15
   780  0061                     	ds	1
   781  0062                     ??_main:	
   782                           
   783                           ; 1 bytes @ 0x16
   784  0062                     	ds	3
   785                           
   786                           	psect	maintext
   787  001D                     __pmaintext:	
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 74 in file "main.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : B00/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          0       3       0       0       0
   810 ;;      Totals:         0       3       0       0       0
   811 ;;Total ram usage:        3 bytes
   812 ;; Hardware stack levels required when called:    5
   813 ;; This function calls:
   814 ;;		_I2C_Master_Read
   815 ;;		_I2C_Master_Start
   816 ;;		_I2C_Master_Stop
   817 ;;		_I2C_Master_Write
   818 ;;		_LCD8_clear
   819 ;;		_LCD8_set_cursor
   820 ;;		_LCD8_strWrite
   821 ;;		_read_DS1307
   822 ;;		_setup
   823 ;;		_sprintf
   824 ;; This function is called by:
   825 ;;		Startup code after reset
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _main
   831  001D                     _main:	
   832                           
   833                           ;main.c: 76:     setup();
   834                           
   835                           ;incstack = 0
   836                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   837  001D  120A  118A  236B  120A  118A  	fcall	_setup
   838  0022                     l2059:	
   839                           
   840                           ;main.c: 78:         LCD8_clear();
   841  0022  120A  118A  26B4  120A  118A  	fcall	_LCD8_clear
   842                           
   843                           ;main.c: 80:             I2C_Master_Start();
   844  0027  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
   845                           
   846                           ;main.c: 81:             I2C_Master_Write(2);
   847  002C  3002               	movlw	2
   848  002D  00F3               	movwf	I2C_Master_Write@d
   849  002E  3000               	movlw	0
   850  002F  00F4               	movwf	I2C_Master_Write@d+1
   851  0030  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
   852                           
   853                           ;main.c: 82:             I2C_Master_Write(1);
   854  0035  3001               	movlw	1
   855  0036  00F3               	movwf	I2C_Master_Write@d
   856  0037  3000               	movlw	0
   857  0038  00F4               	movwf	I2C_Master_Write@d+1
   858  0039  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
   859                           
   860                           ;main.c: 83:             I2C_Master_Stop();
   861  003E  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
   862                           
   863                           ;main.c: 85:             I2C_Master_Start();
   864  0043  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
   865                           
   866                           ;main.c: 86:             I2C_Master_Write(3);
   867  0048  3003               	movlw	3
   868  0049  00F3               	movwf	I2C_Master_Write@d
   869  004A  3000               	movlw	0
   870  004B  00F4               	movwf	I2C_Master_Write@d+1
   871  004C  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
   872                           
   873                           ;main.c: 87:             puerta = I2C_Master_Read(0);
   874  0051  3000               	movlw	0
   875  0052  00F3               	movwf	I2C_Master_Read@a
   876  0053  00F4               	movwf	I2C_Master_Read@a+1
   877  0054  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Read
   878  0059  0873               	movf	?_I2C_Master_Read,w
   879  005A  1283               	bcf	3,5	;RP0=0, select bank0
   880  005B  1303               	bcf	3,6	;RP1=0, select bank0
   881  005C  00E2               	movwf	??_main
   882  005D  0862               	movf	??_main,w
   883  005E  00A8               	movwf	_puerta
   884                           
   885                           ;main.c: 88:             I2C_Master_Stop();
   886  005F  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
   887                           
   888                           ;main.c: 90:             I2C_Master_Start();
   889  0064  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
   890                           
   891                           ;main.c: 91:             I2C_Master_Write(2);
   892  0069  3002               	movlw	2
   893  006A  00F3               	movwf	I2C_Master_Write@d
   894  006B  3000               	movlw	0
   895  006C  00F4               	movwf	I2C_Master_Write@d+1
   896  006D  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
   897                           
   898                           ;main.c: 92:             I2C_Master_Write(2);
   899  0072  3002               	movlw	2
   900  0073  00F3               	movwf	I2C_Master_Write@d
   901  0074  3000               	movlw	0
   902  0075  00F4               	movwf	I2C_Master_Write@d+1
   903  0076  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
   904                           
   905                           ;main.c: 93:             I2C_Master_Stop();
   906  007B  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
   907                           
   908                           ;main.c: 95:             I2C_Master_Start();
   909  0080  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
   910                           
   911                           ;main.c: 96:             I2C_Master_Write(3);
   912  0085  3003               	movlw	3
   913  0086  00F3               	movwf	I2C_Master_Write@d
   914  0087  3000               	movlw	0
   915  0088  00F4               	movwf	I2C_Master_Write@d+1
   916  0089  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
   917                           
   918                           ;main.c: 97:             luz = I2C_Master_Read(0);
   919  008E  3000               	movlw	0
   920  008F  00F3               	movwf	I2C_Master_Read@a
   921  0090  00F4               	movwf	I2C_Master_Read@a+1
   922  0091  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Read
   923  0096  0873               	movf	?_I2C_Master_Read,w
   924  0097  1283               	bcf	3,5	;RP0=0, select bank0
   925  0098  1303               	bcf	3,6	;RP1=0, select bank0
   926  0099  00E2               	movwf	??_main
   927  009A  0862               	movf	??_main,w
   928  009B  00A7               	movwf	_luz
   929                           
   930                           ;main.c: 98:             I2C_Master_Stop();
   931  009C  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
   932                           
   933                           ;main.c: 103:             segundo = read_DS1307(0);
   934  00A1  3000               	movlw	0
   935  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   936  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   937  00A4  00CE               	movwf	read_DS1307@direccion
   938  00A5  00CF               	movwf	read_DS1307@direccion+1
   939  00A6  120A  118A  2494  120A  118A  	fcall	_read_DS1307
   940  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   941  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   942  00AD  084E               	movf	?_read_DS1307,w
   943  00AE  00E2               	movwf	??_main
   944  00AF  0862               	movf	??_main,w
   945  00B0  00AF               	movwf	_segundo
   946                           
   947                           ;main.c: 104:             minuto = read_DS1307(1);
   948  00B1  3001               	movlw	1
   949  00B2  00CE               	movwf	read_DS1307@direccion
   950  00B3  3000               	movlw	0
   951  00B4  00CF               	movwf	read_DS1307@direccion+1
   952  00B5  120A  118A  2494  120A  118A  	fcall	_read_DS1307
   953  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   954  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   955  00BC  084E               	movf	?_read_DS1307,w
   956  00BD  00E2               	movwf	??_main
   957  00BE  0862               	movf	??_main,w
   958  00BF  00B3               	movwf	_minuto
   959                           
   960                           ;main.c: 105:             hora = read_DS1307(2);
   961  00C0  3002               	movlw	2
   962  00C1  00CE               	movwf	read_DS1307@direccion
   963  00C2  3000               	movlw	0
   964  00C3  00CF               	movwf	read_DS1307@direccion+1
   965  00C4  120A  118A  2494  120A  118A  	fcall	_read_DS1307
   966  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   967  00CA  1303               	bcf	3,6	;RP1=0, select bank0
   968  00CB  084E               	movf	?_read_DS1307,w
   969  00CC  00E2               	movwf	??_main
   970  00CD  0862               	movf	??_main,w
   971  00CE  00B2               	movwf	_hora
   972                           
   973                           ;main.c: 106:             hr = hora & 0b00011111;
   974  00CF  0832               	movf	_hora,w
   975  00D0  391F               	andlw	31
   976  00D1  00E2               	movwf	??_main
   977  00D2  0862               	movf	??_main,w
   978  00D3  00B1               	movwf	_hr
   979                           
   980                           ;main.c: 107:             ap = hora & 0b00100000;
   981  00D4  0832               	movf	_hora,w
   982  00D5  3920               	andlw	32
   983  00D6  00E2               	movwf	??_main
   984  00D7  0862               	movf	??_main,w
   985  00D8  00B0               	movwf	_ap
   986                           
   987                           ;main.c: 108:             I2C_Master_Start();
   988  00D9  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
   989                           
   990                           ;main.c: 109:             I2C_Master_Write(5);
   991  00DE  3005               	movlw	5
   992  00DF  00F3               	movwf	I2C_Master_Write@d
   993  00E0  3000               	movlw	0
   994  00E1  00F4               	movwf	I2C_Master_Write@d+1
   995  00E2  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
   996                           
   997                           ;main.c: 110:             pir = I2C_Master_Read(0);
   998  00E7  3000               	movlw	0
   999  00E8  00F3               	movwf	I2C_Master_Read@a
  1000  00E9  00F4               	movwf	I2C_Master_Read@a+1
  1001  00EA  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Read
  1002  00EF  0873               	movf	?_I2C_Master_Read,w
  1003  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1004  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1005  00F2  00E2               	movwf	??_main
  1006  00F3  0862               	movf	??_main,w
  1007  00F4  00A6               	movwf	_pir
  1008                           
  1009                           ;main.c: 111:             I2C_Master_Stop();
  1010  00F5  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
  1011                           
  1012                           ;main.c: 113:             I2C_Master_Start();
  1013  00FA  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
  1014                           
  1015                           ;main.c: 114:             I2C_Master_Write(4);
  1016  00FF  3004               	movlw	4
  1017  0100  00F3               	movwf	I2C_Master_Write@d
  1018  0101  3000               	movlw	0
  1019  0102  00F4               	movwf	I2C_Master_Write@d+1
  1020  0103  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1021                           
  1022                           ;main.c: 115:             I2C_Master_Write(minuto);
  1023  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1025  010A  0833               	movf	_minuto,w
  1026  010B  00E2               	movwf	??_main
  1027  010C  01E3               	clrf	??_main+1
  1028  010D  0862               	movf	??_main,w
  1029  010E  00F3               	movwf	I2C_Master_Write@d
  1030  010F  0863               	movf	??_main+1,w
  1031  0110  00F4               	movwf	I2C_Master_Write@d+1
  1032  0111  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1033                           
  1034                           ;main.c: 116:             I2C_Master_Stop();
  1035  0116  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
  1036                           
  1037                           ;main.c: 118:             I2C_Master_Start();
  1038  011B  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
  1039                           
  1040                           ;main.c: 119:             I2C_Master_Write(4);
  1041  0120  3004               	movlw	4
  1042  0121  00F3               	movwf	I2C_Master_Write@d
  1043  0122  3000               	movlw	0
  1044  0123  00F4               	movwf	I2C_Master_Write@d+1
  1045  0124  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1046                           
  1047                           ;main.c: 120:             I2C_Master_Write(hr);
  1048  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1049  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1050  012B  0831               	movf	_hr,w
  1051  012C  00E2               	movwf	??_main
  1052  012D  01E3               	clrf	??_main+1
  1053  012E  0862               	movf	??_main,w
  1054  012F  00F3               	movwf	I2C_Master_Write@d
  1055  0130  0863               	movf	??_main+1,w
  1056  0131  00F4               	movwf	I2C_Master_Write@d+1
  1057  0132  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1058                           
  1059                           ;main.c: 121:             I2C_Master_Stop();
  1060  0137  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
  1061                           
  1062                           ;main.c: 124:             I2C_Master_Start();
  1063  013C  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
  1064                           
  1065                           ;main.c: 125:             I2C_Master_Write(6);
  1066  0141  3006               	movlw	6
  1067  0142  00F3               	movwf	I2C_Master_Write@d
  1068  0143  3000               	movlw	0
  1069  0144  00F4               	movwf	I2C_Master_Write@d+1
  1070  0145  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1071                           
  1072                           ;main.c: 126:             I2C_Master_Write(1);
  1073  014A  3001               	movlw	1
  1074  014B  00F3               	movwf	I2C_Master_Write@d
  1075  014C  3000               	movlw	0
  1076  014D  00F4               	movwf	I2C_Master_Write@d+1
  1077  014E  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1078                           
  1079                           ;main.c: 127:             I2C_Master_Stop();
  1080  0153  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
  1081                           
  1082                           ;main.c: 129:             I2C_Master_Start();
  1083  0158  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
  1084                           
  1085                           ;main.c: 130:             I2C_Master_Write(7);
  1086  015D  3007               	movlw	7
  1087  015E  00F3               	movwf	I2C_Master_Write@d
  1088  015F  3000               	movlw	0
  1089  0160  00F4               	movwf	I2C_Master_Write@d+1
  1090  0161  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1091                           
  1092                           ;main.c: 131:             hum = I2C_Master_Read(0);
  1093  0166  3000               	movlw	0
  1094  0167  00F3               	movwf	I2C_Master_Read@a
  1095  0168  00F4               	movwf	I2C_Master_Read@a+1
  1096  0169  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Read
  1097  016E  0873               	movf	?_I2C_Master_Read,w
  1098  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0171  00E2               	movwf	??_main
  1101  0172  0862               	movf	??_main,w
  1102  0173  00A5               	movwf	_hum
  1103                           
  1104                           ;main.c: 132:             I2C_Master_Stop();
  1105  0174  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
  1106                           
  1107                           ;main.c: 134:             I2C_Master_Start();
  1108  0179  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
  1109                           
  1110                           ;main.c: 135:             I2C_Master_Write(6);
  1111  017E  3006               	movlw	6
  1112  017F  00F3               	movwf	I2C_Master_Write@d
  1113  0180  3000               	movlw	0
  1114  0181  00F4               	movwf	I2C_Master_Write@d+1
  1115  0182  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1116                           
  1117                           ;main.c: 136:             I2C_Master_Write(2);
  1118  0187  3002               	movlw	2
  1119  0188  00F3               	movwf	I2C_Master_Write@d
  1120  0189  3000               	movlw	0
  1121  018A  00F4               	movwf	I2C_Master_Write@d+1
  1122  018B  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1123                           
  1124                           ;main.c: 137:             I2C_Master_Stop();
  1125  0190  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
  1126                           
  1127                           ;main.c: 139:             I2C_Master_Start();
  1128  0195  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
  1129                           
  1130                           ;main.c: 140:             I2C_Master_Write(7);
  1131  019A  3007               	movlw	7
  1132  019B  00F3               	movwf	I2C_Master_Write@d
  1133  019C  3000               	movlw	0
  1134  019D  00F4               	movwf	I2C_Master_Write@d+1
  1135  019E  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  1136                           
  1137                           ;main.c: 141:             temperatura = I2C_Master_Read(0);
  1138  01A3  3000               	movlw	0
  1139  01A4  00F3               	movwf	I2C_Master_Read@a
  1140  01A5  00F4               	movwf	I2C_Master_Read@a+1
  1141  01A6  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Read
  1142  01AB  0873               	movf	?_I2C_Master_Read,w
  1143  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1144  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1145  01AE  00E2               	movwf	??_main
  1146  01AF  0862               	movf	??_main,w
  1147  01B0  00A4               	movwf	_temperatura
  1148                           
  1149                           ;main.c: 142:             I2C_Master_Stop();
  1150  01B1  120A  118A  26D8  120A  118A  	fcall	_I2C_Master_Stop
  1151                           
  1152                           ;main.c: 145:             if (t1_count<150){
  1153  01B6  3096               	movlw	150
  1154  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1155  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1156  01B9  0237               	subwf	_t1_count,w
  1157  01BA  1803               	skipnc
  1158  01BB  2A32               	goto	l2179
  1159                           
  1160                           ;main.c: 146:                 sprintf(show,"%d",hr);
  1161  01BC  301E               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  1162  01BD  00E2               	movwf	??_main
  1163  01BE  0862               	movf	??_main,w
  1164  01BF  00D5               	movwf	sprintf@f
  1165  01C0  0831               	movf	_hr,w
  1166  01C1  00E3               	movwf	??_main+1
  1167  01C2  01E4               	clrf	??_main+2
  1168  01C3  0863               	movf	??_main+1,w
  1169  01C4  00D6               	movwf	?_sprintf+1
  1170  01C5  0864               	movf	??_main+2,w
  1171  01C6  00D7               	movwf	?_sprintf+2
  1172  01C7  3038               	movlw	(low (_show| 0))& (0+255)
  1173  01C8  120A  118A  2291  120A  118A  	fcall	_sprintf
  1174                           
  1175                           ;main.c: 147:                 LCD8_set_cursor(2,1);
  1176  01CD  01F6               	clrf	LCD8_set_cursor@column
  1177  01CE  0AF6               	incf	LCD8_set_cursor@column,f
  1178  01CF  3002               	movlw	2
  1179  01D0  120A  118A  2657  120A  118A  	fcall	_LCD8_set_cursor
  1180                           
  1181                           ;main.c: 148:                 LCD8_strWrite(show);
  1182  01D5  3038               	movlw	(low (_show| 0))& (0+255)
  1183  01D6  00F5               	movwf	LCD8_strWrite@data
  1184  01D7  3000               	movlw	0
  1185  01D8  00F6               	movwf	LCD8_strWrite@data+1
  1186  01D9  120A  118A  25E5  120A  118A  	fcall	_LCD8_strWrite
  1187                           
  1188                           ;main.c: 149:                 sprintf(show,":%d",minuto);
  1189  01DE  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1190  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1191  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1192  01E1  00E2               	movwf	??_main
  1193  01E2  0862               	movf	??_main,w
  1194  01E3  00D5               	movwf	sprintf@f
  1195  01E4  0833               	movf	_minuto,w
  1196  01E5  00E3               	movwf	??_main+1
  1197  01E6  01E4               	clrf	??_main+2
  1198  01E7  0863               	movf	??_main+1,w
  1199  01E8  00D6               	movwf	?_sprintf+1
  1200  01E9  0864               	movf	??_main+2,w
  1201  01EA  00D7               	movwf	?_sprintf+2
  1202  01EB  3038               	movlw	(low (_show| 0))& (0+255)
  1203  01EC  120A  118A  2291  120A  118A  	fcall	_sprintf
  1204                           
  1205                           ;main.c: 150:                 LCD8_strWrite(show);
  1206  01F1  3038               	movlw	(low (_show| 0))& (0+255)
  1207  01F2  00F5               	movwf	LCD8_strWrite@data
  1208  01F3  3000               	movlw	0
  1209  01F4  00F6               	movwf	LCD8_strWrite@data+1
  1210  01F5  120A  118A  25E5  120A  118A  	fcall	_LCD8_strWrite
  1211                           
  1212                           ;main.c: 151:                 sprintf(show," H%d",hum);
  1213  01FA  3013               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1214  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1215  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1216  01FD  00E2               	movwf	??_main
  1217  01FE  0862               	movf	??_main,w
  1218  01FF  00D5               	movwf	sprintf@f
  1219  0200  0825               	movf	_hum,w
  1220  0201  00E3               	movwf	??_main+1
  1221  0202  01E4               	clrf	??_main+2
  1222  0203  0863               	movf	??_main+1,w
  1223  0204  00D6               	movwf	?_sprintf+1
  1224  0205  0864               	movf	??_main+2,w
  1225  0206  00D7               	movwf	?_sprintf+2
  1226  0207  3038               	movlw	(low (_show| 0))& (0+255)
  1227  0208  120A  118A  2291  120A  118A  	fcall	_sprintf
  1228                           
  1229                           ;main.c: 152:                 LCD8_strWrite(show);
  1230  020D  3038               	movlw	(low (_show| 0))& (0+255)
  1231  020E  00F5               	movwf	LCD8_strWrite@data
  1232  020F  3000               	movlw	0
  1233  0210  00F6               	movwf	LCD8_strWrite@data+1
  1234  0211  120A  118A  25E5  120A  118A  	fcall	_LCD8_strWrite
  1235                           
  1236                           ;main.c: 153:                 sprintf(show," T%d",temperatura);
  1237  0216  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1238  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0219  00E2               	movwf	??_main
  1241  021A  0862               	movf	??_main,w
  1242  021B  00D5               	movwf	sprintf@f
  1243  021C  0824               	movf	_temperatura,w
  1244  021D  00E3               	movwf	??_main+1
  1245  021E  01E4               	clrf	??_main+2
  1246  021F  0863               	movf	??_main+1,w
  1247  0220  00D6               	movwf	?_sprintf+1
  1248  0221  0864               	movf	??_main+2,w
  1249  0222  00D7               	movwf	?_sprintf+2
  1250  0223  3038               	movlw	(low (_show| 0))& (0+255)
  1251  0224  120A  118A  2291  120A  118A  	fcall	_sprintf
  1252                           
  1253                           ;main.c: 154:                 LCD8_strWrite(show);
  1254  0229  3038               	movlw	(low (_show| 0))& (0+255)
  1255  022A  00F5               	movwf	LCD8_strWrite@data
  1256  022B  3000               	movlw	0
  1257  022C  00F6               	movwf	LCD8_strWrite@data+1
  1258  022D  120A  118A  25E5  120A  118A  	fcall	_LCD8_strWrite
  1259  0232                     l2179:	
  1260                           
  1261                           ;main.c: 156:             if (t1_count > 150){
  1262  0232  3097               	movlw	151
  1263  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1265  0235  0237               	subwf	_t1_count,w
  1266  0236  1C03               	skipc
  1267  0237  2822               	goto	l2059
  1268                           
  1269                           ;main.c: 158:                 sprintf(show,"D%d",puerta);
  1270  0238  3021               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1271  0239  00E2               	movwf	??_main
  1272  023A  0862               	movf	??_main,w
  1273  023B  00D5               	movwf	sprintf@f
  1274  023C  0828               	movf	_puerta,w
  1275  023D  00E3               	movwf	??_main+1
  1276  023E  01E4               	clrf	??_main+2
  1277  023F  0863               	movf	??_main+1,w
  1278  0240  00D6               	movwf	?_sprintf+1
  1279  0241  0864               	movf	??_main+2,w
  1280  0242  00D7               	movwf	?_sprintf+2
  1281  0243  3038               	movlw	(low (_show| 0))& (0+255)
  1282  0244  120A  118A  2291  120A  118A  	fcall	_sprintf
  1283                           
  1284                           ;main.c: 159:                 LCD8_set_cursor(2,1);
  1285  0249  01F6               	clrf	LCD8_set_cursor@column
  1286  024A  0AF6               	incf	LCD8_set_cursor@column,f
  1287  024B  3002               	movlw	2
  1288  024C  120A  118A  2657  120A  118A  	fcall	_LCD8_set_cursor
  1289                           
  1290                           ;main.c: 160:                 LCD8_strWrite(show);
  1291  0251  3038               	movlw	(low (_show| 0))& (0+255)
  1292  0252  00F5               	movwf	LCD8_strWrite@data
  1293  0253  3000               	movlw	0
  1294  0254  00F6               	movwf	LCD8_strWrite@data+1
  1295  0255  120A  118A  25E5  120A  118A  	fcall	_LCD8_strWrite
  1296                           
  1297                           ;main.c: 161:                 sprintf(show,"%d",luz);
  1298  025A  301E               	movlw	(low (((STR_3+1)-__stringbase)| (0+32768)))& (0+255)
  1299  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1300  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1301  025D  00E2               	movwf	??_main
  1302  025E  0862               	movf	??_main,w
  1303  025F  00D5               	movwf	sprintf@f
  1304  0260  0827               	movf	_luz,w
  1305  0261  00E3               	movwf	??_main+1
  1306  0262  01E4               	clrf	??_main+2
  1307  0263  0863               	movf	??_main+1,w
  1308  0264  00D6               	movwf	?_sprintf+1
  1309  0265  0864               	movf	??_main+2,w
  1310  0266  00D7               	movwf	?_sprintf+2
  1311  0267  3038               	movlw	(low (_show| 0))& (0+255)
  1312  0268  120A  118A  2291  120A  118A  	fcall	_sprintf
  1313                           
  1314                           ;main.c: 162:                 LCD8_strWrite(show);
  1315  026D  3038               	movlw	(low (_show| 0))& (0+255)
  1316  026E  00F5               	movwf	LCD8_strWrite@data
  1317  026F  3000               	movlw	0
  1318  0270  00F6               	movwf	LCD8_strWrite@data+1
  1319  0271  120A  118A  25E5  120A  118A  	fcall	_LCD8_strWrite
  1320                           
  1321                           ;main.c: 163:                 if(pir ==1){
  1322  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0278  0326               	decf	_pir,w
  1325  0279  1D03               	btfss	3,2
  1326  027A  2A7D               	goto	l2195
  1327                           
  1328                           ;main.c: 164:                     sprintf(show,"SI");
  1329  027B  3025               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1330  027C  2A7E               	goto	L1
  1331  027D                     l2195:	
  1332                           ;main.c: 165:                 }
  1333                           
  1334                           
  1335                           ;main.c: 167:                     sprintf(show,"NO");
  1336  027D  3028               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1337  027E                     L1:	
  1338  027E  00E2               	movwf	??_main
  1339  027F  0862               	movf	??_main,w
  1340  0280  00D5               	movwf	sprintf@f
  1341  0281  3038               	movlw	(low (_show| 0))& (0+255)
  1342  0282  120A  118A  2291  120A  118A  	fcall	_sprintf
  1343                           
  1344                           ;main.c: 169:                 LCD8_strWrite(show);
  1345                           
  1346                           ;main.c: 168:                 }
  1347  0287  3038               	movlw	(low (_show| 0))& (0+255)
  1348  0288  00F5               	movwf	LCD8_strWrite@data
  1349  0289  3000               	movlw	0
  1350  028A  00F6               	movwf	LCD8_strWrite@data+1
  1351  028B  120A  118A  25E5  120A  118A  	fcall	_LCD8_strWrite
  1352  0290  2822               	goto	l2059
  1353  0291                     __end_of_main:	
  1354                           
  1355                           	psect	text1
  1356  0291                     __ptext1:	
  1357 ;; *************** function _sprintf *****************
  1358 ;; Defined at:
  1359 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  sp              1    wreg     PTR unsigned char 
  1362 ;;		 -> show(20), 
  1363 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1364 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(4), 
  1365 ;;		 -> STR_5(5), STR_4(5), STR_3(4), STR_2(3), 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1368 ;;		 -> show(20), 
  1369 ;;  tmpval          4    0        struct .
  1370 ;;  val             2   18[BANK0 ] unsigned int 
  1371 ;;  cp              2    0        PTR const unsigned char 
  1372 ;;  len             2    0        unsigned int 
  1373 ;;  c               1   21[BANK0 ] unsigned char 
  1374 ;;  prec            1   17[BANK0 ] char 
  1375 ;;  flag            1   16[BANK0 ] unsigned char 
  1376 ;;  ap              1   15[BANK0 ] PTR void [1]
  1377 ;;		 -> ?_sprintf(2), 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  2    9[BANK0 ] int 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       3       0       0       0
  1388 ;;      Locals:         0       7       0       0       0
  1389 ;;      Temps:          0       3       0       0       0
  1390 ;;      Totals:         0      13       0       0       0
  1391 ;;Total ram usage:       13 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    2
  1394 ;; This function calls:
  1395 ;;		___lwdiv
  1396 ;;		___lwmod
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _sprintf
  1404  0291                     _sprintf:	
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1408                           ;sprintf@sp stored from wreg
  1409  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0293  00E0               	movwf	sprintf@sp
  1412                           
  1413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1414  0294  3056               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1415  0295  00D8               	movwf	??_sprintf
  1416  0296  0858               	movf	??_sprintf,w
  1417  0297  00DB               	movwf	sprintf@ap
  1418  0298                     l2043:	
  1419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1420                           
  1421                           
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1423  0298  3001               	movlw	1
  1424  0299  07D5               	addwf	sprintf@f,f
  1425  029A  30FF               	movlw	-1
  1426  029B  0755               	addwf	sprintf@f,w
  1427  029C  0084               	movwf	4
  1428  029D  120A  118A  251B  120A  118A  	fcall	stringdir
  1429  02A2  00D8               	movwf	??_sprintf
  1430  02A3  0858               	movf	??_sprintf,w
  1431  02A4  00E1               	movwf	sprintf@c
  1432  02A5  0861               	movf	sprintf@c,w
  1433  02A6  1903               	btfsc	3,2
  1434  02A7  2B66               	goto	l2045
  1435                           
  1436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1437  02A8  3025               	movlw	37
  1438  02A9  0661               	xorwf	sprintf@c,w
  1439  02AA  1903               	btfsc	3,2
  1440  02AB  2AB8               	goto	l1999
  1441                           
  1442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1443  02AC  0861               	movf	sprintf@c,w
  1444  02AD  00D8               	movwf	??_sprintf
  1445  02AE  0860               	movf	sprintf@sp,w
  1446  02AF  0084               	movwf	4
  1447  02B0  0858               	movf	??_sprintf,w
  1448  02B1  1383               	bcf	3,7	;select IRP bank0
  1449  02B2  0080               	movwf	0
  1450  02B3  3001               	movlw	1
  1451  02B4  00D8               	movwf	??_sprintf
  1452  02B5  0858               	movf	??_sprintf,w
  1453  02B6  07E0               	addwf	sprintf@sp,f
  1454                           
  1455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1456  02B7  2A98               	goto	l2043
  1457  02B8                     l1999:	
  1458                           
  1459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1460  02B8  01DC               	clrf	sprintf@flag
  1461                           
  1462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1463  02B9  3001               	movlw	1
  1464  02BA  07D5               	addwf	sprintf@f,f
  1465  02BB  30FF               	movlw	-1
  1466  02BC  0755               	addwf	sprintf@f,w
  1467  02BD  0084               	movwf	4
  1468  02BE  120A  118A  251B  120A  118A  	fcall	stringdir
  1469  02C3  00E1               	movwf	sprintf@c
  1470  02C4  00D8               	movwf	??_sprintf
  1471  02C5  01D9               	clrf	??_sprintf+1
  1472                           
  1473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1474                           ; Switch size 1, requested type "simple"
  1475                           ; Number of cases is 1, Range of values is 0 to 0
  1476                           ; switch strategies available:
  1477                           ; Name         Instructions Cycles
  1478                           ; simple_byte            4     3 (average)
  1479                           ; direct_byte           11     8 (fixed)
  1480                           ; jumptable            260     6 (fixed)
  1481                           ;	Chosen strategy is simple_byte
  1482  02C6  0859               	movf	??_sprintf+1,w
  1483  02C7  3A00               	xorlw	0	; case 0
  1484  02C8  1903               	skipnz
  1485  02C9  2ACB               	goto	l2217
  1486  02CA  2A98               	goto	l2043
  1487  02CB                     l2217:	
  1488                           
  1489                           ; Switch size 1, requested type "simple"
  1490                           ; Number of cases is 3, Range of values is 0 to 105
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte           10     6 (average)
  1494                           ; jumptable            260     6 (fixed)
  1495                           ;	Chosen strategy is simple_byte
  1496  02CB  0858               	movf	??_sprintf,w
  1497  02CC  3A00               	xorlw	0	; case 0
  1498  02CD  1903               	skipnz
  1499  02CE  2B66               	goto	l2045
  1500  02CF  3A64               	xorlw	100	; case 100
  1501  02D0  1903               	skipnz
  1502  02D1  2AD6               	goto	l2005
  1503  02D2  3A0D               	xorlw	13	; case 105
  1504  02D3  1903               	skipnz
  1505  02D4  2AD6               	goto	l2005
  1506  02D5  2A98               	goto	l2043
  1507  02D6                     l2005:	
  1508                           
  1509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1510  02D6  085B               	movf	sprintf@ap,w
  1511  02D7  0084               	movwf	4
  1512  02D8  1383               	bcf	3,7	;select IRP bank0
  1513  02D9  0800               	movf	0,w
  1514  02DA  00DE               	movwf	sprintf@val
  1515  02DB  0A84               	incf	4,f
  1516  02DC  0800               	movf	0,w
  1517  02DD  00DF               	movwf	sprintf@val+1
  1518  02DE  3002               	movlw	2
  1519  02DF  00D8               	movwf	??_sprintf
  1520  02E0  0858               	movf	??_sprintf,w
  1521  02E1  07DB               	addwf	sprintf@ap,f
  1522                           
  1523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1524  02E2  1FDF               	btfss	sprintf@val+1,7
  1525  02E3  2AED               	goto	l2015
  1526                           
  1527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1528  02E4  3003               	movlw	3
  1529  02E5  00D8               	movwf	??_sprintf
  1530  02E6  0858               	movf	??_sprintf,w
  1531  02E7  04DC               	iorwf	sprintf@flag,f
  1532                           
  1533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1534  02E8  09DE               	comf	sprintf@val,f
  1535  02E9  09DF               	comf	sprintf@val+1,f
  1536  02EA  0ADE               	incf	sprintf@val,f
  1537  02EB  1903               	skipnz
  1538  02EC  0ADF               	incf	sprintf@val+1,f
  1539  02ED                     l2015:	
  1540                           
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1542  02ED  01E1               	clrf	sprintf@c
  1543  02EE  0AE1               	incf	sprintf@c,f
  1544  02EF                     l2021:	
  1545                           
  1546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1547  02EF  0861               	movf	sprintf@c,w
  1548  02F0  00D8               	movwf	??_sprintf
  1549  02F1  0758               	addwf	??_sprintf,w
  1550  02F2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1551  02F3  0084               	movwf	4
  1552  02F4  120A  118A  251B  120A  118A  	fcall	stringdir
  1553  02F9  00D9               	movwf	??_sprintf+1
  1554  02FA  120A  118A  251B  120A  118A  	fcall	stringdir
  1555  02FF  00DA               	movwf	??_sprintf+2
  1556  0300  085A               	movf	??_sprintf+2,w
  1557  0301  025F               	subwf	sprintf@val+1,w
  1558  0302  1D03               	skipz
  1559  0303  2B06               	goto	u1005
  1560  0304  0859               	movf	??_sprintf+1,w
  1561  0305  025E               	subwf	sprintf@val,w
  1562  0306                     u1005:	
  1563  0306  1C03               	btfss	3,0
  1564  0307  2B10               	goto	l2027
  1565  0308  3001               	movlw	1
  1566  0309  00D8               	movwf	??_sprintf
  1567  030A  0858               	movf	??_sprintf,w
  1568  030B  07E1               	addwf	sprintf@c,f
  1569  030C  3005               	movlw	5
  1570  030D  0661               	xorwf	sprintf@c,w
  1571  030E  1D03               	btfss	3,2
  1572  030F  2AEF               	goto	l2021
  1573  0310                     l2027:	
  1574                           
  1575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1576  0310  085C               	movf	sprintf@flag,w
  1577  0311  3903               	andlw	3
  1578  0312  1903               	btfsc	3,2
  1579  0313  2B1F               	goto	l2033
  1580                           
  1581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1582  0314  302D               	movlw	45
  1583  0315  00D8               	movwf	??_sprintf
  1584  0316  0860               	movf	sprintf@sp,w
  1585  0317  0084               	movwf	4
  1586  0318  0858               	movf	??_sprintf,w
  1587  0319  1383               	bcf	3,7	;select IRP bank0
  1588  031A  0080               	movwf	0
  1589  031B  3001               	movlw	1
  1590  031C  00D8               	movwf	??_sprintf
  1591  031D  0858               	movf	??_sprintf,w
  1592  031E  07E0               	addwf	sprintf@sp,f
  1593  031F                     l2033:	
  1594                           
  1595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1596  031F  0861               	movf	sprintf@c,w
  1597  0320  00D8               	movwf	??_sprintf
  1598  0321  0858               	movf	??_sprintf,w
  1599  0322  00DD               	movwf	sprintf@prec
  1600  0323                     l2041:	
  1601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1602                           
  1603                           
  1604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1605  0323  30FF               	movlw	255
  1606  0324  00D8               	movwf	??_sprintf
  1607  0325  0858               	movf	??_sprintf,w
  1608  0326  07DD               	addwf	sprintf@prec,f
  1609  0327  0A5D               	incf	sprintf@prec,w
  1610  0328  1903               	btfsc	3,2
  1611  0329  2A98               	goto	l2043
  1612                           
  1613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1614  032A  300A               	movlw	10
  1615  032B  00CF               	movwf	___lwmod@divisor
  1616  032C  3000               	movlw	0
  1617  032D  00D0               	movwf	___lwmod@divisor+1
  1618  032E  085D               	movf	sprintf@prec,w
  1619  032F  00D8               	movwf	??_sprintf
  1620  0330  0758               	addwf	??_sprintf,w
  1621  0331  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1622  0332  0084               	movwf	4
  1623  0333  120A  118A  251B  120A  118A  	fcall	stringdir
  1624  0338  00F3               	movwf	___lwdiv@divisor
  1625  0339  120A  118A  251B  120A  118A  	fcall	stringdir
  1626  033E  00F4               	movwf	___lwdiv@divisor+1
  1627  033F  085F               	movf	sprintf@val+1,w
  1628  0340  00F6               	movwf	___lwdiv@dividend+1
  1629  0341  085E               	movf	sprintf@val,w
  1630  0342  00F5               	movwf	___lwdiv@dividend
  1631  0343  120A  118A  24D3  120A  118A  	fcall	___lwdiv
  1632  0348  0874               	movf	?___lwdiv+1,w
  1633  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1634  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1635  034B  00D2               	movwf	___lwmod@dividend+1
  1636  034C  0873               	movf	?___lwdiv,w
  1637  034D  00D1               	movwf	___lwmod@dividend
  1638  034E  120A  118A  2583  120A  118A  	fcall	___lwmod
  1639  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0355  084F               	movf	?___lwmod,w
  1642  0356  3E30               	addlw	48
  1643  0357  00D9               	movwf	??_sprintf+1
  1644  0358  0859               	movf	??_sprintf+1,w
  1645  0359  00E1               	movwf	sprintf@c
  1646                           
  1647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1648  035A  0861               	movf	sprintf@c,w
  1649  035B  00D8               	movwf	??_sprintf
  1650  035C  0860               	movf	sprintf@sp,w
  1651  035D  0084               	movwf	4
  1652  035E  0858               	movf	??_sprintf,w
  1653  035F  1383               	bcf	3,7	;select IRP bank0
  1654  0360  0080               	movwf	0
  1655  0361  3001               	movlw	1
  1656  0362  00D8               	movwf	??_sprintf
  1657  0363  0858               	movf	??_sprintf,w
  1658  0364  07E0               	addwf	sprintf@sp,f
  1659  0365  2B23               	goto	l2041
  1660  0366                     l2045:	
  1661                           
  1662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1663  0366  0860               	movf	sprintf@sp,w
  1664  0367  0084               	movwf	4
  1665  0368  1383               	bcf	3,7	;select IRP bank0
  1666  0369  0180               	clrf	0
  1667  036A  0008               	return
  1668  036B                     __end_of_sprintf:	
  1669                           
  1670                           	psect	text2
  1671  0583                     __ptext2:	
  1672 ;; *************** function ___lwmod *****************
  1673 ;; Defined at:
  1674 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  divisor         2    3[BANK0 ] unsigned int 
  1677 ;;  dividend        2    5[BANK0 ] unsigned int 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  counter         1    8[BANK0 ] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  2    3[BANK0 ] unsigned int 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       4       0       0       0
  1690 ;;      Locals:         0       1       0       0       0
  1691 ;;      Temps:          0       1       0       0       0
  1692 ;;      Totals:         0       6       0       0       0
  1693 ;;Total ram usage:        6 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_sprintf
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function ___lwmod
  1705  0583                     ___lwmod:	
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1709  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0585  084F               	movf	___lwmod@divisor,w
  1712  0586  0450               	iorwf	___lwmod@divisor+1,w
  1713  0587  1903               	btfsc	3,2
  1714  0588  2DB2               	goto	l1545
  1715  0589  01D4               	clrf	___lwmod@counter
  1716  058A  0AD4               	incf	___lwmod@counter,f
  1717  058B                     l1535:	
  1718  058B  1BD0               	btfsc	___lwmod@divisor+1,7
  1719  058C  2D99               	goto	l1537
  1720  058D  3001               	movlw	1
  1721  058E                     u615:	
  1722  058E  1003               	clrc
  1723  058F  0DCF               	rlf	___lwmod@divisor,f
  1724  0590  0DD0               	rlf	___lwmod@divisor+1,f
  1725  0591  3EFF               	addlw	-1
  1726  0592  1D03               	skipz
  1727  0593  2D8E               	goto	u615
  1728  0594  3001               	movlw	1
  1729  0595  00D3               	movwf	??___lwmod
  1730  0596  0853               	movf	??___lwmod,w
  1731  0597  07D4               	addwf	___lwmod@counter,f
  1732  0598  2D8B               	goto	l1535
  1733  0599                     l1537:	
  1734  0599  0850               	movf	___lwmod@divisor+1,w
  1735  059A  0252               	subwf	___lwmod@dividend+1,w
  1736  059B  1D03               	skipz
  1737  059C  2D9F               	goto	u635
  1738  059D  084F               	movf	___lwmod@divisor,w
  1739  059E  0251               	subwf	___lwmod@dividend,w
  1740  059F                     u635:	
  1741  059F  1C03               	skipc
  1742  05A0  2DA7               	goto	l1541
  1743  05A1  084F               	movf	___lwmod@divisor,w
  1744  05A2  02D1               	subwf	___lwmod@dividend,f
  1745  05A3  0850               	movf	___lwmod@divisor+1,w
  1746  05A4  1C03               	skipc
  1747  05A5  03D2               	decf	___lwmod@dividend+1,f
  1748  05A6  02D2               	subwf	___lwmod@dividend+1,f
  1749  05A7                     l1541:	
  1750  05A7  3001               	movlw	1
  1751  05A8                     u645:	
  1752  05A8  1003               	clrc
  1753  05A9  0CD0               	rrf	___lwmod@divisor+1,f
  1754  05AA  0CCF               	rrf	___lwmod@divisor,f
  1755  05AB  3EFF               	addlw	-1
  1756  05AC  1D03               	skipz
  1757  05AD  2DA8               	goto	u645
  1758  05AE  3001               	movlw	1
  1759  05AF  02D4               	subwf	___lwmod@counter,f
  1760  05B0  1D03               	btfss	3,2
  1761  05B1  2D99               	goto	l1537
  1762  05B2                     l1545:	
  1763  05B2  0852               	movf	___lwmod@dividend+1,w
  1764  05B3  00D0               	movwf	?___lwmod+1
  1765  05B4  0851               	movf	___lwmod@dividend,w
  1766  05B5  00CF               	movwf	?___lwmod
  1767  05B6  0008               	return
  1768  05B7                     __end_of___lwmod:	
  1769                           
  1770                           	psect	text3
  1771  04D3                     __ptext3:	
  1772 ;; *************** function ___lwdiv *****************
  1773 ;; Defined at:
  1774 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  divisor         2    3[COMMON] unsigned int 
  1777 ;;  dividend        2    5[COMMON] unsigned int 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  quotient        2    1[BANK0 ] unsigned int 
  1780 ;;  counter         1    0[BANK0 ] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  2    3[COMMON] unsigned int 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         4       0       0       0       0
  1791 ;;      Locals:         0       3       0       0       0
  1792 ;;      Temps:          1       0       0       0       0
  1793 ;;      Totals:         5       3       0       0       0
  1794 ;;Total ram usage:        8 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_sprintf
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function ___lwdiv
  1806  04D3                     ___lwdiv:	
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1810  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1811  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1812  04D5  01CD               	clrf	___lwdiv@quotient
  1813  04D6  01CE               	clrf	___lwdiv@quotient+1
  1814  04D7  0873               	movf	___lwdiv@divisor,w
  1815  04D8  0474               	iorwf	___lwdiv@divisor+1,w
  1816  04D9  1903               	btfsc	3,2
  1817  04DA  2D0C               	goto	l1963
  1818  04DB  01CC               	clrf	___lwdiv@counter
  1819  04DC  0ACC               	incf	___lwdiv@counter,f
  1820  04DD                     l1951:	
  1821  04DD  1BF4               	btfsc	___lwdiv@divisor+1,7
  1822  04DE  2CEB               	goto	l1953
  1823  04DF  3001               	movlw	1
  1824  04E0                     u925:	
  1825  04E0  1003               	clrc
  1826  04E1  0DF3               	rlf	___lwdiv@divisor,f
  1827  04E2  0DF4               	rlf	___lwdiv@divisor+1,f
  1828  04E3  3EFF               	addlw	-1
  1829  04E4  1D03               	skipz
  1830  04E5  2CE0               	goto	u925
  1831  04E6  3001               	movlw	1
  1832  04E7  00F7               	movwf	??___lwdiv
  1833  04E8  0877               	movf	??___lwdiv,w
  1834  04E9  07CC               	addwf	___lwdiv@counter,f
  1835  04EA  2CDD               	goto	l1951
  1836  04EB                     l1953:	
  1837  04EB  3001               	movlw	1
  1838  04EC                     u945:	
  1839  04EC  1003               	clrc
  1840  04ED  0DCD               	rlf	___lwdiv@quotient,f
  1841  04EE  0DCE               	rlf	___lwdiv@quotient+1,f
  1842  04EF  3EFF               	addlw	-1
  1843  04F0  1D03               	skipz
  1844  04F1  2CEC               	goto	u945
  1845  04F2  0874               	movf	___lwdiv@divisor+1,w
  1846  04F3  0276               	subwf	___lwdiv@dividend+1,w
  1847  04F4  1D03               	skipz
  1848  04F5  2CF8               	goto	u955
  1849  04F6  0873               	movf	___lwdiv@divisor,w
  1850  04F7  0275               	subwf	___lwdiv@dividend,w
  1851  04F8                     u955:	
  1852  04F8  1C03               	skipc
  1853  04F9  2D01               	goto	l1959
  1854  04FA  0873               	movf	___lwdiv@divisor,w
  1855  04FB  02F5               	subwf	___lwdiv@dividend,f
  1856  04FC  0874               	movf	___lwdiv@divisor+1,w
  1857  04FD  1C03               	skipc
  1858  04FE  03F6               	decf	___lwdiv@dividend+1,f
  1859  04FF  02F6               	subwf	___lwdiv@dividend+1,f
  1860  0500  144D               	bsf	___lwdiv@quotient,0
  1861  0501                     l1959:	
  1862  0501  3001               	movlw	1
  1863  0502                     u965:	
  1864  0502  1003               	clrc
  1865  0503  0CF4               	rrf	___lwdiv@divisor+1,f
  1866  0504  0CF3               	rrf	___lwdiv@divisor,f
  1867  0505  3EFF               	addlw	-1
  1868  0506  1D03               	skipz
  1869  0507  2D02               	goto	u965
  1870  0508  3001               	movlw	1
  1871  0509  02CC               	subwf	___lwdiv@counter,f
  1872  050A  1D03               	btfss	3,2
  1873  050B  2CEB               	goto	l1953
  1874  050C                     l1963:	
  1875  050C  084E               	movf	___lwdiv@quotient+1,w
  1876  050D  00F4               	movwf	?___lwdiv+1
  1877  050E  084D               	movf	___lwdiv@quotient,w
  1878  050F  00F3               	movwf	?___lwdiv
  1879  0510  0008               	return
  1880  0511                     __end_of___lwdiv:	
  1881                           
  1882                           	psect	text4
  1883  036B                     __ptext4:	
  1884 ;; *************** function _setup *****************
  1885 ;; Defined at:
  1886 ;;		line 55 in file "main.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1900 ;;      Params:         0       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0
  1902 ;;      Temps:          0       3       0       0       0
  1903 ;;      Totals:         0       3       0       0       0
  1904 ;;Total ram usage:        3 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    4
  1907 ;; This function calls:
  1908 ;;		_I2C_Master_Init
  1909 ;;		_LCD8_begin
  1910 ;;		_LCD8_set_cursor
  1911 ;;		_LCD8_strWrite
  1912 ;;		_oscilator_begin
  1913 ;;		_timer1_begin
  1914 ;;		_write_ds1307
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _setup
  1922  036B                     _setup:	
  1923                           
  1924                           ;main.c: 57:     oscilator_begin(7);
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1928  036B  3007               	movlw	7
  1929  036C  120A  118A  26A6  120A  118A  	fcall	_oscilator_begin
  1930                           
  1931                           ;main.c: 58:     I2C_Master_Init(100000);
  1932  0371  3000               	movlw	0
  1933  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0374  00DC               	movwf	I2C_Master_Init@c+3
  1936  0375  3001               	movlw	1
  1937  0376  00DB               	movwf	I2C_Master_Init@c+2
  1938  0377  3086               	movlw	134
  1939  0378  00DA               	movwf	I2C_Master_Init@c+1
  1940  0379  30A0               	movlw	160
  1941  037A  00D9               	movwf	I2C_Master_Init@c
  1942  037B  120A  118A  254B  120A  118A  	fcall	_I2C_Master_Init
  1943                           
  1944                           ;main.c: 60:     TRISA = 0;
  1945  0380  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0381  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0382  0185               	clrf	5	;volatile
  1948                           
  1949                           ;main.c: 61:     ANSEL = 0;
  1950  0383  1683               	bsf	3,5	;RP0=1, select bank3
  1951  0384  1703               	bsf	3,6	;RP1=1, select bank3
  1952  0385  0188               	clrf	8	;volatile
  1953                           
  1954                           ;main.c: 63:     LCD8_begin();
  1955  0386  120A  118A  2440  120A  118A  	fcall	_LCD8_begin
  1956                           
  1957                           ;main.c: 65:     timer1_begin(0,3);
  1958  038B  3003               	movlw	3
  1959  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1960  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1961  038E  00DD               	movwf	??_setup
  1962  038F  085D               	movf	??_setup,w
  1963  0390  00F3               	movwf	timer1_begin@prescaler
  1964  0391  3000               	movlw	0
  1965  0392  120A  118A  2637  120A  118A  	fcall	_timer1_begin
  1966                           
  1967                           ;main.c: 66:     LCD8_set_cursor(1,1);
  1968  0397  01F6               	clrf	LCD8_set_cursor@column
  1969  0398  0AF6               	incf	LCD8_set_cursor@column,f
  1970  0399  3001               	movlw	1
  1971  039A  120A  118A  2657  120A  118A  	fcall	_LCD8_set_cursor
  1972                           
  1973                           ;main.c: 67:             LCD8_strWrite("Si pudo");
  1974  039F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1975  03A0  00F5               	movwf	LCD8_strWrite@data
  1976  03A1  3080               	movlw	128
  1977  03A2  00F6               	movwf	LCD8_strWrite@data+1
  1978  03A3  120A  118A  25E5  120A  118A  	fcall	_LCD8_strWrite
  1979                           
  1980                           ;main.c: 68:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1981  03A8  300B               	movlw	11
  1982  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1983  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1984  03AB  00DF               	movwf	??_setup+2
  1985  03AC  3026               	movlw	38
  1986  03AD  00DE               	movwf	??_setup+1
  1987  03AE  305D               	movlw	93
  1988  03AF  00DD               	movwf	??_setup
  1989  03B0                     u1087:	
  1990  03B0  0BDD               	decfsz	??_setup,f
  1991  03B1  2BB0               	goto	u1087
  1992  03B2  0BDE               	decfsz	??_setup+1,f
  1993  03B3  2BB0               	goto	u1087
  1994  03B4  0BDF               	decfsz	??_setup+2,f
  1995  03B5  2BB0               	goto	u1087
  1996                           
  1997                           ;main.c: 69:             write_ds1307(0, 0x0);
  1998  03B6  3000               	movlw	0
  1999  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2000  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2001  03B9  00CC               	movwf	write_ds1307@address
  2002  03BA  00CD               	movwf	write_ds1307@address+1
  2003  03BB  3000               	movlw	0
  2004  03BC  00CE               	movwf	write_ds1307@w_data
  2005  03BD  00CF               	movwf	write_ds1307@w_data+1
  2006  03BE  120A  118A  260F  120A  118A  	fcall	_write_ds1307
  2007                           
  2008                           ;main.c: 70:     write_ds1307(1, 0x6);
  2009  03C3  3001               	movlw	1
  2010  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2011  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2012  03C6  00CC               	movwf	write_ds1307@address
  2013  03C7  3000               	movlw	0
  2014  03C8  00CD               	movwf	write_ds1307@address+1
  2015  03C9  3006               	movlw	6
  2016  03CA  00CE               	movwf	write_ds1307@w_data
  2017  03CB  3000               	movlw	0
  2018  03CC  00CF               	movwf	write_ds1307@w_data+1
  2019  03CD  120A  118A  260F  120A  118A  	fcall	_write_ds1307
  2020                           
  2021                           ;main.c: 71:     write_ds1307(2, 0x11);
  2022  03D2  3002               	movlw	2
  2023  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2024  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2025  03D5  00CC               	movwf	write_ds1307@address
  2026  03D6  3000               	movlw	0
  2027  03D7  00CD               	movwf	write_ds1307@address+1
  2028  03D8  3011               	movlw	17
  2029  03D9  00CE               	movwf	write_ds1307@w_data
  2030  03DA  3000               	movlw	0
  2031  03DB  00CF               	movwf	write_ds1307@w_data+1
  2032  03DC  120A  118A  260F   	fcall	_write_ds1307
  2033  03DF  0008               	return
  2034  03E0                     __end_of_setup:	
  2035                           
  2036                           	psect	text5
  2037  060F                     __ptext5:	
  2038 ;; *************** function _write_ds1307 *****************
  2039 ;; Defined at:
  2040 ;;		line 30 in file "./rtc.h"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  address         2    0[BANK0 ] short 
  2043 ;;  w_data          2    2[BANK0 ] short 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, pclath, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2055 ;;      Params:         0       4       0       0       0
  2056 ;;      Locals:         0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0
  2058 ;;      Totals:         0       4       0       0       0
  2059 ;;Total ram usage:        4 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    3
  2062 ;; This function calls:
  2063 ;;		_I2C_Master_Start
  2064 ;;		_I2C_Master_Stop
  2065 ;;		_I2C_Master_Write
  2066 ;; This function is called by:
  2067 ;;		_setup
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _write_ds1307
  2073  060F                     _write_ds1307:	
  2074                           
  2075                           ;./rtc.h: 30: void write_ds1307(short address, short w_data);./rtc.h: 31: {;./rtc.h: 32:
      +                             I2C_Master_Start();
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  2079  060F  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
  2080                           
  2081                           ;./rtc.h: 34:   I2C_Master_Write(0xD0);
  2082  0614  30D0               	movlw	208
  2083  0615  00F3               	movwf	I2C_Master_Write@d
  2084  0616  3000               	movlw	0
  2085  0617  00F4               	movwf	I2C_Master_Write@d+1
  2086  0618  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  2087                           
  2088                           ;./rtc.h: 35:   I2C_Master_Write(address);
  2089  061D  1283               	bcf	3,5	;RP0=0, select bank0
  2090  061E  1303               	bcf	3,6	;RP1=0, select bank0
  2091  061F  084D               	movf	write_ds1307@address+1,w
  2092  0620  00F4               	movwf	I2C_Master_Write@d+1
  2093  0621  084C               	movf	write_ds1307@address,w
  2094  0622  00F3               	movwf	I2C_Master_Write@d
  2095  0623  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  2096                           
  2097                           ;./rtc.h: 36:   I2C_Master_Write(w_data);
  2098  0628  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0629  1303               	bcf	3,6	;RP1=0, select bank0
  2100  062A  084F               	movf	write_ds1307@w_data+1,w
  2101  062B  00F4               	movwf	I2C_Master_Write@d+1
  2102  062C  084E               	movf	write_ds1307@w_data,w
  2103  062D  00F3               	movwf	I2C_Master_Write@d
  2104  062E  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  2105                           
  2106                           ;./rtc.h: 37:   I2C_Master_Stop();
  2107  0633  120A  118A  26D8   	fcall	_I2C_Master_Stop
  2108  0636  0008               	return
  2109  0637                     __end_of_write_ds1307:	
  2110                           
  2111                           	psect	text6
  2112  0637                     __ptext6:	
  2113 ;; *************** function _timer1_begin *****************
  2114 ;; Defined at:
  2115 ;;		line 8 in file "timer1.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  offset          1    wreg     unsigned char 
  2118 ;;  prescaler       1    3[COMMON] unsigned char 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  offset          1    6[COMMON] unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         1       0       0       0       0
  2131 ;;      Locals:         1       0       0       0       0
  2132 ;;      Temps:          2       0       0       0       0
  2133 ;;      Totals:         4       0       0       0       0
  2134 ;;Total ram usage:        4 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    1
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_setup
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _timer1_begin
  2146  0637                     _timer1_begin:	
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _timer1_begin: [wreg+status,2+status,0]
  2150                           ;timer1_begin@offset stored from wreg
  2151  0637  00F6               	movwf	timer1_begin@offset
  2152                           
  2153                           ;timer1.c: 8: timer1_begin(uint8_t offset, uint8_t prescaler);timer1.c: 9:     {;timer1.
      +                          c: 10:     T1CONbits.T1GINV = 0;
  2154  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2156  063A  1390               	bcf	16,7	;volatile
  2157                           
  2158                           ;timer1.c: 11:     T1CONbits.TMR1GE = 0;
  2159  063B  1310               	bcf	16,6	;volatile
  2160                           
  2161                           ;timer1.c: 12:     T1CONbits.T1CKPS = prescaler;
  2162  063C  0873               	movf	timer1_begin@prescaler,w
  2163  063D  00F4               	movwf	??_timer1_begin
  2164  063E  0EF4               	swapf	??_timer1_begin,f
  2165  063F  0810               	movf	16,w	;volatile
  2166  0640  0674               	xorwf	??_timer1_begin,w
  2167  0641  39CF               	andlw	-49
  2168  0642  0674               	xorwf	??_timer1_begin,w
  2169  0643  0090               	movwf	16	;volatile
  2170                           
  2171                           ;timer1.c: 13:     T1CONbits.T1OSCEN = 0;
  2172  0644  1190               	bcf	16,3	;volatile
  2173                           
  2174                           ;timer1.c: 14:     T1CONbits.TMR1CS = 0;
  2175  0645  1090               	bcf	16,1	;volatile
  2176                           
  2177                           ;timer1.c: 15:     T1CONbits.TMR1ON = 1;
  2178  0646  1410               	bsf	16,0	;volatile
  2179                           
  2180                           ;timer1.c: 17:     INTCONbits.PEIE = 1;
  2181  0647  170B               	bsf	11,6	;volatile
  2182                           
  2183                           ;timer1.c: 18:     PIR1bits.TMR1IF = 0;
  2184  0648  100C               	bcf	12,0	;volatile
  2185                           
  2186                           ;timer1.c: 19:     PIE1bits.TMR1IE = 1;
  2187  0649  1683               	bsf	3,5	;RP0=1, select bank1
  2188  064A  1303               	bcf	3,6	;RP1=0, select bank1
  2189  064B  140C               	bsf	12,0	;volatile
  2190                           
  2191                           ;timer1.c: 20:     INTCONbits.GIE = 1;
  2192  064C  178B               	bsf	11,7	;volatile
  2193                           
  2194                           ;timer1.c: 21:     TMR1 = offset;
  2195  064D  0876               	movf	timer1_begin@offset,w
  2196  064E  00F4               	movwf	??_timer1_begin
  2197  064F  01F5               	clrf	??_timer1_begin+1
  2198  0650  0874               	movf	??_timer1_begin,w
  2199  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0653  008E               	movwf	14	;volatile
  2202  0654  0875               	movf	??_timer1_begin+1,w
  2203  0655  008F               	movwf	15	;volatile
  2204  0656  0008               	return
  2205  0657                     __end_of_timer1_begin:	
  2206                           
  2207                           	psect	text7
  2208  06A6                     __ptext7:	
  2209 ;; *************** function _oscilator_begin *****************
  2210 ;; Defined at:
  2211 ;;		line 9 in file "./Oscilator.h"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  freq            1    wreg     unsigned char 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  freq            1    4[COMMON] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       0       0       0       0
  2226 ;;      Locals:         1       0       0       0       0
  2227 ;;      Temps:          1       0       0       0       0
  2228 ;;      Totals:         2       0       0       0       0
  2229 ;;Total ram usage:        2 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_setup
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _oscilator_begin
  2241  06A6                     _oscilator_begin:	
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
  2245                           ;oscilator_begin@freq stored from wreg
  2246  06A6  00F4               	movwf	oscilator_begin@freq
  2247                           
  2248                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
  2249  06A7  0874               	movf	oscilator_begin@freq,w
  2250  06A8  00F3               	movwf	??_oscilator_begin
  2251  06A9  0EF3               	swapf	??_oscilator_begin,f
  2252  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  2253  06AB  1303               	bcf	3,6	;RP1=0, select bank1
  2254  06AC  080F               	movf	15,w	;volatile
  2255  06AD  0673               	xorwf	??_oscilator_begin,w
  2256  06AE  398F               	andlw	-113
  2257  06AF  0673               	xorwf	??_oscilator_begin,w
  2258  06B0  008F               	movwf	15	;volatile
  2259                           
  2260                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
  2261  06B1  140F               	bsf	15,0	;volatile
  2262                           
  2263                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
  2264  06B2  118F               	bcf	15,3	;volatile
  2265  06B3  0008               	return
  2266  06B4                     __end_of_oscilator_begin:	
  2267                           
  2268                           	psect	text8
  2269  05E5                     __ptext8:	
  2270 ;; *************** function _LCD8_strWrite *****************
  2271 ;; Defined at:
  2272 ;;		line 55 in file "./LCD8bit.h"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  data            2    5[COMMON] PTR unsigned char 
  2275 ;;		 -> show(20), STR_1(8), 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  i               1    0[BANK0 ] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2287 ;;      Params:         2       0       0       0       0
  2288 ;;      Locals:         0       1       0       0       0
  2289 ;;      Temps:          1       0       0       0       0
  2290 ;;      Totals:         3       1       0       0       0
  2291 ;;Total ram usage:        4 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    2
  2294 ;; This function calls:
  2295 ;;		_LCD8_write
  2296 ;; This function is called by:
  2297 ;;		_setup
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           
  2303                           ;psect for function _LCD8_strWrite
  2304  05E5                     _LCD8_strWrite:	
  2305                           
  2306                           ;./LCD8bit.h: 56:     char i;;./LCD8bit.h: 57:         for(i=0; data[i] !='\0';i++ )
  2307                           
  2308                           ;incstack = 0
  2309                           ; Regs used in _LCD8_strWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2310  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2311  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2312  05E7  01CC               	clrf	LCD8_strWrite@i
  2313  05E8                     l1939:	
  2314  05E8  084C               	movf	LCD8_strWrite@i,w
  2315  05E9  0775               	addwf	LCD8_strWrite@data,w
  2316  05EA  0084               	movwf	4
  2317  05EB  0876               	movf	LCD8_strWrite@data+1,w
  2318  05EC  1803               	skipnc
  2319  05ED  0A76               	incf	LCD8_strWrite@data+1,w
  2320  05EE  00FF               	movwf	127
  2321  05EF  120A  118A  2511  120A  118A  	fcall	stringtab
  2322  05F4  3A00               	xorlw	0
  2323  05F5  1903               	btfsc	3,2
  2324  05F6  0008               	return
  2325                           
  2326                           ;./LCD8bit.h: 58:             LCD8_write(data[i]);
  2327  05F7  084C               	movf	LCD8_strWrite@i,w
  2328  05F8  0775               	addwf	LCD8_strWrite@data,w
  2329  05F9  0084               	movwf	4
  2330  05FA  0876               	movf	LCD8_strWrite@data+1,w
  2331  05FB  1803               	skipnc
  2332  05FC  0A76               	incf	LCD8_strWrite@data+1,w
  2333  05FD  00FF               	movwf	127
  2334  05FE  120A  118A  2511  120A  118A  	fcall	stringtab
  2335  0603  120A  118A  2696  120A  118A  	fcall	_LCD8_write
  2336  0608  3001               	movlw	1
  2337  0609  00F7               	movwf	??_LCD8_strWrite
  2338  060A  0877               	movf	??_LCD8_strWrite,w
  2339  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2340  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2341  060D  07CC               	addwf	LCD8_strWrite@i,f
  2342  060E  2DE8               	goto	l1939
  2343  060F                     __end_of_LCD8_strWrite:	
  2344                           
  2345                           	psect	text9
  2346  0696                     __ptext9:	
  2347 ;; *************** function _LCD8_write *****************
  2348 ;; Defined at:
  2349 ;;		line 4 in file "./LCD8bit.h"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  data            1    wreg     unsigned char 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  data            1    4[COMMON] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       0       0       0       0
  2364 ;;      Locals:         1       0       0       0       0
  2365 ;;      Temps:          1       0       0       0       0
  2366 ;;      Totals:         2       0       0       0       0
  2367 ;;Total ram usage:        2 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    1
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_LCD8_strWrite
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _LCD8_write
  2379  0696                     _LCD8_write:	
  2380                           
  2381                           ;incstack = 0
  2382                           ; Regs used in _LCD8_write: [wreg]
  2383                           ;LCD8_write@data stored from wreg
  2384  0696  00F4               	movwf	LCD8_write@data
  2385                           
  2386                           ;./LCD8bit.h: 5:     RA0 = 1;
  2387  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0699  1405               	bsf	5,0	;volatile
  2390                           
  2391                           ;./LCD8bit.h: 6:     PORTB = data;
  2392  069A  0874               	movf	LCD8_write@data,w
  2393  069B  0086               	movwf	6	;volatile
  2394                           
  2395                           ;./LCD8bit.h: 7:     RA1 = 1;
  2396  069C  1485               	bsf	5,1	;volatile
  2397                           
  2398                           ;./LCD8bit.h: 8:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2399  069D  301A               	movlw	26
  2400  069E  00F3               	movwf	??_LCD8_write
  2401  069F                     u1097:	
  2402  069F  0BF3               	decfsz	??_LCD8_write,f
  2403  06A0  2E9F               	goto	u1097
  2404  06A1  0000               	nop
  2405                           
  2406                           ;./LCD8bit.h: 9:     RA1 = 0;
  2407  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2408  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2409  06A4  1085               	bcf	5,1	;volatile
  2410  06A5  0008               	return
  2411  06A6                     __end_of_LCD8_write:	
  2412                           
  2413                           	psect	text10
  2414  0657                     __ptext10:	
  2415 ;; *************** function _LCD8_set_cursor *****************
  2416 ;; Defined at:
  2417 ;;		line 21 in file "./LCD8bit.h"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  row             1    wreg     unsigned char 
  2420 ;;  column          1    6[COMMON] unsigned char 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  row             1    1[BANK0 ] unsigned char 
  2423 ;;  cursor          1    0[BANK0 ] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         1       0       0       0       0
  2434 ;;      Locals:         0       2       0       0       0
  2435 ;;      Temps:          1       0       0       0       0
  2436 ;;      Totals:         2       2       0       0       0
  2437 ;;Total ram usage:        4 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    2
  2440 ;; This function calls:
  2441 ;;		_LCD8_cmd
  2442 ;; This function is called by:
  2443 ;;		_setup
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _LCD8_set_cursor
  2450  0657                     _LCD8_set_cursor:	
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _LCD8_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  2454                           ;LCD8_set_cursor@row stored from wreg
  2455  0657  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0658  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0659  00CD               	movwf	LCD8_set_cursor@row
  2458                           
  2459                           ;./LCD8bit.h: 22:     char cursor;;./LCD8bit.h: 24:         if(row==1)
  2460  065A  034D               	decf	LCD8_set_cursor@row,w
  2461  065B  1D03               	btfss	3,2
  2462  065C  2E62               	goto	l105
  2463                           
  2464                           ;./LCD8bit.h: 25:             cursor = 128 + column -1;
  2465  065D  0876               	movf	LCD8_set_cursor@column,w
  2466  065E  3E7F               	addlw	127
  2467  065F  00F7               	movwf	??_LCD8_set_cursor
  2468  0660  0877               	movf	??_LCD8_set_cursor,w
  2469  0661  00CC               	movwf	LCD8_set_cursor@cursor
  2470  0662                     l105:	
  2471                           
  2472                           ;./LCD8bit.h: 26:         if (row==2)
  2473  0662  3002               	movlw	2
  2474  0663  064D               	xorwf	LCD8_set_cursor@row,w
  2475  0664  1D03               	btfss	3,2
  2476  0665  2E6B               	goto	l1903
  2477                           
  2478                           ;./LCD8bit.h: 27:             cursor = 192 + column -1;
  2479  0666  0876               	movf	LCD8_set_cursor@column,w
  2480  0667  3EBF               	addlw	191
  2481  0668  00F7               	movwf	??_LCD8_set_cursor
  2482  0669  0877               	movf	??_LCD8_set_cursor,w
  2483  066A  00CC               	movwf	LCD8_set_cursor@cursor
  2484  066B                     l1903:	
  2485                           
  2486                           ;./LCD8bit.h: 29:         LCD8_cmd(cursor);
  2487  066B  084C               	movf	LCD8_set_cursor@cursor,w
  2488  066C  120A  118A  2670   	fcall	_LCD8_cmd
  2489  066F  0008               	return
  2490  0670                     __end_of_LCD8_set_cursor:	
  2491                           
  2492                           	psect	text11
  2493  0440                     __ptext11:	
  2494 ;; *************** function _LCD8_begin *****************
  2495 ;; Defined at:
  2496 ;;		line 37 in file "./LCD8bit.h"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0
  2512 ;;      Temps:          2       0       0       0       0
  2513 ;;      Totals:         2       0       0       0       0
  2514 ;;Total ram usage:        2 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    2
  2517 ;; This function calls:
  2518 ;;		_LCD8_cmd
  2519 ;; This function is called by:
  2520 ;;		_setup
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _LCD8_begin
  2526  0440                     _LCD8_begin:	
  2527                           
  2528                           ;./LCD8bit.h: 38:     PORTB = 0;
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _LCD8_begin: [wreg+status,2+status,0+pclath+cstack]
  2532  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0442  0186               	clrf	6	;volatile
  2535                           
  2536                           ;./LCD8bit.h: 39:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2537  0443  3034               	movlw	52
  2538  0444  00F7               	movwf	??_LCD8_begin+1
  2539  0445  30F1               	movlw	241
  2540  0446  00F6               	movwf	??_LCD8_begin
  2541  0447                     u1107:	
  2542  0447  0BF6               	decfsz	??_LCD8_begin,f
  2543  0448  2C47               	goto	u1107
  2544  0449  0BF7               	decfsz	??_LCD8_begin+1,f
  2545  044A  2C47               	goto	u1107
  2546  044B  2C4C               	nop2
  2547                           
  2548                           ;./LCD8bit.h: 40:     LCD8_cmd(48);
  2549  044C  3030               	movlw	48
  2550  044D  120A  118A  2670  120A  118A  	fcall	_LCD8_cmd
  2551                           
  2552                           ;./LCD8bit.h: 41:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2553  0452  300D               	movlw	13
  2554  0453  00F7               	movwf	??_LCD8_begin+1
  2555  0454  30FB               	movlw	251
  2556  0455  00F6               	movwf	??_LCD8_begin
  2557  0456                     u1117:	
  2558  0456  0BF6               	decfsz	??_LCD8_begin,f
  2559  0457  2C56               	goto	u1117
  2560  0458  0BF7               	decfsz	??_LCD8_begin+1,f
  2561  0459  2C56               	goto	u1117
  2562  045A  2C5B               	nop2
  2563                           
  2564                           ;./LCD8bit.h: 42:     LCD8_cmd(48);
  2565  045B  3030               	movlw	48
  2566  045C  120A  118A  2670  120A  118A  	fcall	_LCD8_cmd
  2567                           
  2568                           ;./LCD8bit.h: 43:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  2569  0461  306D               	movlw	109
  2570  0462  00F6               	movwf	??_LCD8_begin
  2571  0463                     u1127:	
  2572  0463  0BF6               	decfsz	??_LCD8_begin,f
  2573  0464  2C63               	goto	u1127
  2574  0465  2C66               	nop2
  2575                           
  2576                           ;./LCD8bit.h: 44:     LCD8_cmd(48);
  2577  0466  3030               	movlw	48
  2578  0467  120A  118A  2670  120A  118A  	fcall	_LCD8_cmd
  2579                           
  2580                           ;./LCD8bit.h: 45:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  2581  046C  306D               	movlw	109
  2582  046D  00F6               	movwf	??_LCD8_begin
  2583  046E                     u1137:	
  2584  046E  0BF6               	decfsz	??_LCD8_begin,f
  2585  046F  2C6E               	goto	u1137
  2586  0470  2C71               	nop2
  2587                           
  2588                           ;./LCD8bit.h: 47:     LCD8_cmd(0b111000);
  2589  0471  3038               	movlw	56
  2590  0472  120A  118A  2670  120A  118A  	fcall	_LCD8_cmd
  2591                           
  2592                           ;./LCD8bit.h: 48:     LCD8_cmd(0b10100);
  2593  0477  3014               	movlw	20
  2594  0478  120A  118A  2670  120A  118A  	fcall	_LCD8_cmd
  2595                           
  2596                           ;./LCD8bit.h: 49:     LCD8_cmd(1);
  2597  047D  3001               	movlw	1
  2598  047E  120A  118A  2670  120A  118A  	fcall	_LCD8_cmd
  2599                           
  2600                           ;./LCD8bit.h: 50:     LCD8_cmd(0b110);
  2601  0483  3006               	movlw	6
  2602  0484  120A  118A  2670  120A  118A  	fcall	_LCD8_cmd
  2603                           
  2604                           ;./LCD8bit.h: 51:     LCD8_cmd(0b1100);
  2605  0489  300C               	movlw	12
  2606  048A  120A  118A  2670  120A  118A  	fcall	_LCD8_cmd
  2607                           
  2608                           ;./LCD8bit.h: 52:     LCD8_cmd(0b10);
  2609  048F  3002               	movlw	2
  2610  0490  120A  118A  2670   	fcall	_LCD8_cmd
  2611  0493  0008               	return
  2612  0494                     __end_of_LCD8_begin:	
  2613                           
  2614                           	psect	text12
  2615  054B                     __ptext12:	
  2616 ;; *************** function _I2C_Master_Init *****************
  2617 ;; Defined at:
  2618 ;;		line 15 in file "./I2C.h"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  c               4   13[BANK0 ] const unsigned long 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, pclath, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       4       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          4       0       0       0       0
  2635 ;;      Totals:         4       4       0       0       0
  2636 ;;Total ram usage:        8 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    2
  2639 ;; This function calls:
  2640 ;;		___lldiv
  2641 ;; This function is called by:
  2642 ;;		_setup
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function _I2C_Master_Init
  2648  054B                     _I2C_Master_Init:	
  2649                           
  2650                           ;./I2C.h: 15: void I2C_Master_Init(const unsigned long c);./I2C.h: 16: {;./I2C.h: 17:   
      +                            SSPCON = 0b00101000;
  2651                           
  2652                           ;incstack = 0
  2653                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2654  054B  3028               	movlw	40
  2655  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2656  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2657  054E  0094               	movwf	20	;volatile
  2658                           
  2659                           ;./I2C.h: 18:     SSPCON2 = 0;
  2660  054F  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0550  1303               	bcf	3,6	;RP1=0, select bank1
  2662  0551  0191               	clrf	17	;volatile
  2663                           
  2664                           ;./I2C.h: 19:     SSPADD = (8000000/(4*c))-1;
  2665  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2666  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2667  0554  0859               	movf	I2C_Master_Init@c,w
  2668  0555  00F4               	movwf	??_I2C_Master_Init
  2669  0556  085A               	movf	I2C_Master_Init@c+1,w
  2670  0557  00F5               	movwf	??_I2C_Master_Init+1
  2671  0558  085B               	movf	I2C_Master_Init@c+2,w
  2672  0559  00F6               	movwf	??_I2C_Master_Init+2
  2673  055A  085C               	movf	I2C_Master_Init@c+3,w
  2674  055B  00F7               	movwf	??_I2C_Master_Init+3
  2675  055C  3002               	movlw	2
  2676  055D                     u865:	
  2677  055D  1003               	clrc
  2678  055E  0DF4               	rlf	??_I2C_Master_Init,f
  2679  055F  0DF5               	rlf	??_I2C_Master_Init+1,f
  2680  0560  0DF6               	rlf	??_I2C_Master_Init+2,f
  2681  0561  0DF7               	rlf	??_I2C_Master_Init+3,f
  2682  0562  3EFF               	addlw	-1
  2683  0563  1D03               	skipz
  2684  0564  2D5D               	goto	u865
  2685  0565  0877               	movf	??_I2C_Master_Init+3,w
  2686  0566  00CF               	movwf	___lldiv@divisor+3
  2687  0567  0876               	movf	??_I2C_Master_Init+2,w
  2688  0568  00CE               	movwf	___lldiv@divisor+2
  2689  0569  0875               	movf	??_I2C_Master_Init+1,w
  2690  056A  00CD               	movwf	___lldiv@divisor+1
  2691  056B  0874               	movf	??_I2C_Master_Init,w
  2692  056C  00CC               	movwf	___lldiv@divisor
  2693  056D  3000               	movlw	0
  2694  056E  00D3               	movwf	___lldiv@dividend+3
  2695  056F  307A               	movlw	122
  2696  0570  00D2               	movwf	___lldiv@dividend+2
  2697  0571  3012               	movlw	18
  2698  0572  00D1               	movwf	___lldiv@dividend+1
  2699  0573  3000               	movlw	0
  2700  0574  00D0               	movwf	___lldiv@dividend
  2701  0575  120A  118A  23E0   	fcall	___lldiv
  2702  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2704  057A  084C               	movf	?___lldiv,w
  2705  057B  3EFF               	addlw	255
  2706  057C  1683               	bsf	3,5	;RP0=1, select bank1
  2707  057D  1303               	bcf	3,6	;RP1=0, select bank1
  2708  057E  0093               	movwf	19	;volatile
  2709                           
  2710                           ;./I2C.h: 20:     SSPSTAT = 0;
  2711  057F  0194               	clrf	20	;volatile
  2712                           
  2713                           ;./I2C.h: 21:     TRISC3 = 1;
  2714  0580  1587               	bsf	7,3	;volatile
  2715                           
  2716                           ;./I2C.h: 22:     TRISC4 = 1;
  2717  0581  1607               	bsf	7,4	;volatile
  2718  0582  0008               	return
  2719  0583                     __end_of_I2C_Master_Init:	
  2720                           
  2721                           	psect	text13
  2722  03E0                     __ptext13:	
  2723 ;; *************** function ___lldiv *****************
  2724 ;; Defined at:
  2725 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  divisor         4    0[BANK0 ] unsigned long 
  2728 ;;  dividend        4    4[BANK0 ] unsigned long 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  quotient        4    8[BANK0 ] unsigned long 
  2731 ;;  counter         1   12[BANK0 ] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  4    0[BANK0 ] unsigned long 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       8       0       0       0
  2742 ;;      Locals:         0       5       0       0       0
  2743 ;;      Temps:          1       0       0       0       0
  2744 ;;      Totals:         1      13       0       0       0
  2745 ;;Total ram usage:       14 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_I2C_Master_Init
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function ___lldiv
  2757  03E0                     ___lldiv:	
  2758                           
  2759                           ;incstack = 0
  2760                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2761  03E0  3000               	movlw	0
  2762  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2763  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2764  03E3  00D7               	movwf	___lldiv@quotient+3
  2765  03E4  3000               	movlw	0
  2766  03E5  00D6               	movwf	___lldiv@quotient+2
  2767  03E6  3000               	movlw	0
  2768  03E7  00D5               	movwf	___lldiv@quotient+1
  2769  03E8  3000               	movlw	0
  2770  03E9  00D4               	movwf	___lldiv@quotient
  2771  03EA  084F               	movf	___lldiv@divisor+3,w
  2772  03EB  044E               	iorwf	___lldiv@divisor+2,w
  2773  03EC  044D               	iorwf	___lldiv@divisor+1,w
  2774  03ED  044C               	iorwf	___lldiv@divisor,w
  2775  03EE  1903               	skipnz
  2776  03EF  2C37               	goto	l1859
  2777  03F0  01D8               	clrf	___lldiv@counter
  2778  03F1  0AD8               	incf	___lldiv@counter,f
  2779  03F2                     l1845:	
  2780  03F2  1BCF               	btfsc	___lldiv@divisor+3,7
  2781  03F3  2C02               	goto	l1847
  2782  03F4  3001               	movlw	1
  2783  03F5  00F3               	movwf	??___lldiv
  2784  03F6                     u805:	
  2785  03F6  1003               	clrc
  2786  03F7  0DCC               	rlf	___lldiv@divisor,f
  2787  03F8  0DCD               	rlf	___lldiv@divisor+1,f
  2788  03F9  0DCE               	rlf	___lldiv@divisor+2,f
  2789  03FA  0DCF               	rlf	___lldiv@divisor+3,f
  2790  03FB  0BF3               	decfsz	??___lldiv,f
  2791  03FC  2BF6               	goto	u805
  2792  03FD  3001               	movlw	1
  2793  03FE  00F3               	movwf	??___lldiv
  2794  03FF  0873               	movf	??___lldiv,w
  2795  0400  07D8               	addwf	___lldiv@counter,f
  2796  0401  2BF2               	goto	l1845
  2797  0402                     l1847:	
  2798  0402  3001               	movlw	1
  2799  0403  00F3               	movwf	??___lldiv
  2800  0404                     u825:	
  2801  0404  1003               	clrc
  2802  0405  0DD4               	rlf	___lldiv@quotient,f
  2803  0406  0DD5               	rlf	___lldiv@quotient+1,f
  2804  0407  0DD6               	rlf	___lldiv@quotient+2,f
  2805  0408  0DD7               	rlf	___lldiv@quotient+3,f
  2806  0409  0BF3               	decfsz	??___lldiv,f
  2807  040A  2C04               	goto	u825
  2808  040B  084F               	movf	___lldiv@divisor+3,w
  2809  040C  0253               	subwf	___lldiv@dividend+3,w
  2810  040D  1D03               	skipz
  2811  040E  2C19               	goto	u835
  2812  040F  084E               	movf	___lldiv@divisor+2,w
  2813  0410  0252               	subwf	___lldiv@dividend+2,w
  2814  0411  1D03               	skipz
  2815  0412  2C19               	goto	u835
  2816  0413  084D               	movf	___lldiv@divisor+1,w
  2817  0414  0251               	subwf	___lldiv@dividend+1,w
  2818  0415  1D03               	skipz
  2819  0416  2C19               	goto	u835
  2820  0417  084C               	movf	___lldiv@divisor,w
  2821  0418  0250               	subwf	___lldiv@dividend,w
  2822  0419                     u835:	
  2823  0419  1C03               	skipc
  2824  041A  2C2A               	goto	l1855
  2825  041B  084C               	movf	___lldiv@divisor,w
  2826  041C  02D0               	subwf	___lldiv@dividend,f
  2827  041D  084D               	movf	___lldiv@divisor+1,w
  2828  041E  1C03               	skipc
  2829  041F  0F4D               	incfsz	___lldiv@divisor+1,w
  2830  0420  02D1               	subwf	___lldiv@dividend+1,f
  2831  0421  084E               	movf	___lldiv@divisor+2,w
  2832  0422  1C03               	skipc
  2833  0423  0F4E               	incfsz	___lldiv@divisor+2,w
  2834  0424  02D2               	subwf	___lldiv@dividend+2,f
  2835  0425  084F               	movf	___lldiv@divisor+3,w
  2836  0426  1C03               	skipc
  2837  0427  0F4F               	incfsz	___lldiv@divisor+3,w
  2838  0428  02D3               	subwf	___lldiv@dividend+3,f
  2839  0429  1454               	bsf	___lldiv@quotient,0
  2840  042A                     l1855:	
  2841  042A  3001               	movlw	1
  2842  042B                     u845:	
  2843  042B  1003               	clrc
  2844  042C  0CCF               	rrf	___lldiv@divisor+3,f
  2845  042D  0CCE               	rrf	___lldiv@divisor+2,f
  2846  042E  0CCD               	rrf	___lldiv@divisor+1,f
  2847  042F  0CCC               	rrf	___lldiv@divisor,f
  2848  0430  3EFF               	addlw	-1
  2849  0431  1D03               	skipz
  2850  0432  2C2B               	goto	u845
  2851  0433  3001               	movlw	1
  2852  0434  02D8               	subwf	___lldiv@counter,f
  2853  0435  1D03               	btfss	3,2
  2854  0436  2C02               	goto	l1847
  2855  0437                     l1859:	
  2856  0437  0857               	movf	___lldiv@quotient+3,w
  2857  0438  00CF               	movwf	?___lldiv+3
  2858  0439  0856               	movf	___lldiv@quotient+2,w
  2859  043A  00CE               	movwf	?___lldiv+2
  2860  043B  0855               	movf	___lldiv@quotient+1,w
  2861  043C  00CD               	movwf	?___lldiv+1
  2862  043D  0854               	movf	___lldiv@quotient,w
  2863  043E  00CC               	movwf	?___lldiv
  2864  043F  0008               	return
  2865  0440                     __end_of___lldiv:	
  2866                           
  2867                           	psect	text14
  2868  0494                     __ptext14:	
  2869 ;; *************** function _read_DS1307 *****************
  2870 ;; Defined at:
  2871 ;;		line 17 in file "./rtc.h"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  direccion       2    2[BANK0 ] unsigned short 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  tiempo          2    4[BANK0 ] unsigned short 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  2    2[BANK0 ] unsigned short 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       2       0       0       0
  2886 ;;      Locals:         0       2       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         0       4       0       0       0
  2889 ;;Total ram usage:        4 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    3
  2892 ;; This function calls:
  2893 ;;		_I2C_Master_Read
  2894 ;;		_I2C_Master_RepeatedStart
  2895 ;;		_I2C_Master_Start
  2896 ;;		_I2C_Master_Stop
  2897 ;;		_I2C_Master_Write
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _read_DS1307
  2905  0494                     _read_DS1307:	
  2906                           
  2907                           ;./rtc.h: 17: unsigned short read_DS1307(unsigned short direccion);./rtc.h: 18: {;./rtc.
      +                          h: 19:     unsigned short tiempo;;./rtc.h: 20:     I2C_Master_Start();
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _read_DS1307: [wreg+status,2+status,0+pclath+cstack]
  2911  0494  120A  118A  26DF  120A  118A  	fcall	_I2C_Master_Start
  2912                           
  2913                           ;./rtc.h: 21:     I2C_Master_Write(0xD0);
  2914  0499  30D0               	movlw	208
  2915  049A  00F3               	movwf	I2C_Master_Write@d
  2916  049B  3000               	movlw	0
  2917  049C  00F4               	movwf	I2C_Master_Write@d+1
  2918  049D  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  2919                           
  2920                           ;./rtc.h: 22:     I2C_Master_Write(direccion);
  2921  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2922  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2923  04A4  084F               	movf	read_DS1307@direccion+1,w
  2924  04A5  00F4               	movwf	I2C_Master_Write@d+1
  2925  04A6  084E               	movf	read_DS1307@direccion,w
  2926  04A7  00F3               	movwf	I2C_Master_Write@d
  2927  04A8  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  2928                           
  2929                           ;./rtc.h: 23:     I2C_Master_RepeatedStart();
  2930  04AD  120A  118A  26E6  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2931                           
  2932                           ;./rtc.h: 24:     I2C_Master_Write(0xD1);
  2933  04B2  30D1               	movlw	209
  2934  04B3  00F3               	movwf	I2C_Master_Write@d
  2935  04B4  3000               	movlw	0
  2936  04B5  00F4               	movwf	I2C_Master_Write@d+1
  2937  04B6  120A  118A  26D0  120A  118A  	fcall	_I2C_Master_Write
  2938                           
  2939                           ;./rtc.h: 25:     tiempo = I2C_Master_Read(0);
  2940  04BB  3000               	movlw	0
  2941  04BC  00F3               	movwf	I2C_Master_Read@a
  2942  04BD  00F4               	movwf	I2C_Master_Read@a+1
  2943  04BE  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Read
  2944  04C3  0874               	movf	?_I2C_Master_Read+1,w
  2945  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2946  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2947  04C6  00D1               	movwf	read_DS1307@tiempo+1
  2948  04C7  0873               	movf	?_I2C_Master_Read,w
  2949  04C8  00D0               	movwf	read_DS1307@tiempo
  2950                           
  2951                           ;./rtc.h: 26:     I2C_Master_Stop();
  2952  04C9  120A  118A  26D8   	fcall	_I2C_Master_Stop
  2953                           
  2954                           ;./rtc.h: 27:     return(tiempo);
  2955  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2956  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2957  04CE  0851               	movf	read_DS1307@tiempo+1,w
  2958  04CF  00CF               	movwf	?_read_DS1307+1
  2959  04D0  0850               	movf	read_DS1307@tiempo,w
  2960  04D1  00CE               	movwf	?_read_DS1307
  2961  04D2  0008               	return
  2962  04D3                     __end_of_read_DS1307:	
  2963                           
  2964                           	psect	text15
  2965  06D0                     __ptext15:	
  2966 ;; *************** function _I2C_Master_Write *****************
  2967 ;; Defined at:
  2968 ;;		line 64 in file "./I2C.h"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  d               2    3[COMMON] unsigned int 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         2       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0
  2985 ;;      Totals:         2       0       0       0       0
  2986 ;;Total ram usage:        2 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    2
  2989 ;; This function calls:
  2990 ;;		_I2C_Master_Wait
  2991 ;; This function is called by:
  2992 ;;		_read_DS1307
  2993 ;;		_write_ds1307
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function _I2C_Master_Write
  3000  06D0                     _I2C_Master_Write:	
  3001                           
  3002                           ;./I2C.h: 64: void I2C_Master_Write(unsigned d);./I2C.h: 65: {;./I2C.h: 66:     I2C_Mast
      +                          er_Wait();
  3003                           
  3004                           ;incstack = 0
  3005                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3006  06D0  120A  118A  26BF   	fcall	_I2C_Master_Wait
  3007                           
  3008                           ;./I2C.h: 67:     SSPBUF = d;
  3009  06D3  0873               	movf	I2C_Master_Write@d,w
  3010  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3011  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3012  06D6  0093               	movwf	19	;volatile
  3013  06D7  0008               	return
  3014  06D8                     __end_of_I2C_Master_Write:	
  3015                           
  3016                           	psect	text16
  3017  06D8                     __ptext16:	
  3018 ;; *************** function _I2C_Master_Stop *****************
  3019 ;; Defined at:
  3020 ;;		line 54 in file "./I2C.h"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      void 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, pclath, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3034 ;;      Params:         0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    2
  3041 ;; This function calls:
  3042 ;;		_I2C_Master_Wait
  3043 ;; This function is called by:
  3044 ;;		_read_DS1307
  3045 ;;		_write_ds1307
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _I2C_Master_Stop
  3052  06D8                     _I2C_Master_Stop:	
  3053                           
  3054                           ;./I2C.h: 56:     I2C_Master_Wait();
  3055                           
  3056                           ;incstack = 0
  3057                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3058  06D8  120A  118A  26BF   	fcall	_I2C_Master_Wait
  3059                           
  3060                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
  3061  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  3062  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  3063  06DD  1511               	bsf	17,2	;volatile
  3064  06DE  0008               	return
  3065  06DF                     __end_of_I2C_Master_Stop:	
  3066                           
  3067                           	psect	text17
  3068  06DF                     __ptext17:	
  3069 ;; *************** function _I2C_Master_Start *****************
  3070 ;; Defined at:
  3071 ;;		line 38 in file "./I2C.h"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, pclath, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    2
  3092 ;; This function calls:
  3093 ;;		_I2C_Master_Wait
  3094 ;; This function is called by:
  3095 ;;		_read_DS1307
  3096 ;;		_write_ds1307
  3097 ;;		_main
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           
  3102                           ;psect for function _I2C_Master_Start
  3103  06DF                     _I2C_Master_Start:	
  3104                           
  3105                           ;./I2C.h: 40:     I2C_Master_Wait();
  3106                           
  3107                           ;incstack = 0
  3108                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3109  06DF  120A  118A  26BF   	fcall	_I2C_Master_Wait
  3110                           
  3111                           ;./I2C.h: 41:     SSPCON2bits.SEN = 1;
  3112  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  3113  06E3  1303               	bcf	3,6	;RP1=0, select bank1
  3114  06E4  1411               	bsf	17,0	;volatile
  3115  06E5  0008               	return
  3116  06E6                     __end_of_I2C_Master_Start:	
  3117                           
  3118                           	psect	text18
  3119  06E6                     __ptext18:	
  3120 ;; *************** function _I2C_Master_RepeatedStart *****************
  3121 ;; Defined at:
  3122 ;;		line 46 in file "./I2C.h"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0, pclath, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0
  3139 ;;      Totals:         0       0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    2
  3143 ;; This function calls:
  3144 ;;		_I2C_Master_Wait
  3145 ;; This function is called by:
  3146 ;;		_read_DS1307
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           
  3151                           ;psect for function _I2C_Master_RepeatedStart
  3152  06E6                     _I2C_Master_RepeatedStart:	
  3153                           
  3154                           ;./I2C.h: 48:     I2C_Master_Wait();
  3155                           
  3156                           ;incstack = 0
  3157                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3158  06E6  120A  118A  26BF   	fcall	_I2C_Master_Wait
  3159                           
  3160                           ;./I2C.h: 49:     SSPCON2bits.RSEN = 1;
  3161  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  3162  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  3163  06EB  1491               	bsf	17,1	;volatile
  3164  06EC  0008               	return
  3165  06ED                     __end_of_I2C_Master_RepeatedStart:	
  3166                           
  3167                           	psect	text19
  3168  05B7                     __ptext19:	
  3169 ;; *************** function _I2C_Master_Read *****************
  3170 ;; Defined at:
  3171 ;;		line 73 in file "./I2C.h"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  a               2    3[COMMON] unsigned short 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  temp            2    0[BANK0 ] unsigned short 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  2    3[COMMON] unsigned short 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         2       0       0       0       0
  3186 ;;      Locals:         0       2       0       0       0
  3187 ;;      Temps:          2       0       0       0       0
  3188 ;;      Totals:         4       2       0       0       0
  3189 ;;Total ram usage:        6 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    2
  3192 ;; This function calls:
  3193 ;;		_I2C_Master_Wait
  3194 ;; This function is called by:
  3195 ;;		_read_DS1307
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _I2C_Master_Read
  3202  05B7                     _I2C_Master_Read:	
  3203                           
  3204                           ;./I2C.h: 73: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 74: {;./I2C.h: 7
      +                          5:     unsigned short temp;;./I2C.h: 76:     I2C_Master_Wait();
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3208  05B7  120A  118A  26BF  120A  118A  	fcall	_I2C_Master_Wait
  3209                           
  3210                           ;./I2C.h: 77:     RCEN = 1;
  3211  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  3212  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  3213  05BE  1591               	bsf	17,3	;volatile
  3214                           
  3215                           ;./I2C.h: 78:     I2C_Master_Wait();
  3216  05BF  120A  118A  26BF  120A  118A  	fcall	_I2C_Master_Wait
  3217                           
  3218                           ;./I2C.h: 79:     temp = SSPBUF;
  3219  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3220  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3221  05C6  0813               	movf	19,w	;volatile
  3222  05C7  00F5               	movwf	??_I2C_Master_Read
  3223  05C8  01F6               	clrf	??_I2C_Master_Read+1
  3224  05C9  0875               	movf	??_I2C_Master_Read,w
  3225  05CA  00CC               	movwf	I2C_Master_Read@temp
  3226  05CB  0876               	movf	??_I2C_Master_Read+1,w
  3227  05CC  00CD               	movwf	I2C_Master_Read@temp+1
  3228                           
  3229                           ;./I2C.h: 80:     I2C_Master_Wait();
  3230  05CD  120A  118A  26BF  120A  118A  	fcall	_I2C_Master_Wait
  3231                           
  3232                           ;./I2C.h: 82:     if(a == 1){
  3233  05D2  0373               	decf	I2C_Master_Read@a,w
  3234  05D3  0474               	iorwf	I2C_Master_Read@a+1,w
  3235  05D4  1D03               	btfss	3,2
  3236  05D5  2DDA               	goto	l68
  3237                           
  3238                           ;./I2C.h: 83:         SSPCON2bits.ACKDT = 0;
  3239  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  3240  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  3241  05D8  1291               	bcf	17,5	;volatile
  3242                           
  3243                           ;./I2C.h: 84:     }else{
  3244  05D9  2DDD               	goto	l69
  3245  05DA                     l68:	
  3246                           
  3247                           ;./I2C.h: 85:         SSPCON2bits.ACKDT = 1;
  3248  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3249  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3250  05DC  1691               	bsf	17,5	;volatile
  3251  05DD                     l69:	
  3252                           ;./I2C.h: 86:     }
  3253                           
  3254                           
  3255                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  3256  05DD  1611               	bsf	17,4	;volatile
  3257                           
  3258                           ;./I2C.h: 88:     return temp;
  3259  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3260  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3261  05E0  084D               	movf	I2C_Master_Read@temp+1,w
  3262  05E1  00F4               	movwf	?_I2C_Master_Read+1
  3263  05E2  084C               	movf	I2C_Master_Read@temp,w
  3264  05E3  00F3               	movwf	?_I2C_Master_Read
  3265  05E4  0008               	return
  3266  05E5                     __end_of_I2C_Master_Read:	
  3267                           
  3268                           	psect	text20
  3269  06BF                     __ptext20:	
  3270 ;; *************** function _I2C_Master_Wait *****************
  3271 ;; Defined at:
  3272 ;;		line 31 in file "./I2C.h"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3286 ;;      Params:         0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0
  3289 ;;      Totals:         0       0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    1
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_I2C_Master_Start
  3297 ;;		_I2C_Master_RepeatedStart
  3298 ;;		_I2C_Master_Stop
  3299 ;;		_I2C_Master_Write
  3300 ;;		_I2C_Master_Read
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           
  3305                           ;psect for function _I2C_Master_Wait
  3306  06BF                     _I2C_Master_Wait:	
  3307  06BF                     l50:	
  3308                           ;./I2C.h: 33:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3312                           
  3313  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  3314  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  3315  06C1  1914               	btfsc	20,2	;volatile
  3316  06C2  2EBF               	goto	l50
  3317  06C3  0811               	movf	17,w	;volatile
  3318  06C4  391F               	andlw	31
  3319  06C5  1903               	btfsc	3,2
  3320  06C6  0008               	return
  3321  06C7  2EBF               	goto	l50
  3322  06C8                     __end_of_I2C_Master_Wait:	
  3323                           
  3324                           	psect	text21
  3325  06B4                     __ptext21:	
  3326 ;; *************** function _LCD8_clear *****************
  3327 ;; Defined at:
  3328 ;;		line 32 in file "./LCD8bit.h"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0, pclath, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0
  3345 ;;      Totals:         0       0       0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    2
  3349 ;; This function calls:
  3350 ;;		_LCD8_cmd
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function _LCD8_clear
  3358  06B4                     _LCD8_clear:	
  3359                           
  3360                           ;./LCD8bit.h: 33:     LCD8_cmd(0);
  3361                           
  3362                           ;incstack = 0
  3363                           ; Regs used in _LCD8_clear: [wreg+status,2+status,0+pclath+cstack]
  3364  06B4  3000               	movlw	0
  3365  06B5  120A  118A  2670  120A  118A  	fcall	_LCD8_cmd
  3366                           
  3367                           ;./LCD8bit.h: 34:     LCD8_cmd(1);
  3368  06BA  3001               	movlw	1
  3369  06BB  120A  118A  2670   	fcall	_LCD8_cmd
  3370  06BE  0008               	return
  3371  06BF                     __end_of_LCD8_clear:	
  3372                           
  3373                           	psect	text22
  3374  0670                     __ptext22:	
  3375 ;; *************** function _LCD8_cmd *****************
  3376 ;; Defined at:
  3377 ;;		line 12 in file "./LCD8bit.h"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  data            1    wreg     unsigned char 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  data            1    5[COMMON] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3391 ;;      Params:         0       0       0       0       0
  3392 ;;      Locals:         1       0       0       0       0
  3393 ;;      Temps:          2       0       0       0       0
  3394 ;;      Totals:         3       0       0       0       0
  3395 ;;Total ram usage:        3 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    1
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_LCD8_set_cursor
  3402 ;;		_LCD8_clear
  3403 ;;		_LCD8_begin
  3404 ;;		_LCD8_shiftR
  3405 ;;		_LCD8_shiftL
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           
  3410                           ;psect for function _LCD8_cmd
  3411  0670                     _LCD8_cmd:	
  3412                           
  3413                           ;incstack = 0
  3414                           ; Regs used in _LCD8_cmd: [wreg]
  3415                           ;LCD8_cmd@data stored from wreg
  3416  0670  00F5               	movwf	LCD8_cmd@data
  3417                           
  3418                           ;./LCD8bit.h: 13:     RA0 = 0;
  3419  0671  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0672  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0673  1005               	bcf	5,0	;volatile
  3422                           
  3423                           ;./LCD8bit.h: 14:     PORTB = data;
  3424  0674  0875               	movf	LCD8_cmd@data,w
  3425  0675  0086               	movwf	6	;volatile
  3426                           
  3427                           ;./LCD8bit.h: 16:     RA1 = 1;
  3428  0676  1485               	bsf	5,1	;volatile
  3429                           
  3430                           ;./LCD8bit.h: 17:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3431  0677  300B               	movlw	11
  3432  0678  00F4               	movwf	??_LCD8_cmd+1
  3433  0679  3062               	movlw	98
  3434  067A  00F3               	movwf	??_LCD8_cmd
  3435  067B                     u1147:	
  3436  067B  0BF3               	decfsz	??_LCD8_cmd,f
  3437  067C  2E7B               	goto	u1147
  3438  067D  0BF4               	decfsz	??_LCD8_cmd+1,f
  3439  067E  2E7B               	goto	u1147
  3440  067F  0000               	nop
  3441                           
  3442                           ;./LCD8bit.h: 18:     RA1 = 0;
  3443  0680  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0681  1303               	bcf	3,6	;RP1=0, select bank0
  3445  0682  1085               	bcf	5,1	;volatile
  3446  0683  0008               	return
  3447  0684                     __end_of_LCD8_cmd:	
  3448                           
  3449                           	psect	text23
  3450  0684                     __ptext23:	
  3451 ;; *************** function _isr *****************
  3452 ;; Defined at:
  3453 ;;		line 25 in file "timer1.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0
  3469 ;;      Temps:          3       0       0       0       0
  3470 ;;      Totals:         3       0       0       0       0
  3471 ;;Total ram usage:        3 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		Interrupt level 1
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           
  3481                           ;psect for function _isr
  3482  0684                     _isr:	
  3483                           
  3484                           ;timer1.c: 27:     if (PIR1bits.TMR1IF) {
  3485  0684  1283               	bcf	3,5	;RP0=0, select bank0
  3486  0685  1303               	bcf	3,6	;RP1=0, select bank0
  3487  0686  1C0C               	btfss	12,0	;volatile
  3488  0687  2E8F               	goto	i1l209
  3489                           
  3490                           ;timer1.c: 28:         t1_count ++;
  3491  0688  3001               	movlw	1
  3492  0689  00F0               	movwf	??_isr
  3493  068A  0870               	movf	??_isr,w
  3494  068B  07B7               	addwf	_t1_count,f
  3495                           
  3496                           ;timer1.c: 29:         TMR1 = (0);
  3497  068C  018E               	clrf	14	;volatile
  3498  068D  018F               	clrf	15	;volatile
  3499                           
  3500                           ;timer1.c: 30:         PIR1bits.TMR1IF = 0;
  3501  068E  100C               	bcf	12,0	;volatile
  3502  068F                     i1l209:	
  3503  068F  0872               	movf	??_isr+2,w
  3504  0690  008A               	movwf	10
  3505  0691  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  3506  0692  0083               	movwf	3
  3507  0693  0EFE               	swapf	126,f
  3508  0694  0E7E               	swapf	126,w
  3509  0695  0009               	retfie
  3510  0696                     __end_of_isr:	
  3511  007E                     btemp	set	126	;btemp
  3512  007E                     wtemp0	set	126
  3513                           
  3514                           	psect	intentry
  3515  0004                     __pintentry:	
  3516                           ;incstack = 0
  3517                           ; Regs used in _isr: [wreg+status,2+status,0]
  3518                           
  3519  0004                     interrupt_function:	
  3520  007E                     saved_w	set	btemp
  3521  0004  00FE               	movwf	btemp
  3522  0005  0E03               	swapf	3,w
  3523  0006  00F1               	movwf	??_isr+1
  3524  0007  080A               	movf	10,w
  3525  0008  00F2               	movwf	??_isr+2
  3526  0009  120A  118A  2E84   	ljmp	_isr


Data Sizes:
    Strings     32
    Constant    10
    Data        0
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[4]), 
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> show(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD8_strWrite@data	PTR unsigned char  size(2) Largest target is 20
		 -> show(BANK0[20]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_LCD8_set_cursor
    _main->_LCD8_strWrite
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _setup->_LCD8_begin
    _setup->_LCD8_set_cursor
    _setup->_LCD8_strWrite
    _write_ds1307->_I2C_Master_Write
    _LCD8_strWrite->_LCD8_write
    _LCD8_set_cursor->_LCD8_cmd
    _LCD8_begin->_LCD8_cmd
    _I2C_Master_Init->___lldiv
    _read_DS1307->_I2C_Master_Read
    _LCD8_clear->_LCD8_cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _read_DS1307->_I2C_Master_Read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14318
                                             22 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _LCD8_clear
                    _LCD8_set_cursor
                      _LCD8_strWrite
                        _read_DS1307
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2436
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    4761
                                             17 BANK0      3     3      0
                    _I2C_Master_Init
                         _LCD8_begin
                    _LCD8_set_cursor
                      _LCD8_strWrite
                    _oscilator_begin
                       _timer1_begin
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         4     0      4    2703
                                              0 BANK0      4     0      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _timer1_begin                                         4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _oscilator_begin                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD8_strWrite                                        4     2      2     881
                                              5 COMMON     3     1      2
                                              0 BANK0      1     1      0
                         _LCD8_write
 ---------------------------------------------------------------------------------
 (3) _LCD8_write                                           2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD8_set_cursor                                      4     3      1     462
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD8_begin                                           2     2      0      31
                                              6 COMMON     2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _read_DS1307                                          4     2      2    3041
                                              2 BANK0      4     2      2
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    2101
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     605
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD8_clear                                           0     0      0      31
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (3) _LCD8_cmd                                             3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LCD8_clear
     _LCD8_cmd
   _LCD8_set_cursor
     _LCD8_cmd
   _LCD8_strWrite
     _LCD8_write
   _read_DS1307
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _LCD8_begin
       _LCD8_cmd
     _LCD8_set_cursor
       _LCD8_cmd
     _LCD8_strWrite
       _LCD8_write
     _oscilator_begin
     _timer1_begin
     _write_ds1307
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      50       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      45       5       86.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      50      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 09:15:21 2019

               LCD8_set_cursor@row 004D                                  _a 0078  
                                pc 0002                        __CFG_CP$OFF 0000  
            LCD8_set_cursor@column 0076                                 l50 06BF  
                               l68 05DA                                 l69 05DD  
                               _ap 0030                                 _hr 0031  
            LCD8_set_cursor@cursor 004C                                 fsr 0004  
                              l105 0662                                _GIE 005F  
                              _RA0 0028                                _RA1 0029  
                     __CFG_CPD$OFF 0000                                u615 058E  
                              u635 059F                                u805 03F6  
                              u645 05A8                                u825 0404  
                              u835 0419                                u845 042B  
                              u925 04E0                                u865 055D  
                              u945 04EC                                u955 04F8  
                              u965 0502                                _hum 0025  
                              _isr 0684                                _pir 0026  
                              _luz 0027                                fsr0 0004  
                              indf 0000                       __CFG_LVP$OFF 0000  
                             l2021 02EF                               l2005 02D6  
                             l2015 02ED                               l2041 0323  
                             l2033 031F                               l2027 0310  
                             l2043 0298                               l2045 0366  
                             l2217 02CB                               l2059 0022  
                             l1541 05A7                               l1535 058B  
                             l1537 0599                               l1545 05B2  
                             l2195 027D                               l2179 0232  
                             l1903 066B                               l1845 03F2  
                             l1855 042A                               l1847 0402  
                             l1951 04DD                               l1953 04EB  
                             l1859 0437                               l1939 05E8  
                             l1963 050C                               l1959 0501  
                             l1999 02B8                               ?_isr 0070  
                             STR_1 052B                               STR_2 053E  
                             STR_3 053D                               STR_4 0533  
                             STR_5 0538                               STR_6 0541  
                             STR_7 053E                               STR_8 0545  
                             STR_9 0548                               u1005 0306  
                             u1107 0447                               u1117 0456  
                             u1127 0463                               u1137 046E  
                             u1147 067B                               u1087 03B0  
                             u1097 069F                               _PEIE 005E  
                             _RCEN 048B                               _TMR1 000E  
                     __CFG_WRT$OFF 0000   __end_of_I2C_Master_RepeatedStart 06ED  
                             _main 001D                               _hora 0032  
                             _show 0038                               btemp 007E  
                             start 000C                      __CFG_IESO$OFF 0000  
                     ?_read_DS1307 004E            __end_of_oscilator_begin 06B4  
                 __end_of_LCD8_cmd 0684                     _apoyo_unitario 0035  
                            ??_isr 0070                __size_of_LCD8_begin 0054  
              __size_of_LCD8_clear 000B                   ?_I2C_Master_Init 0059  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                    _LCD8_set_cursor 0657  
                            ?_main 0070                __size_of_LCD8_write 0010  
                    __CFG_WDTE$OFF 0000                              _ANSEL 0188  
                  __end_of___lldiv 0440                    __end_of___lwdiv 0511  
                            i1l209 068F                    __end_of___lwmod 05B7  
                            _PORTB 0006                              _TRISA 0085  
                            _SSPIE 0463                              _SSPIF 0063  
                read_DS1307@tiempo 0050                     __CFG_FCMEN$OFF 0000  
                  __end_of_dpowers 052B                              _setup 036B  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 036B                     __CFG_MCLRE$OFF 0000  
            __size_of_write_ds1307 0028                    __initialization 000F  
                     __end_of_main 0291                             ??_main 0062  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
               ??_I2C_Master_Start 0073                 ??_I2C_Master_Write 0075  
                           ?_setup 0070                       _write_ds1307 060F  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                     __CFG_PWRTE$OFF 0000  
         _I2C_Master_RepeatedStart 06E6            __end_of_LCD8_set_cursor 0670  
                 ?_oscilator_begin 0070                          ??___lldiv 0073  
                        ??___lwdiv 0077                          ??___lwmod 0053  
                           _minuto 0033                             _puerta 0028  
                           saved_w 007E                       ??_LCD8_begin 0076  
                        ??_sprintf 0058                       ??_LCD8_clear 0076  
                        ?_LCD8_cmd 0070                       ??_LCD8_write 0073  
          __end_of__initialization 0019                     __pcstackCOMMON 0070  
             __size_of_read_DS1307 003F                      __end_of_setup 03E0  
               __end_of_LCD8_begin 0494                 __end_of_LCD8_clear 06BF  
               __end_of_LCD8_write 06A6                            ??_setup 005D  
                       ??_LCD8_cmd 0073                         __pbssBANK0 0020  
            __end_of_LCD8_strWrite 060F                         __pmaintext 001D  
                 ?_LCD8_set_cursor 0076                         __pintentry 0004  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0511                         _convertido 0020  
                          ___lldiv 03E0                            ___lwdiv 04D3  
                          ___lwmod 0583                            _decimal 0036  
                    ?_timer1_begin 0073                            __ptext1 0291  
                          __ptext2 0583                            __ptext3 04D3  
                          __ptext4 036B                            __ptext5 060F  
                          __ptext6 0637                            __ptext7 06A6  
                          __ptext8 05E5                            __ptext9 0696  
                        _T1CONbits 0010                            _horaDer 002A  
                          _horaIzq 0029                            _dpowers 0521  
                     __size_of_isr 0012                  LCD8_strWrite@data 0075  
                          _segundo 002F           __size_of_I2C_Master_Init 0038  
         __size_of_I2C_Master_Read 002E           __size_of_I2C_Master_Wait 0009  
         __size_of_I2C_Master_Stop 0007                            _sprintf 0291  
                          clrloop0 06C9               end_of_initialization 0019  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 004C  
                       _segundoDer 002E                         _segundoIzq 002D  
                  ___lldiv@counter 0058                         _valor_CONT 0079  
                 I2C_Master_Init@c 0059                   I2C_Master_Read@a 0073  
                   ??_timer1_begin 0074              timer1_begin@prescaler 0073  
                __size_of_LCD8_cmd 0014           __size_of_oscilator_begin 000E  
              start_initialization 000F                        __end_of_isr 0696  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                      ??_read_DS1307 0077  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 004C               __end_of_timer1_begin 0657  
                      sprintf@flag 005C                        sprintf@prec 005D  
                 _I2C_Master_Start 06DF                   _I2C_Master_Write 06D0  
                 ___lwdiv@dividend 0075                           ?___lldiv 004C  
                         ?___lwdiv 0073                           ?___lwmod 004F  
              __end_of_read_DS1307 04D3                     LCD8_strWrite@i 004C  
                        __pstrings 0511             __size_of_LCD8_strWrite 002A  
               timer1_begin@offset 0076           __size_of_LCD8_set_cursor 0019  
                   LCD8_write@data 0074                   ___lwdiv@quotient 004D  
                         ?_sprintf 0055                  ??_oscilator_begin 0073  
                   __size_of_setup 0075                           _LCD8_cmd 0670  
                    ?_write_ds1307 004C                  interrupt_function 0004  
                        _minutoDer 002C                          _minutoIzq 002B  
                        clear_ram0 06C8                           _PIE1bits 008C  
             read_DS1307@direccion 004E                           _PIR1bits 000C  
                      __stringbase 0520                I2C_Master_Read@temp 004C  
                   ??_write_ds1307 0075                      _LCD8_strWrite 05E5  
              oscilator_begin@freq 0074                        _read_DS1307 0494  
                         _t1_count 0037  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0060  
                 __size_of___lwdiv 003E                   __size_of___lwmod 0034  
               __end_of__stringtab 0521                         sprintf@val 005E  
                  _I2C_Master_Init 054B                    _I2C_Master_Read 05B7  
                  _I2C_Master_Wait 06BF                    _I2C_Master_Stop 06D8  
              write_ds1307@address 004C                    ___lwdiv@divisor 0073  
            __size_of_timer1_begin 0020                    ___lwdiv@counter 004C  
                         __ptext10 0657                           __ptext11 0440  
                         __ptext20 06BF                           __ptext12 054B  
                         __ptext21 06B4                           __ptext13 03E0  
                         __ptext22 0670                           __ptext14 0494  
                         __ptext23 0684                           __ptext15 06D0  
                         __ptext16 06D8                           __ptext17 06DF  
                         __ptext18 06E6                           __ptext19 05B7  
                __CFG_BOR4V$BOR40V 0000                  ??_LCD8_set_cursor 0077  
                       _LCD8_begin 0440                         _LCD8_clear 06B4  
                 __size_of_sprintf 00DA                     ?_LCD8_strWrite 0075  
                       _LCD8_write 0696                      __size_of_main 0274  
                     LCD8_cmd@data 0075                           _unitario 0034  
                     _timer1_begin 0637           __end_of_I2C_Master_Start 06E6  
         __end_of_I2C_Master_Write 06D8                         _INTCONbits 000B  
                         intlevel1 0000                          sprintf@ap 005B  
                        sprintf@sp 0060                   ___lwmod@dividend 0051  
                 ___lldiv@dividend 0050                 write_ds1307@w_data 004E  
                        stringcode 051B                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0583                        _variableADC 007A  
          __end_of_I2C_Master_Read 05E5            __end_of_I2C_Master_Wait 06C8  
             __end_of_write_ds1307 0637            __end_of_I2C_Master_Stop 06DF  
                  _oscilator_begin 06A6                        _temperatura 0024  
                         sprintf@c 0061                           sprintf@f 0055  
                 ___lldiv@quotient 0054                  I2C_Master_Write@d 0073  
                  ___lwmod@divisor 004F                    ___lwmod@counter 0054  
                         stringdir 051B                           stringtab 0511  
                      _SSPCON2bits 0091                    ??_LCD8_strWrite 0077  
                      ?_LCD8_begin 0070                        ?_LCD8_clear 0070  
                      ?_LCD8_write 0070  
