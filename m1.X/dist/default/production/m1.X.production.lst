

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 01:46:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.05
    43                           ; Generated 20/12/2018 GMT
    44                           ; 
    45                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310                           
   311                           	psect	idataBANK0
   312  0E7A                     __pidataBANK0:	
   313                           
   314                           ;initializer for _humedad
   315  0E7A  343E               	retlw	62
   316                           
   317                           ;initializer for _temperatura
   318  0E7B  341B               	retlw	27
   319                           
   320                           	psect	strings
   321  06A2                     __pstrings:	
   322  06A2                     stringtab:	
   323  06A2                     __stringtab:	
   324                           
   325                           ;	String table - string pointers are 1 byte each
   326  06A2  1BFF               	btfsc	btemp+1,7
   327  06A3  2EAC               	ljmp	stringcode
   328  06A4  1383               	bcf	3,7
   329  06A5  187F               	btfsc	btemp+1,0
   330  06A6  1783               	bsf	3,7
   331  06A7  0800               	movf	0,w
   332  06A8  0A84               	incf	4,f
   333  06A9  1903               	skipnz
   334  06AA  0AFF               	incf	btemp+1,f
   335  06AB  0008               	return
   336  06AC                     stringcode:	
   337  06AC                     stringdir:	
   338  06AC  3006               	movlw	high stringdir
   339  06AD  008A               	movwf	10
   340  06AE  0804               	movf	4,w
   341  06AF  0A84               	incf	4,f
   342  06B0  0782               	addwf	2,f
   343  06B1                     __stringbase:	
   344  06B1  3400               	retlw	0
   345  06B2                     __end_of__stringtab:	
   346  06B2                     _dpowers:	
   347  06B2  3401               	retlw	1
   348  06B3  3400               	retlw	0
   349  06B4  340A               	retlw	10
   350  06B5  3400               	retlw	0
   351  06B6  3464               	retlw	100
   352  06B7  3400               	retlw	0
   353  06B8  34E8               	retlw	232
   354  06B9  3403               	retlw	3
   355  06BA  3410               	retlw	16
   356  06BB  3427               	retlw	39
   357  06BC                     __end_of_dpowers:	
   358  000E                     _TMR1	set	14
   359  000C                     _PIR1bits	set	12
   360  000B                     _INTCONbits	set	11
   361  0010                     _T1CONbits	set	16
   362  001A                     _RCREG	set	26
   363  0019                     _TXREG	set	25
   364  0018                     _RCSTAbits	set	24
   365  0008                     _PORTDbits	set	8
   366  0005                     _PORTA	set	5
   367  0006                     _PORTB	set	6
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCON	set	20
   370  0065                     _RCIF	set	101
   371  0064                     _TXIF	set	100
   372  00C4                     _CREN	set	196
   373  0029                     _RA1	set	41
   374  0028                     _RA0	set	40
   375  0063                     _SSPIF	set	99
   376  005E                     _PEIE	set	94
   377  005F                     _GIE	set	95
   378  008C                     _PIE1bits	set	140
   379  009A                     _SPBRGH	set	154
   380  0098                     _TXSTAbits	set	152
   381  0087                     _TRISCbits	set	135
   382  0088                     _TRISD	set	136
   383  0086                     _TRISB	set	134
   384  0085                     _TRISA	set	133
   385  008F                     _OSCCONbits	set	143
   386  0091                     _SSPCON2bits	set	145
   387  0094                     _SSPSTAT	set	148
   388  0093                     _SSPADD	set	147
   389  0091                     _SSPCON2	set	145
   390  0463                     _SSPIE	set	1123
   391  048B                     _RCEN	set	1163
   392  043C                     _TRISC4	set	1084
   393  043B                     _TRISC3	set	1083
   394  0187                     _BAUDCTLbits	set	391
   395  0189                     _ANSELH	set	393
   396  0188                     _ANSEL	set	392
   397  06BC                     STR_14:	
   398  06BC  3448               	retlw	72	;'H'
   399  06BD  3475               	retlw	117	;'u'
   400  06BE  346D               	retlw	109	;'m'
   401  06BF  3420               	retlw	32	;' '
   402  06C0  342B               	retlw	43	;'+'
   403  06C1  3420               	retlw	32	;' '
   404  06C2  3454               	retlw	84	;'T'
   405  06C3  3465               	retlw	101	;'e'
   406  06C4  346D               	retlw	109	;'m'
   407  06C5  3470               	retlw	112	;'p'
   408  06C6  3400               	retlw	0
   409  06C7                     STR_5:	
   410  06C7  3425               	retlw	37	;'%'
   411  06C8  3464               	retlw	100	;'d'
   412  06C9  3463               	retlw	99	;'c'
   413  06CA  346D               	retlw	109	;'m'
   414  06CB  3420               	retlw	32	;' '
   415  06CC  3400               	retlw	0
   416  06CD                     STR_4:	
   417  06CD  3444               	retlw	68	;'D'
   418  06CE  3469               	retlw	105	;'i'
   419  06CF  3473               	retlw	115	;'s'
   420  06D0  3474               	retlw	116	;'t'
   421  06D1  342E               	retlw	46	;'.'
   422  06D2  3400               	retlw	0
   423  06D3                     STR_17:	
   424  06D3  3425               	retlw	37	;'%'
   425  06D4  3464               	retlw	100	;'d'
   426  06D5  3420               	retlw	32	;' '
   427  06D6  3443               	retlw	67	;'C'
   428  06D7  3400               	retlw	0
   429  06D8                     STR_11:	
   430  06D8  3448               	retlw	72	;'H'
   431  06D9  346F               	retlw	111	;'o'
   432  06DA  3472               	retlw	114	;'r'
   433  06DB  3461               	retlw	97	;'a'
   434  06DC  3400               	retlw	0
   435  06DD                     STR_6:	
   436  06DD  3425               	retlw	37	;'%'
   437  06DE  3464               	retlw	100	;'d'
   438  06DF  3463               	retlw	99	;'c'
   439  06E0  346D               	retlw	109	;'m'
   440  06E1  3400               	retlw	0
   441  06E2                     STR_2:	
   442  06E2  3425               	retlw	37	;'%'
   443  06E3  3464               	retlw	100	;'d'
   444  06E4  3420               	retlw	32	;' '
   445  06E5  3400               	retlw	0
   446  06E6                     STR_10:	
   447  06E6  344E               	retlw	78	;'N'
   448  06E7  342F               	retlw	47	;'/'
   449  06E8  3441               	retlw	65	;'A'
   450  06E9  3400               	retlw	0
   451  06EA                     STR_18:	
   452  06EA  3425               	retlw	37	;'%'
   453  06EB  3464               	retlw	100	;'d'
   454  06EC  3443               	retlw	67	;'C'
   455  06ED  3400               	retlw	0
   456  06EE                     STR_13:	
   457  06EE  343A               	retlw	58	;':'
   458  06EF  3425               	retlw	37	;'%'
   459  06F0  3464               	retlw	100	;'d'
   460  06F1  3400               	retlw	0
   461  06F2                     STR_7:	
   462  06F2  344D               	retlw	77	;'M'
   463  06F3  346F               	retlw	111	;'o'
   464  06F4  3476               	retlw	118	;'v'
   465  06F5  3400               	retlw	0
   466  06F6                     STR_1:	
   467  06F6  344C               	retlw	76	;'L'
   468  06F7  3475               	retlw	117	;'u'
   469  06F8  347A               	retlw	122	;'z'
   470  06F9  3400               	retlw	0
   471  06FA                     STR_8:	
   472  06FA  3453               	retlw	83	;'S'
   473  06FB  3469               	retlw	105	;'i'
   474  06FC  3400               	retlw	0
   475  06FD                     STR_9:	
   476  06FD  344E               	retlw	78	;'N'
   477  06FE  346F               	retlw	111	;'o'
   478  06FF  3400               	retlw	0
   479  06E2                     
   480                           ; #config settings
   481  0000                     
   482                           	psect	cinit
   483  000F                     start_initialization:	
   484  000F                     __initialization:	
   485                           
   486                           ; Initialize objects allocated to BANK0
   487  000F  120A  158A  267A  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   488  0014  00E6               	movwf	__pdataBANK0& (0+127)
   489  0015  120A  158A  267B  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   490  001A  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   491                           
   492                           ; Clear objects allocated to BANK0
   493  001B  1383               	bcf	3,7	;select IRP bank0
   494  001C  3020               	movlw	low __pbssBANK0
   495  001D  0084               	movwf	4
   496  001E  304D               	movlw	low (__pbssBANK0+45)
   497  001F  120A  158A  26A0   	fcall	clear_ram0
   498                           
   499                           ; Clear objects allocated to COMMON
   500  0022  01F8               	clrf	__pbssCOMMON& (0+127)
   501  0023  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   502  0024  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   503  0025                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506  0025                     __end_of__initialization:	
   507  0025  0183               	clrf	3
   508  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	bssCOMMON
   511  0078                     __pbssCOMMON:	
   512  0078                     _a:	
   513  0078                     	ds	1
   514  0079                     _valor_CONT:	
   515  0079                     	ds	1
   516  007A                     _variableADC:	
   517  007A                     	ds	1
   518                           
   519                           	psect	bssBANK0
   520  0020                     __pbssBANK0:	
   521  0020                     _convertido:	
   522  0020                     	ds	4
   523  0024                     _counter:	
   524  0024                     	ds	1
   525  0025                     _hum:	
   526  0025                     	ds	1
   527  0026                     _pir:	
   528  0026                     	ds	1
   529  0027                     _luz:	
   530  0027                     	ds	1
   531  0028                     _puerta:	
   532  0028                     	ds	1
   533  0029                     _horaIzq:	
   534  0029                     	ds	1
   535  002A                     _horaDer:	
   536  002A                     	ds	1
   537  002B                     _minutoIzq:	
   538  002B                     	ds	1
   539  002C                     _minutoDer:	
   540  002C                     	ds	1
   541  002D                     _segundoIzq:	
   542  002D                     	ds	1
   543  002E                     _segundoDer:	
   544  002E                     	ds	1
   545  002F                     _cual_dato:	
   546  002F                     	ds	1
   547  0030                     _segundo:	
   548  0030                     	ds	1
   549  0031                     _ap:	
   550  0031                     	ds	1
   551  0032                     _hr:	
   552  0032                     	ds	1
   553  0033                     _hora:	
   554  0033                     	ds	1
   555  0034                     _minuto:	
   556  0034                     	ds	1
   557  0035                     _unitario:	
   558  0035                     	ds	1
   559  0036                     _apoyo_unitario:	
   560  0036                     	ds	1
   561  0037                     _decimal:	
   562  0037                     	ds	1
   563  0038                     _t1_count:	
   564  0038                     	ds	1
   565  0039                     _show:	
   566  0039                     	ds	20
   567                           
   568                           	psect	dataBANK0
   569  0066                     __pdataBANK0:	
   570  0066                     _humedad:	
   571  0066                     	ds	1
   572  0067                     _temperatura:	
   573  0067                     	ds	1
   574                           
   575                           	psect	clrtext
   576  0EA0                     clear_ram0:	
   577                           ;	Called with FSR containing the base address, and
   578                           ;	W with the last address+1
   579                           
   580  0EA0  0064               	clrwdt	;clear the watchdog before getting into this loop
   581  0EA1                     clrloop0:	
   582  0EA1  0180               	clrf	0	;clear RAM location pointed to by FSR
   583  0EA2  0A84               	incf	4,f	;increment pointer
   584  0EA3  0604               	xorwf	4,w	;XOR with final address
   585  0EA4  1903               	btfsc	3,2	;have we reached the end yet?
   586  0EA5  3400               	retlw	0	;all done for this memory range, return
   587  0EA6  0604               	xorwf	4,w	;XOR again to restore value
   588  0EA7  2EA1               	goto	clrloop0	;do the next byte
   589                           
   590                           	psect	cstackCOMMON
   591  0070                     __pcstackCOMMON:	
   592  0070                     ?_I2C_Master_Wait:	
   593  0070                     ?_I2C_Master_Start:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_I2C_Master_RepeatedStart:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_I2C_Master_Stop:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_oscilator_begin:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_LCD8_write:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_LCD8_cmd:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_LCD8_clear:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_LCD8_begin:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_setup:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_UART_Tx:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_UART_Rx:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_main:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_isr:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ??_isr:	
   633                           ; 1 bytes @ 0x0
   634                           
   635                           
   636                           ; 1 bytes @ 0x0
   637  0070                     	ds	3
   638  0073                     ?_timer1_begin:	
   639  0073                     ??_I2C_Master_Wait:	
   640                           ; 1 bytes @ 0x3
   641                           
   642  0073                     ??_I2C_Master_Start:	
   643                           ; 1 bytes @ 0x3
   644                           
   645  0073                     ??_I2C_Master_RepeatedStart:	
   646                           ; 1 bytes @ 0x3
   647                           
   648  0073                     ??_I2C_Master_Stop:	
   649                           ; 1 bytes @ 0x3
   650                           
   651  0073                     ?_I2C_Master_Write:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0073                     ??_oscilator_begin:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     ??_LCD8_write:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     ??_LCD8_cmd:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ??_UART_Tx:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     ??_UART_Rx:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     ??___lldiv:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     ?_I2C_Master_Read:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ?___lwdiv:	
   676                           ; 2 bytes @ 0x3
   677                           
   678  0073                     UART_Tx@val:	
   679                           ; 2 bytes @ 0x3
   680                           
   681  0073                     timer1_begin@prescaler:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     I2C_Master_Write@d:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     I2C_Master_Read@a:	
   688                           ; 2 bytes @ 0x3
   689                           
   690  0073                     ___lwdiv@divisor:	
   691                           ; 2 bytes @ 0x3
   692                           
   693                           
   694                           ; 2 bytes @ 0x3
   695  0073                     	ds	1
   696  0074                     ??_timer1_begin:	
   697  0074                     ??_I2C_Master_Init:	
   698                           ; 1 bytes @ 0x4
   699                           
   700  0074                     oscilator_begin@freq:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     LCD8_write@data:	
   704                           ; 1 bytes @ 0x4
   705                           
   706                           
   707                           ; 1 bytes @ 0x4
   708  0074                     	ds	1
   709  0075                     ??_I2C_Master_Write:	
   710  0075                     ??_I2C_Master_Read:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     ??_write_ds1307:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     ?_LCD8_strWrite:	
   717                           ; 1 bytes @ 0x5
   718                           
   719  0075                     LCD8_cmd@data:	
   720                           ; 1 bytes @ 0x5
   721                           
   722  0075                     LCD8_strWrite@data:	
   723                           ; 1 bytes @ 0x5
   724                           
   725  0075                     ___lwdiv@dividend:	
   726                           ; 2 bytes @ 0x5
   727                           
   728                           
   729                           ; 2 bytes @ 0x5
   730  0075                     	ds	1
   731  0076                     ?_LCD8_set_cursor:	
   732  0076                     ??_LCD8_clear:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0076                     ??_LCD8_begin:	
   736                           ; 1 bytes @ 0x6
   737                           
   738  0076                     LCD8_set_cursor@column:	
   739                           ; 1 bytes @ 0x6
   740                           
   741  0076                     timer1_begin@offset:	
   742                           ; 1 bytes @ 0x6
   743                           
   744                           
   745                           ; 1 bytes @ 0x6
   746  0076                     	ds	1
   747  0077                     ??_read_DS1307:	
   748  0077                     ??_LCD8_set_cursor:	
   749                           ; 1 bytes @ 0x7
   750                           
   751  0077                     ??_LCD8_strWrite:	
   752                           ; 1 bytes @ 0x7
   753                           
   754  0077                     ??___lwdiv:	
   755                           ; 1 bytes @ 0x7
   756                           
   757                           
   758                           ; 1 bytes @ 0x7
   759  0077                     	ds	1
   760                           
   761                           	psect	cstackBANK0
   762  004D                     __pcstackBANK0:	
   763  004D                     ?_write_ds1307:	
   764  004D                     ?___lldiv:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  004D                     LCD8_set_cursor@cursor:	
   768                           ; 4 bytes @ 0x0
   769                           
   770  004D                     LCD8_strWrite@i:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  004D                     ___lwdiv@counter:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  004D                     I2C_Master_Read@temp:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  004D                     write_ds1307@address:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  004D                     ___lldiv@divisor:	
   783                           ; 2 bytes @ 0x0
   784                           
   785                           
   786                           ; 4 bytes @ 0x0
   787  004D                     	ds	1
   788  004E                     LCD8_set_cursor@row:	
   789  004E                     ___lwdiv@quotient:	
   790                           ; 1 bytes @ 0x1
   791                           
   792                           
   793                           ; 2 bytes @ 0x1
   794  004E                     	ds	1
   795  004F                     ?_read_DS1307:	
   796  004F                     read_DS1307@direccion:	
   797                           ; 2 bytes @ 0x2
   798                           
   799  004F                     write_ds1307@w_data:	
   800                           ; 2 bytes @ 0x2
   801                           
   802                           
   803                           ; 2 bytes @ 0x2
   804  004F                     	ds	1
   805  0050                     ?___lwmod:	
   806  0050                     ___lwmod@divisor:	
   807                           ; 2 bytes @ 0x3
   808                           
   809                           
   810                           ; 2 bytes @ 0x3
   811  0050                     	ds	1
   812  0051                     read_DS1307@tiempo:	
   813  0051                     ___lldiv@dividend:	
   814                           ; 2 bytes @ 0x4
   815                           
   816                           
   817                           ; 4 bytes @ 0x4
   818  0051                     	ds	1
   819  0052                     ___lwmod@dividend:	
   820                           
   821                           ; 2 bytes @ 0x5
   822  0052                     	ds	2
   823  0054                     ??___lwmod:	
   824                           
   825                           ; 1 bytes @ 0x7
   826  0054                     	ds	1
   827  0055                     ___lwmod@counter:	
   828  0055                     ___lldiv@quotient:	
   829                           ; 1 bytes @ 0x8
   830                           
   831                           
   832                           ; 4 bytes @ 0x8
   833  0055                     	ds	1
   834  0056                     ?_sprintf:	
   835  0056                     sprintf@f:	
   836                           ; 2 bytes @ 0x9
   837                           
   838                           
   839                           ; 1 bytes @ 0x9
   840  0056                     	ds	3
   841  0059                     ??_sprintf:	
   842  0059                     ___lldiv@counter:	
   843                           ; 1 bytes @ 0xC
   844                           
   845                           
   846                           ; 1 bytes @ 0xC
   847  0059                     	ds	1
   848  005A                     ?_I2C_Master_Init:	
   849  005A                     I2C_Master_Init@c:	
   850                           ; 1 bytes @ 0xD
   851                           
   852                           
   853                           ; 4 bytes @ 0xD
   854  005A                     	ds	2
   855  005C                     sprintf@ap:	
   856                           
   857                           ; 1 bytes @ 0xF
   858  005C                     	ds	1
   859  005D                     sprintf@flag:	
   860                           
   861                           ; 1 bytes @ 0x10
   862  005D                     	ds	1
   863  005E                     ??_setup:	
   864  005E                     sprintf@prec:	
   865                           ; 1 bytes @ 0x11
   866                           
   867                           
   868                           ; 1 bytes @ 0x11
   869  005E                     	ds	1
   870  005F                     sprintf@val:	
   871                           
   872                           ; 2 bytes @ 0x12
   873  005F                     	ds	2
   874  0061                     sprintf@sp:	
   875                           
   876                           ; 1 bytes @ 0x14
   877  0061                     	ds	1
   878  0062                     sprintf@c:	
   879                           
   880                           ; 1 bytes @ 0x15
   881  0062                     	ds	1
   882  0063                     ??_main:	
   883                           
   884                           ; 1 bytes @ 0x16
   885  0063                     	ds	3
   886                           
   887                           	psect	maintext
   888  0029                     __pmaintext:	
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 110 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : B00/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0
   910 ;;      Temps:          0       3       0       0       0
   911 ;;      Totals:         0       3       0       0       0
   912 ;;Total ram usage:        3 bytes
   913 ;; Hardware stack levels required when called:    5
   914 ;; This function calls:
   915 ;;		_I2C_Master_Read
   916 ;;		_I2C_Master_Start
   917 ;;		_I2C_Master_Stop
   918 ;;		_I2C_Master_Write
   919 ;;		_LCD8_clear
   920 ;;		_LCD8_set_cursor
   921 ;;		_LCD8_strWrite
   922 ;;		_UART_Rx
   923 ;;		_UART_Tx
   924 ;;		_read_DS1307
   925 ;;		_setup
   926 ;;		_sprintf
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _main
   934  0029                     _main:	
   935                           
   936                           ;main.c: 112:     setup();
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   940  0029  120A  118A  25CC  120A  118A  	fcall	_setup
   941  002E                     l2516:	
   942                           
   943                           ;main.c: 115:         PORTDbits.RD2 =0;
   944  002E  1283               	bcf	3,5	;RP0=0, select bank0
   945  002F  1303               	bcf	3,6	;RP1=0, select bank0
   946  0030  1108               	bcf	8,2	;volatile
   947                           
   948                           ;main.c: 117:         counter++;
   949  0031  3001               	movlw	1
   950  0032  00E3               	movwf	??_main
   951  0033  0863               	movf	??_main,w
   952  0034  07A4               	addwf	_counter,f
   953                           
   954                           ;main.c: 119:             I2C_Master_Start();
   955  0035  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
   956                           
   957                           ;main.c: 120:             I2C_Master_Write(0x20);
   958  003A  3020               	movlw	32
   959  003B  00F3               	movwf	I2C_Master_Write@d
   960  003C  3000               	movlw	0
   961  003D  00F4               	movwf	I2C_Master_Write@d+1
   962  003E  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
   963                           
   964                           ;main.c: 121:             I2C_Master_Write(0x1);
   965  0043  3001               	movlw	1
   966  0044  00F3               	movwf	I2C_Master_Write@d
   967  0045  3000               	movlw	0
   968  0046  00F4               	movwf	I2C_Master_Write@d+1
   969  0047  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
   970                           
   971                           ;main.c: 122:             I2C_Master_Stop();
   972  004C  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
   973                           
   974                           ;main.c: 123:             _delay((unsigned long)((10)*(8000000/4000.0)));
   975  0051  301A               	movlw	26
   976  0052  1283               	bcf	3,5	;RP0=0, select bank0
   977  0053  1303               	bcf	3,6	;RP1=0, select bank0
   978  0054  00E4               	movwf	??_main+1
   979  0055  30F7               	movlw	247
   980  0056  00E3               	movwf	??_main
   981  0057                     u1607:	
   982  0057  0BE3               	decfsz	??_main,f
   983  0058  2857               	goto	u1607
   984  0059  0BE4               	decfsz	??_main+1,f
   985  005A  2857               	goto	u1607
   986  005B  285C               	nop2
   987                           
   988                           ;main.c: 127:             I2C_Master_Start();
   989  005C  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
   990                           
   991                           ;main.c: 128:             I2C_Master_Write(0x21);
   992  0061  3021               	movlw	33
   993  0062  00F3               	movwf	I2C_Master_Write@d
   994  0063  3000               	movlw	0
   995  0064  00F4               	movwf	I2C_Master_Write@d+1
   996  0065  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
   997                           
   998                           ;main.c: 129:             puerta = I2C_Master_Read(0);
   999  006A  3000               	movlw	0
  1000  006B  00F3               	movwf	I2C_Master_Read@a
  1001  006C  00F4               	movwf	I2C_Master_Read@a+1
  1002  006D  120A  118A  27D1  120A  118A  	fcall	_I2C_Master_Read
  1003  0072  0873               	movf	?_I2C_Master_Read,w
  1004  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0075  00E3               	movwf	??_main
  1007  0076  0863               	movf	??_main,w
  1008  0077  00A8               	movwf	_puerta
  1009                           
  1010                           ;main.c: 130:             I2C_Master_Stop();
  1011  0078  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1012                           
  1013                           ;main.c: 131:            _delay((unsigned long)((10)*(8000000/4000.0)));
  1014  007D  301A               	movlw	26
  1015  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1016  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0080  00E4               	movwf	??_main+1
  1018  0081  30F7               	movlw	247
  1019  0082  00E3               	movwf	??_main
  1020  0083                     u1617:	
  1021  0083  0BE3               	decfsz	??_main,f
  1022  0084  2883               	goto	u1617
  1023  0085  0BE4               	decfsz	??_main+1,f
  1024  0086  2883               	goto	u1617
  1025  0087  2888               	nop2
  1026                           
  1027                           ;main.c: 135:             I2C_Master_Start();
  1028  0088  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  1029                           
  1030                           ;main.c: 136:             I2C_Master_Write(0x20);
  1031  008D  3020               	movlw	32
  1032  008E  00F3               	movwf	I2C_Master_Write@d
  1033  008F  3000               	movlw	0
  1034  0090  00F4               	movwf	I2C_Master_Write@d+1
  1035  0091  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1036                           
  1037                           ;main.c: 137:             I2C_Master_Write(0x2);
  1038  0096  3002               	movlw	2
  1039  0097  00F3               	movwf	I2C_Master_Write@d
  1040  0098  3000               	movlw	0
  1041  0099  00F4               	movwf	I2C_Master_Write@d+1
  1042  009A  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1043                           
  1044                           ;main.c: 138:             I2C_Master_Stop();
  1045  009F  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1046                           
  1047                           ;main.c: 139:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1048  00A4  301A               	movlw	26
  1049  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1050  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1051  00A7  00E4               	movwf	??_main+1
  1052  00A8  30F7               	movlw	247
  1053  00A9  00E3               	movwf	??_main
  1054  00AA                     u1627:	
  1055  00AA  0BE3               	decfsz	??_main,f
  1056  00AB  28AA               	goto	u1627
  1057  00AC  0BE4               	decfsz	??_main+1,f
  1058  00AD  28AA               	goto	u1627
  1059  00AE  28AF               	nop2
  1060                           
  1061                           ;main.c: 143:             I2C_Master_Start();
  1062  00AF  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  1063                           
  1064                           ;main.c: 144:             I2C_Master_Write(0x21);
  1065  00B4  3021               	movlw	33
  1066  00B5  00F3               	movwf	I2C_Master_Write@d
  1067  00B6  3000               	movlw	0
  1068  00B7  00F4               	movwf	I2C_Master_Write@d+1
  1069  00B8  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1070                           
  1071                           ;main.c: 145:             luz = I2C_Master_Read(0);
  1072  00BD  3000               	movlw	0
  1073  00BE  00F3               	movwf	I2C_Master_Read@a
  1074  00BF  00F4               	movwf	I2C_Master_Read@a+1
  1075  00C0  120A  118A  27D1  120A  118A  	fcall	_I2C_Master_Read
  1076  00C5  0873               	movf	?_I2C_Master_Read,w
  1077  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1078  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1079  00C8  00E3               	movwf	??_main
  1080  00C9  0863               	movf	??_main,w
  1081  00CA  00A7               	movwf	_luz
  1082                           
  1083                           ;main.c: 146:             I2C_Master_Stop();
  1084  00CB  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1085                           
  1086                           ;main.c: 147:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1087  00D0  301A               	movlw	26
  1088  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1089  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1090  00D3  00E4               	movwf	??_main+1
  1091  00D4  30F7               	movlw	247
  1092  00D5  00E3               	movwf	??_main
  1093  00D6                     u1637:	
  1094  00D6  0BE3               	decfsz	??_main,f
  1095  00D7  28D6               	goto	u1637
  1096  00D8  0BE4               	decfsz	??_main+1,f
  1097  00D9  28D6               	goto	u1637
  1098  00DA  28DB               	nop2
  1099                           
  1100                           ;main.c: 153:             segundo = read_DS1307(0);
  1101  00DB  3000               	movlw	0
  1102  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1103  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1104  00DE  00CF               	movwf	read_DS1307@direccion
  1105  00DF  00D0               	movwf	read_DS1307@direccion+1
  1106  00E0  120A  118A  2754  120A  118A  	fcall	_read_DS1307
  1107  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1108  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1109  00E7  084F               	movf	?_read_DS1307,w
  1110  00E8  00E3               	movwf	??_main
  1111  00E9  0863               	movf	??_main,w
  1112  00EA  00B0               	movwf	_segundo
  1113                           
  1114                           ;main.c: 154:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1115  00EB  301A               	movlw	26
  1116  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1117  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1118  00EE  00E4               	movwf	??_main+1
  1119  00EF  30F7               	movlw	247
  1120  00F0  00E3               	movwf	??_main
  1121  00F1                     u1647:	
  1122  00F1  0BE3               	decfsz	??_main,f
  1123  00F2  28F1               	goto	u1647
  1124  00F3  0BE4               	decfsz	??_main+1,f
  1125  00F4  28F1               	goto	u1647
  1126  00F5  28F6               	nop2
  1127                           
  1128                           ;main.c: 155:             minuto = read_DS1307(1);
  1129  00F6  3001               	movlw	1
  1130  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1131  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1132  00F9  00CF               	movwf	read_DS1307@direccion
  1133  00FA  3000               	movlw	0
  1134  00FB  00D0               	movwf	read_DS1307@direccion+1
  1135  00FC  120A  118A  2754  120A  118A  	fcall	_read_DS1307
  1136  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0103  084F               	movf	?_read_DS1307,w
  1139  0104  00E3               	movwf	??_main
  1140  0105  0863               	movf	??_main,w
  1141  0106  00B4               	movwf	_minuto
  1142                           
  1143                           ;main.c: 156:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1144  0107  301A               	movlw	26
  1145  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1147  010A  00E4               	movwf	??_main+1
  1148  010B  30F7               	movlw	247
  1149  010C  00E3               	movwf	??_main
  1150  010D                     u1657:	
  1151  010D  0BE3               	decfsz	??_main,f
  1152  010E  290D               	goto	u1657
  1153  010F  0BE4               	decfsz	??_main+1,f
  1154  0110  290D               	goto	u1657
  1155  0111  2912               	nop2
  1156                           
  1157                           ;main.c: 157:             hora = read_DS1307(2);
  1158  0112  3002               	movlw	2
  1159  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0115  00CF               	movwf	read_DS1307@direccion
  1162  0116  3000               	movlw	0
  1163  0117  00D0               	movwf	read_DS1307@direccion+1
  1164  0118  120A  118A  2754  120A  118A  	fcall	_read_DS1307
  1165  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1166  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1167  011F  084F               	movf	?_read_DS1307,w
  1168  0120  00E3               	movwf	??_main
  1169  0121  0863               	movf	??_main,w
  1170  0122  00B3               	movwf	_hora
  1171                           
  1172                           ;main.c: 158:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1173  0123  301A               	movlw	26
  1174  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1175  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0126  00E4               	movwf	??_main+1
  1177  0127  30F7               	movlw	247
  1178  0128  00E3               	movwf	??_main
  1179  0129                     u1667:	
  1180  0129  0BE3               	decfsz	??_main,f
  1181  012A  2929               	goto	u1667
  1182  012B  0BE4               	decfsz	??_main+1,f
  1183  012C  2929               	goto	u1667
  1184  012D  292E               	nop2
  1185                           
  1186                           ;main.c: 159:             hr = hora & 0b00011111;
  1187  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1188  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0130  0833               	movf	_hora,w
  1190  0131  391F               	andlw	31
  1191  0132  00E3               	movwf	??_main
  1192  0133  0863               	movf	??_main,w
  1193  0134  00B2               	movwf	_hr
  1194                           
  1195                           ;main.c: 160:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1196  0135  301A               	movlw	26
  1197  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0138  00E4               	movwf	??_main+1
  1200  0139  30F7               	movlw	247
  1201  013A  00E3               	movwf	??_main
  1202  013B                     u1677:	
  1203  013B  0BE3               	decfsz	??_main,f
  1204  013C  293B               	goto	u1677
  1205  013D  0BE4               	decfsz	??_main+1,f
  1206  013E  293B               	goto	u1677
  1207  013F  2940               	nop2
  1208                           
  1209                           ;main.c: 161:             ap = hora & 0b00100000;
  1210  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0142  0833               	movf	_hora,w
  1213  0143  3920               	andlw	32
  1214  0144  00E3               	movwf	??_main
  1215  0145  0863               	movf	??_main,w
  1216  0146  00B1               	movwf	_ap
  1217                           
  1218                           ;main.c: 162:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1219  0147  301A               	movlw	26
  1220  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1222  014A  00E4               	movwf	??_main+1
  1223  014B  30F7               	movlw	247
  1224  014C  00E3               	movwf	??_main
  1225  014D                     u1687:	
  1226  014D  0BE3               	decfsz	??_main,f
  1227  014E  294D               	goto	u1687
  1228  014F  0BE4               	decfsz	??_main+1,f
  1229  0150  294D               	goto	u1687
  1230  0151  2952               	nop2
  1231                           
  1232                           ;main.c: 166:             I2C_Master_Start();
  1233  0152  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  1234                           
  1235                           ;main.c: 167:             I2C_Master_Write(0x30);
  1236  0157  3030               	movlw	48
  1237  0158  00F3               	movwf	I2C_Master_Write@d
  1238  0159  3000               	movlw	0
  1239  015A  00F4               	movwf	I2C_Master_Write@d+1
  1240  015B  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1241                           
  1242                           ;main.c: 168:             I2C_Master_Write(minuto);
  1243  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0162  0834               	movf	_minuto,w
  1246  0163  00E3               	movwf	??_main
  1247  0164  01E4               	clrf	??_main+1
  1248  0165  0863               	movf	??_main,w
  1249  0166  00F3               	movwf	I2C_Master_Write@d
  1250  0167  0864               	movf	??_main+1,w
  1251  0168  00F4               	movwf	I2C_Master_Write@d+1
  1252  0169  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1253                           
  1254                           ;main.c: 169:             I2C_Master_Stop();
  1255  016E  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1256                           
  1257                           ;main.c: 170:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1258  0173  301A               	movlw	26
  1259  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0176  00E4               	movwf	??_main+1
  1262  0177  30F7               	movlw	247
  1263  0178  00E3               	movwf	??_main
  1264  0179                     u1697:	
  1265  0179  0BE3               	decfsz	??_main,f
  1266  017A  2979               	goto	u1697
  1267  017B  0BE4               	decfsz	??_main+1,f
  1268  017C  2979               	goto	u1697
  1269  017D  297E               	nop2
  1270                           
  1271                           ;main.c: 174:             I2C_Master_Start();
  1272  017E  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  1273                           
  1274                           ;main.c: 175:             I2C_Master_Write(0x31);
  1275  0183  3031               	movlw	49
  1276  0184  00F3               	movwf	I2C_Master_Write@d
  1277  0185  3000               	movlw	0
  1278  0186  00F4               	movwf	I2C_Master_Write@d+1
  1279  0187  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1280                           
  1281                           ;main.c: 176:             pir = I2C_Master_Read(0);
  1282  018C  3000               	movlw	0
  1283  018D  00F3               	movwf	I2C_Master_Read@a
  1284  018E  00F4               	movwf	I2C_Master_Read@a+1
  1285  018F  120A  118A  27D1  120A  118A  	fcall	_I2C_Master_Read
  1286  0194  0873               	movf	?_I2C_Master_Read,w
  1287  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0197  00E3               	movwf	??_main
  1290  0198  0863               	movf	??_main,w
  1291  0199  00A6               	movwf	_pir
  1292                           
  1293                           ;main.c: 177:             I2C_Master_Stop();
  1294  019A  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1295                           
  1296                           ;main.c: 178:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1297  019F  301A               	movlw	26
  1298  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1299  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1300  01A2  00E4               	movwf	??_main+1
  1301  01A3  30F7               	movlw	247
  1302  01A4  00E3               	movwf	??_main
  1303  01A5                     u1707:	
  1304  01A5  0BE3               	decfsz	??_main,f
  1305  01A6  29A5               	goto	u1707
  1306  01A7  0BE4               	decfsz	??_main+1,f
  1307  01A8  29A5               	goto	u1707
  1308  01A9  29AA               	nop2
  1309                           
  1310                           ;main.c: 186:             I2C_Master_Start();
  1311  01AA  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  1312                           
  1313                           ;main.c: 187:             I2C_Master_Write(0x30);
  1314  01AF  3030               	movlw	48
  1315  01B0  00F3               	movwf	I2C_Master_Write@d
  1316  01B1  3000               	movlw	0
  1317  01B2  00F4               	movwf	I2C_Master_Write@d+1
  1318  01B3  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1319                           
  1320                           ;main.c: 188:             I2C_Master_Write(hr);
  1321  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1322  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1323  01BA  0832               	movf	_hr,w
  1324  01BB  00E3               	movwf	??_main
  1325  01BC  01E4               	clrf	??_main+1
  1326  01BD  0863               	movf	??_main,w
  1327  01BE  00F3               	movwf	I2C_Master_Write@d
  1328  01BF  0864               	movf	??_main+1,w
  1329  01C0  00F4               	movwf	I2C_Master_Write@d+1
  1330  01C1  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1331                           
  1332                           ;main.c: 189:             I2C_Master_Stop();
  1333  01C6  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1334                           
  1335                           ;main.c: 190:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1336  01CB  301A               	movlw	26
  1337  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1338  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1339  01CE  00E4               	movwf	??_main+1
  1340  01CF  30F7               	movlw	247
  1341  01D0  00E3               	movwf	??_main
  1342  01D1                     u1717:	
  1343  01D1  0BE3               	decfsz	??_main,f
  1344  01D2  29D1               	goto	u1717
  1345  01D3  0BE4               	decfsz	??_main+1,f
  1346  01D4  29D1               	goto	u1717
  1347  01D5  29D6               	nop2
  1348                           
  1349                           ;main.c: 199:             I2C_Master_Start();
  1350  01D6  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  1351                           
  1352                           ;main.c: 200:             I2C_Master_Write(0x40);
  1353  01DB  3040               	movlw	64
  1354  01DC  00F3               	movwf	I2C_Master_Write@d
  1355  01DD  3000               	movlw	0
  1356  01DE  00F4               	movwf	I2C_Master_Write@d+1
  1357  01DF  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1358                           
  1359                           ;main.c: 201:             I2C_Master_Write(0x1);
  1360  01E4  3001               	movlw	1
  1361  01E5  00F3               	movwf	I2C_Master_Write@d
  1362  01E6  3000               	movlw	0
  1363  01E7  00F4               	movwf	I2C_Master_Write@d+1
  1364  01E8  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1365                           
  1366                           ;main.c: 202:             I2C_Master_Stop();
  1367  01ED  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1368                           
  1369                           ;main.c: 203:            _delay((unsigned long)((10)*(8000000/4000.0)));
  1370  01F2  301A               	movlw	26
  1371  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1372  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1373  01F5  00E4               	movwf	??_main+1
  1374  01F6  30F7               	movlw	247
  1375  01F7  00E3               	movwf	??_main
  1376  01F8                     u1727:	
  1377  01F8  0BE3               	decfsz	??_main,f
  1378  01F9  29F8               	goto	u1727
  1379  01FA  0BE4               	decfsz	??_main+1,f
  1380  01FB  29F8               	goto	u1727
  1381  01FC  29FD               	nop2
  1382                           
  1383                           ;main.c: 205:             I2C_Master_Start();
  1384  01FD  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  1385                           
  1386                           ;main.c: 206:             I2C_Master_Write(0x41);
  1387  0202  3041               	movlw	65
  1388  0203  00F3               	movwf	I2C_Master_Write@d
  1389  0204  3000               	movlw	0
  1390  0205  00F4               	movwf	I2C_Master_Write@d+1
  1391  0206  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1392                           
  1393                           ;main.c: 207:             hum = I2C_Master_Read(0);
  1394  020B  3000               	movlw	0
  1395  020C  00F3               	movwf	I2C_Master_Read@a
  1396  020D  00F4               	movwf	I2C_Master_Read@a+1
  1397  020E  120A  118A  27D1  120A  118A  	fcall	_I2C_Master_Read
  1398  0213  0873               	movf	?_I2C_Master_Read,w
  1399  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0216  00E3               	movwf	??_main
  1402  0217  0863               	movf	??_main,w
  1403  0218  00A5               	movwf	_hum
  1404                           
  1405                           ;main.c: 208:             I2C_Master_Stop();
  1406  0219  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1407                           
  1408                           ;main.c: 209:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1409  021E  301A               	movlw	26
  1410  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0221  00E4               	movwf	??_main+1
  1413  0222  30F7               	movlw	247
  1414  0223  00E3               	movwf	??_main
  1415  0224                     u1737:	
  1416  0224  0BE3               	decfsz	??_main,f
  1417  0225  2A24               	goto	u1737
  1418  0226  0BE4               	decfsz	??_main+1,f
  1419  0227  2A24               	goto	u1737
  1420  0228  2A29               	nop2
  1421                           
  1422                           ;main.c: 213:             I2C_Master_Start();
  1423  0229  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  1424                           
  1425                           ;main.c: 214:             I2C_Master_Write(0x40);
  1426  022E  3040               	movlw	64
  1427  022F  00F3               	movwf	I2C_Master_Write@d
  1428  0230  3000               	movlw	0
  1429  0231  00F4               	movwf	I2C_Master_Write@d+1
  1430  0232  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1431                           
  1432                           ;main.c: 215:             I2C_Master_Write(0x2);
  1433  0237  3002               	movlw	2
  1434  0238  00F3               	movwf	I2C_Master_Write@d
  1435  0239  3000               	movlw	0
  1436  023A  00F4               	movwf	I2C_Master_Write@d+1
  1437  023B  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1438                           
  1439                           ;main.c: 216:             I2C_Master_Stop();
  1440  0240  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1441                           
  1442                           ;main.c: 217:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1443  0245  301A               	movlw	26
  1444  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0248  00E4               	movwf	??_main+1
  1447  0249  30F7               	movlw	247
  1448  024A  00E3               	movwf	??_main
  1449  024B                     u1747:	
  1450  024B  0BE3               	decfsz	??_main,f
  1451  024C  2A4B               	goto	u1747
  1452  024D  0BE4               	decfsz	??_main+1,f
  1453  024E  2A4B               	goto	u1747
  1454  024F  2A50               	nop2
  1455                           
  1456                           ;main.c: 220:             I2C_Master_Start();
  1457  0250  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  1458                           
  1459                           ;main.c: 221:             I2C_Master_Write(0x41);
  1460  0255  3041               	movlw	65
  1461  0256  00F3               	movwf	I2C_Master_Write@d
  1462  0257  3000               	movlw	0
  1463  0258  00F4               	movwf	I2C_Master_Write@d+1
  1464  0259  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  1465                           
  1466                           ;main.c: 222:             temperatura = I2C_Master_Read(0);
  1467  025E  3000               	movlw	0
  1468  025F  00F3               	movwf	I2C_Master_Read@a
  1469  0260  00F4               	movwf	I2C_Master_Read@a+1
  1470  0261  120A  118A  27D1  120A  118A  	fcall	_I2C_Master_Read
  1471  0266  0873               	movf	?_I2C_Master_Read,w
  1472  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0269  00E3               	movwf	??_main
  1475  026A  0863               	movf	??_main,w
  1476  026B  00E7               	movwf	_temperatura
  1477                           
  1478                           ;main.c: 223:             I2C_Master_Stop();
  1479  026C  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Stop
  1480                           
  1481                           ;main.c: 224:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1482  0271  301A               	movlw	26
  1483  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0274  00E4               	movwf	??_main+1
  1486  0275  30F7               	movlw	247
  1487  0276  00E3               	movwf	??_main
  1488  0277                     u1757:	
  1489  0277  0BE3               	decfsz	??_main,f
  1490  0278  2A77               	goto	u1757
  1491  0279  0BE4               	decfsz	??_main+1,f
  1492  027A  2A77               	goto	u1757
  1493  027B  2A7C               	nop2
  1494                           
  1495                           ;main.c: 255:             PORTDbits.RD7 = 1;
  1496  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1497  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1498  027E  1788               	bsf	8,7	;volatile
  1499                           
  1500                           ;main.c: 256:             cual_dato = UART_Rx();
  1501  027F  120A  158A  267C  120A  118A  	fcall	_UART_Rx
  1502  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1503  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1504  0286  00E3               	movwf	??_main
  1505  0287  0863               	movf	??_main,w
  1506  0288  00AF               	movwf	_cual_dato
  1507                           
  1508                           ;main.c: 257:          PORTDbits.RD2 = 1;
  1509  0289  1508               	bsf	8,2	;volatile
  1510                           
  1511                           ;main.c: 258:         if(cual_dato == 1U){
  1512  028A  032F               	decf	_cual_dato,w
  1513  028B  1D03               	btfss	3,2
  1514  028C  2A8F               	goto	l2660
  1515                           
  1516                           ;main.c: 259:             UART_Tx(hum);
  1517  028D  0825               	movf	_hum,w
  1518  028E  2AB2               	goto	L2
  1519  028F                     l2660:	
  1520                           ;main.c: 260:         }else if(cual_dato == 2U){
  1521                           
  1522  028F  3002               	movlw	2
  1523  0290  062F               	xorwf	_cual_dato,w
  1524  0291  1D03               	btfss	3,2
  1525  0292  2A95               	goto	l2664
  1526                           
  1527                           ;main.c: 261:             UART_Tx(puerta);
  1528  0293  0828               	movf	_puerta,w
  1529  0294  2AB2               	goto	L2
  1530  0295                     l2664:	
  1531                           ;main.c: 262:         }else if(cual_dato == 3U){
  1532                           
  1533  0295  3003               	movlw	3
  1534  0296  062F               	xorwf	_cual_dato,w
  1535  0297  1D03               	btfss	3,2
  1536  0298  2A9B               	goto	l2668
  1537                           
  1538                           ;main.c: 263:             UART_Tx(temperatura);
  1539  0299  0867               	movf	_temperatura,w
  1540  029A  2AB2               	goto	L2
  1541  029B                     l2668:	
  1542                           ;main.c: 264:         }else if(cual_dato == 4U){
  1543                           
  1544  029B  3004               	movlw	4
  1545  029C  062F               	xorwf	_cual_dato,w
  1546  029D  1D03               	btfss	3,2
  1547  029E  2AA1               	goto	l2672
  1548                           
  1549                           ;main.c: 265:             UART_Tx(pir);
  1550  029F  0826               	movf	_pir,w
  1551  02A0  2AB2               	goto	L2
  1552  02A1                     l2672:	
  1553                           ;main.c: 266:         }else if(cual_dato == 5U){
  1554                           
  1555  02A1  3005               	movlw	5
  1556  02A2  062F               	xorwf	_cual_dato,w
  1557  02A3  1D03               	btfss	3,2
  1558  02A4  2AA7               	goto	l2676
  1559                           
  1560                           ;main.c: 267:             UART_Tx(hr);
  1561  02A5  0832               	movf	_hr,w
  1562  02A6  2AB2               	goto	L2
  1563  02A7                     l2676:	
  1564                           ;main.c: 268:         }else if(cual_dato == 6U){
  1565                           
  1566  02A7  3006               	movlw	6
  1567  02A8  062F               	xorwf	_cual_dato,w
  1568  02A9  1D03               	btfss	3,2
  1569  02AA  2AAD               	goto	l2680
  1570                           
  1571                           ;main.c: 269:             UART_Tx(minuto);
  1572  02AB  0834               	movf	_minuto,w
  1573  02AC  2AB2               	goto	L2
  1574  02AD                     l2680:	
  1575                           ;main.c: 270:         }else if(cual_dato == 7U){
  1576                           
  1577  02AD  3007               	movlw	7
  1578  02AE  062F               	xorwf	_cual_dato,w
  1579  02AF  1D03               	btfss	3,2
  1580  02B0  2AB7               	goto	l2684
  1581                           
  1582                           ;main.c: 271:             UART_Tx(luz);
  1583  02B1  0827               	movf	_luz,w
  1584  02B2                     L2:	
  1585  02B2  120A  158A  26A8  120A  118A  	fcall	_UART_Tx
  1586  02B7                     l2684:	
  1587                           
  1588                           ;main.c: 273:             PORTDbits.RD7 = 0;
  1589  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1590  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1591  02B9  1388               	bcf	8,7	;volatile
  1592                           
  1593                           ;main.c: 275:             LCD8_clear();
  1594  02BA  120A  158A  26BA  120A  118A  	fcall	_LCD8_clear
  1595                           
  1596                           ;main.c: 276:             if(t1_count<177){
  1597  02BF  30B1               	movlw	177
  1598  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1599  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1600  02C2  0238               	subwf	_t1_count,w
  1601  02C3  1803               	skipnc
  1602  02C4  2BC9               	goto	l2740
  1603                           
  1604                           ;main.c: 277:                 LCD8_set_cursor(1,1);
  1605  02C5  01F6               	clrf	LCD8_set_cursor@column
  1606  02C6  0AF6               	incf	LCD8_set_cursor@column,f
  1607  02C7  3001               	movlw	1
  1608  02C8  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1609                           
  1610                           ;main.c: 278:             LCD8_strWrite("Luz");
  1611  02CD  3045               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1612  02CE  00F5               	movwf	LCD8_strWrite@data
  1613  02CF  3080               	movlw	128
  1614  02D0  00F6               	movwf	LCD8_strWrite@data+1
  1615  02D1  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1616                           
  1617                           ;main.c: 279:             if(luz<100){
  1618  02D6  3064               	movlw	100
  1619  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1620  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1621  02D9  0227               	subwf	_luz,w
  1622  02DA  1803               	skipnc
  1623  02DB  2AFE               	goto	l2700
  1624                           
  1625                           ;main.c: 280:             sprintf(show,"%d ",luz);
  1626  02DC  3031               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1627  02DD  00E3               	movwf	??_main
  1628  02DE  0863               	movf	??_main,w
  1629  02DF  00D6               	movwf	sprintf@f
  1630  02E0  0827               	movf	_luz,w
  1631  02E1  00E4               	movwf	??_main+1
  1632  02E2  01E5               	clrf	??_main+2
  1633  02E3  0864               	movf	??_main+1,w
  1634  02E4  00D7               	movwf	?_sprintf+1
  1635  02E5  0865               	movf	??_main+2,w
  1636  02E6  00D8               	movwf	?_sprintf+2
  1637  02E7  3039               	movlw	(low (_show| 0))& (0+255)
  1638  02E8  120A  118A  24F2  120A  118A  	fcall	_sprintf
  1639                           
  1640                           ;main.c: 281:             LCD8_set_cursor(2,1);
  1641  02ED  01F6               	clrf	LCD8_set_cursor@column
  1642  02EE  0AF6               	incf	LCD8_set_cursor@column,f
  1643  02EF  3002               	movlw	2
  1644  02F0  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1645                           
  1646                           ;main.c: 282:             LCD8_strWrite(show);
  1647  02F5  3039               	movlw	(low (_show| 0))& (0+255)
  1648  02F6  00F5               	movwf	LCD8_strWrite@data
  1649  02F7  3000               	movlw	0
  1650  02F8  00F6               	movwf	LCD8_strWrite@data+1
  1651  02F9  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1652  02FE                     l2700:	
  1653                           
  1654                           ;main.c: 285:             if(luz>99){
  1655  02FE  3064               	movlw	100
  1656  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1657  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1658  0301  0227               	subwf	_luz,w
  1659  0302  1C03               	skipc
  1660  0303  2B26               	goto	l247
  1661                           
  1662                           ;main.c: 286:             sprintf(show,"%d",luz);
  1663  0304  303E               	movlw	(low (((STR_13+1)-__stringbase)| (0+32768)))& (0+255)
  1664  0305  00E3               	movwf	??_main
  1665  0306  0863               	movf	??_main,w
  1666  0307  00D6               	movwf	sprintf@f
  1667  0308  0827               	movf	_luz,w
  1668  0309  00E4               	movwf	??_main+1
  1669  030A  01E5               	clrf	??_main+2
  1670  030B  0864               	movf	??_main+1,w
  1671  030C  00D7               	movwf	?_sprintf+1
  1672  030D  0865               	movf	??_main+2,w
  1673  030E  00D8               	movwf	?_sprintf+2
  1674  030F  3039               	movlw	(low (_show| 0))& (0+255)
  1675  0310  120A  118A  24F2  120A  118A  	fcall	_sprintf
  1676                           
  1677                           ;main.c: 287:             LCD8_set_cursor(2,1);
  1678  0315  01F6               	clrf	LCD8_set_cursor@column
  1679  0316  0AF6               	incf	LCD8_set_cursor@column,f
  1680  0317  3002               	movlw	2
  1681  0318  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1682                           
  1683                           ;main.c: 288:             LCD8_strWrite(show);
  1684  031D  3039               	movlw	(low (_show| 0))& (0+255)
  1685  031E  00F5               	movwf	LCD8_strWrite@data
  1686  031F  3000               	movlw	0
  1687  0320  00F6               	movwf	LCD8_strWrite@data+1
  1688  0321  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1689  0326                     l247:	
  1690                           ;main.c: 289:             }
  1691                           
  1692                           
  1693                           ;main.c: 292:             LCD8_set_cursor(1,6);
  1694  0326  3006               	movlw	6
  1695  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0329  00E3               	movwf	??_main
  1698  032A  0863               	movf	??_main,w
  1699  032B  00F6               	movwf	LCD8_set_cursor@column
  1700  032C  3001               	movlw	1
  1701  032D  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1702                           
  1703                           ;main.c: 293:             LCD8_strWrite("Dist.");
  1704  0332  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1705  0333  00F5               	movwf	LCD8_strWrite@data
  1706  0334  3080               	movlw	128
  1707  0335  00F6               	movwf	LCD8_strWrite@data+1
  1708  0336  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1709                           
  1710                           ;main.c: 294:              if(puerta <100){
  1711  033B  3064               	movlw	100
  1712  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1713  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1714  033E  0228               	subwf	_puerta,w
  1715  033F  1803               	skipnc
  1716  0340  2B67               	goto	l2718
  1717                           
  1718                           ;main.c: 295:             sprintf(show,"%dcm ",puerta);
  1719  0341  3016               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1720  0342  00E3               	movwf	??_main
  1721  0343  0863               	movf	??_main,w
  1722  0344  00D6               	movwf	sprintf@f
  1723  0345  0828               	movf	_puerta,w
  1724  0346  00E4               	movwf	??_main+1
  1725  0347  01E5               	clrf	??_main+2
  1726  0348  0864               	movf	??_main+1,w
  1727  0349  00D7               	movwf	?_sprintf+1
  1728  034A  0865               	movf	??_main+2,w
  1729  034B  00D8               	movwf	?_sprintf+2
  1730  034C  3039               	movlw	(low (_show| 0))& (0+255)
  1731  034D  120A  118A  24F2  120A  118A  	fcall	_sprintf
  1732                           
  1733                           ;main.c: 296:             LCD8_set_cursor(2,6);
  1734  0352  3006               	movlw	6
  1735  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0355  00E3               	movwf	??_main
  1738  0356  0863               	movf	??_main,w
  1739  0357  00F6               	movwf	LCD8_set_cursor@column
  1740  0358  3002               	movlw	2
  1741  0359  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1742                           
  1743                           ;main.c: 297:             LCD8_strWrite(show);
  1744  035E  3039               	movlw	(low (_show| 0))& (0+255)
  1745  035F  00F5               	movwf	LCD8_strWrite@data
  1746  0360  3000               	movlw	0
  1747  0361  00F6               	movwf	LCD8_strWrite@data+1
  1748  0362  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1749  0367                     l2718:	
  1750                           
  1751                           ;main.c: 300:             if(puerta>99){
  1752  0367  3064               	movlw	100
  1753  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1755  036A  0228               	subwf	_puerta,w
  1756  036B  1C03               	skipc
  1757  036C  2B93               	goto	l249
  1758                           
  1759                           ;main.c: 301:             sprintf(show,"%dcm",puerta);
  1760  036D  302C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1761  036E  00E3               	movwf	??_main
  1762  036F  0863               	movf	??_main,w
  1763  0370  00D6               	movwf	sprintf@f
  1764  0371  0828               	movf	_puerta,w
  1765  0372  00E4               	movwf	??_main+1
  1766  0373  01E5               	clrf	??_main+2
  1767  0374  0864               	movf	??_main+1,w
  1768  0375  00D7               	movwf	?_sprintf+1
  1769  0376  0865               	movf	??_main+2,w
  1770  0377  00D8               	movwf	?_sprintf+2
  1771  0378  3039               	movlw	(low (_show| 0))& (0+255)
  1772  0379  120A  118A  24F2  120A  118A  	fcall	_sprintf
  1773                           
  1774                           ;main.c: 302:             LCD8_set_cursor(2,6);
  1775  037E  3006               	movlw	6
  1776  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1777  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0381  00E3               	movwf	??_main
  1779  0382  0863               	movf	??_main,w
  1780  0383  00F6               	movwf	LCD8_set_cursor@column
  1781  0384  3002               	movlw	2
  1782  0385  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1783                           
  1784                           ;main.c: 303:             LCD8_strWrite(show);
  1785  038A  3039               	movlw	(low (_show| 0))& (0+255)
  1786  038B  00F5               	movwf	LCD8_strWrite@data
  1787  038C  3000               	movlw	0
  1788  038D  00F6               	movwf	LCD8_strWrite@data+1
  1789  038E  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1790  0393                     l249:	
  1791                           ;main.c: 304:             }
  1792                           
  1793                           
  1794                           ;main.c: 306:             LCD8_set_cursor(1,12);
  1795  0393  300C               	movlw	12
  1796  0394  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0395  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0396  00E3               	movwf	??_main
  1799  0397  0863               	movf	??_main,w
  1800  0398  00F6               	movwf	LCD8_set_cursor@column
  1801  0399  3001               	movlw	1
  1802  039A  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1803                           
  1804                           ;main.c: 307:             LCD8_strWrite("Mov");
  1805  039F  3041               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1806  03A0  00F5               	movwf	LCD8_strWrite@data
  1807  03A1  3080               	movlw	128
  1808  03A2  00F6               	movwf	LCD8_strWrite@data+1
  1809  03A3  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1810                           
  1811                           ;main.c: 308:             LCD8_set_cursor(2,12);
  1812  03A8  300C               	movlw	12
  1813  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1814  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1815  03AB  00E3               	movwf	??_main
  1816  03AC  0863               	movf	??_main,w
  1817  03AD  00F6               	movwf	LCD8_set_cursor@column
  1818  03AE  3002               	movlw	2
  1819  03AF  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1820                           
  1821                           ;main.c: 309:             if (pir == 1){
  1822  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1823  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1824  03B6  0326               	decf	_pir,w
  1825  03B7  1D03               	btfss	3,2
  1826  03B8  2BBB               	goto	l2734
  1827                           
  1828                           ;main.c: 310:             LCD8_strWrite("Si");
  1829  03B9  3049               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1830  03BA  2BC1               	goto	L1
  1831  03BB                     l2734:	
  1832                           ;main.c: 311:             }
  1833                           
  1834  03BB  0826               	movf	_pir,w
  1835  03BC  1D03               	btfss	3,2
  1836  03BD  2BC0               	goto	l2738
  1837                           
  1838                           ;main.c: 313:             LCD8_strWrite("No");
  1839  03BE  304C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1840  03BF  2BC1               	goto	L1
  1841  03C0                     l2738:	
  1842                           ;main.c: 314:             } else{
  1843                           
  1844                           
  1845                           ;main.c: 315:                LCD8_strWrite("N/A");
  1846  03C0  3035               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1847  03C1                     L1:	
  1848  03C1  00F5               	movwf	LCD8_strWrite@data
  1849  03C2  3080               	movlw	128
  1850  03C3  00F6               	movwf	LCD8_strWrite@data+1
  1851  03C4  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1852  03C9                     l2740:	
  1853                           
  1854                           ;main.c: 318:             if(t1_count>=177){
  1855  03C9  30B1               	movlw	177
  1856  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1857  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1858  03CC  0238               	subwf	_t1_count,w
  1859  03CD  1C03               	skipc
  1860  03CE  282E               	goto	l2516
  1861                           
  1862                           ;main.c: 320:             LCD8_set_cursor(1,1);
  1863  03CF  01F6               	clrf	LCD8_set_cursor@column
  1864  03D0  0AF6               	incf	LCD8_set_cursor@column,f
  1865  03D1  3001               	movlw	1
  1866  03D2  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1867                           
  1868                           ;main.c: 321:             LCD8_strWrite("Hora");
  1869  03D7  3027               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1870  03D8  00F5               	movwf	LCD8_strWrite@data
  1871  03D9  3080               	movlw	128
  1872  03DA  00F6               	movwf	LCD8_strWrite@data+1
  1873  03DB  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1874                           
  1875                           ;main.c: 322:             sprintf (show,"%d",hr);
  1876  03E0  303E               	movlw	(low (((STR_13+1)-__stringbase)| (0+32768)))& (0+255)
  1877  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1878  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1879  03E3  00E3               	movwf	??_main
  1880  03E4  0863               	movf	??_main,w
  1881  03E5  00D6               	movwf	sprintf@f
  1882  03E6  0832               	movf	_hr,w
  1883  03E7  00E4               	movwf	??_main+1
  1884  03E8  01E5               	clrf	??_main+2
  1885  03E9  0864               	movf	??_main+1,w
  1886  03EA  00D7               	movwf	?_sprintf+1
  1887  03EB  0865               	movf	??_main+2,w
  1888  03EC  00D8               	movwf	?_sprintf+2
  1889  03ED  3039               	movlw	(low (_show| 0))& (0+255)
  1890  03EE  120A  118A  24F2  120A  118A  	fcall	_sprintf
  1891                           
  1892                           ;main.c: 323:             LCD8_set_cursor(2,1);
  1893  03F3  01F6               	clrf	LCD8_set_cursor@column
  1894  03F4  0AF6               	incf	LCD8_set_cursor@column,f
  1895  03F5  3002               	movlw	2
  1896  03F6  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1897                           
  1898                           ;main.c: 324:             LCD8_strWrite(show);
  1899  03FB  3039               	movlw	(low (_show| 0))& (0+255)
  1900  03FC  00F5               	movwf	LCD8_strWrite@data
  1901  03FD  3000               	movlw	0
  1902  03FE  00F6               	movwf	LCD8_strWrite@data+1
  1903  03FF  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1904                           
  1905                           ;main.c: 325:             sprintf (show,":%d",minuto);
  1906  0404  303D               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1907  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0407  00E3               	movwf	??_main
  1910  0408  0863               	movf	??_main,w
  1911  0409  00D6               	movwf	sprintf@f
  1912  040A  0834               	movf	_minuto,w
  1913  040B  00E4               	movwf	??_main+1
  1914  040C  01E5               	clrf	??_main+2
  1915  040D  0864               	movf	??_main+1,w
  1916  040E  00D7               	movwf	?_sprintf+1
  1917  040F  0865               	movf	??_main+2,w
  1918  0410  00D8               	movwf	?_sprintf+2
  1919  0411  3039               	movlw	(low (_show| 0))& (0+255)
  1920  0412  120A  118A  24F2  120A  118A  	fcall	_sprintf
  1921                           
  1922                           ;main.c: 326:             LCD8_set_cursor(2,2);
  1923  0417  3002               	movlw	2
  1924  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1926  041A  00E3               	movwf	??_main
  1927  041B  0863               	movf	??_main,w
  1928  041C  00F6               	movwf	LCD8_set_cursor@column
  1929  041D  3002               	movlw	2
  1930  041E  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1931                           
  1932                           ;main.c: 327:             LCD8_strWrite(show);
  1933  0423  3039               	movlw	(low (_show| 0))& (0+255)
  1934  0424  00F5               	movwf	LCD8_strWrite@data
  1935  0425  3000               	movlw	0
  1936  0426  00F6               	movwf	LCD8_strWrite@data+1
  1937  0427  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1938                           
  1939                           ;main.c: 329:             LCD8_set_cursor(1,7);
  1940  042C  3007               	movlw	7
  1941  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1942  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1943  042F  00E3               	movwf	??_main
  1944  0430  0863               	movf	??_main,w
  1945  0431  00F6               	movwf	LCD8_set_cursor@column
  1946  0432  3001               	movlw	1
  1947  0433  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1948                           
  1949                           ;main.c: 330:             LCD8_strWrite("Hum + Temp");
  1950  0438  300B               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1951  0439  00F5               	movwf	LCD8_strWrite@data
  1952  043A  3080               	movlw	128
  1953  043B  00F6               	movwf	LCD8_strWrite@data+1
  1954  043C  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1955                           
  1956                           ;main.c: 331:             if(hum <100){
  1957  0441  3064               	movlw	100
  1958  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0444  0225               	subwf	_hum,w
  1961  0445  1803               	skipnc
  1962  0446  2C6D               	goto	l2764
  1963                           
  1964                           ;main.c: 332:             sprintf(show,"%d ",hum);
  1965  0447  3031               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1966  0448  00E3               	movwf	??_main
  1967  0449  0863               	movf	??_main,w
  1968  044A  00D6               	movwf	sprintf@f
  1969  044B  0825               	movf	_hum,w
  1970  044C  00E4               	movwf	??_main+1
  1971  044D  01E5               	clrf	??_main+2
  1972  044E  0864               	movf	??_main+1,w
  1973  044F  00D7               	movwf	?_sprintf+1
  1974  0450  0865               	movf	??_main+2,w
  1975  0451  00D8               	movwf	?_sprintf+2
  1976  0452  3039               	movlw	(low (_show| 0))& (0+255)
  1977  0453  120A  118A  24F2  120A  118A  	fcall	_sprintf
  1978                           
  1979                           ;main.c: 333:             LCD8_set_cursor(2,7);
  1980  0458  3007               	movlw	7
  1981  0459  1283               	bcf	3,5	;RP0=0, select bank0
  1982  045A  1303               	bcf	3,6	;RP1=0, select bank0
  1983  045B  00E3               	movwf	??_main
  1984  045C  0863               	movf	??_main,w
  1985  045D  00F6               	movwf	LCD8_set_cursor@column
  1986  045E  3002               	movlw	2
  1987  045F  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  1988                           
  1989                           ;main.c: 334:             LCD8_strWrite(show);
  1990  0464  3039               	movlw	(low (_show| 0))& (0+255)
  1991  0465  00F5               	movwf	LCD8_strWrite@data
  1992  0466  3000               	movlw	0
  1993  0467  00F6               	movwf	LCD8_strWrite@data+1
  1994  0468  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  1995  046D                     l2764:	
  1996                           
  1997                           ;main.c: 336:             if(hum>99){
  1998  046D  3064               	movlw	100
  1999  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2000  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0470  0225               	subwf	_hum,w
  2002  0471  1C03               	skipc
  2003  0472  2C99               	goto	l2772
  2004                           
  2005                           ;main.c: 337:             sprintf(show,"%d",hum);
  2006  0473  303E               	movlw	(low (((STR_13+1)-__stringbase)| (0+32768)))& (0+255)
  2007  0474  00E3               	movwf	??_main
  2008  0475  0863               	movf	??_main,w
  2009  0476  00D6               	movwf	sprintf@f
  2010  0477  0825               	movf	_hum,w
  2011  0478  00E4               	movwf	??_main+1
  2012  0479  01E5               	clrf	??_main+2
  2013  047A  0864               	movf	??_main+1,w
  2014  047B  00D7               	movwf	?_sprintf+1
  2015  047C  0865               	movf	??_main+2,w
  2016  047D  00D8               	movwf	?_sprintf+2
  2017  047E  3039               	movlw	(low (_show| 0))& (0+255)
  2018  047F  120A  118A  24F2  120A  118A  	fcall	_sprintf
  2019                           
  2020                           ;main.c: 338:             LCD8_set_cursor(2,7);
  2021  0484  3007               	movlw	7
  2022  0485  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0486  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0487  00E3               	movwf	??_main
  2025  0488  0863               	movf	??_main,w
  2026  0489  00F6               	movwf	LCD8_set_cursor@column
  2027  048A  3002               	movlw	2
  2028  048B  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  2029                           
  2030                           ;main.c: 339:             LCD8_strWrite(show);
  2031  0490  3039               	movlw	(low (_show| 0))& (0+255)
  2032  0491  00F5               	movwf	LCD8_strWrite@data
  2033  0492  3000               	movlw	0
  2034  0493  00F6               	movwf	LCD8_strWrite@data+1
  2035  0494  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  2036  0499                     l2772:	
  2037                           
  2038                           ;main.c: 342:             if(temperatura <100){
  2039  0499  3064               	movlw	100
  2040  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2041  049B  1303               	bcf	3,6	;RP1=0, select bank0
  2042  049C  0267               	subwf	_temperatura,w
  2043  049D  1803               	skipnc
  2044  049E  2CC5               	goto	l2780
  2045                           
  2046                           ;main.c: 343:             sprintf(show,"%d C",temperatura);
  2047  049F  3022               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2048  04A0  00E3               	movwf	??_main
  2049  04A1  0863               	movf	??_main,w
  2050  04A2  00D6               	movwf	sprintf@f
  2051  04A3  0867               	movf	_temperatura,w
  2052  04A4  00E4               	movwf	??_main+1
  2053  04A5  01E5               	clrf	??_main+2
  2054  04A6  0864               	movf	??_main+1,w
  2055  04A7  00D7               	movwf	?_sprintf+1
  2056  04A8  0865               	movf	??_main+2,w
  2057  04A9  00D8               	movwf	?_sprintf+2
  2058  04AA  3039               	movlw	(low (_show| 0))& (0+255)
  2059  04AB  120A  118A  24F2  120A  118A  	fcall	_sprintf
  2060                           
  2061                           ;main.c: 344:             LCD8_set_cursor(2,13);
  2062  04B0  300D               	movlw	13
  2063  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2064  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2065  04B3  00E3               	movwf	??_main
  2066  04B4  0863               	movf	??_main,w
  2067  04B5  00F6               	movwf	LCD8_set_cursor@column
  2068  04B6  3002               	movlw	2
  2069  04B7  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  2070                           
  2071                           ;main.c: 345:             LCD8_strWrite(show);
  2072  04BC  3039               	movlw	(low (_show| 0))& (0+255)
  2073  04BD  00F5               	movwf	LCD8_strWrite@data
  2074  04BE  3000               	movlw	0
  2075  04BF  00F6               	movwf	LCD8_strWrite@data+1
  2076  04C0  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  2077  04C5                     l2780:	
  2078                           
  2079                           ;main.c: 347:             if(temperatura>99){
  2080  04C5  3064               	movlw	100
  2081  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2082  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2083  04C8  0267               	subwf	_temperatura,w
  2084  04C9  1C03               	skipc
  2085  04CA  282E               	goto	l2516
  2086                           
  2087                           ;main.c: 348:             sprintf(show,"%dC",temperatura);
  2088  04CB  3039               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2089  04CC  00E3               	movwf	??_main
  2090  04CD  0863               	movf	??_main,w
  2091  04CE  00D6               	movwf	sprintf@f
  2092  04CF  0867               	movf	_temperatura,w
  2093  04D0  00E4               	movwf	??_main+1
  2094  04D1  01E5               	clrf	??_main+2
  2095  04D2  0864               	movf	??_main+1,w
  2096  04D3  00D7               	movwf	?_sprintf+1
  2097  04D4  0865               	movf	??_main+2,w
  2098  04D5  00D8               	movwf	?_sprintf+2
  2099  04D6  3039               	movlw	(low (_show| 0))& (0+255)
  2100  04D7  120A  118A  24F2  120A  118A  	fcall	_sprintf
  2101                           
  2102                           ;main.c: 349:             LCD8_set_cursor(2,13);
  2103  04DC  300D               	movlw	13
  2104  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2105  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2106  04DF  00E3               	movwf	??_main
  2107  04E0  0863               	movf	??_main,w
  2108  04E1  00F6               	movwf	LCD8_set_cursor@column
  2109  04E2  3002               	movlw	2
  2110  04E3  120A  158A  2709  120A  118A  	fcall	_LCD8_set_cursor
  2111                           
  2112                           ;main.c: 350:             LCD8_strWrite(show);
  2113  04E8  3039               	movlw	(low (_show| 0))& (0+255)
  2114  04E9  00F5               	movwf	LCD8_strWrite@data
  2115  04EA  3000               	movlw	0
  2116  04EB  00F6               	movwf	LCD8_strWrite@data+1
  2117  04EC  120A  158A  276A  120A  118A  	fcall	_LCD8_strWrite
  2118  04F1  282E               	goto	l2516
  2119  04F2                     __end_of_main:	
  2120                           
  2121                           	psect	text1
  2122  04F2                     __ptext1:	
  2123 ;; *************** function _sprintf *****************
  2124 ;; Defined at:
  2125 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  sp              1    wreg     PTR unsigned char 
  2128 ;;		 -> show(20), 
  2129 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  2130 ;;		 -> STR_18(4), STR_17(5), STR_16(3), STR_15(4), 
  2131 ;;		 -> STR_13(4), STR_12(3), STR_6(5), STR_5(6), 
  2132 ;;		 -> STR_3(3), STR_2(4), 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  2135 ;;		 -> show(20), 
  2136 ;;  tmpval          4    0        struct .
  2137 ;;  val             2   18[BANK0 ] unsigned int 
  2138 ;;  cp              2    0        PTR const unsigned char 
  2139 ;;  len             2    0        unsigned int 
  2140 ;;  c               1   21[BANK0 ] unsigned char 
  2141 ;;  prec            1   17[BANK0 ] char 
  2142 ;;  flag            1   16[BANK0 ] unsigned char 
  2143 ;;  ap              1   15[BANK0 ] PTR void [1]
  2144 ;;		 -> ?_sprintf(2), 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  2    9[BANK0 ] int 
  2147 ;; Registers used:
  2148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2154 ;;      Params:         0       3       0       0       0
  2155 ;;      Locals:         0       7       0       0       0
  2156 ;;      Temps:          0       3       0       0       0
  2157 ;;      Totals:         0      13       0       0       0
  2158 ;;Total ram usage:       13 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    2
  2161 ;; This function calls:
  2162 ;;		___lwdiv
  2163 ;;		___lwmod
  2164 ;; This function is called by:
  2165 ;;		_main
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _sprintf
  2171  04F2                     _sprintf:	
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2175                           ;sprintf@sp stored from wreg
  2176  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2177  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  2178  04F4  00E1               	movwf	sprintf@sp
  2179                           
  2180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2181  04F5  3057               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2182  04F6  00D9               	movwf	??_sprintf
  2183  04F7  0859               	movf	??_sprintf,w
  2184  04F8  00DC               	movwf	sprintf@ap
  2185  04F9                     l2500:	
  2186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2187                           
  2188                           
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2190  04F9  3001               	movlw	1
  2191  04FA  07D6               	addwf	sprintf@f,f
  2192  04FB  30FF               	movlw	-1
  2193  04FC  0756               	addwf	sprintf@f,w
  2194  04FD  0084               	movwf	4
  2195  04FE  120A  118A  26AC  120A  118A  	fcall	stringdir
  2196  0503  00D9               	movwf	??_sprintf
  2197  0504  0859               	movf	??_sprintf,w
  2198  0505  00E2               	movwf	sprintf@c
  2199  0506  0862               	movf	sprintf@c,w
  2200  0507  1903               	btfsc	3,2
  2201  0508  2DC7               	goto	l2502
  2202                           
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2204  0509  3025               	movlw	37
  2205  050A  0662               	xorwf	sprintf@c,w
  2206  050B  1903               	btfsc	3,2
  2207  050C  2D19               	goto	l2456
  2208                           
  2209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2210  050D  0862               	movf	sprintf@c,w
  2211  050E  00D9               	movwf	??_sprintf
  2212  050F  0861               	movf	sprintf@sp,w
  2213  0510  0084               	movwf	4
  2214  0511  0859               	movf	??_sprintf,w
  2215  0512  1383               	bcf	3,7	;select IRP bank0
  2216  0513  0080               	movwf	0
  2217  0514  3001               	movlw	1
  2218  0515  00D9               	movwf	??_sprintf
  2219  0516  0859               	movf	??_sprintf,w
  2220  0517  07E1               	addwf	sprintf@sp,f
  2221                           
  2222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2223  0518  2CF9               	goto	l2500
  2224  0519                     l2456:	
  2225                           
  2226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2227  0519  01DD               	clrf	sprintf@flag
  2228                           
  2229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2230  051A  3001               	movlw	1
  2231  051B  07D6               	addwf	sprintf@f,f
  2232  051C  30FF               	movlw	-1
  2233  051D  0756               	addwf	sprintf@f,w
  2234  051E  0084               	movwf	4
  2235  051F  120A  118A  26AC  120A  118A  	fcall	stringdir
  2236  0524  00E2               	movwf	sprintf@c
  2237  0525  00D9               	movwf	??_sprintf
  2238  0526  01DA               	clrf	??_sprintf+1
  2239                           
  2240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2241                           ; Switch size 1, requested type "simple"
  2242                           ; Number of cases is 1, Range of values is 0 to 0
  2243                           ; switch strategies available:
  2244                           ; Name         Instructions Cycles
  2245                           ; simple_byte            4     3 (average)
  2246                           ; direct_byte           11     8 (fixed)
  2247                           ; jumptable            260     6 (fixed)
  2248                           ;	Chosen strategy is simple_byte
  2249  0527  085A               	movf	??_sprintf+1,w
  2250  0528  3A00               	xorlw	0	; case 0
  2251  0529  1903               	skipnz
  2252  052A  2D2C               	goto	l2808
  2253  052B  2CF9               	goto	l2500
  2254  052C                     l2808:	
  2255                           
  2256                           ; Switch size 1, requested type "simple"
  2257                           ; Number of cases is 3, Range of values is 0 to 105
  2258                           ; switch strategies available:
  2259                           ; Name         Instructions Cycles
  2260                           ; simple_byte           10     6 (average)
  2261                           ; jumptable            260     6 (fixed)
  2262                           ;	Chosen strategy is simple_byte
  2263  052C  0859               	movf	??_sprintf,w
  2264  052D  3A00               	xorlw	0	; case 0
  2265  052E  1903               	skipnz
  2266  052F  2DC7               	goto	l2502
  2267  0530  3A64               	xorlw	100	; case 100
  2268  0531  1903               	skipnz
  2269  0532  2D37               	goto	l2462
  2270  0533  3A0D               	xorlw	13	; case 105
  2271  0534  1903               	skipnz
  2272  0535  2D37               	goto	l2462
  2273  0536  2CF9               	goto	l2500
  2274  0537                     l2462:	
  2275                           
  2276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2277  0537  085C               	movf	sprintf@ap,w
  2278  0538  0084               	movwf	4
  2279  0539  1383               	bcf	3,7	;select IRP bank0
  2280  053A  0800               	movf	0,w
  2281  053B  00DF               	movwf	sprintf@val
  2282  053C  0A84               	incf	4,f
  2283  053D  0800               	movf	0,w
  2284  053E  00E0               	movwf	sprintf@val+1
  2285  053F  3002               	movlw	2
  2286  0540  00D9               	movwf	??_sprintf
  2287  0541  0859               	movf	??_sprintf,w
  2288  0542  07DC               	addwf	sprintf@ap,f
  2289                           
  2290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2291  0543  1FE0               	btfss	sprintf@val+1,7
  2292  0544  2D4E               	goto	l2472
  2293                           
  2294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2295  0545  3003               	movlw	3
  2296  0546  00D9               	movwf	??_sprintf
  2297  0547  0859               	movf	??_sprintf,w
  2298  0548  04DD               	iorwf	sprintf@flag,f
  2299                           
  2300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2301  0549  09DF               	comf	sprintf@val,f
  2302  054A  09E0               	comf	sprintf@val+1,f
  2303  054B  0ADF               	incf	sprintf@val,f
  2304  054C  1903               	skipnz
  2305  054D  0AE0               	incf	sprintf@val+1,f
  2306  054E                     l2472:	
  2307                           
  2308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2309  054E  01E2               	clrf	sprintf@c
  2310  054F  0AE2               	incf	sprintf@c,f
  2311  0550                     l2478:	
  2312                           
  2313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2314  0550  0862               	movf	sprintf@c,w
  2315  0551  00D9               	movwf	??_sprintf
  2316  0552  0759               	addwf	??_sprintf,w
  2317  0553  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2318  0554  0084               	movwf	4
  2319  0555  120A  118A  26AC  120A  118A  	fcall	stringdir
  2320  055A  00DA               	movwf	??_sprintf+1
  2321  055B  120A  118A  26AC  120A  118A  	fcall	stringdir
  2322  0560  00DB               	movwf	??_sprintf+2
  2323  0561  085B               	movf	??_sprintf+2,w
  2324  0562  0260               	subwf	sprintf@val+1,w
  2325  0563  1D03               	skipz
  2326  0564  2D67               	goto	u1365
  2327  0565  085A               	movf	??_sprintf+1,w
  2328  0566  025F               	subwf	sprintf@val,w
  2329  0567                     u1365:	
  2330  0567  1C03               	btfss	3,0
  2331  0568  2D71               	goto	l2484
  2332  0569  3001               	movlw	1
  2333  056A  00D9               	movwf	??_sprintf
  2334  056B  0859               	movf	??_sprintf,w
  2335  056C  07E2               	addwf	sprintf@c,f
  2336  056D  3005               	movlw	5
  2337  056E  0662               	xorwf	sprintf@c,w
  2338  056F  1D03               	btfss	3,2
  2339  0570  2D50               	goto	l2478
  2340  0571                     l2484:	
  2341                           
  2342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2343  0571  085D               	movf	sprintf@flag,w
  2344  0572  3903               	andlw	3
  2345  0573  1903               	btfsc	3,2
  2346  0574  2D80               	goto	l2490
  2347                           
  2348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2349  0575  302D               	movlw	45
  2350  0576  00D9               	movwf	??_sprintf
  2351  0577  0861               	movf	sprintf@sp,w
  2352  0578  0084               	movwf	4
  2353  0579  0859               	movf	??_sprintf,w
  2354  057A  1383               	bcf	3,7	;select IRP bank0
  2355  057B  0080               	movwf	0
  2356  057C  3001               	movlw	1
  2357  057D  00D9               	movwf	??_sprintf
  2358  057E  0859               	movf	??_sprintf,w
  2359  057F  07E1               	addwf	sprintf@sp,f
  2360  0580                     l2490:	
  2361                           
  2362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2363  0580  0862               	movf	sprintf@c,w
  2364  0581  00D9               	movwf	??_sprintf
  2365  0582  0859               	movf	??_sprintf,w
  2366  0583  00DE               	movwf	sprintf@prec
  2367  0584                     l2498:	
  2368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2369                           
  2370                           
  2371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2372  0584  30FF               	movlw	255
  2373  0585  00D9               	movwf	??_sprintf
  2374  0586  0859               	movf	??_sprintf,w
  2375  0587  07DE               	addwf	sprintf@prec,f
  2376  0588  0A5E               	incf	sprintf@prec,w
  2377  0589  1903               	btfsc	3,2
  2378  058A  2CF9               	goto	l2500
  2379                           
  2380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2381  058B  300A               	movlw	10
  2382  058C  00D0               	movwf	___lwmod@divisor
  2383  058D  3000               	movlw	0
  2384  058E  00D1               	movwf	___lwmod@divisor+1
  2385  058F  085E               	movf	sprintf@prec,w
  2386  0590  00D9               	movwf	??_sprintf
  2387  0591  0759               	addwf	??_sprintf,w
  2388  0592  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2389  0593  0084               	movwf	4
  2390  0594  120A  118A  26AC  120A  118A  	fcall	stringdir
  2391  0599  00F3               	movwf	___lwdiv@divisor
  2392  059A  120A  118A  26AC  120A  118A  	fcall	stringdir
  2393  059F  00F4               	movwf	___lwdiv@divisor+1
  2394  05A0  0860               	movf	sprintf@val+1,w
  2395  05A1  00F6               	movwf	___lwdiv@dividend+1
  2396  05A2  085F               	movf	sprintf@val,w
  2397  05A3  00F5               	movwf	___lwdiv@dividend
  2398  05A4  120A  118A  2793  120A  118A  	fcall	___lwdiv
  2399  05A9  0874               	movf	?___lwdiv+1,w
  2400  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2401  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2402  05AC  00D3               	movwf	___lwmod@dividend+1
  2403  05AD  0873               	movf	?___lwdiv,w
  2404  05AE  00D2               	movwf	___lwmod@dividend
  2405  05AF  120A  158A  2794  120A  118A  	fcall	___lwmod
  2406  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2407  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2408  05B6  0850               	movf	?___lwmod,w
  2409  05B7  3E30               	addlw	48
  2410  05B8  00DA               	movwf	??_sprintf+1
  2411  05B9  085A               	movf	??_sprintf+1,w
  2412  05BA  00E2               	movwf	sprintf@c
  2413                           
  2414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2415  05BB  0862               	movf	sprintf@c,w
  2416  05BC  00D9               	movwf	??_sprintf
  2417  05BD  0861               	movf	sprintf@sp,w
  2418  05BE  0084               	movwf	4
  2419  05BF  0859               	movf	??_sprintf,w
  2420  05C0  1383               	bcf	3,7	;select IRP bank0
  2421  05C1  0080               	movwf	0
  2422  05C2  3001               	movlw	1
  2423  05C3  00D9               	movwf	??_sprintf
  2424  05C4  0859               	movf	??_sprintf,w
  2425  05C5  07E1               	addwf	sprintf@sp,f
  2426  05C6  2D84               	goto	l2498
  2427  05C7                     l2502:	
  2428                           
  2429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2430  05C7  0861               	movf	sprintf@sp,w
  2431  05C8  0084               	movwf	4
  2432  05C9  1383               	bcf	3,7	;select IRP bank0
  2433  05CA  0180               	clrf	0
  2434  05CB  0008               	return
  2435  05CC                     __end_of_sprintf:	
  2436                           
  2437                           	psect	text2
  2438  0F94                     __ptext2:	
  2439 ;; *************** function ___lwmod *****************
  2440 ;; Defined at:
  2441 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  divisor         2    3[BANK0 ] unsigned int 
  2444 ;;  dividend        2    5[BANK0 ] unsigned int 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  counter         1    8[BANK0 ] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2    3[BANK0 ] unsigned int 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2456 ;;      Params:         0       4       0       0       0
  2457 ;;      Locals:         0       1       0       0       0
  2458 ;;      Temps:          0       1       0       0       0
  2459 ;;      Totals:         0       6       0       0       0
  2460 ;;Total ram usage:        6 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_sprintf
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function ___lwmod
  2472  0F94                     ___lwmod:	
  2473                           
  2474                           ;incstack = 0
  2475                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2476  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0F96  0850               	movf	___lwmod@divisor,w
  2479  0F97  0451               	iorwf	___lwmod@divisor+1,w
  2480  0F98  1903               	btfsc	3,2
  2481  0F99  2FC3               	goto	l1780
  2482  0F9A  01D5               	clrf	___lwmod@counter
  2483  0F9B  0AD5               	incf	___lwmod@counter,f
  2484  0F9C                     l1770:	
  2485  0F9C  1BD1               	btfsc	___lwmod@divisor+1,7
  2486  0F9D  2FAA               	goto	l1772
  2487  0F9E  3001               	movlw	1
  2488  0F9F                     u765:	
  2489  0F9F  1003               	clrc
  2490  0FA0  0DD0               	rlf	___lwmod@divisor,f
  2491  0FA1  0DD1               	rlf	___lwmod@divisor+1,f
  2492  0FA2  3EFF               	addlw	-1
  2493  0FA3  1D03               	skipz
  2494  0FA4  2F9F               	goto	u765
  2495  0FA5  3001               	movlw	1
  2496  0FA6  00D4               	movwf	??___lwmod
  2497  0FA7  0854               	movf	??___lwmod,w
  2498  0FA8  07D5               	addwf	___lwmod@counter,f
  2499  0FA9  2F9C               	goto	l1770
  2500  0FAA                     l1772:	
  2501  0FAA  0851               	movf	___lwmod@divisor+1,w
  2502  0FAB  0253               	subwf	___lwmod@dividend+1,w
  2503  0FAC  1D03               	skipz
  2504  0FAD  2FB0               	goto	u785
  2505  0FAE  0850               	movf	___lwmod@divisor,w
  2506  0FAF  0252               	subwf	___lwmod@dividend,w
  2507  0FB0                     u785:	
  2508  0FB0  1C03               	skipc
  2509  0FB1  2FB8               	goto	l1776
  2510  0FB2  0850               	movf	___lwmod@divisor,w
  2511  0FB3  02D2               	subwf	___lwmod@dividend,f
  2512  0FB4  0851               	movf	___lwmod@divisor+1,w
  2513  0FB5  1C03               	skipc
  2514  0FB6  03D3               	decf	___lwmod@dividend+1,f
  2515  0FB7  02D3               	subwf	___lwmod@dividend+1,f
  2516  0FB8                     l1776:	
  2517  0FB8  3001               	movlw	1
  2518  0FB9                     u795:	
  2519  0FB9  1003               	clrc
  2520  0FBA  0CD1               	rrf	___lwmod@divisor+1,f
  2521  0FBB  0CD0               	rrf	___lwmod@divisor,f
  2522  0FBC  3EFF               	addlw	-1
  2523  0FBD  1D03               	skipz
  2524  0FBE  2FB9               	goto	u795
  2525  0FBF  3001               	movlw	1
  2526  0FC0  02D5               	subwf	___lwmod@counter,f
  2527  0FC1  1D03               	btfss	3,2
  2528  0FC2  2FAA               	goto	l1772
  2529  0FC3                     l1780:	
  2530  0FC3  0853               	movf	___lwmod@dividend+1,w
  2531  0FC4  00D1               	movwf	?___lwmod+1
  2532  0FC5  0852               	movf	___lwmod@dividend,w
  2533  0FC6  00D0               	movwf	?___lwmod
  2534  0FC7  0008               	return
  2535  0FC8                     __end_of___lwmod:	
  2536                           
  2537                           	psect	text3
  2538  0793                     __ptext3:	
  2539 ;; *************** function ___lwdiv *****************
  2540 ;; Defined at:
  2541 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  divisor         2    3[COMMON] unsigned int 
  2544 ;;  dividend        2    5[COMMON] unsigned int 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  quotient        2    1[BANK0 ] unsigned int 
  2547 ;;  counter         1    0[BANK0 ] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  2    3[COMMON] unsigned int 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         4       0       0       0       0
  2558 ;;      Locals:         0       3       0       0       0
  2559 ;;      Temps:          1       0       0       0       0
  2560 ;;      Totals:         5       3       0       0       0
  2561 ;;Total ram usage:        8 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    1
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_sprintf
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           
  2572                           ;psect for function ___lwdiv
  2573  0793                     ___lwdiv:	
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2577  0793  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0794  1303               	bcf	3,6	;RP1=0, select bank0
  2579  0795  01CE               	clrf	___lwdiv@quotient
  2580  0796  01CF               	clrf	___lwdiv@quotient+1
  2581  0797  0873               	movf	___lwdiv@divisor,w
  2582  0798  0474               	iorwf	___lwdiv@divisor+1,w
  2583  0799  1903               	btfsc	3,2
  2584  079A  2FCC               	goto	l2374
  2585  079B  01CD               	clrf	___lwdiv@counter
  2586  079C  0ACD               	incf	___lwdiv@counter,f
  2587  079D                     l2362:	
  2588  079D  1BF4               	btfsc	___lwdiv@divisor+1,7
  2589  079E  2FAB               	goto	l2364
  2590  079F  3001               	movlw	1
  2591  07A0                     u1255:	
  2592  07A0  1003               	clrc
  2593  07A1  0DF3               	rlf	___lwdiv@divisor,f
  2594  07A2  0DF4               	rlf	___lwdiv@divisor+1,f
  2595  07A3  3EFF               	addlw	-1
  2596  07A4  1D03               	skipz
  2597  07A5  2FA0               	goto	u1255
  2598  07A6  3001               	movlw	1
  2599  07A7  00F7               	movwf	??___lwdiv
  2600  07A8  0877               	movf	??___lwdiv,w
  2601  07A9  07CD               	addwf	___lwdiv@counter,f
  2602  07AA  2F9D               	goto	l2362
  2603  07AB                     l2364:	
  2604  07AB  3001               	movlw	1
  2605  07AC                     u1275:	
  2606  07AC  1003               	clrc
  2607  07AD  0DCE               	rlf	___lwdiv@quotient,f
  2608  07AE  0DCF               	rlf	___lwdiv@quotient+1,f
  2609  07AF  3EFF               	addlw	-1
  2610  07B0  1D03               	skipz
  2611  07B1  2FAC               	goto	u1275
  2612  07B2  0874               	movf	___lwdiv@divisor+1,w
  2613  07B3  0276               	subwf	___lwdiv@dividend+1,w
  2614  07B4  1D03               	skipz
  2615  07B5  2FB8               	goto	u1285
  2616  07B6  0873               	movf	___lwdiv@divisor,w
  2617  07B7  0275               	subwf	___lwdiv@dividend,w
  2618  07B8                     u1285:	
  2619  07B8  1C03               	skipc
  2620  07B9  2FC1               	goto	l2370
  2621  07BA  0873               	movf	___lwdiv@divisor,w
  2622  07BB  02F5               	subwf	___lwdiv@dividend,f
  2623  07BC  0874               	movf	___lwdiv@divisor+1,w
  2624  07BD  1C03               	skipc
  2625  07BE  03F6               	decf	___lwdiv@dividend+1,f
  2626  07BF  02F6               	subwf	___lwdiv@dividend+1,f
  2627  07C0  144E               	bsf	___lwdiv@quotient,0
  2628  07C1                     l2370:	
  2629  07C1  3001               	movlw	1
  2630  07C2                     u1295:	
  2631  07C2  1003               	clrc
  2632  07C3  0CF4               	rrf	___lwdiv@divisor+1,f
  2633  07C4  0CF3               	rrf	___lwdiv@divisor,f
  2634  07C5  3EFF               	addlw	-1
  2635  07C6  1D03               	skipz
  2636  07C7  2FC2               	goto	u1295
  2637  07C8  3001               	movlw	1
  2638  07C9  02CD               	subwf	___lwdiv@counter,f
  2639  07CA  1D03               	btfss	3,2
  2640  07CB  2FAB               	goto	l2364
  2641  07CC                     l2374:	
  2642  07CC  084F               	movf	___lwdiv@quotient+1,w
  2643  07CD  00F4               	movwf	?___lwdiv+1
  2644  07CE  084E               	movf	___lwdiv@quotient,w
  2645  07CF  00F3               	movwf	?___lwdiv
  2646  07D0  0008               	return
  2647  07D1                     __end_of___lwdiv:	
  2648                           
  2649                           	psect	text4
  2650  05CC                     __ptext4:	
  2651 ;; *************** function _setup *****************
  2652 ;; Defined at:
  2653 ;;		line 54 in file "main.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0
  2669 ;;      Temps:          0       1       0       0       0
  2670 ;;      Totals:         0       1       0       0       0
  2671 ;;Total ram usage:        1 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    4
  2674 ;; This function calls:
  2675 ;;		_I2C_Master_Init
  2676 ;;		_LCD8_begin
  2677 ;;		_LCD8_clear
  2678 ;;		_oscilator_begin
  2679 ;;		_timer1_begin
  2680 ;;		_write_ds1307
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function _setup
  2688  05CC                     _setup:	
  2689                           
  2690                           ;main.c: 56:     oscilator_begin(7);
  2691                           
  2692                           ;incstack = 0
  2693                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2694  05CC  3007               	movlw	7
  2695  05CD  120A  158A  26C5  120A  118A  	fcall	_oscilator_begin
  2696                           
  2697                           ;main.c: 57:     I2C_Master_Init(100000);
  2698  05D2  3000               	movlw	0
  2699  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2700  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2701  05D5  00DD               	movwf	I2C_Master_Init@c+3
  2702  05D6  3001               	movlw	1
  2703  05D7  00DC               	movwf	I2C_Master_Init@c+2
  2704  05D8  3086               	movlw	134
  2705  05D9  00DB               	movwf	I2C_Master_Init@c+1
  2706  05DA  30A0               	movlw	160
  2707  05DB  00DA               	movwf	I2C_Master_Init@c
  2708  05DC  120A  158A  27C8  120A  118A  	fcall	_I2C_Master_Init
  2709                           
  2710                           ;main.c: 59:     TRISA = 0;
  2711  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  2712  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  2713  05E3  0185               	clrf	5	;volatile
  2714                           
  2715                           ;main.c: 60:     TRISB = 0;
  2716  05E4  0186               	clrf	6	;volatile
  2717                           
  2718                           ;main.c: 61:     TRISD = 0;
  2719  05E5  0188               	clrf	8	;volatile
  2720                           
  2721                           ;main.c: 62:     TRISCbits.TRISC7 = 1;
  2722  05E6  1787               	bsf	7,7	;volatile
  2723                           
  2724                           ;main.c: 63:     ANSEL = 0;
  2725  05E7  1683               	bsf	3,5	;RP0=1, select bank3
  2726  05E8  1703               	bsf	3,6	;RP1=1, select bank3
  2727  05E9  0188               	clrf	8	;volatile
  2728                           
  2729                           ;main.c: 64:     ANSELH = 0;
  2730  05EA  0189               	clrf	9	;volatile
  2731                           
  2732                           ;main.c: 65:     PORTA = 0;
  2733  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2734  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2735  05ED  0185               	clrf	5	;volatile
  2736                           
  2737                           ;main.c: 66:     PORTB = 0;
  2738  05EE  0186               	clrf	6	;volatile
  2739                           
  2740                           ;main.c: 67:     PORTDbits.RD2 = 0;
  2741  05EF  1108               	bcf	8,2	;volatile
  2742                           
  2743                           ;main.c: 69:     LCD8_begin();
  2744  05F0  120A  118A  2700  120A  118A  	fcall	_LCD8_begin
  2745                           
  2746                           ;main.c: 70:     LCD8_clear();
  2747  05F5  120A  158A  26BA  120A  118A  	fcall	_LCD8_clear
  2748                           
  2749                           ;main.c: 71:     timer1_begin(0,3);
  2750  05FA  3003               	movlw	3
  2751  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  2752  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  2753  05FD  00DE               	movwf	??_setup
  2754  05FE  085E               	movf	??_setup,w
  2755  05FF  00F3               	movwf	timer1_begin@prescaler
  2756  0600  3000               	movlw	0
  2757  0601  120A  158A  2722  120A  118A  	fcall	_timer1_begin
  2758                           
  2759                           ;main.c: 74:     BAUDCTLbits.BRG16 = 0;
  2760  0606  1683               	bsf	3,5	;RP0=1, select bank3
  2761  0607  1703               	bsf	3,6	;RP1=1, select bank3
  2762  0608  1187               	bcf	7,3	;volatile
  2763                           
  2764                           ;main.c: 75:     TXSTAbits.BRGH = 1;
  2765  0609  1683               	bsf	3,5	;RP0=1, select bank1
  2766  060A  1303               	bcf	3,6	;RP1=0, select bank1
  2767  060B  1518               	bsf	24,2	;volatile
  2768                           
  2769                           ;main.c: 76:     SPBRGH = 0x0;
  2770  060C  019A               	clrf	26	;volatile
  2771                           
  2772                           ;main.c: 77:     SPBRGH = 0x51;
  2773  060D  3051               	movlw	81
  2774  060E  009A               	movwf	26	;volatile
  2775                           
  2776                           ;main.c: 78:     TXSTAbits.SYNC = 0;
  2777  060F  1218               	bcf	24,4	;volatile
  2778                           
  2779                           ;main.c: 79:     RCSTAbits.SPEN = 1;
  2780  0610  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0611  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0612  1798               	bsf	24,7	;volatile
  2783                           
  2784                           ;main.c: 80:     TXSTAbits.TX9 = 0;
  2785  0613  1683               	bsf	3,5	;RP0=1, select bank1
  2786  0614  1303               	bcf	3,6	;RP1=0, select bank1
  2787  0615  1318               	bcf	24,6	;volatile
  2788                           
  2789                           ;main.c: 81:     TXSTAbits.TXEN = 1;
  2790  0616  1698               	bsf	24,5	;volatile
  2791                           
  2792                           ;main.c: 82:     CREN = 1;
  2793  0617  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0618  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0619  1618               	bsf	24,4	;volatile
  2796                           
  2797                           ;main.c: 87:     write_ds1307(0, 0U);
  2798  061A  3000               	movlw	0
  2799  061B  00CD               	movwf	write_ds1307@address
  2800  061C  00CE               	movwf	write_ds1307@address+1
  2801  061D  3000               	movlw	0
  2802  061E  00CF               	movwf	write_ds1307@w_data
  2803  061F  00D0               	movwf	write_ds1307@w_data+1
  2804  0620  120A  158A  2742  120A  118A  	fcall	_write_ds1307
  2805                           
  2806                           ;main.c: 88:     write_ds1307(1, 1U);
  2807  0625  3001               	movlw	1
  2808  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0628  00CD               	movwf	write_ds1307@address
  2811  0629  3000               	movlw	0
  2812  062A  00CE               	movwf	write_ds1307@address+1
  2813  062B  3001               	movlw	1
  2814  062C  00CF               	movwf	write_ds1307@w_data
  2815  062D  3000               	movlw	0
  2816  062E  00D0               	movwf	write_ds1307@w_data+1
  2817  062F  120A  158A  2742  120A  118A  	fcall	_write_ds1307
  2818                           
  2819                           ;main.c: 89:     write_ds1307(2, 4U);
  2820  0634  3002               	movlw	2
  2821  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2822  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2823  0637  00CD               	movwf	write_ds1307@address
  2824  0638  3000               	movlw	0
  2825  0639  00CE               	movwf	write_ds1307@address+1
  2826  063A  3004               	movlw	4
  2827  063B  00CF               	movwf	write_ds1307@w_data
  2828  063C  3000               	movlw	0
  2829  063D  00D0               	movwf	write_ds1307@w_data+1
  2830  063E  120A  158A  2742   	fcall	_write_ds1307
  2831  0641  0008               	return
  2832  0642                     __end_of_setup:	
  2833                           
  2834                           	psect	text5
  2835  0F42                     __ptext5:	
  2836 ;; *************** function _write_ds1307 *****************
  2837 ;; Defined at:
  2838 ;;		line 30 in file "./rtc.h"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  address         2    0[BANK0 ] short 
  2841 ;;  w_data          2    2[BANK0 ] short 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0, pclath, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2853 ;;      Params:         0       4       0       0       0
  2854 ;;      Locals:         0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0
  2856 ;;      Totals:         0       4       0       0       0
  2857 ;;Total ram usage:        4 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    3
  2860 ;; This function calls:
  2861 ;;		_I2C_Master_Start
  2862 ;;		_I2C_Master_Stop
  2863 ;;		_I2C_Master_Write
  2864 ;; This function is called by:
  2865 ;;		_setup
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           
  2870                           ;psect for function _write_ds1307
  2871  0F42                     _write_ds1307:	
  2872                           
  2873                           ;./rtc.h: 30: void write_ds1307(short address, short w_data);./rtc.h: 31: {;./rtc.h: 32:
      +                             I2C_Master_Start();
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  2877  0F42  120A  158A  268A  120A  158A  	fcall	_I2C_Master_Start
  2878                           
  2879                           ;./rtc.h: 34:   I2C_Master_Write(0xD0);
  2880  0F47  30D0               	movlw	208
  2881  0F48  00F3               	movwf	I2C_Master_Write@d
  2882  0F49  3000               	movlw	0
  2883  0F4A  00F4               	movwf	I2C_Master_Write@d+1
  2884  0F4B  120A  158A  2698  120A  158A  	fcall	_I2C_Master_Write
  2885                           
  2886                           ;./rtc.h: 35:   I2C_Master_Write(address);
  2887  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0F52  084E               	movf	write_ds1307@address+1,w
  2890  0F53  00F4               	movwf	I2C_Master_Write@d+1
  2891  0F54  084D               	movf	write_ds1307@address,w
  2892  0F55  00F3               	movwf	I2C_Master_Write@d
  2893  0F56  120A  158A  2698  120A  158A  	fcall	_I2C_Master_Write
  2894                           
  2895                           ;./rtc.h: 36:   I2C_Master_Write(w_data);
  2896  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  2897  0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  2898  0F5D  0850               	movf	write_ds1307@w_data+1,w
  2899  0F5E  00F4               	movwf	I2C_Master_Write@d+1
  2900  0F5F  084F               	movf	write_ds1307@w_data,w
  2901  0F60  00F3               	movwf	I2C_Master_Write@d
  2902  0F61  120A  158A  2698  120A  158A  	fcall	_I2C_Master_Write
  2903                           
  2904                           ;./rtc.h: 37:   I2C_Master_Stop();
  2905  0F66  120A  158A  2691   	fcall	_I2C_Master_Stop
  2906  0F69  0008               	return
  2907  0F6A                     __end_of_write_ds1307:	
  2908                           
  2909                           	psect	text6
  2910  0F22                     __ptext6:	
  2911 ;; *************** function _timer1_begin *****************
  2912 ;; Defined at:
  2913 ;;		line 8 in file "timer1.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  offset          1    wreg     unsigned char 
  2916 ;;  prescaler       1    3[COMMON] unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  offset          1    6[COMMON] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         1       0       0       0       0
  2929 ;;      Locals:         1       0       0       0       0
  2930 ;;      Temps:          2       0       0       0       0
  2931 ;;      Totals:         4       0       0       0       0
  2932 ;;Total ram usage:        4 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_setup
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function _timer1_begin
  2944  0F22                     _timer1_begin:	
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in _timer1_begin: [wreg+status,2+status,0]
  2948                           ;timer1_begin@offset stored from wreg
  2949  0F22  00F6               	movwf	timer1_begin@offset
  2950                           
  2951                           ;timer1.c: 8: timer1_begin(uint8_t offset, uint8_t prescaler);timer1.c: 9:     {;timer1.
      +                          c: 10:     T1CONbits.T1GINV = 0;
  2952  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0F25  1390               	bcf	16,7	;volatile
  2955                           
  2956                           ;timer1.c: 11:     T1CONbits.TMR1GE = 0;
  2957  0F26  1310               	bcf	16,6	;volatile
  2958                           
  2959                           ;timer1.c: 12:     T1CONbits.T1CKPS = prescaler;
  2960  0F27  0873               	movf	timer1_begin@prescaler,w
  2961  0F28  00F4               	movwf	??_timer1_begin
  2962  0F29  0EF4               	swapf	??_timer1_begin,f
  2963  0F2A  0810               	movf	16,w	;volatile
  2964  0F2B  0674               	xorwf	??_timer1_begin,w
  2965  0F2C  39CF               	andlw	-49
  2966  0F2D  0674               	xorwf	??_timer1_begin,w
  2967  0F2E  0090               	movwf	16	;volatile
  2968                           
  2969                           ;timer1.c: 13:     T1CONbits.T1OSCEN = 0;
  2970  0F2F  1190               	bcf	16,3	;volatile
  2971                           
  2972                           ;timer1.c: 14:     T1CONbits.TMR1CS = 0;
  2973  0F30  1090               	bcf	16,1	;volatile
  2974                           
  2975                           ;timer1.c: 15:     T1CONbits.TMR1ON = 1;
  2976  0F31  1410               	bsf	16,0	;volatile
  2977                           
  2978                           ;timer1.c: 17:     INTCONbits.PEIE = 1;
  2979  0F32  170B               	bsf	11,6	;volatile
  2980                           
  2981                           ;timer1.c: 18:     PIR1bits.TMR1IF = 0;
  2982  0F33  100C               	bcf	12,0	;volatile
  2983                           
  2984                           ;timer1.c: 19:     PIE1bits.TMR1IE = 1;
  2985  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  2986  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  2987  0F36  140C               	bsf	12,0	;volatile
  2988                           
  2989                           ;timer1.c: 20:     INTCONbits.GIE = 1;
  2990  0F37  178B               	bsf	11,7	;volatile
  2991                           
  2992                           ;timer1.c: 21:     TMR1 = offset;
  2993  0F38  0876               	movf	timer1_begin@offset,w
  2994  0F39  00F4               	movwf	??_timer1_begin
  2995  0F3A  01F5               	clrf	??_timer1_begin+1
  2996  0F3B  0874               	movf	??_timer1_begin,w
  2997  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0F3E  008E               	movwf	14	;volatile
  3000  0F3F  0875               	movf	??_timer1_begin+1,w
  3001  0F40  008F               	movwf	15	;volatile
  3002  0F41  0008               	return
  3003  0F42                     __end_of_timer1_begin:	
  3004                           
  3005                           	psect	text7
  3006  0EC5                     __ptext7:	
  3007 ;; *************** function _oscilator_begin *****************
  3008 ;; Defined at:
  3009 ;;		line 9 in file "./Oscilator.h"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  freq            1    wreg     unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  freq            1    4[COMMON] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       0       0       0
  3024 ;;      Locals:         1       0       0       0       0
  3025 ;;      Temps:          1       0       0       0       0
  3026 ;;      Totals:         2       0       0       0       0
  3027 ;;Total ram usage:        2 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_setup
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _oscilator_begin
  3039  0EC5                     _oscilator_begin:	
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
  3043                           ;oscilator_begin@freq stored from wreg
  3044  0EC5  00F4               	movwf	oscilator_begin@freq
  3045                           
  3046                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
  3047  0EC6  0874               	movf	oscilator_begin@freq,w
  3048  0EC7  00F3               	movwf	??_oscilator_begin
  3049  0EC8  0EF3               	swapf	??_oscilator_begin,f
  3050  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  3051  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  3052  0ECB  080F               	movf	15,w	;volatile
  3053  0ECC  0673               	xorwf	??_oscilator_begin,w
  3054  0ECD  398F               	andlw	-113
  3055  0ECE  0673               	xorwf	??_oscilator_begin,w
  3056  0ECF  008F               	movwf	15	;volatile
  3057                           
  3058                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
  3059  0ED0  140F               	bsf	15,0	;volatile
  3060                           
  3061                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
  3062  0ED1  118F               	bcf	15,3	;volatile
  3063  0ED2  0008               	return
  3064  0ED3                     __end_of_oscilator_begin:	
  3065                           
  3066                           	psect	text8
  3067  0EBA                     __ptext8:	
  3068 ;; *************** function _LCD8_clear *****************
  3069 ;; Defined at:
  3070 ;;		line 32 in file "./LCD8bit.h"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0
  3087 ;;      Totals:         0       0       0       0       0
  3088 ;;Total ram usage:        0 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    2
  3091 ;; This function calls:
  3092 ;;		_LCD8_cmd
  3093 ;; This function is called by:
  3094 ;;		_setup
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           
  3100                           ;psect for function _LCD8_clear
  3101  0EBA                     _LCD8_clear:	
  3102                           
  3103                           ;./LCD8bit.h: 33:     LCD8_cmd(0);
  3104                           
  3105                           ;incstack = 0
  3106                           ; Regs used in _LCD8_clear: [wreg+status,2+status,0+pclath+cstack]
  3107  0EBA  3000               	movlw	0
  3108  0EBB  120A  158A  26F5  120A  158A  	fcall	_LCD8_cmd
  3109                           
  3110                           ;./LCD8bit.h: 34:     LCD8_cmd(1);
  3111  0EC0  3001               	movlw	1
  3112  0EC1  120A  158A  26F5   	fcall	_LCD8_cmd
  3113  0EC4  0008               	return
  3114  0EC5                     __end_of_LCD8_clear:	
  3115                           
  3116                           	psect	text9
  3117  0700                     __ptext9:	
  3118 ;; *************** function _LCD8_begin *****************
  3119 ;; Defined at:
  3120 ;;		line 37 in file "./LCD8bit.h"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, pclath, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3134 ;;      Params:         0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0
  3136 ;;      Temps:          2       0       0       0       0
  3137 ;;      Totals:         2       0       0       0       0
  3138 ;;Total ram usage:        2 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    2
  3141 ;; This function calls:
  3142 ;;		_LCD8_cmd
  3143 ;; This function is called by:
  3144 ;;		_setup
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           
  3149                           ;psect for function _LCD8_begin
  3150  0700                     _LCD8_begin:	
  3151                           
  3152                           ;./LCD8bit.h: 38:     PORTB = 0;
  3153                           
  3154                           ;incstack = 0
  3155                           ; Regs used in _LCD8_begin: [wreg+status,2+status,0+pclath+cstack]
  3156  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0702  0186               	clrf	6	;volatile
  3159                           
  3160                           ;./LCD8bit.h: 39:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3161  0703  3034               	movlw	52
  3162  0704  00F7               	movwf	??_LCD8_begin+1
  3163  0705  30F1               	movlw	241
  3164  0706  00F6               	movwf	??_LCD8_begin
  3165  0707                     u1767:	
  3166  0707  0BF6               	decfsz	??_LCD8_begin,f
  3167  0708  2F07               	goto	u1767
  3168  0709  0BF7               	decfsz	??_LCD8_begin+1,f
  3169  070A  2F07               	goto	u1767
  3170  070B  2F0C               	nop2
  3171                           
  3172                           ;./LCD8bit.h: 40:     LCD8_cmd(48);
  3173  070C  3030               	movlw	48
  3174  070D  120A  158A  26F5  120A  118A  	fcall	_LCD8_cmd
  3175                           
  3176                           ;./LCD8bit.h: 41:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3177  0712  300D               	movlw	13
  3178  0713  00F7               	movwf	??_LCD8_begin+1
  3179  0714  30FB               	movlw	251
  3180  0715  00F6               	movwf	??_LCD8_begin
  3181  0716                     u1777:	
  3182  0716  0BF6               	decfsz	??_LCD8_begin,f
  3183  0717  2F16               	goto	u1777
  3184  0718  0BF7               	decfsz	??_LCD8_begin+1,f
  3185  0719  2F16               	goto	u1777
  3186  071A  2F1B               	nop2
  3187                           
  3188                           ;./LCD8bit.h: 42:     LCD8_cmd(48);
  3189  071B  3030               	movlw	48
  3190  071C  120A  158A  26F5  120A  118A  	fcall	_LCD8_cmd
  3191                           
  3192                           ;./LCD8bit.h: 43:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  3193  0721  306D               	movlw	109
  3194  0722  00F6               	movwf	??_LCD8_begin
  3195  0723                     u1787:	
  3196  0723  0BF6               	decfsz	??_LCD8_begin,f
  3197  0724  2F23               	goto	u1787
  3198  0725  2F26               	nop2
  3199                           
  3200                           ;./LCD8bit.h: 44:     LCD8_cmd(48);
  3201  0726  3030               	movlw	48
  3202  0727  120A  158A  26F5  120A  118A  	fcall	_LCD8_cmd
  3203                           
  3204                           ;./LCD8bit.h: 45:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  3205  072C  306D               	movlw	109
  3206  072D  00F6               	movwf	??_LCD8_begin
  3207  072E                     u1797:	
  3208  072E  0BF6               	decfsz	??_LCD8_begin,f
  3209  072F  2F2E               	goto	u1797
  3210  0730  2F31               	nop2
  3211                           
  3212                           ;./LCD8bit.h: 47:     LCD8_cmd(0b111000);
  3213  0731  3038               	movlw	56
  3214  0732  120A  158A  26F5  120A  118A  	fcall	_LCD8_cmd
  3215                           
  3216                           ;./LCD8bit.h: 48:     LCD8_cmd(0b10100);
  3217  0737  3014               	movlw	20
  3218  0738  120A  158A  26F5  120A  118A  	fcall	_LCD8_cmd
  3219                           
  3220                           ;./LCD8bit.h: 49:     LCD8_cmd(1);
  3221  073D  3001               	movlw	1
  3222  073E  120A  158A  26F5  120A  118A  	fcall	_LCD8_cmd
  3223                           
  3224                           ;./LCD8bit.h: 50:     LCD8_cmd(0b110);
  3225  0743  3006               	movlw	6
  3226  0744  120A  158A  26F5  120A  118A  	fcall	_LCD8_cmd
  3227                           
  3228                           ;./LCD8bit.h: 51:     LCD8_cmd(0b1100);
  3229  0749  300C               	movlw	12
  3230  074A  120A  158A  26F5  120A  118A  	fcall	_LCD8_cmd
  3231                           
  3232                           ;./LCD8bit.h: 52:     LCD8_cmd(0b10);
  3233  074F  3002               	movlw	2
  3234  0750  120A  158A  26F5   	fcall	_LCD8_cmd
  3235  0753  0008               	return
  3236  0754                     __end_of_LCD8_begin:	
  3237                           
  3238                           	psect	text10
  3239  0FC8                     __ptext10:	
  3240 ;; *************** function _I2C_Master_Init *****************
  3241 ;; Defined at:
  3242 ;;		line 15 in file "./I2C.h"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  c               4   13[BANK0 ] const unsigned long 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, pclath, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       4       0       0       0
  3257 ;;      Locals:         0       0       0       0       0
  3258 ;;      Temps:          4       0       0       0       0
  3259 ;;      Totals:         4       4       0       0       0
  3260 ;;Total ram usage:        8 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    2
  3263 ;; This function calls:
  3264 ;;		___lldiv
  3265 ;; This function is called by:
  3266 ;;		_setup
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function _I2C_Master_Init
  3272  0FC8                     _I2C_Master_Init:	
  3273                           
  3274                           ;./I2C.h: 15: void I2C_Master_Init(const unsigned long c);./I2C.h: 16: {;./I2C.h: 17:   
      +                            SSPCON = 0b00101000;
  3275                           
  3276                           ;incstack = 0
  3277                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3278  0FC8  3028               	movlw	40
  3279  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  3281  0FCB  0094               	movwf	20	;volatile
  3282                           
  3283                           ;./I2C.h: 18:     SSPCON2 = 0;
  3284  0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  3285  0FCD  1303               	bcf	3,6	;RP1=0, select bank1
  3286  0FCE  0191               	clrf	17	;volatile
  3287                           
  3288                           ;./I2C.h: 19:     SSPADD = (8000000/(4*c))-1;
  3289  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0FD1  085A               	movf	I2C_Master_Init@c,w
  3292  0FD2  00F4               	movwf	??_I2C_Master_Init
  3293  0FD3  085B               	movf	I2C_Master_Init@c+1,w
  3294  0FD4  00F5               	movwf	??_I2C_Master_Init+1
  3295  0FD5  085C               	movf	I2C_Master_Init@c+2,w
  3296  0FD6  00F6               	movwf	??_I2C_Master_Init+2
  3297  0FD7  085D               	movf	I2C_Master_Init@c+3,w
  3298  0FD8  00F7               	movwf	??_I2C_Master_Init+3
  3299  0FD9  3002               	movlw	2
  3300  0FDA                     u1225:	
  3301  0FDA  1003               	clrc
  3302  0FDB  0DF4               	rlf	??_I2C_Master_Init,f
  3303  0FDC  0DF5               	rlf	??_I2C_Master_Init+1,f
  3304  0FDD  0DF6               	rlf	??_I2C_Master_Init+2,f
  3305  0FDE  0DF7               	rlf	??_I2C_Master_Init+3,f
  3306  0FDF  3EFF               	addlw	-1
  3307  0FE0  1D03               	skipz
  3308  0FE1  2FDA               	goto	u1225
  3309  0FE2  0877               	movf	??_I2C_Master_Init+3,w
  3310  0FE3  00D0               	movwf	___lldiv@divisor+3
  3311  0FE4  0876               	movf	??_I2C_Master_Init+2,w
  3312  0FE5  00CF               	movwf	___lldiv@divisor+2
  3313  0FE6  0875               	movf	??_I2C_Master_Init+1,w
  3314  0FE7  00CE               	movwf	___lldiv@divisor+1
  3315  0FE8  0874               	movf	??_I2C_Master_Init,w
  3316  0FE9  00CD               	movwf	___lldiv@divisor
  3317  0FEA  3000               	movlw	0
  3318  0FEB  00D4               	movwf	___lldiv@dividend+3
  3319  0FEC  307A               	movlw	122
  3320  0FED  00D3               	movwf	___lldiv@dividend+2
  3321  0FEE  3012               	movlw	18
  3322  0FEF  00D2               	movwf	___lldiv@dividend+1
  3323  0FF0  3000               	movlw	0
  3324  0FF1  00D1               	movwf	___lldiv@dividend
  3325  0FF2  120A  118A  2642   	fcall	___lldiv
  3326  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  3328  0FF7  084D               	movf	?___lldiv,w
  3329  0FF8  3EFF               	addlw	255
  3330  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  3331  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  3332  0FFB  0093               	movwf	19	;volatile
  3333                           
  3334                           ;./I2C.h: 20:     SSPSTAT = 0;
  3335  0FFC  0194               	clrf	20	;volatile
  3336                           
  3337                           ;./I2C.h: 21:     TRISC3 = 1;
  3338  0FFD  1587               	bsf	7,3	;volatile
  3339                           
  3340                           ;./I2C.h: 22:     TRISC4 = 1;
  3341  0FFE  1607               	bsf	7,4	;volatile
  3342  0FFF  0008               	return
  3343  1000                     __end_of_I2C_Master_Init:	
  3344                           
  3345                           	psect	text11
  3346  0642                     __ptext11:	
  3347 ;; *************** function ___lldiv *****************
  3348 ;; Defined at:
  3349 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  divisor         4    0[BANK0 ] unsigned long 
  3352 ;;  dividend        4    4[BANK0 ] unsigned long 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  quotient        4    8[BANK0 ] unsigned long 
  3355 ;;  counter         1   12[BANK0 ] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  4    0[BANK0 ] unsigned long 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3365 ;;      Params:         0       8       0       0       0
  3366 ;;      Locals:         0       5       0       0       0
  3367 ;;      Temps:          1       0       0       0       0
  3368 ;;      Totals:         1      13       0       0       0
  3369 ;;Total ram usage:       14 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_I2C_Master_Init
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function ___lldiv
  3381  0642                     ___lldiv:	
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3385  0642  3000               	movlw	0
  3386  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0645  00D8               	movwf	___lldiv@quotient+3
  3389  0646  3000               	movlw	0
  3390  0647  00D7               	movwf	___lldiv@quotient+2
  3391  0648  3000               	movlw	0
  3392  0649  00D6               	movwf	___lldiv@quotient+1
  3393  064A  3000               	movlw	0
  3394  064B  00D5               	movwf	___lldiv@quotient
  3395  064C  0850               	movf	___lldiv@divisor+3,w
  3396  064D  044F               	iorwf	___lldiv@divisor+2,w
  3397  064E  044E               	iorwf	___lldiv@divisor+1,w
  3398  064F  044D               	iorwf	___lldiv@divisor,w
  3399  0650  1903               	skipnz
  3400  0651  2E99               	goto	l2276
  3401  0652  01D9               	clrf	___lldiv@counter
  3402  0653  0AD9               	incf	___lldiv@counter,f
  3403  0654                     l2262:	
  3404  0654  1BD0               	btfsc	___lldiv@divisor+3,7
  3405  0655  2E64               	goto	l2264
  3406  0656  3001               	movlw	1
  3407  0657  00F3               	movwf	??___lldiv
  3408  0658                     u1165:	
  3409  0658  1003               	clrc
  3410  0659  0DCD               	rlf	___lldiv@divisor,f
  3411  065A  0DCE               	rlf	___lldiv@divisor+1,f
  3412  065B  0DCF               	rlf	___lldiv@divisor+2,f
  3413  065C  0DD0               	rlf	___lldiv@divisor+3,f
  3414  065D  0BF3               	decfsz	??___lldiv,f
  3415  065E  2E58               	goto	u1165
  3416  065F  3001               	movlw	1
  3417  0660  00F3               	movwf	??___lldiv
  3418  0661  0873               	movf	??___lldiv,w
  3419  0662  07D9               	addwf	___lldiv@counter,f
  3420  0663  2E54               	goto	l2262
  3421  0664                     l2264:	
  3422  0664  3001               	movlw	1
  3423  0665  00F3               	movwf	??___lldiv
  3424  0666                     u1185:	
  3425  0666  1003               	clrc
  3426  0667  0DD5               	rlf	___lldiv@quotient,f
  3427  0668  0DD6               	rlf	___lldiv@quotient+1,f
  3428  0669  0DD7               	rlf	___lldiv@quotient+2,f
  3429  066A  0DD8               	rlf	___lldiv@quotient+3,f
  3430  066B  0BF3               	decfsz	??___lldiv,f
  3431  066C  2E66               	goto	u1185
  3432  066D  0850               	movf	___lldiv@divisor+3,w
  3433  066E  0254               	subwf	___lldiv@dividend+3,w
  3434  066F  1D03               	skipz
  3435  0670  2E7B               	goto	u1195
  3436  0671  084F               	movf	___lldiv@divisor+2,w
  3437  0672  0253               	subwf	___lldiv@dividend+2,w
  3438  0673  1D03               	skipz
  3439  0674  2E7B               	goto	u1195
  3440  0675  084E               	movf	___lldiv@divisor+1,w
  3441  0676  0252               	subwf	___lldiv@dividend+1,w
  3442  0677  1D03               	skipz
  3443  0678  2E7B               	goto	u1195
  3444  0679  084D               	movf	___lldiv@divisor,w
  3445  067A  0251               	subwf	___lldiv@dividend,w
  3446  067B                     u1195:	
  3447  067B  1C03               	skipc
  3448  067C  2E8C               	goto	l2272
  3449  067D  084D               	movf	___lldiv@divisor,w
  3450  067E  02D1               	subwf	___lldiv@dividend,f
  3451  067F  084E               	movf	___lldiv@divisor+1,w
  3452  0680  1C03               	skipc
  3453  0681  0F4E               	incfsz	___lldiv@divisor+1,w
  3454  0682  02D2               	subwf	___lldiv@dividend+1,f
  3455  0683  084F               	movf	___lldiv@divisor+2,w
  3456  0684  1C03               	skipc
  3457  0685  0F4F               	incfsz	___lldiv@divisor+2,w
  3458  0686  02D3               	subwf	___lldiv@dividend+2,f
  3459  0687  0850               	movf	___lldiv@divisor+3,w
  3460  0688  1C03               	skipc
  3461  0689  0F50               	incfsz	___lldiv@divisor+3,w
  3462  068A  02D4               	subwf	___lldiv@dividend+3,f
  3463  068B  1455               	bsf	___lldiv@quotient,0
  3464  068C                     l2272:	
  3465  068C  3001               	movlw	1
  3466  068D                     u1205:	
  3467  068D  1003               	clrc
  3468  068E  0CD0               	rrf	___lldiv@divisor+3,f
  3469  068F  0CCF               	rrf	___lldiv@divisor+2,f
  3470  0690  0CCE               	rrf	___lldiv@divisor+1,f
  3471  0691  0CCD               	rrf	___lldiv@divisor,f
  3472  0692  3EFF               	addlw	-1
  3473  0693  1D03               	skipz
  3474  0694  2E8D               	goto	u1205
  3475  0695  3001               	movlw	1
  3476  0696  02D9               	subwf	___lldiv@counter,f
  3477  0697  1D03               	btfss	3,2
  3478  0698  2E64               	goto	l2264
  3479  0699                     l2276:	
  3480  0699  0858               	movf	___lldiv@quotient+3,w
  3481  069A  00D0               	movwf	?___lldiv+3
  3482  069B  0857               	movf	___lldiv@quotient+2,w
  3483  069C  00CF               	movwf	?___lldiv+2
  3484  069D  0856               	movf	___lldiv@quotient+1,w
  3485  069E  00CE               	movwf	?___lldiv+1
  3486  069F  0855               	movf	___lldiv@quotient,w
  3487  06A0  00CD               	movwf	?___lldiv
  3488  06A1  0008               	return
  3489  06A2                     __end_of___lldiv:	
  3490                           
  3491                           	psect	text12
  3492  0754                     __ptext12:	
  3493 ;; *************** function _read_DS1307 *****************
  3494 ;; Defined at:
  3495 ;;		line 17 in file "./rtc.h"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  direccion       2    2[BANK0 ] unsigned short 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  tiempo          2    4[BANK0 ] unsigned short 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  2    2[BANK0 ] unsigned short 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3509 ;;      Params:         0       2       0       0       0
  3510 ;;      Locals:         0       2       0       0       0
  3511 ;;      Temps:          0       0       0       0       0
  3512 ;;      Totals:         0       4       0       0       0
  3513 ;;Total ram usage:        4 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    3
  3516 ;; This function calls:
  3517 ;;		_I2C_Master_Read
  3518 ;;		_I2C_Master_RepeatedStart
  3519 ;;		_I2C_Master_Start
  3520 ;;		_I2C_Master_Stop
  3521 ;;		_I2C_Master_Write
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _read_DS1307
  3529  0754                     _read_DS1307:	
  3530                           
  3531                           ;./rtc.h: 17: unsigned short read_DS1307(unsigned short direccion);./rtc.h: 18: {;./rtc.
      +                          h: 19:     unsigned short tiempo;;./rtc.h: 20:     I2C_Master_Start();
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _read_DS1307: [wreg+status,2+status,0+pclath+cstack]
  3535  0754  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Start
  3536                           
  3537                           ;./rtc.h: 21:     I2C_Master_Write(0xD0);
  3538  0759  30D0               	movlw	208
  3539  075A  00F3               	movwf	I2C_Master_Write@d
  3540  075B  3000               	movlw	0
  3541  075C  00F4               	movwf	I2C_Master_Write@d+1
  3542  075D  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  3543                           
  3544                           ;./rtc.h: 22:     I2C_Master_Write(direccion);
  3545  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0763  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0764  0850               	movf	read_DS1307@direccion+1,w
  3548  0765  00F4               	movwf	I2C_Master_Write@d+1
  3549  0766  084F               	movf	read_DS1307@direccion,w
  3550  0767  00F3               	movwf	I2C_Master_Write@d
  3551  0768  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  3552                           
  3553                           ;./rtc.h: 23:     I2C_Master_RepeatedStart();
  3554  076D  120A  158A  2683  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3555                           
  3556                           ;./rtc.h: 24:     I2C_Master_Write(0xD1);
  3557  0772  30D1               	movlw	209
  3558  0773  00F3               	movwf	I2C_Master_Write@d
  3559  0774  3000               	movlw	0
  3560  0775  00F4               	movwf	I2C_Master_Write@d+1
  3561  0776  120A  158A  2698  120A  118A  	fcall	_I2C_Master_Write
  3562                           
  3563                           ;./rtc.h: 25:     tiempo = I2C_Master_Read(0);
  3564  077B  3000               	movlw	0
  3565  077C  00F3               	movwf	I2C_Master_Read@a
  3566  077D  00F4               	movwf	I2C_Master_Read@a+1
  3567  077E  120A  118A  27D1  120A  118A  	fcall	_I2C_Master_Read
  3568  0783  0874               	movf	?_I2C_Master_Read+1,w
  3569  0784  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0785  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0786  00D2               	movwf	read_DS1307@tiempo+1
  3572  0787  0873               	movf	?_I2C_Master_Read,w
  3573  0788  00D1               	movwf	read_DS1307@tiempo
  3574                           
  3575                           ;./rtc.h: 26:     I2C_Master_Stop();
  3576  0789  120A  158A  2691   	fcall	_I2C_Master_Stop
  3577                           
  3578                           ;./rtc.h: 27:     return(tiempo);
  3579  078C  1283               	bcf	3,5	;RP0=0, select bank0
  3580  078D  1303               	bcf	3,6	;RP1=0, select bank0
  3581  078E  0852               	movf	read_DS1307@tiempo+1,w
  3582  078F  00D0               	movwf	?_read_DS1307+1
  3583  0790  0851               	movf	read_DS1307@tiempo,w
  3584  0791  00CF               	movwf	?_read_DS1307
  3585  0792  0008               	return
  3586  0793                     __end_of_read_DS1307:	
  3587                           
  3588                           	psect	text13
  3589  0E98                     __ptext13:	
  3590 ;; *************** function _I2C_Master_Write *****************
  3591 ;; Defined at:
  3592 ;;		line 64 in file "./I2C.h"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  d               2    3[COMMON] unsigned int 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         2       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0
  3609 ;;      Totals:         2       0       0       0       0
  3610 ;;Total ram usage:        2 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    2
  3613 ;; This function calls:
  3614 ;;		_I2C_Master_Wait
  3615 ;; This function is called by:
  3616 ;;		_read_DS1307
  3617 ;;		_write_ds1307
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           
  3623                           ;psect for function _I2C_Master_Write
  3624  0E98                     _I2C_Master_Write:	
  3625                           
  3626                           ;./I2C.h: 64: void I2C_Master_Write(unsigned d);./I2C.h: 65: {;./I2C.h: 66:     I2C_Mast
      +                          er_Wait();
  3627                           
  3628                           ;incstack = 0
  3629                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3630  0E98  120A  158A  26B1   	fcall	_I2C_Master_Wait
  3631                           
  3632                           ;./I2C.h: 67:     SSPBUF = d;
  3633  0E9B  0873               	movf	I2C_Master_Write@d,w
  3634  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0E9E  0093               	movwf	19	;volatile
  3637  0E9F  0008               	return
  3638  0EA0                     __end_of_I2C_Master_Write:	
  3639                           
  3640                           	psect	text14
  3641  0E91                     __ptext14:	
  3642 ;; *************** function _I2C_Master_Stop *****************
  3643 ;; Defined at:
  3644 ;;		line 54 in file "./I2C.h"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0, pclath, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    2
  3665 ;; This function calls:
  3666 ;;		_I2C_Master_Wait
  3667 ;; This function is called by:
  3668 ;;		_read_DS1307
  3669 ;;		_write_ds1307
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           
  3675                           ;psect for function _I2C_Master_Stop
  3676  0E91                     _I2C_Master_Stop:	
  3677                           
  3678                           ;./I2C.h: 56:     I2C_Master_Wait();
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3682  0E91  120A  158A  26B1   	fcall	_I2C_Master_Wait
  3683                           
  3684                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
  3685  0E94  1683               	bsf	3,5	;RP0=1, select bank1
  3686  0E95  1303               	bcf	3,6	;RP1=0, select bank1
  3687  0E96  1511               	bsf	17,2	;volatile
  3688  0E97  0008               	return
  3689  0E98                     __end_of_I2C_Master_Stop:	
  3690                           
  3691                           	psect	text15
  3692  0E8A                     __ptext15:	
  3693 ;; *************** function _I2C_Master_Start *****************
  3694 ;; Defined at:
  3695 ;;		line 38 in file "./I2C.h"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, pclath, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0
  3712 ;;      Totals:         0       0       0       0       0
  3713 ;;Total ram usage:        0 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    2
  3716 ;; This function calls:
  3717 ;;		_I2C_Master_Wait
  3718 ;; This function is called by:
  3719 ;;		_read_DS1307
  3720 ;;		_write_ds1307
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function _I2C_Master_Start
  3727  0E8A                     _I2C_Master_Start:	
  3728                           
  3729                           ;./I2C.h: 40:     I2C_Master_Wait();
  3730                           
  3731                           ;incstack = 0
  3732                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3733  0E8A  120A  158A  26B1   	fcall	_I2C_Master_Wait
  3734                           
  3735                           ;./I2C.h: 41:     SSPCON2bits.SEN = 1;
  3736  0E8D  1683               	bsf	3,5	;RP0=1, select bank1
  3737  0E8E  1303               	bcf	3,6	;RP1=0, select bank1
  3738  0E8F  1411               	bsf	17,0	;volatile
  3739  0E90  0008               	return
  3740  0E91                     __end_of_I2C_Master_Start:	
  3741                           
  3742                           	psect	text16
  3743  0E83                     __ptext16:	
  3744 ;; *************** function _I2C_Master_RepeatedStart *****************
  3745 ;; Defined at:
  3746 ;;		line 46 in file "./I2C.h"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0
  3763 ;;      Totals:         0       0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    2
  3767 ;; This function calls:
  3768 ;;		_I2C_Master_Wait
  3769 ;; This function is called by:
  3770 ;;		_read_DS1307
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _I2C_Master_RepeatedStart
  3776  0E83                     _I2C_Master_RepeatedStart:	
  3777                           
  3778                           ;./I2C.h: 48:     I2C_Master_Wait();
  3779                           
  3780                           ;incstack = 0
  3781                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3782  0E83  120A  158A  26B1   	fcall	_I2C_Master_Wait
  3783                           
  3784                           ;./I2C.h: 49:     SSPCON2bits.RSEN = 1;
  3785  0E86  1683               	bsf	3,5	;RP0=1, select bank1
  3786  0E87  1303               	bcf	3,6	;RP1=0, select bank1
  3787  0E88  1491               	bsf	17,1	;volatile
  3788  0E89  0008               	return
  3789  0E8A                     __end_of_I2C_Master_RepeatedStart:	
  3790                           
  3791                           	psect	text17
  3792  07D1                     __ptext17:	
  3793 ;; *************** function _I2C_Master_Read *****************
  3794 ;; Defined at:
  3795 ;;		line 73 in file "./I2C.h"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  a               2    3[COMMON] unsigned short 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  temp            2    0[BANK0 ] unsigned short 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  2    3[COMMON] unsigned short 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0, pclath, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3809 ;;      Params:         2       0       0       0       0
  3810 ;;      Locals:         0       2       0       0       0
  3811 ;;      Temps:          2       0       0       0       0
  3812 ;;      Totals:         4       2       0       0       0
  3813 ;;Total ram usage:        6 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    2
  3816 ;; This function calls:
  3817 ;;		_I2C_Master_Wait
  3818 ;; This function is called by:
  3819 ;;		_read_DS1307
  3820 ;;		_main
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           
  3825                           ;psect for function _I2C_Master_Read
  3826  07D1                     _I2C_Master_Read:	
  3827                           
  3828                           ;./I2C.h: 73: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 74: {;./I2C.h: 7
      +                          5:     unsigned short temp;;./I2C.h: 76:     I2C_Master_Wait();
  3829                           
  3830                           ;incstack = 0
  3831                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3832  07D1  120A  158A  26B1  120A  118A  	fcall	_I2C_Master_Wait
  3833                           
  3834                           ;./I2C.h: 77:     RCEN = 1;
  3835  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  3836  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  3837  07D8  1591               	bsf	17,3	;volatile
  3838                           
  3839                           ;./I2C.h: 78:     I2C_Master_Wait();
  3840  07D9  120A  158A  26B1  120A  118A  	fcall	_I2C_Master_Wait
  3841                           
  3842                           ;./I2C.h: 79:     temp = SSPBUF;
  3843  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  3844  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  3845  07E0  0813               	movf	19,w	;volatile
  3846  07E1  00F5               	movwf	??_I2C_Master_Read
  3847  07E2  01F6               	clrf	??_I2C_Master_Read+1
  3848  07E3  0875               	movf	??_I2C_Master_Read,w
  3849  07E4  00CD               	movwf	I2C_Master_Read@temp
  3850  07E5  0876               	movf	??_I2C_Master_Read+1,w
  3851  07E6  00CE               	movwf	I2C_Master_Read@temp+1
  3852                           
  3853                           ;./I2C.h: 80:     I2C_Master_Wait();
  3854  07E7  120A  158A  26B1  120A  118A  	fcall	_I2C_Master_Wait
  3855                           
  3856                           ;./I2C.h: 82:     if(a == 1){
  3857  07EC  0373               	decf	I2C_Master_Read@a,w
  3858  07ED  0474               	iorwf	I2C_Master_Read@a+1,w
  3859  07EE  1D03               	btfss	3,2
  3860  07EF  2FF4               	goto	l98
  3861                           
  3862                           ;./I2C.h: 83:         SSPCON2bits.ACKDT = 0;
  3863  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  3864  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  3865  07F2  1291               	bcf	17,5	;volatile
  3866                           
  3867                           ;./I2C.h: 84:     }else{
  3868  07F3  2FF7               	goto	l99
  3869  07F4                     l98:	
  3870                           
  3871                           ;./I2C.h: 85:         SSPCON2bits.ACKDT = 1;
  3872  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  3873  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  3874  07F6  1691               	bsf	17,5	;volatile
  3875  07F7                     l99:	
  3876                           ;./I2C.h: 86:     }
  3877                           
  3878                           
  3879                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  3880  07F7  1611               	bsf	17,4	;volatile
  3881                           
  3882                           ;./I2C.h: 88:     return temp;
  3883  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  3884  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  3885  07FA  084E               	movf	I2C_Master_Read@temp+1,w
  3886  07FB  00F4               	movwf	?_I2C_Master_Read+1
  3887  07FC  084D               	movf	I2C_Master_Read@temp,w
  3888  07FD  00F3               	movwf	?_I2C_Master_Read
  3889  07FE  0008               	return
  3890  07FF                     __end_of_I2C_Master_Read:	
  3891                           
  3892                           	psect	text18
  3893  0EB1                     __ptext18:	
  3894 ;; *************** function _I2C_Master_Wait *****************
  3895 ;; Defined at:
  3896 ;;		line 31 in file "./I2C.h"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;		None
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3910 ;;      Params:         0       0       0       0       0
  3911 ;;      Locals:         0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0
  3913 ;;      Totals:         0       0       0       0       0
  3914 ;;Total ram usage:        0 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    1
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_I2C_Master_Start
  3921 ;;		_I2C_Master_RepeatedStart
  3922 ;;		_I2C_Master_Stop
  3923 ;;		_I2C_Master_Write
  3924 ;;		_I2C_Master_Read
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _I2C_Master_Wait
  3930  0EB1                     _I2C_Master_Wait:	
  3931  0EB1                     l80:	
  3932                           ;./I2C.h: 33:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3933                           
  3934                           ;incstack = 0
  3935                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3936                           
  3937  0EB1  1683               	bsf	3,5	;RP0=1, select bank1
  3938  0EB2  1303               	bcf	3,6	;RP1=0, select bank1
  3939  0EB3  1914               	btfsc	20,2	;volatile
  3940  0EB4  2EB1               	goto	l80
  3941  0EB5  0811               	movf	17,w	;volatile
  3942  0EB6  391F               	andlw	31
  3943  0EB7  1903               	btfsc	3,2
  3944  0EB8  0008               	return
  3945  0EB9  2EB1               	goto	l80
  3946  0EBA                     __end_of_I2C_Master_Wait:	
  3947                           
  3948                           	psect	text19
  3949  0EA8                     __ptext19:	
  3950 ;; *************** function _UART_Tx *****************
  3951 ;; Defined at:
  3952 ;;		line 94 in file "main.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  val             1    wreg     unsigned char 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  val             1    3[COMMON] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         0       0       0       0       0
  3967 ;;      Locals:         1       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0
  3969 ;;      Totals:         1       0       0       0       0
  3970 ;;Total ram usage:        1 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_main
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _UART_Tx
  3982  0EA8                     _UART_Tx:	
  3983                           
  3984                           ;incstack = 0
  3985                           ; Regs used in _UART_Tx: [wreg]
  3986                           ;UART_Tx@val stored from wreg
  3987  0EA8  00F3               	movwf	UART_Tx@val
  3988  0EA9                     l217:	
  3989                           ;main.c: 94: void UART_Tx(unsigned char val);main.c: 95: {;main.c: 96:     while(TXIF ==
      +                           0);
  3990                           
  3991  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  3993  0EAB  1E0C               	btfss	12,4	;volatile
  3994  0EAC  2EA9               	goto	l217
  3995                           
  3996                           ;main.c: 97:     TXIF = 0;
  3997  0EAD  120C               	bcf	12,4	;volatile
  3998                           
  3999                           ;main.c: 98:     TXREG = val;
  4000  0EAE  0873               	movf	UART_Tx@val,w
  4001  0EAF  0099               	movwf	25	;volatile
  4002  0EB0  0008               	return
  4003  0EB1                     __end_of_UART_Tx:	
  4004                           
  4005                           	psect	text20
  4006  0E7C                     __ptext20:	
  4007 ;; *************** function _UART_Rx *****************
  4008 ;; Defined at:
  4009 ;;		line 103 in file "main.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      unsigned char 
  4016 ;; Registers used:
  4017 ;;		wreg
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4023 ;;      Params:         0       0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0
  4026 ;;      Totals:         0       0       0       0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function _UART_Rx
  4039  0E7C                     _UART_Rx:	
  4040  0E7C                     l223:	
  4041                           ;main.c: 105:     while(RCIF == 0);
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in _UART_Rx: [wreg]
  4045                           
  4046  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0E7E  1E8C               	btfss	12,5	;volatile
  4049  0E7F  2E7C               	goto	l223
  4050                           
  4051                           ;main.c: 106:     RCIF = 0;
  4052  0E80  128C               	bcf	12,5	;volatile
  4053                           
  4054                           ;main.c: 107:     return(RCREG);
  4055  0E81  081A               	movf	26,w	;volatile
  4056  0E82  0008               	return
  4057  0E83                     __end_of_UART_Rx:	
  4058                           
  4059                           	psect	text21
  4060  0F6A                     __ptext21:	
  4061 ;; *************** function _LCD8_strWrite *****************
  4062 ;; Defined at:
  4063 ;;		line 55 in file "./LCD8bit.h"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  data            2    5[COMMON] PTR unsigned char 
  4066 ;;		 -> STR_14(11), STR_11(5), STR_10(4), STR_9(3), 
  4067 ;;		 -> STR_8(3), STR_7(4), STR_4(6), show(20), 
  4068 ;;		 -> STR_1(4), 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  i               1    0[BANK0 ] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4080 ;;      Params:         2       0       0       0       0
  4081 ;;      Locals:         0       1       0       0       0
  4082 ;;      Temps:          1       0       0       0       0
  4083 ;;      Totals:         3       1       0       0       0
  4084 ;;Total ram usage:        4 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    2
  4087 ;; This function calls:
  4088 ;;		_LCD8_write
  4089 ;; This function is called by:
  4090 ;;		_main
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           
  4095                           ;psect for function _LCD8_strWrite
  4096  0F6A                     _LCD8_strWrite:	
  4097                           
  4098                           ;./LCD8bit.h: 56:     char i;;./LCD8bit.h: 57:         for(i=0; data[i] !='\0';i++ )
  4099                           
  4100                           ;incstack = 0
  4101                           ; Regs used in _LCD8_strWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4102  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  4103  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  4104  0F6C  01CD               	clrf	LCD8_strWrite@i
  4105  0F6D                     l2398:	
  4106  0F6D  084D               	movf	LCD8_strWrite@i,w
  4107  0F6E  0775               	addwf	LCD8_strWrite@data,w
  4108  0F6F  0084               	movwf	4
  4109  0F70  0876               	movf	LCD8_strWrite@data+1,w
  4110  0F71  1803               	skipnc
  4111  0F72  0A76               	incf	LCD8_strWrite@data+1,w
  4112  0F73  00FF               	movwf	127
  4113  0F74  120A  118A  26A2  120A  158A  	fcall	stringtab
  4114  0F79  3A00               	xorlw	0
  4115  0F7A  1903               	btfsc	3,2
  4116  0F7B  0008               	return
  4117                           
  4118                           ;./LCD8bit.h: 58:             LCD8_write(data[i]);
  4119  0F7C  084D               	movf	LCD8_strWrite@i,w
  4120  0F7D  0775               	addwf	LCD8_strWrite@data,w
  4121  0F7E  0084               	movwf	4
  4122  0F7F  0876               	movf	LCD8_strWrite@data+1,w
  4123  0F80  1803               	skipnc
  4124  0F81  0A76               	incf	LCD8_strWrite@data+1,w
  4125  0F82  00FF               	movwf	127
  4126  0F83  120A  118A  26A2  120A  158A  	fcall	stringtab
  4127  0F88  120A  158A  26D3  120A  158A  	fcall	_LCD8_write
  4128  0F8D  3001               	movlw	1
  4129  0F8E  00F7               	movwf	??_LCD8_strWrite
  4130  0F8F  0877               	movf	??_LCD8_strWrite,w
  4131  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  4132  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  4133  0F92  07CD               	addwf	LCD8_strWrite@i,f
  4134  0F93  2F6D               	goto	l2398
  4135  0F94                     __end_of_LCD8_strWrite:	
  4136                           
  4137                           	psect	text22
  4138  0ED3                     __ptext22:	
  4139 ;; *************** function _LCD8_write *****************
  4140 ;; Defined at:
  4141 ;;		line 4 in file "./LCD8bit.h"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  data            1    wreg     unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  data            1    4[COMMON] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         0       0       0       0       0
  4156 ;;      Locals:         1       0       0       0       0
  4157 ;;      Temps:          1       0       0       0       0
  4158 ;;      Totals:         2       0       0       0       0
  4159 ;;Total ram usage:        2 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_LCD8_strWrite
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function _LCD8_write
  4171  0ED3                     _LCD8_write:	
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in _LCD8_write: [wreg]
  4175                           ;LCD8_write@data stored from wreg
  4176  0ED3  00F4               	movwf	LCD8_write@data
  4177                           
  4178                           ;./LCD8bit.h: 5:     RA0 = 1;
  4179  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  4180  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  4181  0ED6  1405               	bsf	5,0	;volatile
  4182                           
  4183                           ;./LCD8bit.h: 6:     PORTB = data;
  4184  0ED7  0874               	movf	LCD8_write@data,w
  4185  0ED8  0086               	movwf	6	;volatile
  4186                           
  4187                           ;./LCD8bit.h: 7:     RA1 = 1;
  4188  0ED9  1485               	bsf	5,1	;volatile
  4189                           
  4190                           ;./LCD8bit.h: 8:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4191  0EDA  301A               	movlw	26
  4192  0EDB  00F3               	movwf	??_LCD8_write
  4193  0EDC                     u1807:	
  4194  0EDC  0BF3               	decfsz	??_LCD8_write,f
  4195  0EDD  2EDC               	goto	u1807
  4196  0EDE  0000               	nop
  4197                           
  4198                           ;./LCD8bit.h: 9:     RA1 = 0;
  4199  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0EE1  1085               	bcf	5,1	;volatile
  4202  0EE2  0008               	return
  4203  0EE3                     __end_of_LCD8_write:	
  4204                           
  4205                           	psect	text23
  4206  0F09                     __ptext23:	
  4207 ;; *************** function _LCD8_set_cursor *****************
  4208 ;; Defined at:
  4209 ;;		line 21 in file "./LCD8bit.h"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  row             1    wreg     unsigned char 
  4212 ;;  column          1    6[COMMON] unsigned char 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  row             1    1[BANK0 ] unsigned char 
  4215 ;;  cursor          1    0[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      void 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0, pclath, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         1       0       0       0       0
  4226 ;;      Locals:         0       2       0       0       0
  4227 ;;      Temps:          1       0       0       0       0
  4228 ;;      Totals:         2       2       0       0       0
  4229 ;;Total ram usage:        4 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    2
  4232 ;; This function calls:
  4233 ;;		_LCD8_cmd
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           
  4240                           ;psect for function _LCD8_set_cursor
  4241  0F09                     _LCD8_set_cursor:	
  4242                           
  4243                           ;incstack = 0
  4244                           ; Regs used in _LCD8_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4245                           ;LCD8_set_cursor@row stored from wreg
  4246  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  4248  0F0B  00CE               	movwf	LCD8_set_cursor@row
  4249                           
  4250                           ;./LCD8bit.h: 22:     char cursor;;./LCD8bit.h: 24:         if(row==1)
  4251  0F0C  034E               	decf	LCD8_set_cursor@row,w
  4252  0F0D  1D03               	btfss	3,2
  4253  0F0E  2F14               	goto	l135
  4254                           
  4255                           ;./LCD8bit.h: 25:             cursor = 128 + column -1;
  4256  0F0F  0876               	movf	LCD8_set_cursor@column,w
  4257  0F10  3E7F               	addlw	127
  4258  0F11  00F7               	movwf	??_LCD8_set_cursor
  4259  0F12  0877               	movf	??_LCD8_set_cursor,w
  4260  0F13  00CD               	movwf	LCD8_set_cursor@cursor
  4261  0F14                     l135:	
  4262                           
  4263                           ;./LCD8bit.h: 26:         if (row==2)
  4264  0F14  3002               	movlw	2
  4265  0F15  064E               	xorwf	LCD8_set_cursor@row,w
  4266  0F16  1D03               	btfss	3,2
  4267  0F17  2F1D               	goto	l2390
  4268                           
  4269                           ;./LCD8bit.h: 27:             cursor = 192 + column -1;
  4270  0F18  0876               	movf	LCD8_set_cursor@column,w
  4271  0F19  3EBF               	addlw	191
  4272  0F1A  00F7               	movwf	??_LCD8_set_cursor
  4273  0F1B  0877               	movf	??_LCD8_set_cursor,w
  4274  0F1C  00CD               	movwf	LCD8_set_cursor@cursor
  4275  0F1D                     l2390:	
  4276                           
  4277                           ;./LCD8bit.h: 29:         LCD8_cmd(cursor);
  4278  0F1D  084D               	movf	LCD8_set_cursor@cursor,w
  4279  0F1E  120A  158A  26F5   	fcall	_LCD8_cmd
  4280  0F21  0008               	return
  4281  0F22                     __end_of_LCD8_set_cursor:	
  4282                           
  4283                           	psect	text24
  4284  0EF5                     __ptext24:	
  4285 ;; *************** function _LCD8_cmd *****************
  4286 ;; Defined at:
  4287 ;;		line 12 in file "./LCD8bit.h"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  data            1    wreg     unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  data            1    5[COMMON] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4301 ;;      Params:         0       0       0       0       0
  4302 ;;      Locals:         1       0       0       0       0
  4303 ;;      Temps:          2       0       0       0       0
  4304 ;;      Totals:         3       0       0       0       0
  4305 ;;Total ram usage:        3 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    1
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_LCD8_set_cursor
  4312 ;;		_LCD8_clear
  4313 ;;		_LCD8_begin
  4314 ;;		_LCD8_shiftR
  4315 ;;		_LCD8_shiftL
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           
  4320                           ;psect for function _LCD8_cmd
  4321  0EF5                     _LCD8_cmd:	
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _LCD8_cmd: [wreg]
  4325                           ;LCD8_cmd@data stored from wreg
  4326  0EF5  00F5               	movwf	LCD8_cmd@data
  4327                           
  4328                           ;./LCD8bit.h: 13:     RA0 = 0;
  4329  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  4331  0EF8  1005               	bcf	5,0	;volatile
  4332                           
  4333                           ;./LCD8bit.h: 14:     PORTB = data;
  4334  0EF9  0875               	movf	LCD8_cmd@data,w
  4335  0EFA  0086               	movwf	6	;volatile
  4336                           
  4337                           ;./LCD8bit.h: 16:     RA1 = 1;
  4338  0EFB  1485               	bsf	5,1	;volatile
  4339                           
  4340                           ;./LCD8bit.h: 17:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4341  0EFC  300B               	movlw	11
  4342  0EFD  00F4               	movwf	??_LCD8_cmd+1
  4343  0EFE  3062               	movlw	98
  4344  0EFF  00F3               	movwf	??_LCD8_cmd
  4345  0F00                     u1817:	
  4346  0F00  0BF3               	decfsz	??_LCD8_cmd,f
  4347  0F01  2F00               	goto	u1817
  4348  0F02  0BF4               	decfsz	??_LCD8_cmd+1,f
  4349  0F03  2F00               	goto	u1817
  4350  0F04  0000               	nop
  4351                           
  4352                           ;./LCD8bit.h: 18:     RA1 = 0;
  4353  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  4354  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  4355  0F07  1085               	bcf	5,1	;volatile
  4356  0F08  0008               	return
  4357  0F09                     __end_of_LCD8_cmd:	
  4358                           
  4359                           	psect	text25
  4360  0EE3                     __ptext25:	
  4361 ;; *************** function _isr *****************
  4362 ;; Defined at:
  4363 ;;		line 25 in file "timer1.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4377 ;;      Params:         0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0
  4379 ;;      Temps:          3       0       0       0       0
  4380 ;;      Totals:         3       0       0       0       0
  4381 ;;Total ram usage:        3 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		Interrupt level 1
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           
  4391                           ;psect for function _isr
  4392  0EE3                     _isr:	
  4393                           
  4394                           ;timer1.c: 27:     if (PIR1bits.TMR1IF) {
  4395  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  4396  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  4397  0EE5  1C0C               	btfss	12,0	;volatile
  4398  0EE6  2EEE               	goto	i1l282
  4399                           
  4400                           ;timer1.c: 28:         t1_count ++;
  4401  0EE7  3001               	movlw	1
  4402  0EE8  00F0               	movwf	??_isr
  4403  0EE9  0870               	movf	??_isr,w
  4404  0EEA  07B8               	addwf	_t1_count,f
  4405                           
  4406                           ;timer1.c: 29:         TMR1 = (0);
  4407  0EEB  018E               	clrf	14	;volatile
  4408  0EEC  018F               	clrf	15	;volatile
  4409                           
  4410                           ;timer1.c: 30:         PIR1bits.TMR1IF = 0;
  4411  0EED  100C               	bcf	12,0	;volatile
  4412  0EEE                     i1l282:	
  4413  0EEE  0872               	movf	??_isr+2,w
  4414  0EEF  008A               	movwf	10
  4415  0EF0  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  4416  0EF1  0083               	movwf	3
  4417  0EF2  0EFE               	swapf	126,f
  4418  0EF3  0E7E               	swapf	126,w
  4419  0EF4  0009               	retfie
  4420  0EF5                     __end_of_isr:	
  4421  007E                     btemp	set	126	;btemp
  4422  007E                     wtemp0	set	126
  4423                           
  4424                           	psect	intentry
  4425  0004                     __pintentry:	
  4426                           ;incstack = 0
  4427                           ; Regs used in _isr: [wreg+status,2+status,0]
  4428                           
  4429  0004                     interrupt_function:	
  4430  007E                     saved_w	set	btemp
  4431  0004  00FE               	movwf	btemp
  4432  0005  0E03               	swapf	3,w
  4433  0006  00F1               	movwf	??_isr+1
  4434  0007  080A               	movf	10,w
  4435  0008  00F2               	movwf	??_isr+2
  4436  0009  120A  158A  2EE3   	ljmp	_isr


Data Sizes:
    Strings     68
    Constant    10
    Data        2
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_18(CODE[4]), STR_17(CODE[5]), STR_16(CODE[3]), STR_15(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[3]), STR_6(CODE[5]), STR_5(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> show(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD8_strWrite@data	PTR unsigned char  size(2) Largest target is 20
		 -> STR_14(CODE[11]), STR_11(CODE[5]), STR_10(CODE[4]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[4]), STR_4(CODE[6]), show(BANK0[20]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCD8_set_cursor
    _main->_LCD8_strWrite
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _setup->_LCD8_begin
    _write_ds1307->_I2C_Master_Write
    _LCD8_clear->_LCD8_cmd
    _LCD8_begin->_LCD8_cmd
    _I2C_Master_Init->___lldiv
    _read_DS1307->_I2C_Master_Read
    _LCD8_strWrite->_LCD8_write
    _LCD8_set_cursor->_LCD8_cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _read_DS1307->_I2C_Master_Read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15350
                                             22 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _LCD8_clear
                    _LCD8_set_cursor
                      _LCD8_strWrite
                            _UART_Rx
                            _UART_Tx
                        _read_DS1307
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2688
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    3449
                                             17 BANK0      1     1      0
                    _I2C_Master_Init
                         _LCD8_begin
                         _LCD8_clear
                    _oscilator_begin
                       _timer1_begin
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         4     0      4    2703
                                              0 BANK0      4     0      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _timer1_begin                                         4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _oscilator_begin                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD8_clear                                           0     0      0      31
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD8_begin                                           2     2      0      31
                                              6 COMMON     2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _read_DS1307                                          4     2      2    3041
                                              2 BANK0      4     2      2
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    2101
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     605
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Tx                                              1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD8_strWrite                                        4     2      2    1781
                                              5 COMMON     3     1      2
                                              0 BANK0      1     1      0
                         _LCD8_write
 ---------------------------------------------------------------------------------
 (2) _LCD8_write                                           2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_set_cursor                                      4     3      1    1632
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (3) _LCD8_cmd                                             3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LCD8_clear
     _LCD8_cmd
   _LCD8_set_cursor
     _LCD8_cmd
   _LCD8_strWrite
     _LCD8_write
   _UART_Rx
   _UART_Tx
   _read_DS1307
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _LCD8_begin
       _LCD8_cmd
     _LCD8_clear
       _LCD8_cmd
     _oscilator_begin
     _timer1_begin
     _write_ds1307
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      53      12        0.0%
ABS                  0      0      53       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 01:46:03 2019

               LCD8_set_cursor@row 004E                                  _a 0078  
                                pc 0002                        __CFG_CP$OFF 0000  
            LCD8_set_cursor@column 0076                                 l80 0EB1  
                               l98 07F4                                 l99 07F7  
                               _ap 0031                                 _hr 0032  
            LCD8_set_cursor@cursor 004D                                 fsr 0004  
                              l135 0F14                                l223 0E7C  
                              l217 0EA9                                l247 0326  
                              l249 0393                                _GIE 005F  
                              _RA0 0028                                _RA1 0029  
                     __CFG_CPD$OFF 0000                                u765 0F9F  
                              u785 0FB0                                u795 0FB9  
                              _hum 0025                                _isr 0EE3  
                              _pir 0026                                _luz 0027  
                              fsr0 0004                                indf 0000  
                     __CFG_LVP$OFF 0000                               l2500 04F9  
                             l2262 0654                               l2502 05C7  
                             l2272 068C                               l2264 0664  
                             l2370 07C1                               l2362 079D  
                             l2276 0699                               l2364 07AB  
                             l2700 02FE                               l2516 002E  
                             l2390 0F1D                               l2374 07CC  
                             l2462 0537                               l2472 054E  
                             l2456 0519                               l1770 0F9C  
                             l2490 0580                               l1772 0FAA  
                             l1780 0FC3                               l2484 0571  
                             l2740 03C9                               l2660 028F  
                             l2398 0F6D                               l2478 0550  
                             l2734 03BB                               l2718 0367  
                             l1776 0FB8                               l2808 052C  
                             l2680 02AD                               l2672 02A1  
                             l2664 0295                               l2498 0584  
                             l2738 03C0                               l2780 04C5  
                             l2772 0499                               l2764 046D  
                             l2676 02A7                               l2668 029B  
                             l2684 02B7                               ?_isr 0070  
                             STR_1 06F6                               STR_2 06E2  
                             STR_3 06EF                               STR_4 06CD  
                             STR_5 06C7                               STR_6 06DD  
                             STR_7 06F2                               STR_8 06FA  
                             STR_9 06FD                               _CREN 00C4  
                             u1205 068D                               u1225 0FDA  
                             u1165 0658                               u1255 07A0  
                             u1185 0666                               u1195 067B  
                             u1275 07AC                               u1285 07B8  
                             u1365 0567                               u1295 07C2  
                             u1607 0057                               u1617 0083  
                             u1707 01A5                               u1627 00AA  
                             u1717 01D1                               u1637 00D6  
                             u1807 0EDC                               u1727 01F8  
                             u1647 00F1                               u1817 0F00  
                             u1737 0224                               u1657 010D  
                             u1747 024B                               u1667 0129  
                             u1757 0277                               u1677 013B  
                             u1767 0707                               u1687 014D  
                             u1777 0716                               u1697 0179  
                             u1787 0723                               _PEIE 005E  
                             u1797 072E                               _RCEN 048B  
                             _RCIF 0065                               _TMR1 000E  
                             _TXIF 0064                       __CFG_WRT$OFF 0000  
                  __end_of_UART_Rx 0E83                    __end_of_UART_Tx 0EB1  
 __end_of_I2C_Master_RepeatedStart 0E8A                               _main 0029  
                             _hora 0033                               _show 0039  
                             btemp 007E                               start 000C  
                    __CFG_IESO$OFF 0000                       ?_read_DS1307 004F  
          __end_of_oscilator_begin 0ED3                   __end_of_LCD8_cmd 0F09  
                   _apoyo_unitario 0036                              ??_isr 0070  
              __size_of_LCD8_begin 0054                __size_of_LCD8_clear 000B  
                 ?_I2C_Master_Init 005A                   ?_I2C_Master_Read 0073  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                  _LCD8_set_cursor 0F09                              ?_main 0070  
              __size_of_LCD8_write 0010                              STR_10 06E6  
                            STR_11 06D8                              STR_12 06EF  
                            STR_13 06EE                              STR_14 06BC  
                            STR_15 06E2                              STR_16 06EF  
                            STR_17 06D3                      __CFG_WDTE$OFF 0000  
                            STR_18 06EA                              _ANSEL 0188  
                  __end_of___lldiv 06A2                    __end_of___lwdiv 07D1  
                  __end_of___lwmod 0FC8                              i1l282 0EEE  
                            _RCREG 001A                              _PORTA 0005  
                            _PORTB 0006                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _SSPIF 0063  
                            _TXREG 0019                  read_DS1307@tiempo 0051  
                   __CFG_FCMEN$OFF 0000                    __end_of_dpowers 06BC  
                            _setup 05CC                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 05CC  
                   __CFG_MCLRE$OFF 0000              __size_of_write_ds1307 0028  
                  __initialization 000F                       __end_of_main 04F2  
                           ??_main 0063                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                          ??_UART_Rx 0073  
                        ??_UART_Tx 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                             ?_setup 0070  
                           _ANSELH 0189                       _write_ds1307 0F42  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                   __CFG_PWRTE$OFF 0000           _I2C_Master_RepeatedStart 0E83  
          __end_of_LCD8_set_cursor 0F22                   ?_oscilator_begin 0070  
                        ??___lldiv 0073                          ??___lwdiv 0077  
                        ??___lwmod 0054                             _minuto 0034  
                           _puerta 0028                             saved_w 007E  
                     ??_LCD8_begin 0076                          ??_sprintf 0059  
                     ??_LCD8_clear 0076                          ?_LCD8_cmd 0070  
                     ??_LCD8_write 0073            __end_of__initialization 0025  
                   __pcstackCOMMON 0070               __size_of_read_DS1307 003F  
                     __pidataBANK0 0E7A                      __end_of_setup 0642  
               __end_of_LCD8_begin 0754                 __end_of_LCD8_clear 0EC5  
               __end_of_LCD8_write 0EE3                            ??_setup 005E  
                       ??_LCD8_cmd 0073                         __pbssBANK0 0020  
            __end_of_LCD8_strWrite 0F94                         __pmaintext 0029  
                 ?_LCD8_set_cursor 0076                         __pintentry 0004  
                          _UART_Rx 0E7C                            _UART_Tx 0EA8  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 06A2                         _convertido 0020  
                          ___lldiv 0642                            ___lwdiv 0793  
                          ___lwmod 0F94                            _decimal 0037  
                    ?_timer1_begin 0073                            __ptext1 04F2  
                          __ptext2 0F94                            __ptext3 0793  
                          __ptext4 05CC                            __ptext5 0F42  
                          __ptext6 0F22                            __ptext7 0EC5  
                          __ptext8 0EBA                            __ptext9 0700  
                        _T1CONbits 0010                            _horaDer 002A  
                          _counter 0024                            _horaIzq 0029  
                          _dpowers 06B2                       __size_of_isr 0012  
                LCD8_strWrite@data 0075                            _humedad 0066  
                          _segundo 0030           __size_of_I2C_Master_Init 0038  
         __size_of_I2C_Master_Read 002E           __size_of_I2C_Master_Wait 0009  
         __size_of_I2C_Master_Stop 0007                            _sprintf 04F2  
                          clrloop0 0EA1               end_of_initialization 0025  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 004D  
                       _segundoDer 002E                         _segundoIzq 002D  
                  ___lldiv@counter 0059                         _valor_CONT 0079  
                        _RCSTAbits 0018                   I2C_Master_Init@c 005A  
                 I2C_Master_Read@a 0073                     ??_timer1_begin 0074  
                        _PORTDbits 0008                          _TRISCbits 0087  
            timer1_begin@prescaler 0073                  __size_of_LCD8_cmd 0014  
                        _TXSTAbits 0098                        _BAUDCTLbits 0187  
         __size_of_oscilator_begin 000E                start_initialization 000F  
                      __end_of_isr 0EF5                  ??_I2C_Master_Init 0074  
                ??_I2C_Master_Read 0075                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073           __CFG_FOSC$INTRC_NOCLKOUT 0000  
                    ??_read_DS1307 0077                        __pdataBANK0 0066  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 004D                           ?_UART_Rx 0070  
                         ?_UART_Tx 0070               __end_of_timer1_begin 0F42  
                      sprintf@flag 005D                        sprintf@prec 005E  
                 _I2C_Master_Start 0E8A                   _I2C_Master_Write 0E98  
                 ___lwdiv@dividend 0075                           ?___lldiv 004D  
                         ?___lwdiv 0073                           ?___lwmod 0050  
              __end_of_read_DS1307 0793                     LCD8_strWrite@i 004D  
                        _cual_dato 002F                          __pstrings 06A2  
           __size_of_LCD8_strWrite 002A                 timer1_begin@offset 0076  
         __size_of_LCD8_set_cursor 0019                     LCD8_write@data 0074  
                 ___lwdiv@quotient 004E                           ?_sprintf 0056  
                ??_oscilator_begin 0073                     __size_of_setup 0076  
                         _LCD8_cmd 0EF5                         UART_Tx@val 0073  
                    ?_write_ds1307 004D                  interrupt_function 0004  
                        _minutoDer 002C                          _minutoIzq 002B  
                        clear_ram0 0EA0                           _PIE1bits 008C  
             read_DS1307@direccion 004F                           _PIR1bits 000C  
                      __stringbase 06B1                I2C_Master_Read@temp 004D  
                 __size_of_UART_Rx 0007                   __size_of_UART_Tx 0009  
                   ??_write_ds1307 0075                      _LCD8_strWrite 0F6A  
              oscilator_begin@freq 0074                        _read_DS1307 0754  
                         _t1_count 0038  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0060  
                 __size_of___lwdiv 003E                   __size_of___lwmod 0034  
               __end_of__stringtab 06B2                         sprintf@val 005F  
                  _I2C_Master_Init 0FC8                    _I2C_Master_Read 07D1  
                  _I2C_Master_Wait 0EB1                    _I2C_Master_Stop 0E91  
              write_ds1307@address 004D                    ___lwdiv@divisor 0073  
            __size_of_timer1_begin 0020                    ___lwdiv@counter 004D  
                         __ptext10 0FC8                           __ptext11 0642  
                         __ptext20 0E7C                           __ptext12 0754  
                         __ptext21 0F6A                           __ptext13 0E98  
                         __ptext22 0ED3                           __ptext14 0E91  
                         __ptext23 0F09                           __ptext15 0E8A  
                         __ptext24 0EF5                           __ptext16 0E83  
                         __ptext25 0EE3                           __ptext17 07D1  
                         __ptext18 0EB1                           __ptext19 0EA8  
                __CFG_BOR4V$BOR40V 0000                  ??_LCD8_set_cursor 0077  
                       _LCD8_begin 0700                         _LCD8_clear 0EBA  
                 __size_of_sprintf 00DA                     ?_LCD8_strWrite 0075  
                       _LCD8_write 0ED3                      __size_of_main 04C9  
                     LCD8_cmd@data 0075                           _unitario 0035  
                     _timer1_begin 0F22           __end_of_I2C_Master_Start 0E91  
         __end_of_I2C_Master_Write 0EA0                         _INTCONbits 000B  
                         intlevel1 0000                          sprintf@ap 005C  
                        sprintf@sp 0061                   ___lwmod@dividend 0052  
                 ___lldiv@dividend 0051                 write_ds1307@w_data 004F  
                        stringcode 06AC                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 1000                        _variableADC 007A  
          __end_of_I2C_Master_Read 07FF            __end_of_I2C_Master_Wait 0EBA  
             __end_of_write_ds1307 0F6A            __end_of_I2C_Master_Stop 0E98  
                  _oscilator_begin 0EC5                        _temperatura 0067  
                         sprintf@c 0062                           sprintf@f 0056  
                 ___lldiv@quotient 0055                  I2C_Master_Write@d 0073  
                  ___lwmod@divisor 0050                    ___lwmod@counter 0055  
                         stringdir 06AC                           stringtab 06A2  
                      _SSPCON2bits 0091                    ??_LCD8_strWrite 0077  
                      ?_LCD8_begin 0070                        ?_LCD8_clear 0070  
                      ?_LCD8_write 0070  
