

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 10:36:05 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.05
    43                           ; Generated 20/12/2018 GMT
    44                           ; 
    45                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310                           
   311                           	psect	idataBANK0
   312  06FB                     __pidataBANK0:	
   313                           
   314                           ;initializer for _humedad
   315  06FB  343E               	retlw	62
   316                           
   317                           ;initializer for _temperatura
   318  06FC  341B               	retlw	27
   319                           
   320                           	psect	strings
   321  0700                     __pstrings:	
   322  0700                     stringtab:	
   323  0700                     __stringtab:	
   324                           
   325                           ;	String table - string pointers are 1 byte each
   326  0700  1BFF               	btfsc	btemp+1,7
   327  0701  2F0A               	ljmp	stringcode
   328  0702  1383               	bcf	3,7
   329  0703  187F               	btfsc	btemp+1,0
   330  0704  1783               	bsf	3,7
   331  0705  0800               	movf	0,w
   332  0706  0A84               	incf	4,f
   333  0707  1903               	skipnz
   334  0708  0AFF               	incf	btemp+1,f
   335  0709  0008               	return
   336  070A                     stringcode:	
   337  070A                     stringdir:	
   338  070A  3007               	movlw	high stringdir
   339  070B  008A               	movwf	10
   340  070C  0804               	movf	4,w
   341  070D  0A84               	incf	4,f
   342  070E  0782               	addwf	2,f
   343  070F                     __stringbase:	
   344  070F  3400               	retlw	0
   345  0710                     __end_of__stringtab:	
   346  0710                     _dpowers:	
   347  0710  3401               	retlw	1
   348  0711  3400               	retlw	0
   349  0712  340A               	retlw	10
   350  0713  3400               	retlw	0
   351  0714  3464               	retlw	100
   352  0715  3400               	retlw	0
   353  0716  34E8               	retlw	232
   354  0717  3403               	retlw	3
   355  0718  3410               	retlw	16
   356  0719  3427               	retlw	39
   357  071A                     __end_of_dpowers:	
   358  000E                     _TMR1	set	14
   359  000C                     _PIR1bits	set	12
   360  000B                     _INTCONbits	set	11
   361  0010                     _T1CONbits	set	16
   362  001A                     _RCREG	set	26
   363  0019                     _TXREG	set	25
   364  0018                     _RCSTAbits	set	24
   365  0008                     _PORTDbits	set	8
   366  0005                     _PORTA	set	5
   367  0006                     _PORTB	set	6
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCON	set	20
   370  0065                     _RCIF	set	101
   371  0064                     _TXIF	set	100
   372  00C4                     _CREN	set	196
   373  0029                     _RA1	set	41
   374  0028                     _RA0	set	40
   375  0063                     _SSPIF	set	99
   376  005E                     _PEIE	set	94
   377  005F                     _GIE	set	95
   378  008C                     _PIE1bits	set	140
   379  009A                     _SPBRGH	set	154
   380  0098                     _TXSTAbits	set	152
   381  0087                     _TRISCbits	set	135
   382  0088                     _TRISD	set	136
   383  0086                     _TRISB	set	134
   384  0085                     _TRISA	set	133
   385  008F                     _OSCCONbits	set	143
   386  0091                     _SSPCON2bits	set	145
   387  0094                     _SSPSTAT	set	148
   388  0093                     _SSPADD	set	147
   389  0091                     _SSPCON2	set	145
   390  0463                     _SSPIE	set	1123
   391  048B                     _RCEN	set	1163
   392  043C                     _TRISC4	set	1084
   393  043B                     _TRISC3	set	1083
   394  0187                     _BAUDCTLbits	set	391
   395  0189                     _ANSELH	set	393
   396  0188                     _ANSEL	set	392
   397  071A                     STR_14:	
   398  071A  3448               	retlw	72	;'H'
   399  071B  3475               	retlw	117	;'u'
   400  071C  346D               	retlw	109	;'m'
   401  071D  3420               	retlw	32	;' '
   402  071E  342B               	retlw	43	;'+'
   403  071F  3420               	retlw	32	;' '
   404  0720  3454               	retlw	84	;'T'
   405  0721  3465               	retlw	101	;'e'
   406  0722  346D               	retlw	109	;'m'
   407  0723  3470               	retlw	112	;'p'
   408  0724  3400               	retlw	0
   409  0725                     STR_5:	
   410  0725  3425               	retlw	37	;'%'
   411  0726  3464               	retlw	100	;'d'
   412  0727  3463               	retlw	99	;'c'
   413  0728  346D               	retlw	109	;'m'
   414  0729  3420               	retlw	32	;' '
   415  072A  3400               	retlw	0
   416  072B                     STR_4:	
   417  072B  3444               	retlw	68	;'D'
   418  072C  3469               	retlw	105	;'i'
   419  072D  3473               	retlw	115	;'s'
   420  072E  3474               	retlw	116	;'t'
   421  072F  342E               	retlw	46	;'.'
   422  0730  3400               	retlw	0
   423  0731                     STR_17:	
   424  0731  3425               	retlw	37	;'%'
   425  0732  3464               	retlw	100	;'d'
   426  0733  3420               	retlw	32	;' '
   427  0734  3443               	retlw	67	;'C'
   428  0735  3400               	retlw	0
   429  0736                     STR_11:	
   430  0736  3448               	retlw	72	;'H'
   431  0737  346F               	retlw	111	;'o'
   432  0738  3472               	retlw	114	;'r'
   433  0739  3461               	retlw	97	;'a'
   434  073A  3400               	retlw	0
   435  073B                     STR_6:	
   436  073B  3425               	retlw	37	;'%'
   437  073C  3464               	retlw	100	;'d'
   438  073D  3463               	retlw	99	;'c'
   439  073E  346D               	retlw	109	;'m'
   440  073F  3400               	retlw	0
   441  0740                     STR_2:	
   442  0740  3425               	retlw	37	;'%'
   443  0741  3464               	retlw	100	;'d'
   444  0742  3420               	retlw	32	;' '
   445  0743  3400               	retlw	0
   446  0744                     STR_10:	
   447  0744  344E               	retlw	78	;'N'
   448  0745  342F               	retlw	47	;'/'
   449  0746  3441               	retlw	65	;'A'
   450  0747  3400               	retlw	0
   451  0748                     STR_18:	
   452  0748  3425               	retlw	37	;'%'
   453  0749  3464               	retlw	100	;'d'
   454  074A  3443               	retlw	67	;'C'
   455  074B  3400               	retlw	0
   456  074C                     STR_13:	
   457  074C  343A               	retlw	58	;':'
   458  074D  3425               	retlw	37	;'%'
   459  074E  3464               	retlw	100	;'d'
   460  074F  3400               	retlw	0
   461  0750                     STR_7:	
   462  0750  344D               	retlw	77	;'M'
   463  0751  346F               	retlw	111	;'o'
   464  0752  3476               	retlw	118	;'v'
   465  0753  3400               	retlw	0
   466  0754                     STR_1:	
   467  0754  344C               	retlw	76	;'L'
   468  0755  3475               	retlw	117	;'u'
   469  0756  347A               	retlw	122	;'z'
   470  0757  3400               	retlw	0
   471  0758                     STR_8:	
   472  0758  3453               	retlw	83	;'S'
   473  0759  3469               	retlw	105	;'i'
   474  075A  3400               	retlw	0
   475  075B                     STR_9:	
   476  075B  344E               	retlw	78	;'N'
   477  075C  346F               	retlw	111	;'o'
   478  075D  3400               	retlw	0
   479  0740                     
   480                           ; #config settings
   481  0000                     
   482                           	psect	cinit
   483  000F                     start_initialization:	
   484  000F                     __initialization:	
   485                           
   486                           ; Initialize objects allocated to BANK0
   487  000F  120A  118A  26FB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   488  0014  00E6               	movwf	__pdataBANK0& (0+127)
   489  0015  120A  118A  26FC  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   490  001A  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   491                           
   492                           ; Clear objects allocated to BANK0
   493  001B  1383               	bcf	3,7	;select IRP bank0
   494  001C  3020               	movlw	low __pbssBANK0
   495  001D  0084               	movwf	4
   496  001E  304D               	movlw	low (__pbssBANK0+45)
   497  001F  120A  158A  2699   	fcall	clear_ram0
   498                           
   499                           ; Clear objects allocated to COMMON
   500  0022  01F8               	clrf	__pbssCOMMON& (0+127)
   501  0023  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   502  0024  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   503  0025                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506  0025                     __end_of__initialization:	
   507  0025  0183               	clrf	3
   508  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	bssCOMMON
   511  0078                     __pbssCOMMON:	
   512  0078                     _a:	
   513  0078                     	ds	1
   514  0079                     _valor_CONT:	
   515  0079                     	ds	1
   516  007A                     _variableADC:	
   517  007A                     	ds	1
   518                           
   519                           	psect	bssBANK0
   520  0020                     __pbssBANK0:	
   521  0020                     _convertido:	
   522  0020                     	ds	4
   523  0024                     _counter:	
   524  0024                     	ds	1
   525  0025                     _hum:	
   526  0025                     	ds	1
   527  0026                     _pir:	
   528  0026                     	ds	1
   529  0027                     _luz:	
   530  0027                     	ds	1
   531  0028                     _puerta:	
   532  0028                     	ds	1
   533  0029                     _horaIzq:	
   534  0029                     	ds	1
   535  002A                     _horaDer:	
   536  002A                     	ds	1
   537  002B                     _minutoIzq:	
   538  002B                     	ds	1
   539  002C                     _minutoDer:	
   540  002C                     	ds	1
   541  002D                     _segundoIzq:	
   542  002D                     	ds	1
   543  002E                     _segundoDer:	
   544  002E                     	ds	1
   545  002F                     _cual_dato:	
   546  002F                     	ds	1
   547  0030                     _segundo:	
   548  0030                     	ds	1
   549  0031                     _ap:	
   550  0031                     	ds	1
   551  0032                     _hr:	
   552  0032                     	ds	1
   553  0033                     _hora:	
   554  0033                     	ds	1
   555  0034                     _minuto:	
   556  0034                     	ds	1
   557  0035                     _unitario:	
   558  0035                     	ds	1
   559  0036                     _apoyo_unitario:	
   560  0036                     	ds	1
   561  0037                     _decimal:	
   562  0037                     	ds	1
   563  0038                     _t1_count:	
   564  0038                     	ds	1
   565  0039                     _show:	
   566  0039                     	ds	20
   567                           
   568                           	psect	dataBANK0
   569  0066                     __pdataBANK0:	
   570  0066                     _humedad:	
   571  0066                     	ds	1
   572  0067                     _temperatura:	
   573  0067                     	ds	1
   574                           
   575                           	psect	clrtext
   576  0E99                     clear_ram0:	
   577                           ;	Called with FSR containing the base address, and
   578                           ;	W with the last address+1
   579                           
   580  0E99  0064               	clrwdt	;clear the watchdog before getting into this loop
   581  0E9A                     clrloop0:	
   582  0E9A  0180               	clrf	0	;clear RAM location pointed to by FSR
   583  0E9B  0A84               	incf	4,f	;increment pointer
   584  0E9C  0604               	xorwf	4,w	;XOR with final address
   585  0E9D  1903               	btfsc	3,2	;have we reached the end yet?
   586  0E9E  3400               	retlw	0	;all done for this memory range, return
   587  0E9F  0604               	xorwf	4,w	;XOR again to restore value
   588  0EA0  2E9A               	goto	clrloop0	;do the next byte
   589                           
   590                           	psect	cstackCOMMON
   591  0070                     __pcstackCOMMON:	
   592  0070                     ?_I2C_Master_Wait:	
   593  0070                     ?_I2C_Master_Start:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_I2C_Master_RepeatedStart:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_I2C_Master_Stop:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_oscilator_begin:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_LCD8_write:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_LCD8_cmd:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_LCD8_clear:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_LCD8_begin:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_setup:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_UART_Tx:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_UART_Rx:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_main:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_isr:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ??_isr:	
   633                           ; 1 bytes @ 0x0
   634                           
   635                           
   636                           ; 1 bytes @ 0x0
   637  0070                     	ds	3
   638  0073                     ?_timer1_begin:	
   639  0073                     ??_I2C_Master_Wait:	
   640                           ; 1 bytes @ 0x3
   641                           
   642  0073                     ??_I2C_Master_Start:	
   643                           ; 1 bytes @ 0x3
   644                           
   645  0073                     ??_I2C_Master_RepeatedStart:	
   646                           ; 1 bytes @ 0x3
   647                           
   648  0073                     ??_I2C_Master_Stop:	
   649                           ; 1 bytes @ 0x3
   650                           
   651  0073                     ?_I2C_Master_Write:	
   652                           ; 1 bytes @ 0x3
   653                           
   654  0073                     ??_oscilator_begin:	
   655                           ; 1 bytes @ 0x3
   656                           
   657  0073                     ??_LCD8_write:	
   658                           ; 1 bytes @ 0x3
   659                           
   660  0073                     ??_LCD8_cmd:	
   661                           ; 1 bytes @ 0x3
   662                           
   663  0073                     ??_UART_Tx:	
   664                           ; 1 bytes @ 0x3
   665                           
   666  0073                     ??_UART_Rx:	
   667                           ; 1 bytes @ 0x3
   668                           
   669  0073                     ??___lldiv:	
   670                           ; 1 bytes @ 0x3
   671                           
   672  0073                     ?_I2C_Master_Read:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ?___lwdiv:	
   676                           ; 2 bytes @ 0x3
   677                           
   678  0073                     UART_Tx@val:	
   679                           ; 2 bytes @ 0x3
   680                           
   681  0073                     timer1_begin@prescaler:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     I2C_Master_Write@d:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     I2C_Master_Read@a:	
   688                           ; 2 bytes @ 0x3
   689                           
   690  0073                     ___lwdiv@divisor:	
   691                           ; 2 bytes @ 0x3
   692                           
   693                           
   694                           ; 2 bytes @ 0x3
   695  0073                     	ds	1
   696  0074                     ??_timer1_begin:	
   697  0074                     ??_I2C_Master_Init:	
   698                           ; 1 bytes @ 0x4
   699                           
   700  0074                     oscilator_begin@freq:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     LCD8_write@data:	
   704                           ; 1 bytes @ 0x4
   705                           
   706                           
   707                           ; 1 bytes @ 0x4
   708  0074                     	ds	1
   709  0075                     ??_I2C_Master_Write:	
   710  0075                     ??_I2C_Master_Read:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     ??_write_ds1307:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     ?_LCD8_strWrite:	
   717                           ; 1 bytes @ 0x5
   718                           
   719  0075                     LCD8_cmd@data:	
   720                           ; 1 bytes @ 0x5
   721                           
   722  0075                     LCD8_strWrite@data:	
   723                           ; 1 bytes @ 0x5
   724                           
   725  0075                     ___lwdiv@dividend:	
   726                           ; 2 bytes @ 0x5
   727                           
   728                           
   729                           ; 2 bytes @ 0x5
   730  0075                     	ds	1
   731  0076                     ?_LCD8_set_cursor:	
   732  0076                     ??_LCD8_clear:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0076                     ??_LCD8_begin:	
   736                           ; 1 bytes @ 0x6
   737                           
   738  0076                     LCD8_set_cursor@column:	
   739                           ; 1 bytes @ 0x6
   740                           
   741  0076                     timer1_begin@offset:	
   742                           ; 1 bytes @ 0x6
   743                           
   744                           
   745                           ; 1 bytes @ 0x6
   746  0076                     	ds	1
   747  0077                     ??_read_DS1307:	
   748  0077                     ??_LCD8_set_cursor:	
   749                           ; 1 bytes @ 0x7
   750                           
   751  0077                     ??_LCD8_strWrite:	
   752                           ; 1 bytes @ 0x7
   753                           
   754  0077                     ??___lwdiv:	
   755                           ; 1 bytes @ 0x7
   756                           
   757                           
   758                           ; 1 bytes @ 0x7
   759  0077                     	ds	1
   760                           
   761                           	psect	cstackBANK0
   762  004D                     __pcstackBANK0:	
   763  004D                     ?_write_ds1307:	
   764  004D                     ?___lldiv:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  004D                     LCD8_set_cursor@cursor:	
   768                           ; 4 bytes @ 0x0
   769                           
   770  004D                     LCD8_strWrite@i:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  004D                     ___lwdiv@counter:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  004D                     I2C_Master_Read@temp:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  004D                     write_ds1307@address:	
   780                           ; 2 bytes @ 0x0
   781                           
   782  004D                     ___lldiv@divisor:	
   783                           ; 2 bytes @ 0x0
   784                           
   785                           
   786                           ; 4 bytes @ 0x0
   787  004D                     	ds	1
   788  004E                     LCD8_set_cursor@row:	
   789  004E                     ___lwdiv@quotient:	
   790                           ; 1 bytes @ 0x1
   791                           
   792                           
   793                           ; 2 bytes @ 0x1
   794  004E                     	ds	1
   795  004F                     ?_read_DS1307:	
   796  004F                     read_DS1307@direccion:	
   797                           ; 2 bytes @ 0x2
   798                           
   799  004F                     write_ds1307@w_data:	
   800                           ; 2 bytes @ 0x2
   801                           
   802                           
   803                           ; 2 bytes @ 0x2
   804  004F                     	ds	1
   805  0050                     ?___lwmod:	
   806  0050                     ___lwmod@divisor:	
   807                           ; 2 bytes @ 0x3
   808                           
   809                           
   810                           ; 2 bytes @ 0x3
   811  0050                     	ds	1
   812  0051                     read_DS1307@tiempo:	
   813  0051                     ___lldiv@dividend:	
   814                           ; 2 bytes @ 0x4
   815                           
   816                           
   817                           ; 4 bytes @ 0x4
   818  0051                     	ds	1
   819  0052                     ___lwmod@dividend:	
   820                           
   821                           ; 2 bytes @ 0x5
   822  0052                     	ds	2
   823  0054                     ??___lwmod:	
   824                           
   825                           ; 1 bytes @ 0x7
   826  0054                     	ds	1
   827  0055                     ___lwmod@counter:	
   828  0055                     ___lldiv@quotient:	
   829                           ; 1 bytes @ 0x8
   830                           
   831                           
   832                           ; 4 bytes @ 0x8
   833  0055                     	ds	1
   834  0056                     ?_sprintf:	
   835  0056                     sprintf@f:	
   836                           ; 2 bytes @ 0x9
   837                           
   838                           
   839                           ; 1 bytes @ 0x9
   840  0056                     	ds	3
   841  0059                     ??_sprintf:	
   842  0059                     ___lldiv@counter:	
   843                           ; 1 bytes @ 0xC
   844                           
   845                           
   846                           ; 1 bytes @ 0xC
   847  0059                     	ds	1
   848  005A                     ?_I2C_Master_Init:	
   849  005A                     I2C_Master_Init@c:	
   850                           ; 1 bytes @ 0xD
   851                           
   852                           
   853                           ; 4 bytes @ 0xD
   854  005A                     	ds	2
   855  005C                     sprintf@ap:	
   856                           
   857                           ; 1 bytes @ 0xF
   858  005C                     	ds	1
   859  005D                     sprintf@flag:	
   860                           
   861                           ; 1 bytes @ 0x10
   862  005D                     	ds	1
   863  005E                     ??_setup:	
   864  005E                     sprintf@prec:	
   865                           ; 1 bytes @ 0x11
   866                           
   867                           
   868                           ; 1 bytes @ 0x11
   869  005E                     	ds	1
   870  005F                     sprintf@val:	
   871                           
   872                           ; 2 bytes @ 0x12
   873  005F                     	ds	2
   874  0061                     sprintf@sp:	
   875                           
   876                           ; 1 bytes @ 0x14
   877  0061                     	ds	1
   878  0062                     sprintf@c:	
   879                           
   880                           ; 1 bytes @ 0x15
   881  0062                     	ds	1
   882  0063                     ??_main:	
   883                           
   884                           ; 1 bytes @ 0x16
   885  0063                     	ds	3
   886                           
   887                           	psect	maintext
   888  0029                     __pmaintext:	
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 110 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : B00/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0
   910 ;;      Temps:          0       3       0       0       0
   911 ;;      Totals:         0       3       0       0       0
   912 ;;Total ram usage:        3 bytes
   913 ;; Hardware stack levels required when called:    5
   914 ;; This function calls:
   915 ;;		_I2C_Master_Read
   916 ;;		_I2C_Master_Start
   917 ;;		_I2C_Master_Stop
   918 ;;		_I2C_Master_Write
   919 ;;		_LCD8_clear
   920 ;;		_LCD8_set_cursor
   921 ;;		_LCD8_strWrite
   922 ;;		_UART_Rx
   923 ;;		_UART_Tx
   924 ;;		_read_DS1307
   925 ;;		_setup
   926 ;;		_sprintf
   927 ;; This function is called by:
   928 ;;		Startup code after reset
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _main
   934  0029                     _main:	
   935                           
   936                           ;main.c: 112:     setup();
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   940  0029  120A  118A  25CE  120A  118A  	fcall	_setup
   941  002E                     l2516:	
   942                           
   943                           ;main.c: 117:         counter++;
   944  002E  3001               	movlw	1
   945  002F  1283               	bcf	3,5	;RP0=0, select bank0
   946  0030  1303               	bcf	3,6	;RP1=0, select bank0
   947  0031  00E3               	movwf	??_main
   948  0032  0863               	movf	??_main,w
   949  0033  07A4               	addwf	_counter,f
   950                           
   951                           ;main.c: 119:             I2C_Master_Start();
   952  0034  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
   953                           
   954                           ;main.c: 120:             I2C_Master_Write(0x20);
   955  0039  3020               	movlw	32
   956  003A  00F3               	movwf	I2C_Master_Write@d
   957  003B  3000               	movlw	0
   958  003C  00F4               	movwf	I2C_Master_Write@d+1
   959  003D  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
   960                           
   961                           ;main.c: 121:             I2C_Master_Write(0x1);
   962  0042  3001               	movlw	1
   963  0043  00F3               	movwf	I2C_Master_Write@d
   964  0044  3000               	movlw	0
   965  0045  00F4               	movwf	I2C_Master_Write@d+1
   966  0046  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
   967                           
   968                           ;main.c: 122:             I2C_Master_Stop();
   969  004B  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
   970                           
   971                           ;main.c: 123:             _delay((unsigned long)((10)*(8000000/4000.0)));
   972  0050  301A               	movlw	26
   973  0051  1283               	bcf	3,5	;RP0=0, select bank0
   974  0052  1303               	bcf	3,6	;RP1=0, select bank0
   975  0053  00E4               	movwf	??_main+1
   976  0054  30F7               	movlw	247
   977  0055  00E3               	movwf	??_main
   978  0056                     u1607:	
   979  0056  0BE3               	decfsz	??_main,f
   980  0057  2856               	goto	u1607
   981  0058  0BE4               	decfsz	??_main+1,f
   982  0059  2856               	goto	u1607
   983  005A  285B               	nop2
   984                           
   985                           ;main.c: 127:             I2C_Master_Start();
   986  005B  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
   987                           
   988                           ;main.c: 128:             I2C_Master_Write(0x21);
   989  0060  3021               	movlw	33
   990  0061  00F3               	movwf	I2C_Master_Write@d
   991  0062  3000               	movlw	0
   992  0063  00F4               	movwf	I2C_Master_Write@d+1
   993  0064  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
   994                           
   995                           ;main.c: 129:             puerta = I2C_Master_Read(0);
   996  0069  3000               	movlw	0
   997  006A  00F3               	movwf	I2C_Master_Read@a
   998  006B  00F4               	movwf	I2C_Master_Read@a+1
   999  006C  120A  158A  2766  120A  118A  	fcall	_I2C_Master_Read
  1000  0071  0873               	movf	?_I2C_Master_Read,w
  1001  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0074  00E3               	movwf	??_main
  1004  0075  0863               	movf	??_main,w
  1005  0076  00A8               	movwf	_puerta
  1006                           
  1007                           ;main.c: 130:             I2C_Master_Stop();
  1008  0077  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1009                           
  1010                           ;main.c: 131:            _delay((unsigned long)((10)*(8000000/4000.0)));
  1011  007C  301A               	movlw	26
  1012  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1013  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1014  007F  00E4               	movwf	??_main+1
  1015  0080  30F7               	movlw	247
  1016  0081  00E3               	movwf	??_main
  1017  0082                     u1617:	
  1018  0082  0BE3               	decfsz	??_main,f
  1019  0083  2882               	goto	u1617
  1020  0084  0BE4               	decfsz	??_main+1,f
  1021  0085  2882               	goto	u1617
  1022  0086  2887               	nop2
  1023                           
  1024                           ;main.c: 135:             I2C_Master_Start();
  1025  0087  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  1026                           
  1027                           ;main.c: 136:             I2C_Master_Write(0x20);
  1028  008C  3020               	movlw	32
  1029  008D  00F3               	movwf	I2C_Master_Write@d
  1030  008E  3000               	movlw	0
  1031  008F  00F4               	movwf	I2C_Master_Write@d+1
  1032  0090  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1033                           
  1034                           ;main.c: 137:             I2C_Master_Write(0x2);
  1035  0095  3002               	movlw	2
  1036  0096  00F3               	movwf	I2C_Master_Write@d
  1037  0097  3000               	movlw	0
  1038  0098  00F4               	movwf	I2C_Master_Write@d+1
  1039  0099  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1040                           
  1041                           ;main.c: 138:             I2C_Master_Stop();
  1042  009E  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1043                           
  1044                           ;main.c: 139:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1045  00A3  301A               	movlw	26
  1046  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00A6  00E4               	movwf	??_main+1
  1049  00A7  30F7               	movlw	247
  1050  00A8  00E3               	movwf	??_main
  1051  00A9                     u1627:	
  1052  00A9  0BE3               	decfsz	??_main,f
  1053  00AA  28A9               	goto	u1627
  1054  00AB  0BE4               	decfsz	??_main+1,f
  1055  00AC  28A9               	goto	u1627
  1056  00AD  28AE               	nop2
  1057                           
  1058                           ;main.c: 143:             I2C_Master_Start();
  1059  00AE  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  1060                           
  1061                           ;main.c: 144:             I2C_Master_Write(0x21);
  1062  00B3  3021               	movlw	33
  1063  00B4  00F3               	movwf	I2C_Master_Write@d
  1064  00B5  3000               	movlw	0
  1065  00B6  00F4               	movwf	I2C_Master_Write@d+1
  1066  00B7  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1067                           
  1068                           ;main.c: 145:             luz = I2C_Master_Read(0);
  1069  00BC  3000               	movlw	0
  1070  00BD  00F3               	movwf	I2C_Master_Read@a
  1071  00BE  00F4               	movwf	I2C_Master_Read@a+1
  1072  00BF  120A  158A  2766  120A  118A  	fcall	_I2C_Master_Read
  1073  00C4  0873               	movf	?_I2C_Master_Read,w
  1074  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1075  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1076  00C7  00E3               	movwf	??_main
  1077  00C8  0863               	movf	??_main,w
  1078  00C9  00A7               	movwf	_luz
  1079                           
  1080                           ;main.c: 146:             I2C_Master_Stop();
  1081  00CA  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1082                           
  1083                           ;main.c: 147:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1084  00CF  301A               	movlw	26
  1085  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1086  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1087  00D2  00E4               	movwf	??_main+1
  1088  00D3  30F7               	movlw	247
  1089  00D4  00E3               	movwf	??_main
  1090  00D5                     u1637:	
  1091  00D5  0BE3               	decfsz	??_main,f
  1092  00D6  28D5               	goto	u1637
  1093  00D7  0BE4               	decfsz	??_main+1,f
  1094  00D8  28D5               	goto	u1637
  1095  00D9  28DA               	nop2
  1096                           
  1097                           ;main.c: 153:             segundo = read_DS1307(0);
  1098  00DA  3000               	movlw	0
  1099  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1100  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1101  00DD  00CF               	movwf	read_DS1307@direccion
  1102  00DE  00D0               	movwf	read_DS1307@direccion+1
  1103  00DF  120A  118A  27B2  120A  118A  	fcall	_read_DS1307
  1104  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1105  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1106  00E6  084F               	movf	?_read_DS1307,w
  1107  00E7  00E3               	movwf	??_main
  1108  00E8  0863               	movf	??_main,w
  1109  00E9  00B0               	movwf	_segundo
  1110                           
  1111                           ;main.c: 154:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1112  00EA  301A               	movlw	26
  1113  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1114  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1115  00ED  00E4               	movwf	??_main+1
  1116  00EE  30F7               	movlw	247
  1117  00EF  00E3               	movwf	??_main
  1118  00F0                     u1647:	
  1119  00F0  0BE3               	decfsz	??_main,f
  1120  00F1  28F0               	goto	u1647
  1121  00F2  0BE4               	decfsz	??_main+1,f
  1122  00F3  28F0               	goto	u1647
  1123  00F4  28F5               	nop2
  1124                           
  1125                           ;main.c: 155:             minuto = read_DS1307(1);
  1126  00F5  3001               	movlw	1
  1127  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1128  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1129  00F8  00CF               	movwf	read_DS1307@direccion
  1130  00F9  3000               	movlw	0
  1131  00FA  00D0               	movwf	read_DS1307@direccion+1
  1132  00FB  120A  118A  27B2  120A  118A  	fcall	_read_DS1307
  1133  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0102  084F               	movf	?_read_DS1307,w
  1136  0103  00E3               	movwf	??_main
  1137  0104  0863               	movf	??_main,w
  1138  0105  00B4               	movwf	_minuto
  1139                           
  1140                           ;main.c: 156:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1141  0106  301A               	movlw	26
  1142  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0109  00E4               	movwf	??_main+1
  1145  010A  30F7               	movlw	247
  1146  010B  00E3               	movwf	??_main
  1147  010C                     u1657:	
  1148  010C  0BE3               	decfsz	??_main,f
  1149  010D  290C               	goto	u1657
  1150  010E  0BE4               	decfsz	??_main+1,f
  1151  010F  290C               	goto	u1657
  1152  0110  2911               	nop2
  1153                           
  1154                           ;main.c: 157:             hora = read_DS1307(2);
  1155  0111  3002               	movlw	2
  1156  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0114  00CF               	movwf	read_DS1307@direccion
  1159  0115  3000               	movlw	0
  1160  0116  00D0               	movwf	read_DS1307@direccion+1
  1161  0117  120A  118A  27B2  120A  118A  	fcall	_read_DS1307
  1162  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1163  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1164  011E  084F               	movf	?_read_DS1307,w
  1165  011F  00E3               	movwf	??_main
  1166  0120  0863               	movf	??_main,w
  1167  0121  00B3               	movwf	_hora
  1168                           
  1169                           ;main.c: 158:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1170  0122  301A               	movlw	26
  1171  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0125  00E4               	movwf	??_main+1
  1174  0126  30F7               	movlw	247
  1175  0127  00E3               	movwf	??_main
  1176  0128                     u1667:	
  1177  0128  0BE3               	decfsz	??_main,f
  1178  0129  2928               	goto	u1667
  1179  012A  0BE4               	decfsz	??_main+1,f
  1180  012B  2928               	goto	u1667
  1181  012C  292D               	nop2
  1182                           
  1183                           ;main.c: 159:             hr = hora & 0b00011111;
  1184  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1185  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1186  012F  0833               	movf	_hora,w
  1187  0130  391F               	andlw	31
  1188  0131  00E3               	movwf	??_main
  1189  0132  0863               	movf	??_main,w
  1190  0133  00B2               	movwf	_hr
  1191                           
  1192                           ;main.c: 160:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1193  0134  301A               	movlw	26
  1194  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0137  00E4               	movwf	??_main+1
  1197  0138  30F7               	movlw	247
  1198  0139  00E3               	movwf	??_main
  1199  013A                     u1677:	
  1200  013A  0BE3               	decfsz	??_main,f
  1201  013B  293A               	goto	u1677
  1202  013C  0BE4               	decfsz	??_main+1,f
  1203  013D  293A               	goto	u1677
  1204  013E  293F               	nop2
  1205                           
  1206                           ;main.c: 161:             ap = hora & 0b00100000;
  1207  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0141  0833               	movf	_hora,w
  1210  0142  3920               	andlw	32
  1211  0143  00E3               	movwf	??_main
  1212  0144  0863               	movf	??_main,w
  1213  0145  00B1               	movwf	_ap
  1214                           
  1215                           ;main.c: 162:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1216  0146  301A               	movlw	26
  1217  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1219  0149  00E4               	movwf	??_main+1
  1220  014A  30F7               	movlw	247
  1221  014B  00E3               	movwf	??_main
  1222  014C                     u1687:	
  1223  014C  0BE3               	decfsz	??_main,f
  1224  014D  294C               	goto	u1687
  1225  014E  0BE4               	decfsz	??_main+1,f
  1226  014F  294C               	goto	u1687
  1227  0150  2951               	nop2
  1228                           
  1229                           ;main.c: 166:             I2C_Master_Start();
  1230  0151  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  1231                           
  1232                           ;main.c: 167:             I2C_Master_Write(0x30);
  1233  0156  3030               	movlw	48
  1234  0157  00F3               	movwf	I2C_Master_Write@d
  1235  0158  3000               	movlw	0
  1236  0159  00F4               	movwf	I2C_Master_Write@d+1
  1237  015A  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1238                           
  1239                           ;main.c: 168:             I2C_Master_Write(minuto);
  1240  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0161  0834               	movf	_minuto,w
  1243  0162  00E3               	movwf	??_main
  1244  0163  01E4               	clrf	??_main+1
  1245  0164  0863               	movf	??_main,w
  1246  0165  00F3               	movwf	I2C_Master_Write@d
  1247  0166  0864               	movf	??_main+1,w
  1248  0167  00F4               	movwf	I2C_Master_Write@d+1
  1249  0168  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1250                           
  1251                           ;main.c: 169:             I2C_Master_Stop();
  1252  016D  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1253                           
  1254                           ;main.c: 170:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1255  0172  301A               	movlw	26
  1256  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0175  00E4               	movwf	??_main+1
  1259  0176  30F7               	movlw	247
  1260  0177  00E3               	movwf	??_main
  1261  0178                     u1697:	
  1262  0178  0BE3               	decfsz	??_main,f
  1263  0179  2978               	goto	u1697
  1264  017A  0BE4               	decfsz	??_main+1,f
  1265  017B  2978               	goto	u1697
  1266  017C  297D               	nop2
  1267                           
  1268                           ;main.c: 174:             I2C_Master_Start();
  1269  017D  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  1270                           
  1271                           ;main.c: 175:             I2C_Master_Write(0x31);
  1272  0182  3031               	movlw	49
  1273  0183  00F3               	movwf	I2C_Master_Write@d
  1274  0184  3000               	movlw	0
  1275  0185  00F4               	movwf	I2C_Master_Write@d+1
  1276  0186  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1277                           
  1278                           ;main.c: 176:             pir = I2C_Master_Read(0);
  1279  018B  3000               	movlw	0
  1280  018C  00F3               	movwf	I2C_Master_Read@a
  1281  018D  00F4               	movwf	I2C_Master_Read@a+1
  1282  018E  120A  158A  2766  120A  118A  	fcall	_I2C_Master_Read
  1283  0193  0873               	movf	?_I2C_Master_Read,w
  1284  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0196  00E3               	movwf	??_main
  1287  0197  0863               	movf	??_main,w
  1288  0198  00A6               	movwf	_pir
  1289                           
  1290                           ;main.c: 177:             I2C_Master_Stop();
  1291  0199  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1292                           
  1293                           ;main.c: 178:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1294  019E  301A               	movlw	26
  1295  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1296  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1297  01A1  00E4               	movwf	??_main+1
  1298  01A2  30F7               	movlw	247
  1299  01A3  00E3               	movwf	??_main
  1300  01A4                     u1707:	
  1301  01A4  0BE3               	decfsz	??_main,f
  1302  01A5  29A4               	goto	u1707
  1303  01A6  0BE4               	decfsz	??_main+1,f
  1304  01A7  29A4               	goto	u1707
  1305  01A8  29A9               	nop2
  1306                           
  1307                           ;main.c: 186:             I2C_Master_Start();
  1308  01A9  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  1309                           
  1310                           ;main.c: 187:             I2C_Master_Write(0x30);
  1311  01AE  3030               	movlw	48
  1312  01AF  00F3               	movwf	I2C_Master_Write@d
  1313  01B0  3000               	movlw	0
  1314  01B1  00F4               	movwf	I2C_Master_Write@d+1
  1315  01B2  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1316                           
  1317                           ;main.c: 188:             I2C_Master_Write(hr);
  1318  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1319  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1320  01B9  0832               	movf	_hr,w
  1321  01BA  00E3               	movwf	??_main
  1322  01BB  01E4               	clrf	??_main+1
  1323  01BC  0863               	movf	??_main,w
  1324  01BD  00F3               	movwf	I2C_Master_Write@d
  1325  01BE  0864               	movf	??_main+1,w
  1326  01BF  00F4               	movwf	I2C_Master_Write@d+1
  1327  01C0  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1328                           
  1329                           ;main.c: 189:             I2C_Master_Stop();
  1330  01C5  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1331                           
  1332                           ;main.c: 190:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1333  01CA  301A               	movlw	26
  1334  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1335  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1336  01CD  00E4               	movwf	??_main+1
  1337  01CE  30F7               	movlw	247
  1338  01CF  00E3               	movwf	??_main
  1339  01D0                     u1717:	
  1340  01D0  0BE3               	decfsz	??_main,f
  1341  01D1  29D0               	goto	u1717
  1342  01D2  0BE4               	decfsz	??_main+1,f
  1343  01D3  29D0               	goto	u1717
  1344  01D4  29D5               	nop2
  1345                           
  1346                           ;main.c: 199:             PORTDbits.RD2 = 1;
  1347  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1348  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1349  01D7  1508               	bsf	8,2	;volatile
  1350                           
  1351                           ;main.c: 200:             I2C_Master_Start();
  1352  01D8  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  1353                           
  1354                           ;main.c: 201:             I2C_Master_Write(0x40);
  1355  01DD  3040               	movlw	64
  1356  01DE  00F3               	movwf	I2C_Master_Write@d
  1357  01DF  3000               	movlw	0
  1358  01E0  00F4               	movwf	I2C_Master_Write@d+1
  1359  01E1  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1360                           
  1361                           ;main.c: 202:             I2C_Master_Write(0x1);
  1362  01E6  3001               	movlw	1
  1363  01E7  00F3               	movwf	I2C_Master_Write@d
  1364  01E8  3000               	movlw	0
  1365  01E9  00F4               	movwf	I2C_Master_Write@d+1
  1366  01EA  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1367                           
  1368                           ;main.c: 203:             I2C_Master_Stop();
  1369  01EF  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1370                           
  1371                           ;main.c: 204:            _delay((unsigned long)((10)*(8000000/4000.0)));
  1372  01F4  301A               	movlw	26
  1373  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1374  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1375  01F7  00E4               	movwf	??_main+1
  1376  01F8  30F7               	movlw	247
  1377  01F9  00E3               	movwf	??_main
  1378  01FA                     u1727:	
  1379  01FA  0BE3               	decfsz	??_main,f
  1380  01FB  29FA               	goto	u1727
  1381  01FC  0BE4               	decfsz	??_main+1,f
  1382  01FD  29FA               	goto	u1727
  1383  01FE  29FF               	nop2
  1384                           
  1385                           ;main.c: 206:             I2C_Master_Start();
  1386  01FF  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  1387                           
  1388                           ;main.c: 207:             I2C_Master_Write(0x41);
  1389  0204  3041               	movlw	65
  1390  0205  00F3               	movwf	I2C_Master_Write@d
  1391  0206  3000               	movlw	0
  1392  0207  00F4               	movwf	I2C_Master_Write@d+1
  1393  0208  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1394                           
  1395                           ;main.c: 208:             hum = I2C_Master_Read(0);
  1396  020D  3000               	movlw	0
  1397  020E  00F3               	movwf	I2C_Master_Read@a
  1398  020F  00F4               	movwf	I2C_Master_Read@a+1
  1399  0210  120A  158A  2766  120A  118A  	fcall	_I2C_Master_Read
  1400  0215  0873               	movf	?_I2C_Master_Read,w
  1401  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0218  00E3               	movwf	??_main
  1404  0219  0863               	movf	??_main,w
  1405  021A  00A5               	movwf	_hum
  1406                           
  1407                           ;main.c: 209:             I2C_Master_Stop();
  1408  021B  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1409                           
  1410                           ;main.c: 210:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1411  0220  301A               	movlw	26
  1412  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0223  00E4               	movwf	??_main+1
  1415  0224  30F7               	movlw	247
  1416  0225  00E3               	movwf	??_main
  1417  0226                     u1737:	
  1418  0226  0BE3               	decfsz	??_main,f
  1419  0227  2A26               	goto	u1737
  1420  0228  0BE4               	decfsz	??_main+1,f
  1421  0229  2A26               	goto	u1737
  1422  022A  2A2B               	nop2
  1423                           
  1424                           ;main.c: 214:             I2C_Master_Start();
  1425  022B  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  1426                           
  1427                           ;main.c: 215:             I2C_Master_Write(0x40);
  1428  0230  3040               	movlw	64
  1429  0231  00F3               	movwf	I2C_Master_Write@d
  1430  0232  3000               	movlw	0
  1431  0233  00F4               	movwf	I2C_Master_Write@d+1
  1432  0234  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1433                           
  1434                           ;main.c: 216:             I2C_Master_Write(0x2);
  1435  0239  3002               	movlw	2
  1436  023A  00F3               	movwf	I2C_Master_Write@d
  1437  023B  3000               	movlw	0
  1438  023C  00F4               	movwf	I2C_Master_Write@d+1
  1439  023D  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1440                           
  1441                           ;main.c: 217:             I2C_Master_Stop();
  1442  0242  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1443                           
  1444                           ;main.c: 218:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1445  0247  301A               	movlw	26
  1446  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1448  024A  00E4               	movwf	??_main+1
  1449  024B  30F7               	movlw	247
  1450  024C  00E3               	movwf	??_main
  1451  024D                     u1747:	
  1452  024D  0BE3               	decfsz	??_main,f
  1453  024E  2A4D               	goto	u1747
  1454  024F  0BE4               	decfsz	??_main+1,f
  1455  0250  2A4D               	goto	u1747
  1456  0251  2A52               	nop2
  1457                           
  1458                           ;main.c: 221:             I2C_Master_Start();
  1459  0252  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  1460                           
  1461                           ;main.c: 222:             I2C_Master_Write(0x41);
  1462  0257  3041               	movlw	65
  1463  0258  00F3               	movwf	I2C_Master_Write@d
  1464  0259  3000               	movlw	0
  1465  025A  00F4               	movwf	I2C_Master_Write@d+1
  1466  025B  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  1467                           
  1468                           ;main.c: 223:             temperatura = I2C_Master_Read(0);
  1469  0260  3000               	movlw	0
  1470  0261  00F3               	movwf	I2C_Master_Read@a
  1471  0262  00F4               	movwf	I2C_Master_Read@a+1
  1472  0263  120A  158A  2766  120A  118A  	fcall	_I2C_Master_Read
  1473  0268  0873               	movf	?_I2C_Master_Read,w
  1474  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1475  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1476  026B  00E3               	movwf	??_main
  1477  026C  0863               	movf	??_main,w
  1478  026D  00E7               	movwf	_temperatura
  1479                           
  1480                           ;main.c: 224:             I2C_Master_Stop();
  1481  026E  120A  158A  268A  120A  118A  	fcall	_I2C_Master_Stop
  1482                           
  1483                           ;main.c: 225:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1484  0273  301A               	movlw	26
  1485  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0276  00E4               	movwf	??_main+1
  1488  0277  30F7               	movlw	247
  1489  0278  00E3               	movwf	??_main
  1490  0279                     u1757:	
  1491  0279  0BE3               	decfsz	??_main,f
  1492  027A  2A79               	goto	u1757
  1493  027B  0BE4               	decfsz	??_main+1,f
  1494  027C  2A79               	goto	u1757
  1495  027D  2A7E               	nop2
  1496                           
  1497                           ;main.c: 226:             PORTDbits.RD2 =0;
  1498  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1499  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0280  1108               	bcf	8,2	;volatile
  1501                           
  1502                           ;main.c: 257:             PORTDbits.RD7 = 1;
  1503  0281  1788               	bsf	8,7	;volatile
  1504                           
  1505                           ;main.c: 259:             cual_dato = UART_Rx();
  1506  0282  120A  158A  2675  120A  118A  	fcall	_UART_Rx
  1507  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0289  00E3               	movwf	??_main
  1510  028A  0863               	movf	??_main,w
  1511  028B  00AF               	movwf	_cual_dato
  1512                           
  1513                           ;main.c: 261:         if(cual_dato == 1U){
  1514  028C  032F               	decf	_cual_dato,w
  1515  028D  1D03               	btfss	3,2
  1516  028E  2A91               	goto	l2660
  1517                           
  1518                           ;main.c: 262:             UART_Tx(hum);
  1519  028F  0825               	movf	_hum,w
  1520  0290  2AB4               	goto	L2
  1521  0291                     l2660:	
  1522                           ;main.c: 263:         }else if(cual_dato == 2U){
  1523                           
  1524  0291  3002               	movlw	2
  1525  0292  062F               	xorwf	_cual_dato,w
  1526  0293  1D03               	btfss	3,2
  1527  0294  2A97               	goto	l2664
  1528                           
  1529                           ;main.c: 264:             UART_Tx(puerta);
  1530  0295  0828               	movf	_puerta,w
  1531  0296  2AB4               	goto	L2
  1532  0297                     l2664:	
  1533                           ;main.c: 265:         }else if(cual_dato == 3U){
  1534                           
  1535  0297  3003               	movlw	3
  1536  0298  062F               	xorwf	_cual_dato,w
  1537  0299  1D03               	btfss	3,2
  1538  029A  2A9D               	goto	l2668
  1539                           
  1540                           ;main.c: 266:             UART_Tx(temperatura);
  1541  029B  0867               	movf	_temperatura,w
  1542  029C  2AB4               	goto	L2
  1543  029D                     l2668:	
  1544                           ;main.c: 267:         }else if(cual_dato == 4U){
  1545                           
  1546  029D  3004               	movlw	4
  1547  029E  062F               	xorwf	_cual_dato,w
  1548  029F  1D03               	btfss	3,2
  1549  02A0  2AA3               	goto	l2672
  1550                           
  1551                           ;main.c: 268:             UART_Tx(pir);
  1552  02A1  0826               	movf	_pir,w
  1553  02A2  2AB4               	goto	L2
  1554  02A3                     l2672:	
  1555                           ;main.c: 269:         }else if(cual_dato == 5U){
  1556                           
  1557  02A3  3005               	movlw	5
  1558  02A4  062F               	xorwf	_cual_dato,w
  1559  02A5  1D03               	btfss	3,2
  1560  02A6  2AA9               	goto	l2676
  1561                           
  1562                           ;main.c: 270:             UART_Tx(hr);
  1563  02A7  0832               	movf	_hr,w
  1564  02A8  2AB4               	goto	L2
  1565  02A9                     l2676:	
  1566                           ;main.c: 271:         }else if(cual_dato == 6U){
  1567                           
  1568  02A9  3006               	movlw	6
  1569  02AA  062F               	xorwf	_cual_dato,w
  1570  02AB  1D03               	btfss	3,2
  1571  02AC  2AAF               	goto	l2680
  1572                           
  1573                           ;main.c: 272:             UART_Tx(minuto);
  1574  02AD  0834               	movf	_minuto,w
  1575  02AE  2AB4               	goto	L2
  1576  02AF                     l2680:	
  1577                           ;main.c: 273:         }else if(cual_dato == 7U){
  1578                           
  1579  02AF  3007               	movlw	7
  1580  02B0  062F               	xorwf	_cual_dato,w
  1581  02B1  1D03               	btfss	3,2
  1582  02B2  2AB9               	goto	l2684
  1583                           
  1584                           ;main.c: 274:             UART_Tx(luz);
  1585  02B3  0827               	movf	_luz,w
  1586  02B4                     L2:	
  1587  02B4  120A  158A  26A1  120A  118A  	fcall	_UART_Tx
  1588  02B9                     l2684:	
  1589                           
  1590                           ;main.c: 276:             PORTDbits.RD7 = 0;
  1591  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1592  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1593  02BB  1388               	bcf	8,7	;volatile
  1594                           
  1595                           ;main.c: 278:             LCD8_clear();
  1596  02BC  120A  158A  26B3  120A  118A  	fcall	_LCD8_clear
  1597                           
  1598                           ;main.c: 279:             if(t1_count<177){
  1599  02C1  30B1               	movlw	177
  1600  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1601  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1602  02C4  0238               	subwf	_t1_count,w
  1603  02C5  1803               	skipnc
  1604  02C6  2BCB               	goto	l2740
  1605                           
  1606                           ;main.c: 280:                 LCD8_set_cursor(1,1);
  1607  02C7  01F6               	clrf	LCD8_set_cursor@column
  1608  02C8  0AF6               	incf	LCD8_set_cursor@column,f
  1609  02C9  3001               	movlw	1
  1610  02CA  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1611                           
  1612                           ;main.c: 281:             LCD8_strWrite("Luz");
  1613  02CF  3045               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1614  02D0  00F5               	movwf	LCD8_strWrite@data
  1615  02D1  3080               	movlw	128
  1616  02D2  00F6               	movwf	LCD8_strWrite@data+1
  1617  02D3  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1618                           
  1619                           ;main.c: 282:             if(luz<100){
  1620  02D8  3064               	movlw	100
  1621  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1622  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1623  02DB  0227               	subwf	_luz,w
  1624  02DC  1803               	skipnc
  1625  02DD  2B00               	goto	l2700
  1626                           
  1627                           ;main.c: 283:             sprintf(show,"%d ",luz);
  1628  02DE  3031               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1629  02DF  00E3               	movwf	??_main
  1630  02E0  0863               	movf	??_main,w
  1631  02E1  00D6               	movwf	sprintf@f
  1632  02E2  0827               	movf	_luz,w
  1633  02E3  00E4               	movwf	??_main+1
  1634  02E4  01E5               	clrf	??_main+2
  1635  02E5  0864               	movf	??_main+1,w
  1636  02E6  00D7               	movwf	?_sprintf+1
  1637  02E7  0865               	movf	??_main+2,w
  1638  02E8  00D8               	movwf	?_sprintf+2
  1639  02E9  3039               	movlw	(low (_show| 0))& (0+255)
  1640  02EA  120A  118A  24F4  120A  118A  	fcall	_sprintf
  1641                           
  1642                           ;main.c: 284:             LCD8_set_cursor(2,1);
  1643  02EF  01F6               	clrf	LCD8_set_cursor@column
  1644  02F0  0AF6               	incf	LCD8_set_cursor@column,f
  1645  02F1  3002               	movlw	2
  1646  02F2  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1647                           
  1648                           ;main.c: 285:             LCD8_strWrite(show);
  1649  02F7  3039               	movlw	(low (_show| 0))& (0+255)
  1650  02F8  00F5               	movwf	LCD8_strWrite@data
  1651  02F9  3000               	movlw	0
  1652  02FA  00F6               	movwf	LCD8_strWrite@data+1
  1653  02FB  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1654  0300                     l2700:	
  1655                           
  1656                           ;main.c: 288:             if(luz>99){
  1657  0300  3064               	movlw	100
  1658  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0303  0227               	subwf	_luz,w
  1661  0304  1C03               	skipc
  1662  0305  2B28               	goto	l247
  1663                           
  1664                           ;main.c: 289:             sprintf(show,"%d",luz);
  1665  0306  303E               	movlw	(low (((STR_13+1)-__stringbase)| (0+32768)))& (0+255)
  1666  0307  00E3               	movwf	??_main
  1667  0308  0863               	movf	??_main,w
  1668  0309  00D6               	movwf	sprintf@f
  1669  030A  0827               	movf	_luz,w
  1670  030B  00E4               	movwf	??_main+1
  1671  030C  01E5               	clrf	??_main+2
  1672  030D  0864               	movf	??_main+1,w
  1673  030E  00D7               	movwf	?_sprintf+1
  1674  030F  0865               	movf	??_main+2,w
  1675  0310  00D8               	movwf	?_sprintf+2
  1676  0311  3039               	movlw	(low (_show| 0))& (0+255)
  1677  0312  120A  118A  24F4  120A  118A  	fcall	_sprintf
  1678                           
  1679                           ;main.c: 290:             LCD8_set_cursor(2,1);
  1680  0317  01F6               	clrf	LCD8_set_cursor@column
  1681  0318  0AF6               	incf	LCD8_set_cursor@column,f
  1682  0319  3002               	movlw	2
  1683  031A  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1684                           
  1685                           ;main.c: 291:             LCD8_strWrite(show);
  1686  031F  3039               	movlw	(low (_show| 0))& (0+255)
  1687  0320  00F5               	movwf	LCD8_strWrite@data
  1688  0321  3000               	movlw	0
  1689  0322  00F6               	movwf	LCD8_strWrite@data+1
  1690  0323  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1691  0328                     l247:	
  1692                           ;main.c: 292:             }
  1693                           
  1694                           
  1695                           ;main.c: 295:             LCD8_set_cursor(1,6);
  1696  0328  3006               	movlw	6
  1697  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1698  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1699  032B  00E3               	movwf	??_main
  1700  032C  0863               	movf	??_main,w
  1701  032D  00F6               	movwf	LCD8_set_cursor@column
  1702  032E  3001               	movlw	1
  1703  032F  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1704                           
  1705                           ;main.c: 296:             LCD8_strWrite("Dist.");
  1706  0334  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1707  0335  00F5               	movwf	LCD8_strWrite@data
  1708  0336  3080               	movlw	128
  1709  0337  00F6               	movwf	LCD8_strWrite@data+1
  1710  0338  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1711                           
  1712                           ;main.c: 297:              if(puerta <100){
  1713  033D  3064               	movlw	100
  1714  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1715  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1716  0340  0228               	subwf	_puerta,w
  1717  0341  1803               	skipnc
  1718  0342  2B69               	goto	l2718
  1719                           
  1720                           ;main.c: 298:             sprintf(show,"%dcm ",puerta);
  1721  0343  3016               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1722  0344  00E3               	movwf	??_main
  1723  0345  0863               	movf	??_main,w
  1724  0346  00D6               	movwf	sprintf@f
  1725  0347  0828               	movf	_puerta,w
  1726  0348  00E4               	movwf	??_main+1
  1727  0349  01E5               	clrf	??_main+2
  1728  034A  0864               	movf	??_main+1,w
  1729  034B  00D7               	movwf	?_sprintf+1
  1730  034C  0865               	movf	??_main+2,w
  1731  034D  00D8               	movwf	?_sprintf+2
  1732  034E  3039               	movlw	(low (_show| 0))& (0+255)
  1733  034F  120A  118A  24F4  120A  118A  	fcall	_sprintf
  1734                           
  1735                           ;main.c: 299:             LCD8_set_cursor(2,6);
  1736  0354  3006               	movlw	6
  1737  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0357  00E3               	movwf	??_main
  1740  0358  0863               	movf	??_main,w
  1741  0359  00F6               	movwf	LCD8_set_cursor@column
  1742  035A  3002               	movlw	2
  1743  035B  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1744                           
  1745                           ;main.c: 300:             LCD8_strWrite(show);
  1746  0360  3039               	movlw	(low (_show| 0))& (0+255)
  1747  0361  00F5               	movwf	LCD8_strWrite@data
  1748  0362  3000               	movlw	0
  1749  0363  00F6               	movwf	LCD8_strWrite@data+1
  1750  0364  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1751  0369                     l2718:	
  1752                           
  1753                           ;main.c: 303:             if(puerta>99){
  1754  0369  3064               	movlw	100
  1755  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1756  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1757  036C  0228               	subwf	_puerta,w
  1758  036D  1C03               	skipc
  1759  036E  2B95               	goto	l249
  1760                           
  1761                           ;main.c: 304:             sprintf(show,"%dcm",puerta);
  1762  036F  302C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1763  0370  00E3               	movwf	??_main
  1764  0371  0863               	movf	??_main,w
  1765  0372  00D6               	movwf	sprintf@f
  1766  0373  0828               	movf	_puerta,w
  1767  0374  00E4               	movwf	??_main+1
  1768  0375  01E5               	clrf	??_main+2
  1769  0376  0864               	movf	??_main+1,w
  1770  0377  00D7               	movwf	?_sprintf+1
  1771  0378  0865               	movf	??_main+2,w
  1772  0379  00D8               	movwf	?_sprintf+2
  1773  037A  3039               	movlw	(low (_show| 0))& (0+255)
  1774  037B  120A  118A  24F4  120A  118A  	fcall	_sprintf
  1775                           
  1776                           ;main.c: 305:             LCD8_set_cursor(2,6);
  1777  0380  3006               	movlw	6
  1778  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0383  00E3               	movwf	??_main
  1781  0384  0863               	movf	??_main,w
  1782  0385  00F6               	movwf	LCD8_set_cursor@column
  1783  0386  3002               	movlw	2
  1784  0387  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1785                           
  1786                           ;main.c: 306:             LCD8_strWrite(show);
  1787  038C  3039               	movlw	(low (_show| 0))& (0+255)
  1788  038D  00F5               	movwf	LCD8_strWrite@data
  1789  038E  3000               	movlw	0
  1790  038F  00F6               	movwf	LCD8_strWrite@data+1
  1791  0390  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1792  0395                     l249:	
  1793                           ;main.c: 307:             }
  1794                           
  1795                           
  1796                           ;main.c: 309:             LCD8_set_cursor(1,12);
  1797  0395  300C               	movlw	12
  1798  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0398  00E3               	movwf	??_main
  1801  0399  0863               	movf	??_main,w
  1802  039A  00F6               	movwf	LCD8_set_cursor@column
  1803  039B  3001               	movlw	1
  1804  039C  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1805                           
  1806                           ;main.c: 310:             LCD8_strWrite("Mov");
  1807  03A1  3041               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1808  03A2  00F5               	movwf	LCD8_strWrite@data
  1809  03A3  3080               	movlw	128
  1810  03A4  00F6               	movwf	LCD8_strWrite@data+1
  1811  03A5  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1812                           
  1813                           ;main.c: 311:             LCD8_set_cursor(2,12);
  1814  03AA  300C               	movlw	12
  1815  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1816  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1817  03AD  00E3               	movwf	??_main
  1818  03AE  0863               	movf	??_main,w
  1819  03AF  00F6               	movwf	LCD8_set_cursor@column
  1820  03B0  3002               	movlw	2
  1821  03B1  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1822                           
  1823                           ;main.c: 312:             if (pir == 1){
  1824  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1825  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1826  03B8  0326               	decf	_pir,w
  1827  03B9  1D03               	btfss	3,2
  1828  03BA  2BBD               	goto	l2734
  1829                           
  1830                           ;main.c: 313:             LCD8_strWrite("Si");
  1831  03BB  3049               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1832  03BC  2BC3               	goto	L1
  1833  03BD                     l2734:	
  1834                           ;main.c: 314:             }
  1835                           
  1836  03BD  0826               	movf	_pir,w
  1837  03BE  1D03               	btfss	3,2
  1838  03BF  2BC2               	goto	l2738
  1839                           
  1840                           ;main.c: 316:             LCD8_strWrite("No");
  1841  03C0  304C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1842  03C1  2BC3               	goto	L1
  1843  03C2                     l2738:	
  1844                           ;main.c: 317:             } else{
  1845                           
  1846                           
  1847                           ;main.c: 318:                LCD8_strWrite("N/A");
  1848  03C2  3035               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1849  03C3                     L1:	
  1850  03C3  00F5               	movwf	LCD8_strWrite@data
  1851  03C4  3080               	movlw	128
  1852  03C5  00F6               	movwf	LCD8_strWrite@data+1
  1853  03C6  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1854  03CB                     l2740:	
  1855                           
  1856                           ;main.c: 321:             if(t1_count>=177){
  1857  03CB  30B1               	movlw	177
  1858  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1859  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1860  03CE  0238               	subwf	_t1_count,w
  1861  03CF  1C03               	skipc
  1862  03D0  282E               	goto	l2516
  1863                           
  1864                           ;main.c: 323:             LCD8_set_cursor(1,1);
  1865  03D1  01F6               	clrf	LCD8_set_cursor@column
  1866  03D2  0AF6               	incf	LCD8_set_cursor@column,f
  1867  03D3  3001               	movlw	1
  1868  03D4  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1869                           
  1870                           ;main.c: 324:             LCD8_strWrite("Hora");
  1871  03D9  3027               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1872  03DA  00F5               	movwf	LCD8_strWrite@data
  1873  03DB  3080               	movlw	128
  1874  03DC  00F6               	movwf	LCD8_strWrite@data+1
  1875  03DD  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1876                           
  1877                           ;main.c: 325:             sprintf (show,"%d",hr);
  1878  03E2  303E               	movlw	(low (((STR_13+1)-__stringbase)| (0+32768)))& (0+255)
  1879  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1880  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1881  03E5  00E3               	movwf	??_main
  1882  03E6  0863               	movf	??_main,w
  1883  03E7  00D6               	movwf	sprintf@f
  1884  03E8  0832               	movf	_hr,w
  1885  03E9  00E4               	movwf	??_main+1
  1886  03EA  01E5               	clrf	??_main+2
  1887  03EB  0864               	movf	??_main+1,w
  1888  03EC  00D7               	movwf	?_sprintf+1
  1889  03ED  0865               	movf	??_main+2,w
  1890  03EE  00D8               	movwf	?_sprintf+2
  1891  03EF  3039               	movlw	(low (_show| 0))& (0+255)
  1892  03F0  120A  118A  24F4  120A  118A  	fcall	_sprintf
  1893                           
  1894                           ;main.c: 326:             LCD8_set_cursor(2,1);
  1895  03F5  01F6               	clrf	LCD8_set_cursor@column
  1896  03F6  0AF6               	incf	LCD8_set_cursor@column,f
  1897  03F7  3002               	movlw	2
  1898  03F8  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1899                           
  1900                           ;main.c: 327:             LCD8_strWrite(show);
  1901  03FD  3039               	movlw	(low (_show| 0))& (0+255)
  1902  03FE  00F5               	movwf	LCD8_strWrite@data
  1903  03FF  3000               	movlw	0
  1904  0400  00F6               	movwf	LCD8_strWrite@data+1
  1905  0401  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1906                           
  1907                           ;main.c: 328:             sprintf (show,":%d",minuto);
  1908  0406  303D               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1909  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0409  00E3               	movwf	??_main
  1912  040A  0863               	movf	??_main,w
  1913  040B  00D6               	movwf	sprintf@f
  1914  040C  0834               	movf	_minuto,w
  1915  040D  00E4               	movwf	??_main+1
  1916  040E  01E5               	clrf	??_main+2
  1917  040F  0864               	movf	??_main+1,w
  1918  0410  00D7               	movwf	?_sprintf+1
  1919  0411  0865               	movf	??_main+2,w
  1920  0412  00D8               	movwf	?_sprintf+2
  1921  0413  3039               	movlw	(low (_show| 0))& (0+255)
  1922  0414  120A  118A  24F4  120A  118A  	fcall	_sprintf
  1923                           
  1924                           ;main.c: 329:             LCD8_set_cursor(2,2);
  1925  0419  3002               	movlw	2
  1926  041A  1283               	bcf	3,5	;RP0=0, select bank0
  1927  041B  1303               	bcf	3,6	;RP1=0, select bank0
  1928  041C  00E3               	movwf	??_main
  1929  041D  0863               	movf	??_main,w
  1930  041E  00F6               	movwf	LCD8_set_cursor@column
  1931  041F  3002               	movlw	2
  1932  0420  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1933                           
  1934                           ;main.c: 330:             LCD8_strWrite(show);
  1935  0425  3039               	movlw	(low (_show| 0))& (0+255)
  1936  0426  00F5               	movwf	LCD8_strWrite@data
  1937  0427  3000               	movlw	0
  1938  0428  00F6               	movwf	LCD8_strWrite@data+1
  1939  0429  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1940                           
  1941                           ;main.c: 332:             LCD8_set_cursor(1,7);
  1942  042E  3007               	movlw	7
  1943  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0431  00E3               	movwf	??_main
  1946  0432  0863               	movf	??_main,w
  1947  0433  00F6               	movwf	LCD8_set_cursor@column
  1948  0434  3001               	movlw	1
  1949  0435  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1950                           
  1951                           ;main.c: 333:             LCD8_strWrite("Hum + Temp");
  1952  043A  300B               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1953  043B  00F5               	movwf	LCD8_strWrite@data
  1954  043C  3080               	movlw	128
  1955  043D  00F6               	movwf	LCD8_strWrite@data+1
  1956  043E  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1957                           
  1958                           ;main.c: 334:             if(hum <100){
  1959  0443  3064               	movlw	100
  1960  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0446  0225               	subwf	_hum,w
  1963  0447  1803               	skipnc
  1964  0448  2C6F               	goto	l2764
  1965                           
  1966                           ;main.c: 335:             sprintf(show,"%d ",hum);
  1967  0449  3031               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1968  044A  00E3               	movwf	??_main
  1969  044B  0863               	movf	??_main,w
  1970  044C  00D6               	movwf	sprintf@f
  1971  044D  0825               	movf	_hum,w
  1972  044E  00E4               	movwf	??_main+1
  1973  044F  01E5               	clrf	??_main+2
  1974  0450  0864               	movf	??_main+1,w
  1975  0451  00D7               	movwf	?_sprintf+1
  1976  0452  0865               	movf	??_main+2,w
  1977  0453  00D8               	movwf	?_sprintf+2
  1978  0454  3039               	movlw	(low (_show| 0))& (0+255)
  1979  0455  120A  118A  24F4  120A  118A  	fcall	_sprintf
  1980                           
  1981                           ;main.c: 336:             LCD8_set_cursor(2,7);
  1982  045A  3007               	movlw	7
  1983  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1984  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1985  045D  00E3               	movwf	??_main
  1986  045E  0863               	movf	??_main,w
  1987  045F  00F6               	movwf	LCD8_set_cursor@column
  1988  0460  3002               	movlw	2
  1989  0461  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  1990                           
  1991                           ;main.c: 337:             LCD8_strWrite(show);
  1992  0466  3039               	movlw	(low (_show| 0))& (0+255)
  1993  0467  00F5               	movwf	LCD8_strWrite@data
  1994  0468  3000               	movlw	0
  1995  0469  00F6               	movwf	LCD8_strWrite@data+1
  1996  046A  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  1997  046F                     l2764:	
  1998                           
  1999                           ;main.c: 339:             if(hum>99){
  2000  046F  3064               	movlw	100
  2001  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0471  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0472  0225               	subwf	_hum,w
  2004  0473  1C03               	skipc
  2005  0474  2C9B               	goto	l2772
  2006                           
  2007                           ;main.c: 340:             sprintf(show,"%d",hum);
  2008  0475  303E               	movlw	(low (((STR_13+1)-__stringbase)| (0+32768)))& (0+255)
  2009  0476  00E3               	movwf	??_main
  2010  0477  0863               	movf	??_main,w
  2011  0478  00D6               	movwf	sprintf@f
  2012  0479  0825               	movf	_hum,w
  2013  047A  00E4               	movwf	??_main+1
  2014  047B  01E5               	clrf	??_main+2
  2015  047C  0864               	movf	??_main+1,w
  2016  047D  00D7               	movwf	?_sprintf+1
  2017  047E  0865               	movf	??_main+2,w
  2018  047F  00D8               	movwf	?_sprintf+2
  2019  0480  3039               	movlw	(low (_show| 0))& (0+255)
  2020  0481  120A  118A  24F4  120A  118A  	fcall	_sprintf
  2021                           
  2022                           ;main.c: 341:             LCD8_set_cursor(2,7);
  2023  0486  3007               	movlw	7
  2024  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2025  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2026  0489  00E3               	movwf	??_main
  2027  048A  0863               	movf	??_main,w
  2028  048B  00F6               	movwf	LCD8_set_cursor@column
  2029  048C  3002               	movlw	2
  2030  048D  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  2031                           
  2032                           ;main.c: 342:             LCD8_strWrite(show);
  2033  0492  3039               	movlw	(low (_show| 0))& (0+255)
  2034  0493  00F5               	movwf	LCD8_strWrite@data
  2035  0494  3000               	movlw	0
  2036  0495  00F6               	movwf	LCD8_strWrite@data+1
  2037  0496  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  2038  049B                     l2772:	
  2039                           
  2040                           ;main.c: 345:             if(temperatura <100){
  2041  049B  3064               	movlw	100
  2042  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2043  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2044  049E  0267               	subwf	_temperatura,w
  2045  049F  1803               	skipnc
  2046  04A0  2CC7               	goto	l2780
  2047                           
  2048                           ;main.c: 346:             sprintf(show,"%d C",temperatura);
  2049  04A1  3022               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2050  04A2  00E3               	movwf	??_main
  2051  04A3  0863               	movf	??_main,w
  2052  04A4  00D6               	movwf	sprintf@f
  2053  04A5  0867               	movf	_temperatura,w
  2054  04A6  00E4               	movwf	??_main+1
  2055  04A7  01E5               	clrf	??_main+2
  2056  04A8  0864               	movf	??_main+1,w
  2057  04A9  00D7               	movwf	?_sprintf+1
  2058  04AA  0865               	movf	??_main+2,w
  2059  04AB  00D8               	movwf	?_sprintf+2
  2060  04AC  3039               	movlw	(low (_show| 0))& (0+255)
  2061  04AD  120A  118A  24F4  120A  118A  	fcall	_sprintf
  2062                           
  2063                           ;main.c: 347:             LCD8_set_cursor(2,13);
  2064  04B2  300D               	movlw	13
  2065  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2066  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2067  04B5  00E3               	movwf	??_main
  2068  04B6  0863               	movf	??_main,w
  2069  04B7  00F6               	movwf	LCD8_set_cursor@column
  2070  04B8  3002               	movlw	2
  2071  04B9  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  2072                           
  2073                           ;main.c: 348:             LCD8_strWrite(show);
  2074  04BE  3039               	movlw	(low (_show| 0))& (0+255)
  2075  04BF  00F5               	movwf	LCD8_strWrite@data
  2076  04C0  3000               	movlw	0
  2077  04C1  00F6               	movwf	LCD8_strWrite@data+1
  2078  04C2  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  2079  04C7                     l2780:	
  2080                           
  2081                           ;main.c: 350:             if(temperatura>99){
  2082  04C7  3064               	movlw	100
  2083  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2084  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2085  04CA  0267               	subwf	_temperatura,w
  2086  04CB  1C03               	skipc
  2087  04CC  282E               	goto	l2516
  2088                           
  2089                           ;main.c: 351:             sprintf(show,"%dC",temperatura);
  2090  04CD  3039               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2091  04CE  00E3               	movwf	??_main
  2092  04CF  0863               	movf	??_main,w
  2093  04D0  00D6               	movwf	sprintf@f
  2094  04D1  0867               	movf	_temperatura,w
  2095  04D2  00E4               	movwf	??_main+1
  2096  04D3  01E5               	clrf	??_main+2
  2097  04D4  0864               	movf	??_main+1,w
  2098  04D5  00D7               	movwf	?_sprintf+1
  2099  04D6  0865               	movf	??_main+2,w
  2100  04D7  00D8               	movwf	?_sprintf+2
  2101  04D8  3039               	movlw	(low (_show| 0))& (0+255)
  2102  04D9  120A  118A  24F4  120A  118A  	fcall	_sprintf
  2103                           
  2104                           ;main.c: 352:             LCD8_set_cursor(2,13);
  2105  04DE  300D               	movlw	13
  2106  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2107  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2108  04E1  00E3               	movwf	??_main
  2109  04E2  0863               	movf	??_main,w
  2110  04E3  00F6               	movwf	LCD8_set_cursor@column
  2111  04E4  3002               	movlw	2
  2112  04E5  120A  118A  26E2  120A  118A  	fcall	_LCD8_set_cursor
  2113                           
  2114                           ;main.c: 353:             LCD8_strWrite(show);
  2115  04EA  3039               	movlw	(low (_show| 0))& (0+255)
  2116  04EB  00F5               	movwf	LCD8_strWrite@data
  2117  04EC  3000               	movlw	0
  2118  04ED  00F6               	movwf	LCD8_strWrite@data+1
  2119  04EE  120A  158A  273C  120A  118A  	fcall	_LCD8_strWrite
  2120  04F3  282E               	goto	l2516
  2121  04F4                     __end_of_main:	
  2122                           
  2123                           	psect	text1
  2124  04F4                     __ptext1:	
  2125 ;; *************** function _sprintf *****************
  2126 ;; Defined at:
  2127 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  sp              1    wreg     PTR unsigned char 
  2130 ;;		 -> show(20), 
  2131 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  2132 ;;		 -> STR_18(4), STR_17(5), STR_16(3), STR_15(4), 
  2133 ;;		 -> STR_13(4), STR_12(3), STR_6(5), STR_5(6), 
  2134 ;;		 -> STR_3(3), STR_2(4), 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  2137 ;;		 -> show(20), 
  2138 ;;  tmpval          4    0        struct .
  2139 ;;  val             2   18[BANK0 ] unsigned int 
  2140 ;;  cp              2    0        PTR const unsigned char 
  2141 ;;  len             2    0        unsigned int 
  2142 ;;  c               1   21[BANK0 ] unsigned char 
  2143 ;;  prec            1   17[BANK0 ] char 
  2144 ;;  flag            1   16[BANK0 ] unsigned char 
  2145 ;;  ap              1   15[BANK0 ] PTR void [1]
  2146 ;;		 -> ?_sprintf(2), 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  2    9[BANK0 ] int 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       3       0       0       0
  2157 ;;      Locals:         0       7       0       0       0
  2158 ;;      Temps:          0       3       0       0       0
  2159 ;;      Totals:         0      13       0       0       0
  2160 ;;Total ram usage:       13 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    2
  2163 ;; This function calls:
  2164 ;;		___lwdiv
  2165 ;;		___lwmod
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function _sprintf
  2173  04F4                     _sprintf:	
  2174                           
  2175                           ;incstack = 0
  2176                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2177                           ;sprintf@sp stored from wreg
  2178  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2179  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2180  04F6  00E1               	movwf	sprintf@sp
  2181                           
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2183  04F7  3057               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2184  04F8  00D9               	movwf	??_sprintf
  2185  04F9  0859               	movf	??_sprintf,w
  2186  04FA  00DC               	movwf	sprintf@ap
  2187  04FB                     l2500:	
  2188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2189                           
  2190                           
  2191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2192  04FB  3001               	movlw	1
  2193  04FC  07D6               	addwf	sprintf@f,f
  2194  04FD  30FF               	movlw	-1
  2195  04FE  0756               	addwf	sprintf@f,w
  2196  04FF  0084               	movwf	4
  2197  0500  120A  118A  270A  120A  118A  	fcall	stringdir
  2198  0505  00D9               	movwf	??_sprintf
  2199  0506  0859               	movf	??_sprintf,w
  2200  0507  00E2               	movwf	sprintf@c
  2201  0508  0862               	movf	sprintf@c,w
  2202  0509  1903               	btfsc	3,2
  2203  050A  2DC9               	goto	l2502
  2204                           
  2205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2206  050B  3025               	movlw	37
  2207  050C  0662               	xorwf	sprintf@c,w
  2208  050D  1903               	btfsc	3,2
  2209  050E  2D1B               	goto	l2456
  2210                           
  2211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2212  050F  0862               	movf	sprintf@c,w
  2213  0510  00D9               	movwf	??_sprintf
  2214  0511  0861               	movf	sprintf@sp,w
  2215  0512  0084               	movwf	4
  2216  0513  0859               	movf	??_sprintf,w
  2217  0514  1383               	bcf	3,7	;select IRP bank0
  2218  0515  0080               	movwf	0
  2219  0516  3001               	movlw	1
  2220  0517  00D9               	movwf	??_sprintf
  2221  0518  0859               	movf	??_sprintf,w
  2222  0519  07E1               	addwf	sprintf@sp,f
  2223                           
  2224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2225  051A  2CFB               	goto	l2500
  2226  051B                     l2456:	
  2227                           
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2229  051B  01DD               	clrf	sprintf@flag
  2230                           
  2231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  2232  051C  3001               	movlw	1
  2233  051D  07D6               	addwf	sprintf@f,f
  2234  051E  30FF               	movlw	-1
  2235  051F  0756               	addwf	sprintf@f,w
  2236  0520  0084               	movwf	4
  2237  0521  120A  118A  270A  120A  118A  	fcall	stringdir
  2238  0526  00E2               	movwf	sprintf@c
  2239  0527  00D9               	movwf	??_sprintf
  2240  0528  01DA               	clrf	??_sprintf+1
  2241                           
  2242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2243                           ; Switch size 1, requested type "simple"
  2244                           ; Number of cases is 1, Range of values is 0 to 0
  2245                           ; switch strategies available:
  2246                           ; Name         Instructions Cycles
  2247                           ; simple_byte            4     3 (average)
  2248                           ; direct_byte           11     8 (fixed)
  2249                           ; jumptable            260     6 (fixed)
  2250                           ;	Chosen strategy is simple_byte
  2251  0529  085A               	movf	??_sprintf+1,w
  2252  052A  3A00               	xorlw	0	; case 0
  2253  052B  1903               	skipnz
  2254  052C  2D2E               	goto	l2808
  2255  052D  2CFB               	goto	l2500
  2256  052E                     l2808:	
  2257                           
  2258                           ; Switch size 1, requested type "simple"
  2259                           ; Number of cases is 3, Range of values is 0 to 105
  2260                           ; switch strategies available:
  2261                           ; Name         Instructions Cycles
  2262                           ; simple_byte           10     6 (average)
  2263                           ; jumptable            260     6 (fixed)
  2264                           ;	Chosen strategy is simple_byte
  2265  052E  0859               	movf	??_sprintf,w
  2266  052F  3A00               	xorlw	0	; case 0
  2267  0530  1903               	skipnz
  2268  0531  2DC9               	goto	l2502
  2269  0532  3A64               	xorlw	100	; case 100
  2270  0533  1903               	skipnz
  2271  0534  2D39               	goto	l2462
  2272  0535  3A0D               	xorlw	13	; case 105
  2273  0536  1903               	skipnz
  2274  0537  2D39               	goto	l2462
  2275  0538  2CFB               	goto	l2500
  2276  0539                     l2462:	
  2277                           
  2278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2279  0539  085C               	movf	sprintf@ap,w
  2280  053A  0084               	movwf	4
  2281  053B  1383               	bcf	3,7	;select IRP bank0
  2282  053C  0800               	movf	0,w
  2283  053D  00DF               	movwf	sprintf@val
  2284  053E  0A84               	incf	4,f
  2285  053F  0800               	movf	0,w
  2286  0540  00E0               	movwf	sprintf@val+1
  2287  0541  3002               	movlw	2
  2288  0542  00D9               	movwf	??_sprintf
  2289  0543  0859               	movf	??_sprintf,w
  2290  0544  07DC               	addwf	sprintf@ap,f
  2291                           
  2292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  2293  0545  1FE0               	btfss	sprintf@val+1,7
  2294  0546  2D50               	goto	l2472
  2295                           
  2296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2297  0547  3003               	movlw	3
  2298  0548  00D9               	movwf	??_sprintf
  2299  0549  0859               	movf	??_sprintf,w
  2300  054A  04DD               	iorwf	sprintf@flag,f
  2301                           
  2302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2303  054B  09DF               	comf	sprintf@val,f
  2304  054C  09E0               	comf	sprintf@val+1,f
  2305  054D  0ADF               	incf	sprintf@val,f
  2306  054E  1903               	skipnz
  2307  054F  0AE0               	incf	sprintf@val+1,f
  2308  0550                     l2472:	
  2309                           
  2310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2311  0550  01E2               	clrf	sprintf@c
  2312  0551  0AE2               	incf	sprintf@c,f
  2313  0552                     l2478:	
  2314                           
  2315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2316  0552  0862               	movf	sprintf@c,w
  2317  0553  00D9               	movwf	??_sprintf
  2318  0554  0759               	addwf	??_sprintf,w
  2319  0555  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2320  0556  0084               	movwf	4
  2321  0557  120A  118A  270A  120A  118A  	fcall	stringdir
  2322  055C  00DA               	movwf	??_sprintf+1
  2323  055D  120A  118A  270A  120A  118A  	fcall	stringdir
  2324  0562  00DB               	movwf	??_sprintf+2
  2325  0563  085B               	movf	??_sprintf+2,w
  2326  0564  0260               	subwf	sprintf@val+1,w
  2327  0565  1D03               	skipz
  2328  0566  2D69               	goto	u1365
  2329  0567  085A               	movf	??_sprintf+1,w
  2330  0568  025F               	subwf	sprintf@val,w
  2331  0569                     u1365:	
  2332  0569  1C03               	btfss	3,0
  2333  056A  2D73               	goto	l2484
  2334  056B  3001               	movlw	1
  2335  056C  00D9               	movwf	??_sprintf
  2336  056D  0859               	movf	??_sprintf,w
  2337  056E  07E2               	addwf	sprintf@c,f
  2338  056F  3005               	movlw	5
  2339  0570  0662               	xorwf	sprintf@c,w
  2340  0571  1D03               	btfss	3,2
  2341  0572  2D52               	goto	l2478
  2342  0573                     l2484:	
  2343                           
  2344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2345  0573  085D               	movf	sprintf@flag,w
  2346  0574  3903               	andlw	3
  2347  0575  1903               	btfsc	3,2
  2348  0576  2D82               	goto	l2490
  2349                           
  2350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2351  0577  302D               	movlw	45
  2352  0578  00D9               	movwf	??_sprintf
  2353  0579  0861               	movf	sprintf@sp,w
  2354  057A  0084               	movwf	4
  2355  057B  0859               	movf	??_sprintf,w
  2356  057C  1383               	bcf	3,7	;select IRP bank0
  2357  057D  0080               	movwf	0
  2358  057E  3001               	movlw	1
  2359  057F  00D9               	movwf	??_sprintf
  2360  0580  0859               	movf	??_sprintf,w
  2361  0581  07E1               	addwf	sprintf@sp,f
  2362  0582                     l2490:	
  2363                           
  2364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  2365  0582  0862               	movf	sprintf@c,w
  2366  0583  00D9               	movwf	??_sprintf
  2367  0584  0859               	movf	??_sprintf,w
  2368  0585  00DE               	movwf	sprintf@prec
  2369  0586                     l2498:	
  2370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2371                           
  2372                           
  2373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  2374  0586  30FF               	movlw	255
  2375  0587  00D9               	movwf	??_sprintf
  2376  0588  0859               	movf	??_sprintf,w
  2377  0589  07DE               	addwf	sprintf@prec,f
  2378  058A  0A5E               	incf	sprintf@prec,w
  2379  058B  1903               	btfsc	3,2
  2380  058C  2CFB               	goto	l2500
  2381                           
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  2383  058D  300A               	movlw	10
  2384  058E  00D0               	movwf	___lwmod@divisor
  2385  058F  3000               	movlw	0
  2386  0590  00D1               	movwf	___lwmod@divisor+1
  2387  0591  085E               	movf	sprintf@prec,w
  2388  0592  00D9               	movwf	??_sprintf
  2389  0593  0759               	addwf	??_sprintf,w
  2390  0594  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2391  0595  0084               	movwf	4
  2392  0596  120A  118A  270A  120A  118A  	fcall	stringdir
  2393  059B  00F3               	movwf	___lwdiv@divisor
  2394  059C  120A  118A  270A  120A  118A  	fcall	stringdir
  2395  05A1  00F4               	movwf	___lwdiv@divisor+1
  2396  05A2  0860               	movf	sprintf@val+1,w
  2397  05A3  00F6               	movwf	___lwdiv@dividend+1
  2398  05A4  085F               	movf	sprintf@val,w
  2399  05A5  00F5               	movwf	___lwdiv@dividend
  2400  05A6  120A  118A  26A4  120A  118A  	fcall	___lwdiv
  2401  05AB  0874               	movf	?___lwdiv+1,w
  2402  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2403  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2404  05AE  00D3               	movwf	___lwmod@dividend+1
  2405  05AF  0873               	movf	?___lwdiv,w
  2406  05B0  00D2               	movwf	___lwmod@dividend
  2407  05B1  120A  158A  2794  120A  118A  	fcall	___lwmod
  2408  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2409  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2410  05B8  0850               	movf	?___lwmod,w
  2411  05B9  3E30               	addlw	48
  2412  05BA  00DA               	movwf	??_sprintf+1
  2413  05BB  085A               	movf	??_sprintf+1,w
  2414  05BC  00E2               	movwf	sprintf@c
  2415                           
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  2417  05BD  0862               	movf	sprintf@c,w
  2418  05BE  00D9               	movwf	??_sprintf
  2419  05BF  0861               	movf	sprintf@sp,w
  2420  05C0  0084               	movwf	4
  2421  05C1  0859               	movf	??_sprintf,w
  2422  05C2  1383               	bcf	3,7	;select IRP bank0
  2423  05C3  0080               	movwf	0
  2424  05C4  3001               	movlw	1
  2425  05C5  00D9               	movwf	??_sprintf
  2426  05C6  0859               	movf	??_sprintf,w
  2427  05C7  07E1               	addwf	sprintf@sp,f
  2428  05C8  2D86               	goto	l2498
  2429  05C9                     l2502:	
  2430                           
  2431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2432  05C9  0861               	movf	sprintf@sp,w
  2433  05CA  0084               	movwf	4
  2434  05CB  1383               	bcf	3,7	;select IRP bank0
  2435  05CC  0180               	clrf	0
  2436  05CD  0008               	return
  2437  05CE                     __end_of_sprintf:	
  2438                           
  2439                           	psect	text2
  2440  0F94                     __ptext2:	
  2441 ;; *************** function ___lwmod *****************
  2442 ;; Defined at:
  2443 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  divisor         2    3[BANK0 ] unsigned int 
  2446 ;;  dividend        2    5[BANK0 ] unsigned int 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  counter         1    8[BANK0 ] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  2    3[BANK0 ] unsigned int 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       4       0       0       0
  2459 ;;      Locals:         0       1       0       0       0
  2460 ;;      Temps:          0       1       0       0       0
  2461 ;;      Totals:         0       6       0       0       0
  2462 ;;Total ram usage:        6 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    1
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_sprintf
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           
  2473                           ;psect for function ___lwmod
  2474  0F94                     ___lwmod:	
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2478  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0F96  0850               	movf	___lwmod@divisor,w
  2481  0F97  0451               	iorwf	___lwmod@divisor+1,w
  2482  0F98  1903               	btfsc	3,2
  2483  0F99  2FC3               	goto	l1780
  2484  0F9A  01D5               	clrf	___lwmod@counter
  2485  0F9B  0AD5               	incf	___lwmod@counter,f
  2486  0F9C                     l1770:	
  2487  0F9C  1BD1               	btfsc	___lwmod@divisor+1,7
  2488  0F9D  2FAA               	goto	l1772
  2489  0F9E  3001               	movlw	1
  2490  0F9F                     u765:	
  2491  0F9F  1003               	clrc
  2492  0FA0  0DD0               	rlf	___lwmod@divisor,f
  2493  0FA1  0DD1               	rlf	___lwmod@divisor+1,f
  2494  0FA2  3EFF               	addlw	-1
  2495  0FA3  1D03               	skipz
  2496  0FA4  2F9F               	goto	u765
  2497  0FA5  3001               	movlw	1
  2498  0FA6  00D4               	movwf	??___lwmod
  2499  0FA7  0854               	movf	??___lwmod,w
  2500  0FA8  07D5               	addwf	___lwmod@counter,f
  2501  0FA9  2F9C               	goto	l1770
  2502  0FAA                     l1772:	
  2503  0FAA  0851               	movf	___lwmod@divisor+1,w
  2504  0FAB  0253               	subwf	___lwmod@dividend+1,w
  2505  0FAC  1D03               	skipz
  2506  0FAD  2FB0               	goto	u785
  2507  0FAE  0850               	movf	___lwmod@divisor,w
  2508  0FAF  0252               	subwf	___lwmod@dividend,w
  2509  0FB0                     u785:	
  2510  0FB0  1C03               	skipc
  2511  0FB1  2FB8               	goto	l1776
  2512  0FB2  0850               	movf	___lwmod@divisor,w
  2513  0FB3  02D2               	subwf	___lwmod@dividend,f
  2514  0FB4  0851               	movf	___lwmod@divisor+1,w
  2515  0FB5  1C03               	skipc
  2516  0FB6  03D3               	decf	___lwmod@dividend+1,f
  2517  0FB7  02D3               	subwf	___lwmod@dividend+1,f
  2518  0FB8                     l1776:	
  2519  0FB8  3001               	movlw	1
  2520  0FB9                     u795:	
  2521  0FB9  1003               	clrc
  2522  0FBA  0CD1               	rrf	___lwmod@divisor+1,f
  2523  0FBB  0CD0               	rrf	___lwmod@divisor,f
  2524  0FBC  3EFF               	addlw	-1
  2525  0FBD  1D03               	skipz
  2526  0FBE  2FB9               	goto	u795
  2527  0FBF  3001               	movlw	1
  2528  0FC0  02D5               	subwf	___lwmod@counter,f
  2529  0FC1  1D03               	btfss	3,2
  2530  0FC2  2FAA               	goto	l1772
  2531  0FC3                     l1780:	
  2532  0FC3  0853               	movf	___lwmod@dividend+1,w
  2533  0FC4  00D1               	movwf	?___lwmod+1
  2534  0FC5  0852               	movf	___lwmod@dividend,w
  2535  0FC6  00D0               	movwf	?___lwmod
  2536  0FC7  0008               	return
  2537  0FC8                     __end_of___lwmod:	
  2538                           
  2539                           	psect	text3
  2540  06A4                     __ptext3:	
  2541 ;; *************** function ___lwdiv *****************
  2542 ;; Defined at:
  2543 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  divisor         2    3[COMMON] unsigned int 
  2546 ;;  dividend        2    5[COMMON] unsigned int 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  quotient        2    1[BANK0 ] unsigned int 
  2549 ;;  counter         1    0[BANK0 ] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  2    3[COMMON] unsigned int 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2559 ;;      Params:         4       0       0       0       0
  2560 ;;      Locals:         0       3       0       0       0
  2561 ;;      Temps:          1       0       0       0       0
  2562 ;;      Totals:         5       3       0       0       0
  2563 ;;Total ram usage:        8 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    1
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_sprintf
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function ___lwdiv
  2575  06A4                     ___lwdiv:	
  2576                           
  2577                           ;incstack = 0
  2578                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2579  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2580  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2581  06A6  01CE               	clrf	___lwdiv@quotient
  2582  06A7  01CF               	clrf	___lwdiv@quotient+1
  2583  06A8  0873               	movf	___lwdiv@divisor,w
  2584  06A9  0474               	iorwf	___lwdiv@divisor+1,w
  2585  06AA  1903               	btfsc	3,2
  2586  06AB  2EDD               	goto	l2374
  2587  06AC  01CD               	clrf	___lwdiv@counter
  2588  06AD  0ACD               	incf	___lwdiv@counter,f
  2589  06AE                     l2362:	
  2590  06AE  1BF4               	btfsc	___lwdiv@divisor+1,7
  2591  06AF  2EBC               	goto	l2364
  2592  06B0  3001               	movlw	1
  2593  06B1                     u1255:	
  2594  06B1  1003               	clrc
  2595  06B2  0DF3               	rlf	___lwdiv@divisor,f
  2596  06B3  0DF4               	rlf	___lwdiv@divisor+1,f
  2597  06B4  3EFF               	addlw	-1
  2598  06B5  1D03               	skipz
  2599  06B6  2EB1               	goto	u1255
  2600  06B7  3001               	movlw	1
  2601  06B8  00F7               	movwf	??___lwdiv
  2602  06B9  0877               	movf	??___lwdiv,w
  2603  06BA  07CD               	addwf	___lwdiv@counter,f
  2604  06BB  2EAE               	goto	l2362
  2605  06BC                     l2364:	
  2606  06BC  3001               	movlw	1
  2607  06BD                     u1275:	
  2608  06BD  1003               	clrc
  2609  06BE  0DCE               	rlf	___lwdiv@quotient,f
  2610  06BF  0DCF               	rlf	___lwdiv@quotient+1,f
  2611  06C0  3EFF               	addlw	-1
  2612  06C1  1D03               	skipz
  2613  06C2  2EBD               	goto	u1275
  2614  06C3  0874               	movf	___lwdiv@divisor+1,w
  2615  06C4  0276               	subwf	___lwdiv@dividend+1,w
  2616  06C5  1D03               	skipz
  2617  06C6  2EC9               	goto	u1285
  2618  06C7  0873               	movf	___lwdiv@divisor,w
  2619  06C8  0275               	subwf	___lwdiv@dividend,w
  2620  06C9                     u1285:	
  2621  06C9  1C03               	skipc
  2622  06CA  2ED2               	goto	l2370
  2623  06CB  0873               	movf	___lwdiv@divisor,w
  2624  06CC  02F5               	subwf	___lwdiv@dividend,f
  2625  06CD  0874               	movf	___lwdiv@divisor+1,w
  2626  06CE  1C03               	skipc
  2627  06CF  03F6               	decf	___lwdiv@dividend+1,f
  2628  06D0  02F6               	subwf	___lwdiv@dividend+1,f
  2629  06D1  144E               	bsf	___lwdiv@quotient,0
  2630  06D2                     l2370:	
  2631  06D2  3001               	movlw	1
  2632  06D3                     u1295:	
  2633  06D3  1003               	clrc
  2634  06D4  0CF4               	rrf	___lwdiv@divisor+1,f
  2635  06D5  0CF3               	rrf	___lwdiv@divisor,f
  2636  06D6  3EFF               	addlw	-1
  2637  06D7  1D03               	skipz
  2638  06D8  2ED3               	goto	u1295
  2639  06D9  3001               	movlw	1
  2640  06DA  02CD               	subwf	___lwdiv@counter,f
  2641  06DB  1D03               	btfss	3,2
  2642  06DC  2EBC               	goto	l2364
  2643  06DD                     l2374:	
  2644  06DD  084F               	movf	___lwdiv@quotient+1,w
  2645  06DE  00F4               	movwf	?___lwdiv+1
  2646  06DF  084E               	movf	___lwdiv@quotient,w
  2647  06E0  00F3               	movwf	?___lwdiv
  2648  06E1  0008               	return
  2649  06E2                     __end_of___lwdiv:	
  2650                           
  2651                           	psect	text4
  2652  05CE                     __ptext4:	
  2653 ;; *************** function _setup *****************
  2654 ;; Defined at:
  2655 ;;		line 54 in file "main.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, pclath, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2669 ;;      Params:         0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0
  2671 ;;      Temps:          0       1       0       0       0
  2672 ;;      Totals:         0       1       0       0       0
  2673 ;;Total ram usage:        1 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    4
  2676 ;; This function calls:
  2677 ;;		_I2C_Master_Init
  2678 ;;		_LCD8_begin
  2679 ;;		_LCD8_clear
  2680 ;;		_oscilator_begin
  2681 ;;		_timer1_begin
  2682 ;;		_write_ds1307
  2683 ;; This function is called by:
  2684 ;;		_main
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           
  2689                           ;psect for function _setup
  2690  05CE                     _setup:	
  2691                           
  2692                           ;main.c: 56:     oscilator_begin(7);
  2693                           
  2694                           ;incstack = 0
  2695                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2696  05CE  3007               	movlw	7
  2697  05CF  120A  118A  27F1  120A  118A  	fcall	_oscilator_begin
  2698                           
  2699                           ;main.c: 57:     I2C_Master_Init(100000);
  2700  05D4  3000               	movlw	0
  2701  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  2702  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  2703  05D7  00DD               	movwf	I2C_Master_Init@c+3
  2704  05D8  3001               	movlw	1
  2705  05D9  00DC               	movwf	I2C_Master_Init@c+2
  2706  05DA  3086               	movlw	134
  2707  05DB  00DB               	movwf	I2C_Master_Init@c+1
  2708  05DC  30A0               	movlw	160
  2709  05DD  00DA               	movwf	I2C_Master_Init@c
  2710  05DE  120A  158A  27C8  120A  118A  	fcall	_I2C_Master_Init
  2711                           
  2712                           ;main.c: 59:     TRISA = 0;
  2713  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  2714  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  2715  05E5  0185               	clrf	5	;volatile
  2716                           
  2717                           ;main.c: 60:     TRISB = 0;
  2718  05E6  0186               	clrf	6	;volatile
  2719                           
  2720                           ;main.c: 61:     TRISD = 0;
  2721  05E7  0188               	clrf	8	;volatile
  2722                           
  2723                           ;main.c: 62:     TRISCbits.TRISC7 = 1;
  2724  05E8  1787               	bsf	7,7	;volatile
  2725                           
  2726                           ;main.c: 63:     ANSEL = 0;
  2727  05E9  1683               	bsf	3,5	;RP0=1, select bank3
  2728  05EA  1703               	bsf	3,6	;RP1=1, select bank3
  2729  05EB  0188               	clrf	8	;volatile
  2730                           
  2731                           ;main.c: 64:     ANSELH = 0;
  2732  05EC  0189               	clrf	9	;volatile
  2733                           
  2734                           ;main.c: 65:     PORTA = 0;
  2735  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2736  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2737  05EF  0185               	clrf	5	;volatile
  2738                           
  2739                           ;main.c: 66:     PORTB = 0;
  2740  05F0  0186               	clrf	6	;volatile
  2741                           
  2742                           ;main.c: 67:     PORTDbits.RD2 = 0;
  2743  05F1  1108               	bcf	8,2	;volatile
  2744                           
  2745                           ;main.c: 69:     LCD8_begin();
  2746  05F2  120A  118A  275E  120A  118A  	fcall	_LCD8_begin
  2747                           
  2748                           ;main.c: 70:     LCD8_clear();
  2749  05F7  120A  158A  26B3  120A  118A  	fcall	_LCD8_clear
  2750                           
  2751                           ;main.c: 71:     timer1_begin(0,3);
  2752  05FC  3003               	movlw	3
  2753  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2754  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2755  05FF  00DE               	movwf	??_setup
  2756  0600  085E               	movf	??_setup,w
  2757  0601  00F3               	movwf	timer1_begin@prescaler
  2758  0602  3000               	movlw	0
  2759  0603  120A  158A  26F4  120A  118A  	fcall	_timer1_begin
  2760                           
  2761                           ;main.c: 74:     BAUDCTLbits.BRG16 = 0;
  2762  0608  1683               	bsf	3,5	;RP0=1, select bank3
  2763  0609  1703               	bsf	3,6	;RP1=1, select bank3
  2764  060A  1187               	bcf	7,3	;volatile
  2765                           
  2766                           ;main.c: 75:     TXSTAbits.BRGH = 1;
  2767  060B  1683               	bsf	3,5	;RP0=1, select bank1
  2768  060C  1303               	bcf	3,6	;RP1=0, select bank1
  2769  060D  1518               	bsf	24,2	;volatile
  2770                           
  2771                           ;main.c: 76:     SPBRGH = 0x0;
  2772  060E  019A               	clrf	26	;volatile
  2773                           
  2774                           ;main.c: 77:     SPBRGH = 0x51;
  2775  060F  3051               	movlw	81
  2776  0610  009A               	movwf	26	;volatile
  2777                           
  2778                           ;main.c: 78:     TXSTAbits.SYNC = 0;
  2779  0611  1218               	bcf	24,4	;volatile
  2780                           
  2781                           ;main.c: 79:     RCSTAbits.SPEN = 1;
  2782  0612  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0613  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0614  1798               	bsf	24,7	;volatile
  2785                           
  2786                           ;main.c: 80:     TXSTAbits.TX9 = 0;
  2787  0615  1683               	bsf	3,5	;RP0=1, select bank1
  2788  0616  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0617  1318               	bcf	24,6	;volatile
  2790                           
  2791                           ;main.c: 81:     TXSTAbits.TXEN = 1;
  2792  0618  1698               	bsf	24,5	;volatile
  2793                           
  2794                           ;main.c: 82:     CREN = 1;
  2795  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2796  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2797  061B  1618               	bsf	24,4	;volatile
  2798                           
  2799                           ;main.c: 87:     write_ds1307(0, 0U);
  2800  061C  3000               	movlw	0
  2801  061D  00CD               	movwf	write_ds1307@address
  2802  061E  00CE               	movwf	write_ds1307@address+1
  2803  061F  3000               	movlw	0
  2804  0620  00CF               	movwf	write_ds1307@w_data
  2805  0621  00D0               	movwf	write_ds1307@w_data+1
  2806  0622  120A  158A  2714  120A  118A  	fcall	_write_ds1307
  2807                           
  2808                           ;main.c: 88:     write_ds1307(1, 1U);
  2809  0627  3001               	movlw	1
  2810  0628  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0629  1303               	bcf	3,6	;RP1=0, select bank0
  2812  062A  00CD               	movwf	write_ds1307@address
  2813  062B  3000               	movlw	0
  2814  062C  00CE               	movwf	write_ds1307@address+1
  2815  062D  3001               	movlw	1
  2816  062E  00CF               	movwf	write_ds1307@w_data
  2817  062F  3000               	movlw	0
  2818  0630  00D0               	movwf	write_ds1307@w_data+1
  2819  0631  120A  158A  2714  120A  118A  	fcall	_write_ds1307
  2820                           
  2821                           ;main.c: 89:     write_ds1307(2, 4U);
  2822  0636  3002               	movlw	2
  2823  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0639  00CD               	movwf	write_ds1307@address
  2826  063A  3000               	movlw	0
  2827  063B  00CE               	movwf	write_ds1307@address+1
  2828  063C  3004               	movlw	4
  2829  063D  00CF               	movwf	write_ds1307@w_data
  2830  063E  3000               	movlw	0
  2831  063F  00D0               	movwf	write_ds1307@w_data+1
  2832  0640  120A  158A  2714   	fcall	_write_ds1307
  2833  0643  0008               	return
  2834  0644                     __end_of_setup:	
  2835                           
  2836                           	psect	text5
  2837  0F14                     __ptext5:	
  2838 ;; *************** function _write_ds1307 *****************
  2839 ;; Defined at:
  2840 ;;		line 30 in file "./rtc.h"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  address         2    0[BANK0 ] short 
  2843 ;;  w_data          2    2[BANK0 ] short 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       4       0       0       0
  2856 ;;      Locals:         0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0
  2858 ;;      Totals:         0       4       0       0       0
  2859 ;;Total ram usage:        4 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    3
  2862 ;; This function calls:
  2863 ;;		_I2C_Master_Start
  2864 ;;		_I2C_Master_Stop
  2865 ;;		_I2C_Master_Write
  2866 ;; This function is called by:
  2867 ;;		_setup
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _write_ds1307
  2873  0F14                     _write_ds1307:	
  2874                           
  2875                           ;./rtc.h: 30: void write_ds1307(short address, short w_data);./rtc.h: 31: {;./rtc.h: 32:
      +                             I2C_Master_Start();
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  2879  0F14  120A  158A  2683  120A  158A  	fcall	_I2C_Master_Start
  2880                           
  2881                           ;./rtc.h: 34:   I2C_Master_Write(0xD0);
  2882  0F19  30D0               	movlw	208
  2883  0F1A  00F3               	movwf	I2C_Master_Write@d
  2884  0F1B  3000               	movlw	0
  2885  0F1C  00F4               	movwf	I2C_Master_Write@d+1
  2886  0F1D  120A  158A  2691  120A  158A  	fcall	_I2C_Master_Write
  2887                           
  2888                           ;./rtc.h: 35:   I2C_Master_Write(address);
  2889  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0F24  084E               	movf	write_ds1307@address+1,w
  2892  0F25  00F4               	movwf	I2C_Master_Write@d+1
  2893  0F26  084D               	movf	write_ds1307@address,w
  2894  0F27  00F3               	movwf	I2C_Master_Write@d
  2895  0F28  120A  158A  2691  120A  158A  	fcall	_I2C_Master_Write
  2896                           
  2897                           ;./rtc.h: 36:   I2C_Master_Write(w_data);
  2898  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0F2F  0850               	movf	write_ds1307@w_data+1,w
  2901  0F30  00F4               	movwf	I2C_Master_Write@d+1
  2902  0F31  084F               	movf	write_ds1307@w_data,w
  2903  0F32  00F3               	movwf	I2C_Master_Write@d
  2904  0F33  120A  158A  2691  120A  158A  	fcall	_I2C_Master_Write
  2905                           
  2906                           ;./rtc.h: 37:   I2C_Master_Stop();
  2907  0F38  120A  158A  268A   	fcall	_I2C_Master_Stop
  2908  0F3B  0008               	return
  2909  0F3C                     __end_of_write_ds1307:	
  2910                           
  2911                           	psect	text6
  2912  0EF4                     __ptext6:	
  2913 ;; *************** function _timer1_begin *****************
  2914 ;; Defined at:
  2915 ;;		line 8 in file "timer1.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  offset          1    wreg     unsigned char 
  2918 ;;  prescaler       1    3[COMMON] unsigned char 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  offset          1    6[COMMON] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         1       0       0       0       0
  2931 ;;      Locals:         1       0       0       0       0
  2932 ;;      Temps:          2       0       0       0       0
  2933 ;;      Totals:         4       0       0       0       0
  2934 ;;Total ram usage:        4 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    1
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_setup
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           
  2945                           ;psect for function _timer1_begin
  2946  0EF4                     _timer1_begin:	
  2947                           
  2948                           ;incstack = 0
  2949                           ; Regs used in _timer1_begin: [wreg+status,2+status,0]
  2950                           ;timer1_begin@offset stored from wreg
  2951  0EF4  00F6               	movwf	timer1_begin@offset
  2952                           
  2953                           ;timer1.c: 8: timer1_begin(uint8_t offset, uint8_t prescaler);timer1.c: 9:     {;timer1.
      +                          c: 10:     T1CONbits.T1GINV = 0;
  2954  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0EF7  1390               	bcf	16,7	;volatile
  2957                           
  2958                           ;timer1.c: 11:     T1CONbits.TMR1GE = 0;
  2959  0EF8  1310               	bcf	16,6	;volatile
  2960                           
  2961                           ;timer1.c: 12:     T1CONbits.T1CKPS = prescaler;
  2962  0EF9  0873               	movf	timer1_begin@prescaler,w
  2963  0EFA  00F4               	movwf	??_timer1_begin
  2964  0EFB  0EF4               	swapf	??_timer1_begin,f
  2965  0EFC  0810               	movf	16,w	;volatile
  2966  0EFD  0674               	xorwf	??_timer1_begin,w
  2967  0EFE  39CF               	andlw	-49
  2968  0EFF  0674               	xorwf	??_timer1_begin,w
  2969  0F00  0090               	movwf	16	;volatile
  2970                           
  2971                           ;timer1.c: 13:     T1CONbits.T1OSCEN = 0;
  2972  0F01  1190               	bcf	16,3	;volatile
  2973                           
  2974                           ;timer1.c: 14:     T1CONbits.TMR1CS = 0;
  2975  0F02  1090               	bcf	16,1	;volatile
  2976                           
  2977                           ;timer1.c: 15:     T1CONbits.TMR1ON = 1;
  2978  0F03  1410               	bsf	16,0	;volatile
  2979                           
  2980                           ;timer1.c: 17:     INTCONbits.PEIE = 1;
  2981  0F04  170B               	bsf	11,6	;volatile
  2982                           
  2983                           ;timer1.c: 18:     PIR1bits.TMR1IF = 0;
  2984  0F05  100C               	bcf	12,0	;volatile
  2985                           
  2986                           ;timer1.c: 19:     PIE1bits.TMR1IE = 1;
  2987  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  2988  0F07  1303               	bcf	3,6	;RP1=0, select bank1
  2989  0F08  140C               	bsf	12,0	;volatile
  2990                           
  2991                           ;timer1.c: 20:     INTCONbits.GIE = 1;
  2992  0F09  178B               	bsf	11,7	;volatile
  2993                           
  2994                           ;timer1.c: 21:     TMR1 = offset;
  2995  0F0A  0876               	movf	timer1_begin@offset,w
  2996  0F0B  00F4               	movwf	??_timer1_begin
  2997  0F0C  01F5               	clrf	??_timer1_begin+1
  2998  0F0D  0874               	movf	??_timer1_begin,w
  2999  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0F10  008E               	movwf	14	;volatile
  3002  0F11  0875               	movf	??_timer1_begin+1,w
  3003  0F12  008F               	movwf	15	;volatile
  3004  0F13  0008               	return
  3005  0F14                     __end_of_timer1_begin:	
  3006                           
  3007                           	psect	text7
  3008  07F1                     __ptext7:	
  3009 ;; *************** function _oscilator_begin *****************
  3010 ;; Defined at:
  3011 ;;		line 9 in file "./Oscilator.h"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  freq            1    wreg     unsigned char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  freq            1    4[COMMON] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         1       0       0       0       0
  3027 ;;      Temps:          1       0       0       0       0
  3028 ;;      Totals:         2       0       0       0       0
  3029 ;;Total ram usage:        2 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    1
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_setup
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function _oscilator_begin
  3041  07F1                     _oscilator_begin:	
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
  3045                           ;oscilator_begin@freq stored from wreg
  3046  07F1  00F4               	movwf	oscilator_begin@freq
  3047                           
  3048                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
  3049  07F2  0874               	movf	oscilator_begin@freq,w
  3050  07F3  00F3               	movwf	??_oscilator_begin
  3051  07F4  0EF3               	swapf	??_oscilator_begin,f
  3052  07F5  1683               	bsf	3,5	;RP0=1, select bank1
  3053  07F6  1303               	bcf	3,6	;RP1=0, select bank1
  3054  07F7  080F               	movf	15,w	;volatile
  3055  07F8  0673               	xorwf	??_oscilator_begin,w
  3056  07F9  398F               	andlw	-113
  3057  07FA  0673               	xorwf	??_oscilator_begin,w
  3058  07FB  008F               	movwf	15	;volatile
  3059                           
  3060                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
  3061  07FC  140F               	bsf	15,0	;volatile
  3062                           
  3063                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
  3064  07FD  118F               	bcf	15,3	;volatile
  3065  07FE  0008               	return
  3066  07FF                     __end_of_oscilator_begin:	
  3067                           
  3068                           	psect	text8
  3069  0EB3                     __ptext8:	
  3070 ;; *************** function _LCD8_clear *****************
  3071 ;; Defined at:
  3072 ;;		line 32 in file "./LCD8bit.h"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, pclath, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    2
  3093 ;; This function calls:
  3094 ;;		_LCD8_cmd
  3095 ;; This function is called by:
  3096 ;;		_setup
  3097 ;;		_main
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           
  3102                           ;psect for function _LCD8_clear
  3103  0EB3                     _LCD8_clear:	
  3104                           
  3105                           ;./LCD8bit.h: 33:     LCD8_cmd(0);
  3106                           
  3107                           ;incstack = 0
  3108                           ; Regs used in _LCD8_clear: [wreg+status,2+status,0+pclath+cstack]
  3109  0EB3  3000               	movlw	0
  3110  0EB4  120A  158A  26E0  120A  158A  	fcall	_LCD8_cmd
  3111                           
  3112                           ;./LCD8bit.h: 34:     LCD8_cmd(1);
  3113  0EB9  3001               	movlw	1
  3114  0EBA  120A  158A  26E0   	fcall	_LCD8_cmd
  3115  0EBD  0008               	return
  3116  0EBE                     __end_of_LCD8_clear:	
  3117                           
  3118                           	psect	text9
  3119  075E                     __ptext9:	
  3120 ;; *************** function _LCD8_begin *****************
  3121 ;; Defined at:
  3122 ;;		line 37 in file "./LCD8bit.h"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0, pclath, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0
  3138 ;;      Temps:          2       0       0       0       0
  3139 ;;      Totals:         2       0       0       0       0
  3140 ;;Total ram usage:        2 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    2
  3143 ;; This function calls:
  3144 ;;		_LCD8_cmd
  3145 ;; This function is called by:
  3146 ;;		_setup
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           
  3151                           ;psect for function _LCD8_begin
  3152  075E                     _LCD8_begin:	
  3153                           
  3154                           ;./LCD8bit.h: 38:     PORTB = 0;
  3155                           
  3156                           ;incstack = 0
  3157                           ; Regs used in _LCD8_begin: [wreg+status,2+status,0+pclath+cstack]
  3158  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3159  075F  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0760  0186               	clrf	6	;volatile
  3161                           
  3162                           ;./LCD8bit.h: 39:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3163  0761  3034               	movlw	52
  3164  0762  00F7               	movwf	??_LCD8_begin+1
  3165  0763  30F1               	movlw	241
  3166  0764  00F6               	movwf	??_LCD8_begin
  3167  0765                     u1767:	
  3168  0765  0BF6               	decfsz	??_LCD8_begin,f
  3169  0766  2F65               	goto	u1767
  3170  0767  0BF7               	decfsz	??_LCD8_begin+1,f
  3171  0768  2F65               	goto	u1767
  3172  0769  2F6A               	nop2
  3173                           
  3174                           ;./LCD8bit.h: 40:     LCD8_cmd(48);
  3175  076A  3030               	movlw	48
  3176  076B  120A  158A  26E0  120A  118A  	fcall	_LCD8_cmd
  3177                           
  3178                           ;./LCD8bit.h: 41:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3179  0770  300D               	movlw	13
  3180  0771  00F7               	movwf	??_LCD8_begin+1
  3181  0772  30FB               	movlw	251
  3182  0773  00F6               	movwf	??_LCD8_begin
  3183  0774                     u1777:	
  3184  0774  0BF6               	decfsz	??_LCD8_begin,f
  3185  0775  2F74               	goto	u1777
  3186  0776  0BF7               	decfsz	??_LCD8_begin+1,f
  3187  0777  2F74               	goto	u1777
  3188  0778  2F79               	nop2
  3189                           
  3190                           ;./LCD8bit.h: 42:     LCD8_cmd(48);
  3191  0779  3030               	movlw	48
  3192  077A  120A  158A  26E0  120A  118A  	fcall	_LCD8_cmd
  3193                           
  3194                           ;./LCD8bit.h: 43:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  3195  077F  306D               	movlw	109
  3196  0780  00F6               	movwf	??_LCD8_begin
  3197  0781                     u1787:	
  3198  0781  0BF6               	decfsz	??_LCD8_begin,f
  3199  0782  2F81               	goto	u1787
  3200  0783  2F84               	nop2
  3201                           
  3202                           ;./LCD8bit.h: 44:     LCD8_cmd(48);
  3203  0784  3030               	movlw	48
  3204  0785  120A  158A  26E0  120A  118A  	fcall	_LCD8_cmd
  3205                           
  3206                           ;./LCD8bit.h: 45:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  3207  078A  306D               	movlw	109
  3208  078B  00F6               	movwf	??_LCD8_begin
  3209  078C                     u1797:	
  3210  078C  0BF6               	decfsz	??_LCD8_begin,f
  3211  078D  2F8C               	goto	u1797
  3212  078E  2F8F               	nop2
  3213                           
  3214                           ;./LCD8bit.h: 47:     LCD8_cmd(0b111000);
  3215  078F  3038               	movlw	56
  3216  0790  120A  158A  26E0  120A  118A  	fcall	_LCD8_cmd
  3217                           
  3218                           ;./LCD8bit.h: 48:     LCD8_cmd(0b10100);
  3219  0795  3014               	movlw	20
  3220  0796  120A  158A  26E0  120A  118A  	fcall	_LCD8_cmd
  3221                           
  3222                           ;./LCD8bit.h: 49:     LCD8_cmd(1);
  3223  079B  3001               	movlw	1
  3224  079C  120A  158A  26E0  120A  118A  	fcall	_LCD8_cmd
  3225                           
  3226                           ;./LCD8bit.h: 50:     LCD8_cmd(0b110);
  3227  07A1  3006               	movlw	6
  3228  07A2  120A  158A  26E0  120A  118A  	fcall	_LCD8_cmd
  3229                           
  3230                           ;./LCD8bit.h: 51:     LCD8_cmd(0b1100);
  3231  07A7  300C               	movlw	12
  3232  07A8  120A  158A  26E0  120A  118A  	fcall	_LCD8_cmd
  3233                           
  3234                           ;./LCD8bit.h: 52:     LCD8_cmd(0b10);
  3235  07AD  3002               	movlw	2
  3236  07AE  120A  158A  26E0   	fcall	_LCD8_cmd
  3237  07B1  0008               	return
  3238  07B2                     __end_of_LCD8_begin:	
  3239                           
  3240                           	psect	text10
  3241  0FC8                     __ptext10:	
  3242 ;; *************** function _I2C_Master_Init *****************
  3243 ;; Defined at:
  3244 ;;		line 15 in file "./I2C.h"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  c               4   13[BANK0 ] const unsigned long 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0, pclath, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       4       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          4       0       0       0       0
  3261 ;;      Totals:         4       4       0       0       0
  3262 ;;Total ram usage:        8 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    2
  3265 ;; This function calls:
  3266 ;;		___lldiv
  3267 ;; This function is called by:
  3268 ;;		_setup
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _I2C_Master_Init
  3274  0FC8                     _I2C_Master_Init:	
  3275                           
  3276                           ;./I2C.h: 15: void I2C_Master_Init(const unsigned long c);./I2C.h: 16: {;./I2C.h: 17:   
      +                            SSPCON = 0b00101000;
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3280  0FC8  3028               	movlw	40
  3281  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  3282  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  3283  0FCB  0094               	movwf	20	;volatile
  3284                           
  3285                           ;./I2C.h: 18:     SSPCON2 = 0;
  3286  0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0FCD  1303               	bcf	3,6	;RP1=0, select bank1
  3288  0FCE  0191               	clrf	17	;volatile
  3289                           
  3290                           ;./I2C.h: 19:     SSPADD = (8000000/(4*c))-1;
  3291  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  3292  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  3293  0FD1  085A               	movf	I2C_Master_Init@c,w
  3294  0FD2  00F4               	movwf	??_I2C_Master_Init
  3295  0FD3  085B               	movf	I2C_Master_Init@c+1,w
  3296  0FD4  00F5               	movwf	??_I2C_Master_Init+1
  3297  0FD5  085C               	movf	I2C_Master_Init@c+2,w
  3298  0FD6  00F6               	movwf	??_I2C_Master_Init+2
  3299  0FD7  085D               	movf	I2C_Master_Init@c+3,w
  3300  0FD8  00F7               	movwf	??_I2C_Master_Init+3
  3301  0FD9  3002               	movlw	2
  3302  0FDA                     u1225:	
  3303  0FDA  1003               	clrc
  3304  0FDB  0DF4               	rlf	??_I2C_Master_Init,f
  3305  0FDC  0DF5               	rlf	??_I2C_Master_Init+1,f
  3306  0FDD  0DF6               	rlf	??_I2C_Master_Init+2,f
  3307  0FDE  0DF7               	rlf	??_I2C_Master_Init+3,f
  3308  0FDF  3EFF               	addlw	-1
  3309  0FE0  1D03               	skipz
  3310  0FE1  2FDA               	goto	u1225
  3311  0FE2  0877               	movf	??_I2C_Master_Init+3,w
  3312  0FE3  00D0               	movwf	___lldiv@divisor+3
  3313  0FE4  0876               	movf	??_I2C_Master_Init+2,w
  3314  0FE5  00CF               	movwf	___lldiv@divisor+2
  3315  0FE6  0875               	movf	??_I2C_Master_Init+1,w
  3316  0FE7  00CE               	movwf	___lldiv@divisor+1
  3317  0FE8  0874               	movf	??_I2C_Master_Init,w
  3318  0FE9  00CD               	movwf	___lldiv@divisor
  3319  0FEA  3000               	movlw	0
  3320  0FEB  00D4               	movwf	___lldiv@dividend+3
  3321  0FEC  307A               	movlw	122
  3322  0FED  00D3               	movwf	___lldiv@dividend+2
  3323  0FEE  3012               	movlw	18
  3324  0FEF  00D2               	movwf	___lldiv@dividend+1
  3325  0FF0  3000               	movlw	0
  3326  0FF1  00D1               	movwf	___lldiv@dividend
  3327  0FF2  120A  118A  2644   	fcall	___lldiv
  3328  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0FF7  084D               	movf	?___lldiv,w
  3331  0FF8  3EFF               	addlw	255
  3332  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  3333  0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  3334  0FFB  0093               	movwf	19	;volatile
  3335                           
  3336                           ;./I2C.h: 20:     SSPSTAT = 0;
  3337  0FFC  0194               	clrf	20	;volatile
  3338                           
  3339                           ;./I2C.h: 21:     TRISC3 = 1;
  3340  0FFD  1587               	bsf	7,3	;volatile
  3341                           
  3342                           ;./I2C.h: 22:     TRISC4 = 1;
  3343  0FFE  1607               	bsf	7,4	;volatile
  3344  0FFF  0008               	return
  3345  1000                     __end_of_I2C_Master_Init:	
  3346                           
  3347                           	psect	text11
  3348  0644                     __ptext11:	
  3349 ;; *************** function ___lldiv *****************
  3350 ;; Defined at:
  3351 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  divisor         4    0[BANK0 ] unsigned long 
  3354 ;;  dividend        4    4[BANK0 ] unsigned long 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  quotient        4    8[BANK0 ] unsigned long 
  3357 ;;  counter         1   12[BANK0 ] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  4    0[BANK0 ] unsigned long 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         0       8       0       0       0
  3368 ;;      Locals:         0       5       0       0       0
  3369 ;;      Temps:          1       0       0       0       0
  3370 ;;      Totals:         1      13       0       0       0
  3371 ;;Total ram usage:       14 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_I2C_Master_Init
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function ___lldiv
  3383  0644                     ___lldiv:	
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3387  0644  3000               	movlw	0
  3388  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0647  00D8               	movwf	___lldiv@quotient+3
  3391  0648  3000               	movlw	0
  3392  0649  00D7               	movwf	___lldiv@quotient+2
  3393  064A  3000               	movlw	0
  3394  064B  00D6               	movwf	___lldiv@quotient+1
  3395  064C  3000               	movlw	0
  3396  064D  00D5               	movwf	___lldiv@quotient
  3397  064E  0850               	movf	___lldiv@divisor+3,w
  3398  064F  044F               	iorwf	___lldiv@divisor+2,w
  3399  0650  044E               	iorwf	___lldiv@divisor+1,w
  3400  0651  044D               	iorwf	___lldiv@divisor,w
  3401  0652  1903               	skipnz
  3402  0653  2E9B               	goto	l2276
  3403  0654  01D9               	clrf	___lldiv@counter
  3404  0655  0AD9               	incf	___lldiv@counter,f
  3405  0656                     l2262:	
  3406  0656  1BD0               	btfsc	___lldiv@divisor+3,7
  3407  0657  2E66               	goto	l2264
  3408  0658  3001               	movlw	1
  3409  0659  00F3               	movwf	??___lldiv
  3410  065A                     u1165:	
  3411  065A  1003               	clrc
  3412  065B  0DCD               	rlf	___lldiv@divisor,f
  3413  065C  0DCE               	rlf	___lldiv@divisor+1,f
  3414  065D  0DCF               	rlf	___lldiv@divisor+2,f
  3415  065E  0DD0               	rlf	___lldiv@divisor+3,f
  3416  065F  0BF3               	decfsz	??___lldiv,f
  3417  0660  2E5A               	goto	u1165
  3418  0661  3001               	movlw	1
  3419  0662  00F3               	movwf	??___lldiv
  3420  0663  0873               	movf	??___lldiv,w
  3421  0664  07D9               	addwf	___lldiv@counter,f
  3422  0665  2E56               	goto	l2262
  3423  0666                     l2264:	
  3424  0666  3001               	movlw	1
  3425  0667  00F3               	movwf	??___lldiv
  3426  0668                     u1185:	
  3427  0668  1003               	clrc
  3428  0669  0DD5               	rlf	___lldiv@quotient,f
  3429  066A  0DD6               	rlf	___lldiv@quotient+1,f
  3430  066B  0DD7               	rlf	___lldiv@quotient+2,f
  3431  066C  0DD8               	rlf	___lldiv@quotient+3,f
  3432  066D  0BF3               	decfsz	??___lldiv,f
  3433  066E  2E68               	goto	u1185
  3434  066F  0850               	movf	___lldiv@divisor+3,w
  3435  0670  0254               	subwf	___lldiv@dividend+3,w
  3436  0671  1D03               	skipz
  3437  0672  2E7D               	goto	u1195
  3438  0673  084F               	movf	___lldiv@divisor+2,w
  3439  0674  0253               	subwf	___lldiv@dividend+2,w
  3440  0675  1D03               	skipz
  3441  0676  2E7D               	goto	u1195
  3442  0677  084E               	movf	___lldiv@divisor+1,w
  3443  0678  0252               	subwf	___lldiv@dividend+1,w
  3444  0679  1D03               	skipz
  3445  067A  2E7D               	goto	u1195
  3446  067B  084D               	movf	___lldiv@divisor,w
  3447  067C  0251               	subwf	___lldiv@dividend,w
  3448  067D                     u1195:	
  3449  067D  1C03               	skipc
  3450  067E  2E8E               	goto	l2272
  3451  067F  084D               	movf	___lldiv@divisor,w
  3452  0680  02D1               	subwf	___lldiv@dividend,f
  3453  0681  084E               	movf	___lldiv@divisor+1,w
  3454  0682  1C03               	skipc
  3455  0683  0F4E               	incfsz	___lldiv@divisor+1,w
  3456  0684  02D2               	subwf	___lldiv@dividend+1,f
  3457  0685  084F               	movf	___lldiv@divisor+2,w
  3458  0686  1C03               	skipc
  3459  0687  0F4F               	incfsz	___lldiv@divisor+2,w
  3460  0688  02D3               	subwf	___lldiv@dividend+2,f
  3461  0689  0850               	movf	___lldiv@divisor+3,w
  3462  068A  1C03               	skipc
  3463  068B  0F50               	incfsz	___lldiv@divisor+3,w
  3464  068C  02D4               	subwf	___lldiv@dividend+3,f
  3465  068D  1455               	bsf	___lldiv@quotient,0
  3466  068E                     l2272:	
  3467  068E  3001               	movlw	1
  3468  068F                     u1205:	
  3469  068F  1003               	clrc
  3470  0690  0CD0               	rrf	___lldiv@divisor+3,f
  3471  0691  0CCF               	rrf	___lldiv@divisor+2,f
  3472  0692  0CCE               	rrf	___lldiv@divisor+1,f
  3473  0693  0CCD               	rrf	___lldiv@divisor,f
  3474  0694  3EFF               	addlw	-1
  3475  0695  1D03               	skipz
  3476  0696  2E8F               	goto	u1205
  3477  0697  3001               	movlw	1
  3478  0698  02D9               	subwf	___lldiv@counter,f
  3479  0699  1D03               	btfss	3,2
  3480  069A  2E66               	goto	l2264
  3481  069B                     l2276:	
  3482  069B  0858               	movf	___lldiv@quotient+3,w
  3483  069C  00D0               	movwf	?___lldiv+3
  3484  069D  0857               	movf	___lldiv@quotient+2,w
  3485  069E  00CF               	movwf	?___lldiv+2
  3486  069F  0856               	movf	___lldiv@quotient+1,w
  3487  06A0  00CE               	movwf	?___lldiv+1
  3488  06A1  0855               	movf	___lldiv@quotient,w
  3489  06A2  00CD               	movwf	?___lldiv
  3490  06A3  0008               	return
  3491  06A4                     __end_of___lldiv:	
  3492                           
  3493                           	psect	text12
  3494  07B2                     __ptext12:	
  3495 ;; *************** function _read_DS1307 *****************
  3496 ;; Defined at:
  3497 ;;		line 17 in file "./rtc.h"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  direccion       2    2[BANK0 ] unsigned short 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  tiempo          2    4[BANK0 ] unsigned short 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  2    2[BANK0 ] unsigned short 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         0       2       0       0       0
  3512 ;;      Locals:         0       2       0       0       0
  3513 ;;      Temps:          0       0       0       0       0
  3514 ;;      Totals:         0       4       0       0       0
  3515 ;;Total ram usage:        4 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    3
  3518 ;; This function calls:
  3519 ;;		_I2C_Master_Read
  3520 ;;		_I2C_Master_RepeatedStart
  3521 ;;		_I2C_Master_Start
  3522 ;;		_I2C_Master_Stop
  3523 ;;		_I2C_Master_Write
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function _read_DS1307
  3531  07B2                     _read_DS1307:	
  3532                           
  3533                           ;./rtc.h: 17: unsigned short read_DS1307(unsigned short direccion);./rtc.h: 18: {;./rtc.
      +                          h: 19:     unsigned short tiempo;;./rtc.h: 20:     I2C_Master_Start();
  3534                           
  3535                           ;incstack = 0
  3536                           ; Regs used in _read_DS1307: [wreg+status,2+status,0+pclath+cstack]
  3537  07B2  120A  158A  2683  120A  118A  	fcall	_I2C_Master_Start
  3538                           
  3539                           ;./rtc.h: 21:     I2C_Master_Write(0xD0);
  3540  07B7  30D0               	movlw	208
  3541  07B8  00F3               	movwf	I2C_Master_Write@d
  3542  07B9  3000               	movlw	0
  3543  07BA  00F4               	movwf	I2C_Master_Write@d+1
  3544  07BB  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  3545                           
  3546                           ;./rtc.h: 22:     I2C_Master_Write(direccion);
  3547  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  3548  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  3549  07C2  0850               	movf	read_DS1307@direccion+1,w
  3550  07C3  00F4               	movwf	I2C_Master_Write@d+1
  3551  07C4  084F               	movf	read_DS1307@direccion,w
  3552  07C5  00F3               	movwf	I2C_Master_Write@d
  3553  07C6  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  3554                           
  3555                           ;./rtc.h: 23:     I2C_Master_RepeatedStart();
  3556  07CB  120A  158A  267C  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3557                           
  3558                           ;./rtc.h: 24:     I2C_Master_Write(0xD1);
  3559  07D0  30D1               	movlw	209
  3560  07D1  00F3               	movwf	I2C_Master_Write@d
  3561  07D2  3000               	movlw	0
  3562  07D3  00F4               	movwf	I2C_Master_Write@d+1
  3563  07D4  120A  158A  2691  120A  118A  	fcall	_I2C_Master_Write
  3564                           
  3565                           ;./rtc.h: 25:     tiempo = I2C_Master_Read(0);
  3566  07D9  3000               	movlw	0
  3567  07DA  00F3               	movwf	I2C_Master_Read@a
  3568  07DB  00F4               	movwf	I2C_Master_Read@a+1
  3569  07DC  120A  158A  2766  120A  118A  	fcall	_I2C_Master_Read
  3570  07E1  0874               	movf	?_I2C_Master_Read+1,w
  3571  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  3572  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  3573  07E4  00D2               	movwf	read_DS1307@tiempo+1
  3574  07E5  0873               	movf	?_I2C_Master_Read,w
  3575  07E6  00D1               	movwf	read_DS1307@tiempo
  3576                           
  3577                           ;./rtc.h: 26:     I2C_Master_Stop();
  3578  07E7  120A  158A  268A   	fcall	_I2C_Master_Stop
  3579                           
  3580                           ;./rtc.h: 27:     return(tiempo);
  3581  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  3582  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  3583  07EC  0852               	movf	read_DS1307@tiempo+1,w
  3584  07ED  00D0               	movwf	?_read_DS1307+1
  3585  07EE  0851               	movf	read_DS1307@tiempo,w
  3586  07EF  00CF               	movwf	?_read_DS1307
  3587  07F0  0008               	return
  3588  07F1                     __end_of_read_DS1307:	
  3589                           
  3590                           	psect	text13
  3591  0E91                     __ptext13:	
  3592 ;; *************** function _I2C_Master_Write *****************
  3593 ;; Defined at:
  3594 ;;		line 64 in file "./I2C.h"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  d               2    3[COMMON] unsigned int 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0, pclath, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3608 ;;      Params:         2       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0
  3611 ;;      Totals:         2       0       0       0       0
  3612 ;;Total ram usage:        2 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    2
  3615 ;; This function calls:
  3616 ;;		_I2C_Master_Wait
  3617 ;; This function is called by:
  3618 ;;		_read_DS1307
  3619 ;;		_write_ds1307
  3620 ;;		_main
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _I2C_Master_Write
  3626  0E91                     _I2C_Master_Write:	
  3627                           
  3628                           ;./I2C.h: 64: void I2C_Master_Write(unsigned d);./I2C.h: 65: {;./I2C.h: 66:     I2C_Mast
      +                          er_Wait();
  3629                           
  3630                           ;incstack = 0
  3631                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3632  0E91  120A  158A  26AA   	fcall	_I2C_Master_Wait
  3633                           
  3634                           ;./I2C.h: 67:     SSPBUF = d;
  3635  0E94  0873               	movf	I2C_Master_Write@d,w
  3636  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  3638  0E97  0093               	movwf	19	;volatile
  3639  0E98  0008               	return
  3640  0E99                     __end_of_I2C_Master_Write:	
  3641                           
  3642                           	psect	text14
  3643  0E8A                     __ptext14:	
  3644 ;; *************** function _I2C_Master_Stop *****************
  3645 ;; Defined at:
  3646 ;;		line 54 in file "./I2C.h"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0, pclath, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3660 ;;      Params:         0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0
  3663 ;;      Totals:         0       0       0       0       0
  3664 ;;Total ram usage:        0 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    2
  3667 ;; This function calls:
  3668 ;;		_I2C_Master_Wait
  3669 ;; This function is called by:
  3670 ;;		_read_DS1307
  3671 ;;		_write_ds1307
  3672 ;;		_main
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           
  3677                           ;psect for function _I2C_Master_Stop
  3678  0E8A                     _I2C_Master_Stop:	
  3679                           
  3680                           ;./I2C.h: 56:     I2C_Master_Wait();
  3681                           
  3682                           ;incstack = 0
  3683                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3684  0E8A  120A  158A  26AA   	fcall	_I2C_Master_Wait
  3685                           
  3686                           ;./I2C.h: 57:     SSPCON2bits.PEN = 1;
  3687  0E8D  1683               	bsf	3,5	;RP0=1, select bank1
  3688  0E8E  1303               	bcf	3,6	;RP1=0, select bank1
  3689  0E8F  1511               	bsf	17,2	;volatile
  3690  0E90  0008               	return
  3691  0E91                     __end_of_I2C_Master_Stop:	
  3692                           
  3693                           	psect	text15
  3694  0E83                     __ptext15:	
  3695 ;; *************** function _I2C_Master_Start *****************
  3696 ;; Defined at:
  3697 ;;		line 38 in file "./I2C.h"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0
  3714 ;;      Totals:         0       0       0       0       0
  3715 ;;Total ram usage:        0 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    2
  3718 ;; This function calls:
  3719 ;;		_I2C_Master_Wait
  3720 ;; This function is called by:
  3721 ;;		_read_DS1307
  3722 ;;		_write_ds1307
  3723 ;;		_main
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function _I2C_Master_Start
  3729  0E83                     _I2C_Master_Start:	
  3730                           
  3731                           ;./I2C.h: 40:     I2C_Master_Wait();
  3732                           
  3733                           ;incstack = 0
  3734                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3735  0E83  120A  158A  26AA   	fcall	_I2C_Master_Wait
  3736                           
  3737                           ;./I2C.h: 41:     SSPCON2bits.SEN = 1;
  3738  0E86  1683               	bsf	3,5	;RP0=1, select bank1
  3739  0E87  1303               	bcf	3,6	;RP1=0, select bank1
  3740  0E88  1411               	bsf	17,0	;volatile
  3741  0E89  0008               	return
  3742  0E8A                     __end_of_I2C_Master_Start:	
  3743                           
  3744                           	psect	text16
  3745  0E7C                     __ptext16:	
  3746 ;; *************** function _I2C_Master_RepeatedStart *****************
  3747 ;; Defined at:
  3748 ;;		line 46 in file "./I2C.h"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0, pclath, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0
  3765 ;;      Totals:         0       0       0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    2
  3769 ;; This function calls:
  3770 ;;		_I2C_Master_Wait
  3771 ;; This function is called by:
  3772 ;;		_read_DS1307
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function _I2C_Master_RepeatedStart
  3778  0E7C                     _I2C_Master_RepeatedStart:	
  3779                           
  3780                           ;./I2C.h: 48:     I2C_Master_Wait();
  3781                           
  3782                           ;incstack = 0
  3783                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3784  0E7C  120A  158A  26AA   	fcall	_I2C_Master_Wait
  3785                           
  3786                           ;./I2C.h: 49:     SSPCON2bits.RSEN = 1;
  3787  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  3788  0E80  1303               	bcf	3,6	;RP1=0, select bank1
  3789  0E81  1491               	bsf	17,1	;volatile
  3790  0E82  0008               	return
  3791  0E83                     __end_of_I2C_Master_RepeatedStart:	
  3792                           
  3793                           	psect	text17
  3794  0F66                     __ptext17:	
  3795 ;; *************** function _I2C_Master_Read *****************
  3796 ;; Defined at:
  3797 ;;		line 73 in file "./I2C.h"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  a               2    3[COMMON] unsigned short 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  temp            2    0[BANK0 ] unsigned short 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  2    3[COMMON] unsigned short 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0, pclath, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3811 ;;      Params:         2       0       0       0       0
  3812 ;;      Locals:         0       2       0       0       0
  3813 ;;      Temps:          2       0       0       0       0
  3814 ;;      Totals:         4       2       0       0       0
  3815 ;;Total ram usage:        6 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    2
  3818 ;; This function calls:
  3819 ;;		_I2C_Master_Wait
  3820 ;; This function is called by:
  3821 ;;		_read_DS1307
  3822 ;;		_main
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function _I2C_Master_Read
  3828  0F66                     _I2C_Master_Read:	
  3829                           
  3830                           ;./I2C.h: 73: unsigned short I2C_Master_Read(unsigned short a);./I2C.h: 74: {;./I2C.h: 7
      +                          5:     unsigned short temp;;./I2C.h: 76:     I2C_Master_Wait();
  3831                           
  3832                           ;incstack = 0
  3833                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3834  0F66  120A  158A  26AA  120A  158A  	fcall	_I2C_Master_Wait
  3835                           
  3836                           ;./I2C.h: 77:     RCEN = 1;
  3837  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  3838  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  3839  0F6D  1591               	bsf	17,3	;volatile
  3840                           
  3841                           ;./I2C.h: 78:     I2C_Master_Wait();
  3842  0F6E  120A  158A  26AA  120A  158A  	fcall	_I2C_Master_Wait
  3843                           
  3844                           ;./I2C.h: 79:     temp = SSPBUF;
  3845  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3846  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  3847  0F75  0813               	movf	19,w	;volatile
  3848  0F76  00F5               	movwf	??_I2C_Master_Read
  3849  0F77  01F6               	clrf	??_I2C_Master_Read+1
  3850  0F78  0875               	movf	??_I2C_Master_Read,w
  3851  0F79  00CD               	movwf	I2C_Master_Read@temp
  3852  0F7A  0876               	movf	??_I2C_Master_Read+1,w
  3853  0F7B  00CE               	movwf	I2C_Master_Read@temp+1
  3854                           
  3855                           ;./I2C.h: 80:     I2C_Master_Wait();
  3856  0F7C  120A  158A  26AA  120A  158A  	fcall	_I2C_Master_Wait
  3857                           
  3858                           ;./I2C.h: 82:     if(a == 1){
  3859  0F81  0373               	decf	I2C_Master_Read@a,w
  3860  0F82  0474               	iorwf	I2C_Master_Read@a+1,w
  3861  0F83  1D03               	btfss	3,2
  3862  0F84  2F89               	goto	l98
  3863                           
  3864                           ;./I2C.h: 83:         SSPCON2bits.ACKDT = 0;
  3865  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  3866  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  3867  0F87  1291               	bcf	17,5	;volatile
  3868                           
  3869                           ;./I2C.h: 84:     }else{
  3870  0F88  2F8C               	goto	l99
  3871  0F89                     l98:	
  3872                           
  3873                           ;./I2C.h: 85:         SSPCON2bits.ACKDT = 1;
  3874  0F89  1683               	bsf	3,5	;RP0=1, select bank1
  3875  0F8A  1303               	bcf	3,6	;RP1=0, select bank1
  3876  0F8B  1691               	bsf	17,5	;volatile
  3877  0F8C                     l99:	
  3878                           ;./I2C.h: 86:     }
  3879                           
  3880                           
  3881                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  3882  0F8C  1611               	bsf	17,4	;volatile
  3883                           
  3884                           ;./I2C.h: 88:     return temp;
  3885  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0F8F  084E               	movf	I2C_Master_Read@temp+1,w
  3888  0F90  00F4               	movwf	?_I2C_Master_Read+1
  3889  0F91  084D               	movf	I2C_Master_Read@temp,w
  3890  0F92  00F3               	movwf	?_I2C_Master_Read
  3891  0F93  0008               	return
  3892  0F94                     __end_of_I2C_Master_Read:	
  3893                           
  3894                           	psect	text18
  3895  0EAA                     __ptext18:	
  3896 ;; *************** function _I2C_Master_Wait *****************
  3897 ;; Defined at:
  3898 ;;		line 31 in file "./I2C.h"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    1
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_I2C_Master_Start
  3923 ;;		_I2C_Master_RepeatedStart
  3924 ;;		_I2C_Master_Stop
  3925 ;;		_I2C_Master_Write
  3926 ;;		_I2C_Master_Read
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           
  3931                           ;psect for function _I2C_Master_Wait
  3932  0EAA                     _I2C_Master_Wait:	
  3933  0EAA                     l80:	
  3934                           ;./I2C.h: 33:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3935                           
  3936                           ;incstack = 0
  3937                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3938                           
  3939  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  3940  0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  3941  0EAC  1914               	btfsc	20,2	;volatile
  3942  0EAD  2EAA               	goto	l80
  3943  0EAE  0811               	movf	17,w	;volatile
  3944  0EAF  391F               	andlw	31
  3945  0EB0  1903               	btfsc	3,2
  3946  0EB1  0008               	return
  3947  0EB2  2EAA               	goto	l80
  3948  0EB3                     __end_of_I2C_Master_Wait:	
  3949                           
  3950                           	psect	text19
  3951  0EA1                     __ptext19:	
  3952 ;; *************** function _UART_Tx *****************
  3953 ;; Defined at:
  3954 ;;		line 94 in file "main.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  val             1    wreg     unsigned char 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  val             1    3[COMMON] unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3968 ;;      Params:         0       0       0       0       0
  3969 ;;      Locals:         1       0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0
  3971 ;;      Totals:         1       0       0       0       0
  3972 ;;Total ram usage:        1 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    1
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_main
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           
  3983                           ;psect for function _UART_Tx
  3984  0EA1                     _UART_Tx:	
  3985                           
  3986                           ;incstack = 0
  3987                           ; Regs used in _UART_Tx: [wreg]
  3988                           ;UART_Tx@val stored from wreg
  3989  0EA1  00F3               	movwf	UART_Tx@val
  3990  0EA2                     l217:	
  3991                           ;main.c: 94: void UART_Tx(unsigned char val);main.c: 95: {;main.c: 96:     while(TXIF ==
      +                           0);
  3992                           
  3993  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0EA4  1E0C               	btfss	12,4	;volatile
  3996  0EA5  2EA2               	goto	l217
  3997                           
  3998                           ;main.c: 97:     TXIF = 0;
  3999  0EA6  120C               	bcf	12,4	;volatile
  4000                           
  4001                           ;main.c: 98:     TXREG = val;
  4002  0EA7  0873               	movf	UART_Tx@val,w
  4003  0EA8  0099               	movwf	25	;volatile
  4004  0EA9  0008               	return
  4005  0EAA                     __end_of_UART_Tx:	
  4006                           
  4007                           	psect	text20
  4008  0E75                     __ptext20:	
  4009 ;; *************** function _UART_Rx *****************
  4010 ;; Defined at:
  4011 ;;		line 103 in file "main.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      unsigned char 
  4018 ;; Registers used:
  4019 ;;		wreg
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4025 ;;      Params:         0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0
  4028 ;;      Totals:         0       0       0       0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    1
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_main
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           
  4040                           ;psect for function _UART_Rx
  4041  0E75                     _UART_Rx:	
  4042  0E75                     l223:	
  4043                           ;main.c: 105:     while(RCIF == 0);
  4044                           
  4045                           ;incstack = 0
  4046                           ; Regs used in _UART_Rx: [wreg]
  4047                           
  4048  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  4049  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  4050  0E77  1E8C               	btfss	12,5	;volatile
  4051  0E78  2E75               	goto	l223
  4052                           
  4053                           ;main.c: 106:     RCIF = 0;
  4054  0E79  128C               	bcf	12,5	;volatile
  4055                           
  4056                           ;main.c: 107:     return(RCREG);
  4057  0E7A  081A               	movf	26,w	;volatile
  4058  0E7B  0008               	return
  4059  0E7C                     __end_of_UART_Rx:	
  4060                           
  4061                           	psect	text21
  4062  0F3C                     __ptext21:	
  4063 ;; *************** function _LCD8_strWrite *****************
  4064 ;; Defined at:
  4065 ;;		line 55 in file "./LCD8bit.h"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  data            2    5[COMMON] PTR unsigned char 
  4068 ;;		 -> STR_14(11), STR_11(5), STR_10(4), STR_9(3), 
  4069 ;;		 -> STR_8(3), STR_7(4), STR_4(6), show(20), 
  4070 ;;		 -> STR_1(4), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  i               1    0[BANK0 ] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4082 ;;      Params:         2       0       0       0       0
  4083 ;;      Locals:         0       1       0       0       0
  4084 ;;      Temps:          1       0       0       0       0
  4085 ;;      Totals:         3       1       0       0       0
  4086 ;;Total ram usage:        4 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    2
  4089 ;; This function calls:
  4090 ;;		_LCD8_write
  4091 ;; This function is called by:
  4092 ;;		_main
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           
  4097                           ;psect for function _LCD8_strWrite
  4098  0F3C                     _LCD8_strWrite:	
  4099                           
  4100                           ;./LCD8bit.h: 56:     char i;;./LCD8bit.h: 57:         for(i=0; data[i] !='\0';i++ )
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in _LCD8_strWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4104  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  4105  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  4106  0F3E  01CD               	clrf	LCD8_strWrite@i
  4107  0F3F                     l2398:	
  4108  0F3F  084D               	movf	LCD8_strWrite@i,w
  4109  0F40  0775               	addwf	LCD8_strWrite@data,w
  4110  0F41  0084               	movwf	4
  4111  0F42  0876               	movf	LCD8_strWrite@data+1,w
  4112  0F43  1803               	skipnc
  4113  0F44  0A76               	incf	LCD8_strWrite@data+1,w
  4114  0F45  00FF               	movwf	127
  4115  0F46  120A  118A  2700  120A  158A  	fcall	stringtab
  4116  0F4B  3A00               	xorlw	0
  4117  0F4C  1903               	btfsc	3,2
  4118  0F4D  0008               	return
  4119                           
  4120                           ;./LCD8bit.h: 58:             LCD8_write(data[i]);
  4121  0F4E  084D               	movf	LCD8_strWrite@i,w
  4122  0F4F  0775               	addwf	LCD8_strWrite@data,w
  4123  0F50  0084               	movwf	4
  4124  0F51  0876               	movf	LCD8_strWrite@data+1,w
  4125  0F52  1803               	skipnc
  4126  0F53  0A76               	incf	LCD8_strWrite@data+1,w
  4127  0F54  00FF               	movwf	127
  4128  0F55  120A  118A  2700  120A  158A  	fcall	stringtab
  4129  0F5A  120A  158A  26BE  120A  158A  	fcall	_LCD8_write
  4130  0F5F  3001               	movlw	1
  4131  0F60  00F7               	movwf	??_LCD8_strWrite
  4132  0F61  0877               	movf	??_LCD8_strWrite,w
  4133  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  4134  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  4135  0F64  07CD               	addwf	LCD8_strWrite@i,f
  4136  0F65  2F3F               	goto	l2398
  4137  0F66                     __end_of_LCD8_strWrite:	
  4138                           
  4139                           	psect	text22
  4140  0EBE                     __ptext22:	
  4141 ;; *************** function _LCD8_write *****************
  4142 ;; Defined at:
  4143 ;;		line 4 in file "./LCD8bit.h"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;  data            1    wreg     unsigned char 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  data            1    4[COMMON] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       0       0       0       0
  4158 ;;      Locals:         1       0       0       0       0
  4159 ;;      Temps:          1       0       0       0       0
  4160 ;;      Totals:         2       0       0       0       0
  4161 ;;Total ram usage:        2 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    1
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_LCD8_strWrite
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           
  4172                           ;psect for function _LCD8_write
  4173  0EBE                     _LCD8_write:	
  4174                           
  4175                           ;incstack = 0
  4176                           ; Regs used in _LCD8_write: [wreg]
  4177                           ;LCD8_write@data stored from wreg
  4178  0EBE  00F4               	movwf	LCD8_write@data
  4179                           
  4180                           ;./LCD8bit.h: 5:     RA0 = 1;
  4181  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  4182  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  4183  0EC1  1405               	bsf	5,0	;volatile
  4184                           
  4185                           ;./LCD8bit.h: 6:     PORTB = data;
  4186  0EC2  0874               	movf	LCD8_write@data,w
  4187  0EC3  0086               	movwf	6	;volatile
  4188                           
  4189                           ;./LCD8bit.h: 7:     RA1 = 1;
  4190  0EC4  1485               	bsf	5,1	;volatile
  4191                           
  4192                           ;./LCD8bit.h: 8:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4193  0EC5  301A               	movlw	26
  4194  0EC6  00F3               	movwf	??_LCD8_write
  4195  0EC7                     u1807:	
  4196  0EC7  0BF3               	decfsz	??_LCD8_write,f
  4197  0EC8  2EC7               	goto	u1807
  4198  0EC9  0000               	nop
  4199                           
  4200                           ;./LCD8bit.h: 9:     RA1 = 0;
  4201  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0ECC  1085               	bcf	5,1	;volatile
  4204  0ECD  0008               	return
  4205  0ECE                     __end_of_LCD8_write:	
  4206                           
  4207                           	psect	text23
  4208  06E2                     __ptext23:	
  4209 ;; *************** function _LCD8_set_cursor *****************
  4210 ;; Defined at:
  4211 ;;		line 21 in file "./LCD8bit.h"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  row             1    wreg     unsigned char 
  4214 ;;  column          1    6[COMMON] unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  row             1    1[BANK0 ] unsigned char 
  4217 ;;  cursor          1    0[BANK0 ] unsigned char 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg, status,2, status,0, pclath, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4227 ;;      Params:         1       0       0       0       0
  4228 ;;      Locals:         0       2       0       0       0
  4229 ;;      Temps:          1       0       0       0       0
  4230 ;;      Totals:         2       2       0       0       0
  4231 ;;Total ram usage:        4 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    2
  4234 ;; This function calls:
  4235 ;;		_LCD8_cmd
  4236 ;; This function is called by:
  4237 ;;		_main
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           
  4242                           ;psect for function _LCD8_set_cursor
  4243  06E2                     _LCD8_set_cursor:	
  4244                           
  4245                           ;incstack = 0
  4246                           ; Regs used in _LCD8_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4247                           ;LCD8_set_cursor@row stored from wreg
  4248  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  4249  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  4250  06E4  00CE               	movwf	LCD8_set_cursor@row
  4251                           
  4252                           ;./LCD8bit.h: 22:     char cursor;;./LCD8bit.h: 24:         if(row==1)
  4253  06E5  034E               	decf	LCD8_set_cursor@row,w
  4254  06E6  1D03               	btfss	3,2
  4255  06E7  2EED               	goto	l135
  4256                           
  4257                           ;./LCD8bit.h: 25:             cursor = 128 + column -1;
  4258  06E8  0876               	movf	LCD8_set_cursor@column,w
  4259  06E9  3E7F               	addlw	127
  4260  06EA  00F7               	movwf	??_LCD8_set_cursor
  4261  06EB  0877               	movf	??_LCD8_set_cursor,w
  4262  06EC  00CD               	movwf	LCD8_set_cursor@cursor
  4263  06ED                     l135:	
  4264                           
  4265                           ;./LCD8bit.h: 26:         if (row==2)
  4266  06ED  3002               	movlw	2
  4267  06EE  064E               	xorwf	LCD8_set_cursor@row,w
  4268  06EF  1D03               	btfss	3,2
  4269  06F0  2EF6               	goto	l2390
  4270                           
  4271                           ;./LCD8bit.h: 27:             cursor = 192 + column -1;
  4272  06F1  0876               	movf	LCD8_set_cursor@column,w
  4273  06F2  3EBF               	addlw	191
  4274  06F3  00F7               	movwf	??_LCD8_set_cursor
  4275  06F4  0877               	movf	??_LCD8_set_cursor,w
  4276  06F5  00CD               	movwf	LCD8_set_cursor@cursor
  4277  06F6                     l2390:	
  4278                           
  4279                           ;./LCD8bit.h: 29:         LCD8_cmd(cursor);
  4280  06F6  084D               	movf	LCD8_set_cursor@cursor,w
  4281  06F7  120A  158A  26E0   	fcall	_LCD8_cmd
  4282  06FA  0008               	return
  4283  06FB                     __end_of_LCD8_set_cursor:	
  4284                           
  4285                           	psect	text24
  4286  0EE0                     __ptext24:	
  4287 ;; *************** function _LCD8_cmd *****************
  4288 ;; Defined at:
  4289 ;;		line 12 in file "./LCD8bit.h"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  data            1    wreg     unsigned char 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  data            1    5[COMMON] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         0       0       0       0       0
  4304 ;;      Locals:         1       0       0       0       0
  4305 ;;      Temps:          2       0       0       0       0
  4306 ;;      Totals:         3       0       0       0       0
  4307 ;;Total ram usage:        3 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_LCD8_set_cursor
  4314 ;;		_LCD8_clear
  4315 ;;		_LCD8_begin
  4316 ;;		_LCD8_shiftR
  4317 ;;		_LCD8_shiftL
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function _LCD8_cmd
  4323  0EE0                     _LCD8_cmd:	
  4324                           
  4325                           ;incstack = 0
  4326                           ; Regs used in _LCD8_cmd: [wreg]
  4327                           ;LCD8_cmd@data stored from wreg
  4328  0EE0  00F5               	movwf	LCD8_cmd@data
  4329                           
  4330                           ;./LCD8bit.h: 13:     RA0 = 0;
  4331  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  4333  0EE3  1005               	bcf	5,0	;volatile
  4334                           
  4335                           ;./LCD8bit.h: 14:     PORTB = data;
  4336  0EE4  0875               	movf	LCD8_cmd@data,w
  4337  0EE5  0086               	movwf	6	;volatile
  4338                           
  4339                           ;./LCD8bit.h: 16:     RA1 = 1;
  4340  0EE6  1485               	bsf	5,1	;volatile
  4341                           
  4342                           ;./LCD8bit.h: 17:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4343  0EE7  300B               	movlw	11
  4344  0EE8  00F4               	movwf	??_LCD8_cmd+1
  4345  0EE9  3062               	movlw	98
  4346  0EEA  00F3               	movwf	??_LCD8_cmd
  4347  0EEB                     u1817:	
  4348  0EEB  0BF3               	decfsz	??_LCD8_cmd,f
  4349  0EEC  2EEB               	goto	u1817
  4350  0EED  0BF4               	decfsz	??_LCD8_cmd+1,f
  4351  0EEE  2EEB               	goto	u1817
  4352  0EEF  0000               	nop
  4353                           
  4354                           ;./LCD8bit.h: 18:     RA1 = 0;
  4355  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0EF2  1085               	bcf	5,1	;volatile
  4358  0EF3  0008               	return
  4359  0EF4                     __end_of_LCD8_cmd:	
  4360                           
  4361                           	psect	text25
  4362  0ECE                     __ptext25:	
  4363 ;; *************** function _isr *****************
  4364 ;; Defined at:
  4365 ;;		line 25 in file "timer1.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4379 ;;      Params:         0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0
  4381 ;;      Temps:          3       0       0       0       0
  4382 ;;      Totals:         3       0       0       0       0
  4383 ;;Total ram usage:        3 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		Interrupt level 1
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function _isr
  4394  0ECE                     _isr:	
  4395                           
  4396                           ;timer1.c: 27:     if (PIR1bits.TMR1IF) {
  4397  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  4398  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  4399  0ED0  1C0C               	btfss	12,0	;volatile
  4400  0ED1  2ED9               	goto	i1l282
  4401                           
  4402                           ;timer1.c: 28:         t1_count ++;
  4403  0ED2  3001               	movlw	1
  4404  0ED3  00F0               	movwf	??_isr
  4405  0ED4  0870               	movf	??_isr,w
  4406  0ED5  07B8               	addwf	_t1_count,f
  4407                           
  4408                           ;timer1.c: 29:         TMR1 = (0);
  4409  0ED6  018E               	clrf	14	;volatile
  4410  0ED7  018F               	clrf	15	;volatile
  4411                           
  4412                           ;timer1.c: 30:         PIR1bits.TMR1IF = 0;
  4413  0ED8  100C               	bcf	12,0	;volatile
  4414  0ED9                     i1l282:	
  4415  0ED9  0872               	movf	??_isr+2,w
  4416  0EDA  008A               	movwf	10
  4417  0EDB  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  4418  0EDC  0083               	movwf	3
  4419  0EDD  0EFE               	swapf	126,f
  4420  0EDE  0E7E               	swapf	126,w
  4421  0EDF  0009               	retfie
  4422  0EE0                     __end_of_isr:	
  4423  007E                     btemp	set	126	;btemp
  4424  007E                     wtemp0	set	126
  4425                           
  4426                           	psect	intentry
  4427  0004                     __pintentry:	
  4428                           ;incstack = 0
  4429                           ; Regs used in _isr: [wreg+status,2+status,0]
  4430                           
  4431  0004                     interrupt_function:	
  4432  007E                     saved_w	set	btemp
  4433  0004  00FE               	movwf	btemp
  4434  0005  0E03               	swapf	3,w
  4435  0006  00F1               	movwf	??_isr+1
  4436  0007  080A               	movf	10,w
  4437  0008  00F2               	movwf	??_isr+2
  4438  0009  120A  158A  2ECE   	ljmp	_isr


Data Sizes:
    Strings     68
    Constant    10
    Data        2
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_18(CODE[4]), STR_17(CODE[5]), STR_16(CODE[3]), STR_15(CODE[4]), 
		 -> STR_13(CODE[4]), STR_12(CODE[3]), STR_6(CODE[5]), STR_5(CODE[6]), 
		 -> STR_3(CODE[3]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> show(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD8_strWrite@data	PTR unsigned char  size(2) Largest target is 20
		 -> STR_14(CODE[11]), STR_11(CODE[5]), STR_10(CODE[4]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[4]), STR_4(CODE[6]), show(BANK0[20]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCD8_set_cursor
    _main->_LCD8_strWrite
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _setup->_LCD8_begin
    _write_ds1307->_I2C_Master_Write
    _LCD8_clear->_LCD8_cmd
    _LCD8_begin->_LCD8_cmd
    _I2C_Master_Init->___lldiv
    _read_DS1307->_I2C_Master_Read
    _LCD8_strWrite->_LCD8_write
    _LCD8_set_cursor->_LCD8_cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _read_DS1307->_I2C_Master_Read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15350
                                             22 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _LCD8_clear
                    _LCD8_set_cursor
                      _LCD8_strWrite
                            _UART_Rx
                            _UART_Tx
                        _read_DS1307
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2688
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    3449
                                             17 BANK0      1     1      0
                    _I2C_Master_Init
                         _LCD8_begin
                         _LCD8_clear
                    _oscilator_begin
                       _timer1_begin
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         4     0      4    2703
                                              0 BANK0      4     0      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _timer1_begin                                         4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _oscilator_begin                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD8_clear                                           0     0      0      31
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD8_begin                                           2     2      0      31
                                              6 COMMON     2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _read_DS1307                                          4     2      2    3041
                                              2 BANK0      4     2      2
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    2101
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     605
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Tx                                              1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD8_strWrite                                        4     2      2    1781
                                              5 COMMON     3     1      2
                                              0 BANK0      1     1      0
                         _LCD8_write
 ---------------------------------------------------------------------------------
 (2) _LCD8_write                                           2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_set_cursor                                      4     3      1    1632
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (3) _LCD8_cmd                                             3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LCD8_clear
     _LCD8_cmd
   _LCD8_set_cursor
     _LCD8_cmd
   _LCD8_strWrite
     _LCD8_write
   _UART_Rx
   _UART_Tx
   _read_DS1307
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _LCD8_begin
       _LCD8_cmd
     _LCD8_clear
       _LCD8_cmd
     _oscilator_begin
     _timer1_begin
     _write_ds1307
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      53      12        0.0%
ABS                  0      0      53       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 10:36:05 2019

               LCD8_set_cursor@row 004E                                  _a 0078  
                                pc 0002                        __CFG_CP$OFF 0000  
            LCD8_set_cursor@column 0076                                 l80 0EAA  
                               l98 0F89                                 l99 0F8C  
                               _ap 0031                                 _hr 0032  
            LCD8_set_cursor@cursor 004D                                 fsr 0004  
                              l135 06ED                                l223 0E75  
                              l217 0EA2                                l247 0328  
                              l249 0395                                _GIE 005F  
                              _RA0 0028                                _RA1 0029  
                     __CFG_CPD$OFF 0000                                u765 0F9F  
                              u785 0FB0                                u795 0FB9  
                              _hum 0025                                _isr 0ECE  
                              _pir 0026                                _luz 0027  
                              fsr0 0004                                indf 0000  
                     __CFG_LVP$OFF 0000                               l2500 04FB  
                             l2262 0656                               l2502 05C9  
                             l2272 068E                               l2264 0666  
                             l2370 06D2                               l2362 06AE  
                             l2276 069B                               l2364 06BC  
                             l2700 0300                               l2516 002E  
                             l2390 06F6                               l2374 06DD  
                             l2462 0539                               l2472 0550  
                             l2456 051B                               l1770 0F9C  
                             l2490 0582                               l1772 0FAA  
                             l1780 0FC3                               l2484 0573  
                             l2740 03CB                               l2660 0291  
                             l2398 0F3F                               l2478 0552  
                             l2734 03BD                               l2718 0369  
                             l1776 0FB8                               l2808 052E  
                             l2680 02AF                               l2672 02A3  
                             l2664 0297                               l2498 0586  
                             l2738 03C2                               l2780 04C7  
                             l2772 049B                               l2764 046F  
                             l2676 02A9                               l2668 029D  
                             l2684 02B9                               ?_isr 0070  
                             STR_1 0754                               STR_2 0740  
                             STR_3 074D                               STR_4 072B  
                             STR_5 0725                               STR_6 073B  
                             STR_7 0750                               STR_8 0758  
                             STR_9 075B                               _CREN 00C4  
                             u1205 068F                               u1225 0FDA  
                             u1165 065A                               u1255 06B1  
                             u1185 0668                               u1195 067D  
                             u1275 06BD                               u1285 06C9  
                             u1365 0569                               u1295 06D3  
                             u1607 0056                               u1617 0082  
                             u1707 01A4                               u1627 00A9  
                             u1717 01D0                               u1637 00D5  
                             u1807 0EC7                               u1727 01FA  
                             u1647 00F0                               u1817 0EEB  
                             u1737 0226                               u1657 010C  
                             u1747 024D                               u1667 0128  
                             u1757 0279                               u1677 013A  
                             u1767 0765                               u1687 014C  
                             u1777 0774                               u1697 0178  
                             u1787 0781                               _PEIE 005E  
                             u1797 078C                               _RCEN 048B  
                             _RCIF 0065                               _TMR1 000E  
                             _TXIF 0064                       __CFG_WRT$OFF 0000  
                  __end_of_UART_Rx 0E7C                    __end_of_UART_Tx 0EAA  
 __end_of_I2C_Master_RepeatedStart 0E83                               _main 0029  
                             _hora 0033                               _show 0039  
                             btemp 007E                               start 000C  
                    __CFG_IESO$OFF 0000                       ?_read_DS1307 004F  
          __end_of_oscilator_begin 07FF                   __end_of_LCD8_cmd 0EF4  
                   _apoyo_unitario 0036                              ??_isr 0070  
              __size_of_LCD8_begin 0054                __size_of_LCD8_clear 000B  
                 ?_I2C_Master_Init 005A                   ?_I2C_Master_Read 0073  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                  _LCD8_set_cursor 06E2                              ?_main 0070  
              __size_of_LCD8_write 0010                              STR_10 0744  
                            STR_11 0736                              STR_12 074D  
                            STR_13 074C                              STR_14 071A  
                            STR_15 0740                              STR_16 074D  
                            STR_17 0731                      __CFG_WDTE$OFF 0000  
                            STR_18 0748                              _ANSEL 0188  
                  __end_of___lldiv 06A4                    __end_of___lwdiv 06E2  
                  __end_of___lwmod 0FC8                              i1l282 0ED9  
                            _RCREG 001A                              _PORTA 0005  
                            _PORTB 0006                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _SSPIF 0063  
                            _TXREG 0019                  read_DS1307@tiempo 0051  
                   __CFG_FCMEN$OFF 0000                    __end_of_dpowers 071A  
                            _setup 05CE                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 05CE  
                   __CFG_MCLRE$OFF 0000              __size_of_write_ds1307 0028  
                  __initialization 000F                       __end_of_main 04F4  
                           ??_main 0063                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                          ??_UART_Rx 0073  
                        ??_UART_Tx 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                             ?_setup 0070  
                           _ANSELH 0189                       _write_ds1307 0F14  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                   __CFG_PWRTE$OFF 0000           _I2C_Master_RepeatedStart 0E7C  
          __end_of_LCD8_set_cursor 06FB                   ?_oscilator_begin 0070  
                        ??___lldiv 0073                          ??___lwdiv 0077  
                        ??___lwmod 0054                             _minuto 0034  
                           _puerta 0028                             saved_w 007E  
                     ??_LCD8_begin 0076                          ??_sprintf 0059  
                     ??_LCD8_clear 0076                          ?_LCD8_cmd 0070  
                     ??_LCD8_write 0073            __end_of__initialization 0025  
                   __pcstackCOMMON 0070               __size_of_read_DS1307 003F  
                     __pidataBANK0 06FB                      __end_of_setup 0644  
               __end_of_LCD8_begin 07B2                 __end_of_LCD8_clear 0EBE  
               __end_of_LCD8_write 0ECE                            ??_setup 005E  
                       ??_LCD8_cmd 0073                         __pbssBANK0 0020  
            __end_of_LCD8_strWrite 0F66                         __pmaintext 0029  
                 ?_LCD8_set_cursor 0076                         __pintentry 0004  
                          _UART_Rx 0E75                            _UART_Tx 0EA1  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0700                         _convertido 0020  
                          ___lldiv 0644                            ___lwdiv 06A4  
                          ___lwmod 0F94                            _decimal 0037  
                    ?_timer1_begin 0073                            __ptext1 04F4  
                          __ptext2 0F94                            __ptext3 06A4  
                          __ptext4 05CE                            __ptext5 0F14  
                          __ptext6 0EF4                            __ptext7 07F1  
                          __ptext8 0EB3                            __ptext9 075E  
                        _T1CONbits 0010                            _horaDer 002A  
                          _counter 0024                            _horaIzq 0029  
                          _dpowers 0710                       __size_of_isr 0012  
                LCD8_strWrite@data 0075                            _humedad 0066  
                          _segundo 0030           __size_of_I2C_Master_Init 0038  
         __size_of_I2C_Master_Read 002E           __size_of_I2C_Master_Wait 0009  
         __size_of_I2C_Master_Stop 0007                            _sprintf 04F4  
                          clrloop0 0E9A               end_of_initialization 0025  
       ??_I2C_Master_RepeatedStart 0073          __size_of_I2C_Master_Start 0007  
        __size_of_I2C_Master_Write 0008                    ___lldiv@divisor 004D  
                       _segundoDer 002E                         _segundoIzq 002D  
                  ___lldiv@counter 0059                         _valor_CONT 0079  
                        _RCSTAbits 0018                   I2C_Master_Init@c 005A  
                 I2C_Master_Read@a 0073                     ??_timer1_begin 0074  
                        _PORTDbits 0008                          _TRISCbits 0087  
            timer1_begin@prescaler 0073                  __size_of_LCD8_cmd 0014  
                        _TXSTAbits 0098                        _BAUDCTLbits 0187  
         __size_of_oscilator_begin 000E                start_initialization 000F  
                      __end_of_isr 0EE0                  ??_I2C_Master_Init 0074  
                ??_I2C_Master_Read 0075                  ??_I2C_Master_Wait 0073  
                ??_I2C_Master_Stop 0073           __CFG_FOSC$INTRC_NOCLKOUT 0000  
                    ??_read_DS1307 0077                        __pdataBANK0 0066  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 004D                           ?_UART_Rx 0070  
                         ?_UART_Tx 0070               __end_of_timer1_begin 0F14  
                      sprintf@flag 005D                        sprintf@prec 005E  
                 _I2C_Master_Start 0E83                   _I2C_Master_Write 0E91  
                 ___lwdiv@dividend 0075                           ?___lldiv 004D  
                         ?___lwdiv 0073                           ?___lwmod 0050  
              __end_of_read_DS1307 07F1                     LCD8_strWrite@i 004D  
                        _cual_dato 002F                          __pstrings 0700  
           __size_of_LCD8_strWrite 002A                 timer1_begin@offset 0076  
         __size_of_LCD8_set_cursor 0019                     LCD8_write@data 0074  
                 ___lwdiv@quotient 004E                           ?_sprintf 0056  
                ??_oscilator_begin 0073                     __size_of_setup 0076  
                         _LCD8_cmd 0EE0                         UART_Tx@val 0073  
                    ?_write_ds1307 004D                  interrupt_function 0004  
                        _minutoDer 002C                          _minutoIzq 002B  
                        clear_ram0 0E99                           _PIE1bits 008C  
             read_DS1307@direccion 004F                           _PIR1bits 000C  
                      __stringbase 070F                I2C_Master_Read@temp 004D  
                 __size_of_UART_Rx 0007                   __size_of_UART_Tx 0009  
                   ??_write_ds1307 0075                      _LCD8_strWrite 0F3C  
              oscilator_begin@freq 0074                        _read_DS1307 07B2  
                         _t1_count 0038  __size_of_I2C_Master_RepeatedStart 0007  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0060  
                 __size_of___lwdiv 003E                   __size_of___lwmod 0034  
               __end_of__stringtab 0710                         sprintf@val 005F  
                  _I2C_Master_Init 0FC8                    _I2C_Master_Read 0F66  
                  _I2C_Master_Wait 0EAA                    _I2C_Master_Stop 0E8A  
              write_ds1307@address 004D                    ___lwdiv@divisor 0073  
            __size_of_timer1_begin 0020                    ___lwdiv@counter 004D  
                         __ptext10 0FC8                           __ptext11 0644  
                         __ptext20 0E75                           __ptext12 07B2  
                         __ptext21 0F3C                           __ptext13 0E91  
                         __ptext22 0EBE                           __ptext14 0E8A  
                         __ptext23 06E2                           __ptext15 0E83  
                         __ptext24 0EE0                           __ptext16 0E7C  
                         __ptext25 0ECE                           __ptext17 0F66  
                         __ptext18 0EAA                           __ptext19 0EA1  
                __CFG_BOR4V$BOR40V 0000                  ??_LCD8_set_cursor 0077  
                       _LCD8_begin 075E                         _LCD8_clear 0EB3  
                 __size_of_sprintf 00DA                     ?_LCD8_strWrite 0075  
                       _LCD8_write 0EBE                      __size_of_main 04CB  
                     LCD8_cmd@data 0075                           _unitario 0035  
                     _timer1_begin 0EF4           __end_of_I2C_Master_Start 0E8A  
         __end_of_I2C_Master_Write 0E99                         _INTCONbits 000B  
                         intlevel1 0000                          sprintf@ap 005C  
                        sprintf@sp 0061                   ___lwmod@dividend 0052  
                 ___lldiv@dividend 0051                 write_ds1307@w_data 004F  
                        stringcode 070A                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 1000                        _variableADC 007A  
          __end_of_I2C_Master_Read 0F94            __end_of_I2C_Master_Wait 0EB3  
             __end_of_write_ds1307 0F3C            __end_of_I2C_Master_Stop 0E91  
                  _oscilator_begin 07F1                        _temperatura 0067  
                         sprintf@c 0062                           sprintf@f 0056  
                 ___lldiv@quotient 0055                  I2C_Master_Write@d 0073  
                  ___lwmod@divisor 0050                    ___lwmod@counter 0055  
                         stringdir 070A                           stringtab 0700  
                      _SSPCON2bits 0091                    ??_LCD8_strWrite 0077  
                      ?_LCD8_begin 0070                        ?_LCD8_clear 0070  
                      ?_LCD8_write 0070  
