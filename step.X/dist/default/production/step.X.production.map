Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\step.X.production.sym \
  --cmf=dist/default/production\step.X.production.cmf -z -Q16F887 \
  -oC:\Users\jmoli\AppData\Local\Temp\sark.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/step.X.production.map -E1 -ver=XC8 --acfsm=1493 \
  -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\jmoli\AppData\Local\Temp\sark.o \
  dist/default/production\step.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\jmoli\AppData\Local\Temp\sark.o
                end_init                              0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\step.X.production.o
                cinit                               7F5      7F5        B      FEA       0
                text16                              415      415        D      82A       0
                text15                              422      422        E      844       0
                text14                              5DC      5DC       A0      BB8       0
                text13                              479      479       1A      8F2       0
                text12                              3FB      3FB        7      7F6       0
                text11                              44E      44E       14      89C       0
                text10                              529      529       54      A52       0
                text9                               40A      40A        B      814       0
                text8                               462      462       17      8C4       0
                text7                               43E      43E       10      87C       0
                text6                               493      493       28      926       0
                text5                               430      430        E      860       0
                text4                               4ED      4ED       3C      9DA       0
                text3                               4BB      4BB       32      976       0
                text2                               71D      71D       D8      E3A       0
                text1                               57D      57D       5F      AFA       0
                maintext                            67C      67C       A1      CF8       0
                cstackBANK0                          38       38       10       20       1
                cstackCOMMON                         70       70        E       70       1
                clrtext                             402      402        8      804       0
                bssBANK0                             20       20       18       20       1
                strings                               3        3       2C        6       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7F5      7F5        B         0
                text16                              415      415        D         0
                text15                              422      422        E         0
                text14                              5DC      5DC       A0         0
                text13                              479      479       1A         0
                text12                              3FB      3FB        7         0
                text11                              44E      44E       14         0
                text10                              529      529       54         0
                text9                               40A      40A        B         0
                text8                               462      462       17         0
                text7                               43E      43E       10         0
                text6                               493      493       28         0
                text5                               430      430        E         0
                text4                               4ED      4ED       3C         0
                text3                               4BB      4BB       32         0
                text2                               71D      71D       D8         0
                text1                               57D      57D       5F         0
                maintext                            67C      67C       A1         0
                clrtext                             402      402        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               3        3       2C         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          38       38       10         1
                bssBANK0                             20       20       18         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                strings                        000003  00002C  00002F         6       0  STRING      2
                bssBANK0                       000020  000028  000048        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text12                         0003FB  000007  000402       7F6       0  CODE        2
                clrtext                        000402  000008  00040A       804       0  CODE        2
                text9                          00040A  00000B  000415       814       0  CODE        2
                text16                         000415  00000D  000422       82A       0  CODE        2
                text15                         000422  00000E  000430       844       0  CODE        2
                text5                          000430  00000E  00043E       860       0  CODE        2
                text7                          00043E  000010  00044E       87C       0  CODE        2
                text11                         00044E  000014  000462       89C       0  CODE        2
                text8                          000462  000017  000479       8C4       0  CODE        2
                text13                         000479  00001A  000493       8F2       0  CODE        2
                text6                          000493  000028  0004BB       926       0  CODE        2
                text3                          0004BB  000032  0004ED       976       0  CODE        2
                text4                          0004ED  00003C  000529       9DA       0  CODE        2
                text10                         000529  000054  00057D       A52       0  CODE        2
                text1                          00057D  00005F  0005DC       AFA       0  CODE        2
                text14                         0005DC  0000A0  00067C       BB8       0  CODE        2
                maintext                       00067C  0000A1  00071D       CF8       0  CODE        2
                text2                          00071D  0000D8  0007F5       E3A       0  CODE        2
                cinit                          0007F5  00000B  000800       FEA       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0048-006F             28           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             002F-03FA            3CC           2
                         0800-1FFF            800
        CONST            002F-03FA            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            002F-03FA            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0048-006F             28           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          002F-03FA            3CC           2
                         0800-1FFF           1800
        STRING           002F-03FA            100           2
                         0800-1FFF            100

                                  Symbol Table

?___lwdiv                 cstackCOMMON 0070
?___lwmod                 cstackCOMMON 0078
?_sprintf                 cstackBANK0  0038
ADC_begin@freq            cstackCOMMON 0073
ADC_begin@option          cstackCOMMON 0074
ADC_channel@channel       cstackCOMMON 0071
ADC_freq@freq             cstackCOMMON 0071
ADC_option@option         cstackCOMMON 0072
LCD8_cmd@data             cstackCOMMON 0072
LCD8_set_cursor@column    cstackCOMMON 0073
LCD8_set_cursor@cursor    cstackCOMMON 0075
LCD8_set_cursor@row       cstackCOMMON 0076
LCD8_strWrite@data        cstackCOMMON 0072
LCD8_strWrite@i           cstackCOMMON 0075
LCD8_write@data           cstackCOMMON 0071
_ADCON0bits               (abs)        001F
_ADCON1bits               (abs)        009F
_ADC_begin                text13       0479
_ADC_channel              text16       0415
_ADC_conversion           text12       03FB
_ADC_freq                 text15       0422
_ADC_option               text14       05DC
_ADRESH                   (abs)        001E
_ANSELHbits               (abs)        0189
_ANSELbits                (abs)        0188
_INTCONbits               (abs)        000B
_LCD8_begin               text10       0529
_LCD8_clear               text9        040A
_LCD8_cmd                 text11       044E
_LCD8_set_cursor          text8        0462
_LCD8_strWrite            text6        0493
_LCD8_write               text7        043E
_OSCCONbits               (abs)        008F
_PIE1bits                 (abs)        008C
_PIR1bits                 (abs)        000C
_PORTA                    (abs)        0005
_PORTB                    (abs)        0006
_PORTD                    (abs)        0008
_RA1                      (abs)        0029
_RA2                      (abs)        002A
_TRISA1                   (abs)        0429
_TRISA2                   (abs)        042A
_TRISAbits                (abs)        0085
_TRISB                    (abs)        0086
_TRISBbits                (abs)        0086
_TRISD                    (abs)        0088
_TRISEbits                (abs)        0089
__CFG_BOR4V$BOR40V        (abs)        0000
__CFG_BOREN$ON            (abs)        0000
__CFG_CP$OFF              (abs)        0000
__CFG_CPD$OFF             (abs)        0000
__CFG_FCMEN$OFF           (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT (abs)        0000
__CFG_IESO$OFF            (abs)        0000
__CFG_LVP$OFF             (abs)        0000
__CFG_MCLRE$OFF           (abs)        0000
__CFG_PWRTE$OFF           (abs)        0000
__CFG_WDTE$OFF            (abs)        0000
__CFG_WRT$OFF             (abs)        0000
__Habs1                   abs1         0000
__Hbank0                  bank0        0000
__Hbank1                  bank1        0000
__Hbank2                  bank2        0000
__Hbank3                  bank3        0000
__HbssBANK0               bssBANK0     0000
__Hcinit                  cinit        0800
__Hclrtext                clrtext      0000
__Hcode                   code         0000
__Hcommon                 common       0000
__Hconfig                 config       2009
__HcstackBANK0            cstackBANK0  0000
__HcstackCOMMON           cstackCOMMON 0000
__Heeprom_data            eeprom_data  0000
__Hend_init               end_init     0003
__Hfunctab                functab      0000
__Hidloc                  idloc        0000
__Hinit                   init         0000
__Hintentry               intentry     0000
__Hmaintext               maintext     0000
__Hpowerup                powerup      0000
__Hram                    ram          0000
__Hreset_vec              reset_vec    0000
__Hsfr0                   sfr0         0000
__Hsfr1                   sfr1         0000
__Hsfr2                   sfr2         0000
__Hsfr3                   sfr3         0000
__Hspace_0                (abs)        2009
__Hspace_1                (abs)        007E
__Hspace_2                (abs)        0000
__Hspace_3                (abs)        0000
__Hstack                  stack        0000
__Hstrings                strings      0000
__Htext                   text         0000
__Labs1                   abs1         0000
__Lbank0                  bank0        0000
__Lbank1                  bank1        0000
__Lbank2                  bank2        0000
__Lbank3                  bank3        0000
__LbssBANK0               bssBANK0     0000
__Lcinit                  cinit        07F5
__Lclrtext                clrtext      0000
__Lcode                   code         0000
__Lcommon                 common       0000
__Lconfig                 config       2007
__LcstackBANK0            cstackBANK0  0000
__LcstackCOMMON           cstackCOMMON 0000
__Leeprom_data            eeprom_data  0000
__Lend_init               end_init     0000
__Lfunctab                functab      0000
__Lidloc                  idloc        0000
__Linit                   init         0000
__Lintentry               intentry     0000
__Lmaintext               maintext     0000
__Lpowerup                powerup      0000
__Lram                    ram          0000
__Lreset_vec              reset_vec    0000
__Lsfr0                   sfr0         0000
__Lsfr1                   sfr1         0000
__Lsfr2                   sfr2         0000
__Lsfr3                   sfr3         0000
__Lspace_0                (abs)        0000
__Lspace_1                (abs)        0000
__Lspace_2                (abs)        0000
__Lspace_3                (abs)        0000
__Lstack                  stack        0000
__Lstrings                strings      0000
__Ltext                   text         0000
__S0                      (abs)        2009
__S1                      (abs)        007E
__S2                      (abs)        0000
__S3                      (abs)        0000
___int_sp                 stack        0000
___latbits                (abs)        0002
___lwdiv                  text4        04ED
___lwdiv@counter          cstackCOMMON 0077
___lwdiv@dividend         cstackCOMMON 0072
___lwdiv@divisor          cstackCOMMON 0070
___lwdiv@quotient         cstackCOMMON 0075
___lwmod                  text3        04BB
___lwmod@counter          cstackCOMMON 007D
___lwmod@dividend         cstackCOMMON 007A
___lwmod@divisor          cstackCOMMON 0078
___sp                     stack        0000
___stackhi                (abs)        0000
___stacklo                (abs)        0000
__end_of_ADC_begin        text13       0493
__end_of_ADC_channel      text16       0422
__end_of_ADC_conversion   text12       0402
__end_of_ADC_freq         text15       0430
__end_of_ADC_option       text14       067C
__end_of_LCD8_begin       text10       057D
__end_of_LCD8_clear       text9        0415
__end_of_LCD8_cmd         text11       0462
__end_of_LCD8_set_cursor  text8        0479
__end_of_LCD8_strWrite    text6        04BB
__end_of_LCD8_write       text7        044E
__end_of___lwdiv          text4        0529
__end_of___lwmod          text3        04ED
__end_of__initialization  cinit        07FC
__end_of__stringtab       strings      0013
__end_of_dpowers          strings      001D
__end_of_main             maintext     071D
__end_of_oscilator_begin  text5        043E
__end_of_sprintf          text2        07F5
__end_of_wave_step        text1        05DC
__initialization          cinit        07F5
__pbssBANK0               bssBANK0     0020
__pcstackBANK0            cstackBANK0  0038
__pcstackCOMMON           cstackCOMMON 0070
__pmaintext               maintext     067C
__pstrings                strings      0003
__ptext1                  text1        057D
__ptext10                 text10       0529
__ptext11                 text11       044E
__ptext12                 text12       03FB
__ptext13                 text13       0479
__ptext14                 text14       05DC
__ptext15                 text15       0422
__ptext16                 text16       0415
__ptext2                  text2        071D
__ptext3                  text3        04BB
__ptext4                  text4        04ED
__ptext5                  text5        0430
__ptext6                  text6        0493
__ptext7                  text7        043E
__ptext8                  text8        0462
__ptext9                  text9        040A
__size_of_ADC_begin       (abs)        0000
__size_of_ADC_channel     (abs)        0000
__size_of_ADC_conversion  (abs)        0000
__size_of_ADC_freq        (abs)        0000
__size_of_ADC_option      (abs)        0000
__size_of_LCD8_begin      (abs)        0000
__size_of_LCD8_clear      (abs)        0000
__size_of_LCD8_cmd        (abs)        0000
__size_of_LCD8_set_cursor (abs)        0000
__size_of_LCD8_strWrite   (abs)        0000
__size_of_LCD8_write      (abs)        0000
__size_of___lwdiv         (abs)        0000
__size_of___lwmod         (abs)        0000
__size_of_main            (abs)        0000
__size_of_oscilator_begin (abs)        0000
__size_of_sprintf         (abs)        0000
__size_of_wave_step       (abs)        0000
__stringbase              strings      0012
__stringtab               strings      0003
_adc_read                 bssBANK0     0028
_dpowers                  strings      0013
_i                        bssBANK0     0027
_main                     maintext     067C
_oscilator_begin          text5        0430
_show                     bssBANK0     0029
_sprintf                  text2        071D
_step                     bssBANK0     0024
_wave_step                text1        057D
btemp                     (abs)        007E
clear_ram0                clrtext      0402
end_of_initialization     cinit        07FC
full_step@i               bssBANK0     0026
intlevel0                 functab      0000
intlevel1                 functab      0000
intlevel2                 functab      0000
intlevel3                 functab      0000
intlevel4                 functab      0000
intlevel5                 functab      0000
oscilator_begin@freq      cstackCOMMON 0071
reset_vec                 reset_vec    0000
sprintf@ap                cstackBANK0  003E
sprintf@c                 cstackBANK0  0044
sprintf@f                 cstackBANK0  0038
sprintf@flag              cstackBANK0  003F
sprintf@prec              cstackBANK0  0040
sprintf@sp                cstackBANK0  0043
sprintf@val               cstackBANK0  0041
start                     init         0000
start_initialization      cinit        07F5
wave_step@a               bssBANK0     0020
wave_step@i               bssBANK0     0022
wave_step@steps           cstackCOMMON 0070
wtemp0                    (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 39 in file "main_stepper.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    2
 This function calls:
		_ADC_begin
		_ADC_conversion
		_LCD8_begin
		_LCD8_clear
		_LCD8_set_cursor
		_LCD8_strWrite
		_oscilator_begin
		_sprintf
		_wave_step
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _wave_step *****************
 Defined at:
		line 35 in file "stepper.c"
 Parameters:    Size  Location     Type
  steps           2    0[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> show(15), 
  f               1    0[BANK0 ] PTR const unsigned char 
		 -> STR_2(11), 
 Auto vars:     Size  Location     Type
  sp              1   11[BANK0 ] PTR unsigned char 
		 -> show(15), 
  tmpval          4    0        struct .
  val             2    9[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   12[BANK0 ] unsigned char 
  prec            1    8[BANK0 ] char 
  flag            1    7[BANK0 ] unsigned char 
  ap              1    6[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    8[COMMON] unsigned int 
  dividend        2   10[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    8[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] unsigned int 
  dividend        2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    5[COMMON] unsigned int 
  counter         1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _oscilator_begin *****************
 Defined at:
		line 9 in file "./Oscilator.h"
 Parameters:    Size  Location     Type
  freq            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  freq            1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD8_strWrite *****************
 Defined at:
		line 55 in file "./LCD8bit.h"
 Parameters:    Size  Location     Type
  data            2    2[COMMON] PTR unsigned char 
		 -> show(15), STR_1(7), 
 Auto vars:     Size  Location     Type
  i               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCD8_write
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD8_write *****************
 Defined at:
		line 4 in file "./LCD8bit.h"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD8_strWrite
 This function uses a non-reentrant model


 *************** function _LCD8_set_cursor *****************
 Defined at:
		line 21 in file "./LCD8bit.h"
 Parameters:    Size  Location     Type
  row             1    wreg     unsigned char 
  column          1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  row             1    6[COMMON] unsigned char 
  cursor          1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCD8_cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD8_clear *****************
 Defined at:
		line 32 in file "./LCD8bit.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCD8_cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD8_begin *****************
 Defined at:
		line 37 in file "./LCD8bit.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCD8_cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD8_cmd *****************
 Defined at:
		line 12 in file "./LCD8bit.h"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD8_set_cursor
		_LCD8_clear
		_LCD8_begin
		_LCD8_shiftR
		_LCD8_shiftL
 This function uses a non-reentrant model


 *************** function _ADC_conversion *****************
 Defined at:
		line 117 in file "./ADC.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC_begin *****************
 Defined at:
		line 84 in file "./ADC.h"
 Parameters:    Size  Location     Type
  option          1    wreg     unsigned char 
  freq            1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  option          1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_ADC_channel
		_ADC_freq
		_ADC_option
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC_option *****************
 Defined at:
		line 2 in file "./ADC.h"
 Parameters:    Size  Location     Type
  option          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  option          1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ADC_begin
		_ADC_int_begin
 This function uses a non-reentrant model


 *************** function _ADC_freq *****************
 Defined at:
		line 67 in file "./ADC.h"
 Parameters:    Size  Location     Type
  freq            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  freq            1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ADC_begin
		_ADC_int_begin
 This function uses a non-reentrant model


 *************** function _ADC_channel *****************
 Defined at:
		line 77 in file "./ADC.h"
 Parameters:    Size  Location     Type
  channel         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  channel         1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ADC_begin
		_ADC_int_begin
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c
		_sprintf       		CODE           	071D	0000	217

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c estimated size: 217

./ADC.h
		_ADC_conversion		CODE           	03FB	0000	8
		_ADC_freq      		CODE           	0422	0000	15
		_ADC_option    		CODE           	05DC	0000	161
		_ADC_begin     		CODE           	0479	0000	27
		_ADC_channel   		CODE           	0415	0000	14

./ADC.h estimated size: 225

./Oscilator.h
		_oscilator_begin		CODE           	0430	0000	15

./Oscilator.h estimated size: 15

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	04ED	0000	61

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c estimated size: 61

stepper.c
		_wave_step     		CODE           	057D	0000	96

stepper.c estimated size: 96

shared
		__stringtab    		STRING         	0003	0000	17
		_dpowers       		STRING         	0013	0000	11
		__initialization		CODE           	07F5	0000	8

shared estimated size: 36

main_stepper.c
		_main          		CODE           	067C	0000	162

main_stepper.c estimated size: 162

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	04BB	0000	51

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c estimated size: 51

./LCD8bit.h
		_LCD8_set_cursor		CODE           	0462	0000	24
		_LCD8_cmd      		CODE           	044E	0000	21
		_LCD8_begin    		CODE           	0529	0000	85
		_LCD8_clear    		CODE           	040A	0000	12
		_LCD8_write    		CODE           	043E	0000	17
		_LCD8_strWrite 		CODE           	0493	0000	41

./LCD8bit.h estimated size: 200

