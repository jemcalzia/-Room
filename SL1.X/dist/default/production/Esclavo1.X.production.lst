

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 10 23:52:39 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.05
    26                           ; Generated 20/12/2018 GMT
    27                           ; 
    28                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataBANK0
   217  05BB                     __pidataBANK0:	
   218                           
   219                           ;initializer for _pres
   220  05BB  3483               	retlw	131
   221  0008                     _PORTDbits	set	8
   222  000E                     _TMR1L	set	14
   223  000F                     _TMR1H	set	15
   224  001E                     _ADRESH	set	30
   225  001F                     _ADCON0bits	set	31
   226  0010                     _T1CON	set	16
   227  0008                     _PORTD	set	8
   228  0005                     _PORTA	set	5
   229  0007                     _PORTCbits	set	7
   230  0006                     _PORTBbits	set	6
   231  0014                     _SSPCONbits	set	20
   232  000C                     _PIR1bits	set	12
   233  0001                     _TMR0	set	1
   234  000B                     _INTCONbits	set	11
   235  0013                     _SSPBUF	set	19
   236  0014                     _SSPCON	set	20
   237  0080                     _TMR1ON	set	128
   238  005A                     _TMR0IF	set	90
   239  0063                     _SSPIF	set	99
   240  005E                     _PEIE	set	94
   241  005F                     _GIE	set	95
   242  009F                     _ADCON1bits	set	159
   243  0087                     _TRISCbits	set	135
   244  0085                     _TRISAbits	set	133
   245  0086                     _TRISB	set	134
   246  0088                     _TRISD	set	136
   247  0094                     _SSPSTATbits	set	148
   248  0081                     _OPTION_REGbits	set	129
   249  008F                     _OSCCONbits	set	143
   250  0091                     _SSPCON2bits	set	145
   251  0094                     _SSPSTAT	set	148
   252  0093                     _SSPADD	set	147
   253  0091                     _SSPCON2	set	145
   254  04A0                     _BF	set	1184
   255  0463                     _SSPIE	set	1123
   256  048B                     _RCEN	set	1163
   257  043C                     _TRISC4	set	1084
   258  043B                     _TRISC3	set	1083
   259  0188                     _ANSELbits	set	392
   260  0189                     _ANSELH	set	393
   261  0188                     _ANSEL	set	392
   262                           
   263                           ; #config settings
   264  0000                     
   265                           	psect	cinit
   266  000F                     start_initialization:	
   267  000F                     __initialization:	
   268                           
   269                           ; Initialize objects allocated to BANK0
   270  000F  120A  118A  25BB   	fcall	__pidataBANK0	;fetch initializer
   271  0012  00DF               	movwf	__pdataBANK0& (0+127)
   272                           
   273                           ; Clear objects allocated to BANK0
   274  0013  01D2               	clrf	__pbssBANK0& (0+127)
   275  0014  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   276  0015  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   277  0016  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   278  0017  01D6               	clrf	(__pbssBANK0+4)& (0+127)
   279  0018  01D7               	clrf	(__pbssBANK0+5)& (0+127)
   280  0019  01D8               	clrf	(__pbssBANK0+6)& (0+127)
   281  001A  01D9               	clrf	(__pbssBANK0+7)& (0+127)
   282  001B  01DA               	clrf	(__pbssBANK0+8)& (0+127)
   283  001C  01DB               	clrf	(__pbssBANK0+9)& (0+127)
   284  001D  01DC               	clrf	(__pbssBANK0+10)& (0+127)
   285  001E  01DD               	clrf	(__pbssBANK0+11)& (0+127)
   286  001F  01DE               	clrf	(__pbssBANK0+12)& (0+127)
   287                           
   288                           ; Clear objects allocated to COMMON
   289  0020  01F6               	clrf	__pbssCOMMON& (0+127)
   290  0021  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   291  0022  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   292  0023  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   293  0024                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296  0024                     __end_of__initialization:	
   297  0024  0183               	clrf	3
   298  0025  120A  118A  2A70   	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMMON
   301  0076                     __pbssCOMMON:	
   302  0076                     _puerta:	
   303  0076                     	ds	1
   304  0077                     _contLuz:	
   305  0077                     	ds	1
   306  0078                     _contPWM:	
   307  0078                     	ds	1
   308  0079                     _variable:	
   309  0079                     	ds	1
   310                           
   311                           	psect	bssBANK0
   312  0052                     __pbssBANK0:	
   313  0052                     _a:	
   314  0052                     	ds	2
   315  0054                     _dato:	
   316  0054                     	ds	2
   317  0056                     _z:	
   318  0056                     	ds	2
   319  0058                     _state:	
   320  0058                     	ds	1
   321  0059                     _door:	
   322  0059                     	ds	1
   323  005A                     _flag:	
   324  005A                     	ds	1
   325  005B                     _ADCLUZI2C:	
   326  005B                     	ds	1
   327  005C                     _duty_cycle:	
   328  005C                     	ds	1
   329  005D                     _on_time:	
   330  005D                     	ds	1
   331  005E                     _ADC_LUZ:	
   332  005E                     	ds	1
   333                           
   334                           	psect	dataBANK0
   335  005F                     __pdataBANK0:	
   336  005F                     _pres:	
   337  005F                     	ds	1
   338                           
   339                           	psect	cstackCOMMON
   340  0070                     __pcstackCOMMON:	
   341  0070                     ?_initOscilador:	
   342  0070                     ?_isr:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_isr:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_setup:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_read_ADC:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_DutyCycle:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360                           
   361                           ; 1 bytes @ 0x0
   362  0070                     	ds	4
   363  0074                     ?_I2C_Slave_Init:	
   364  0074                     ??_initOscilador:	
   365                           ; 1 bytes @ 0x4
   366                           
   367  0074                     ??_initTimero:	
   368                           ; 1 bytes @ 0x4
   369                           
   370  0074                     ??_read_ADC:	
   371                           ; 1 bytes @ 0x4
   372                           
   373  0074                     ??_DutyCycle:	
   374                           ; 1 bytes @ 0x4
   375                           
   376  0074                     ___fltol@sign1:	
   377                           ; 1 bytes @ 0x4
   378                           
   379  0074                     I2C_Slave_Init@address:	
   380                           ; 1 bytes @ 0x4
   381                           
   382                           
   383                           ; 2 bytes @ 0x4
   384  0074                     	ds	1
   385  0075                     DutyCycle@ADC_LUZ:	
   386  0075                     ___fltol@exp1:	
   387                           ; 1 bytes @ 0x5
   388                           
   389                           
   390                           ; 1 bytes @ 0x5
   391  0075                     	ds	1
   392  0076                     ??_I2C_Slave_Init:	
   393                           
   394                           	psect	cstackBANK0
   395  0020                     __pcstackBANK0:	
   396                           ; 1 bytes @ 0x6
   397                           
   398  0020                     ?_initTimero:	
   399  0020                     ?___xxtofl:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0020                     initOscilador@frec:	
   403                           ; 4 bytes @ 0x0
   404                           
   405  0020                     initTimero@tocs:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0020                     ___xxtofl@val:	
   409                           ; 2 bytes @ 0x0
   410                           
   411                           
   412                           ; 4 bytes @ 0x0
   413  0020                     	ds	2
   414  0022                     initTimero@psa:	
   415                           
   416                           ; 2 bytes @ 0x2
   417  0022                     	ds	2
   418  0024                     ??___xxtofl:	
   419  0024                     initTimero@prescaler:	
   420                           ; 1 bytes @ 0x4
   421                           
   422                           
   423                           ; 2 bytes @ 0x4
   424  0024                     	ds	2
   425  0026                     initTimero@valor:	
   426                           
   427                           ; 2 bytes @ 0x6
   428  0026                     	ds	2
   429  0028                     ??_setup:	
   430  0028                     ___xxtofl@sign:	
   431                           ; 1 bytes @ 0x8
   432                           
   433                           
   434                           ; 1 bytes @ 0x8
   435  0028                     	ds	1
   436  0029                     ___xxtofl@exp:	
   437                           
   438                           ; 1 bytes @ 0x9
   439  0029                     	ds	1
   440  002A                     ___xxtofl@arg:	
   441                           
   442                           ; 4 bytes @ 0xA
   443  002A                     	ds	4
   444  002E                     ?___fldiv:	
   445  002E                     ___fldiv@a:	
   446                           ; 4 bytes @ 0xE
   447                           
   448                           
   449                           ; 4 bytes @ 0xE
   450  002E                     	ds	4
   451  0032                     ___fldiv@b:	
   452                           
   453                           ; 4 bytes @ 0x12
   454  0032                     	ds	4
   455  0036                     ??___fldiv:	
   456                           
   457                           ; 1 bytes @ 0x16
   458  0036                     	ds	5
   459  003B                     ___fldiv@rem:	
   460                           
   461                           ; 4 bytes @ 0x1B
   462  003B                     	ds	4
   463  003F                     ___fldiv@sign:	
   464                           
   465                           ; 1 bytes @ 0x1F
   466  003F                     	ds	1
   467  0040                     ___fldiv@new_exp:	
   468                           
   469                           ; 2 bytes @ 0x20
   470  0040                     	ds	2
   471  0042                     ___fldiv@grs:	
   472                           
   473                           ; 4 bytes @ 0x22
   474  0042                     	ds	4
   475  0046                     ___fldiv@bexp:	
   476                           
   477                           ; 1 bytes @ 0x26
   478  0046                     	ds	1
   479  0047                     ___fldiv@aexp:	
   480                           
   481                           ; 1 bytes @ 0x27
   482  0047                     	ds	1
   483  0048                     ?___fltol:	
   484  0048                     ___fltol@f1:	
   485                           ; 4 bytes @ 0x28
   486                           
   487                           
   488                           ; 4 bytes @ 0x28
   489  0048                     	ds	4
   490  004C                     ??___fltol:	
   491                           
   492                           ; 1 bytes @ 0x2C
   493  004C                     	ds	5
   494  0051                     ??_main:	
   495                           
   496                           ; 1 bytes @ 0x31
   497  0051                     	ds	1
   498                           
   499                           	psect	maintext
   500  0270                     __pmaintext:	
   501 ;;
   502 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   503 ;;
   504 ;; *************** function _main *****************
   505 ;; Defined at:
   506 ;;		line 206 in file "Esclavo1.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : B00/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   520 ;;      Params:         0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0
   522 ;;      Temps:          0       1       0       0       0
   523 ;;      Totals:         0       1       0       0       0
   524 ;;Total ram usage:        1 bytes
   525 ;; Hardware stack levels required when called:    3
   526 ;; This function calls:
   527 ;;		_DutyCycle
   528 ;;		___fldiv
   529 ;;		___fltol
   530 ;;		___xxtofl
   531 ;;		_read_ADC
   532 ;;		_setup
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _main
   540  0270                     _main:	
   541                           
   542                           ;Esclavo1.c: 207:     setup();
   543                           
   544                           ;incstack = 0
   545                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   546  0270  120A  118A  24F0  120A  118A  	fcall	_setup
   547                           
   548                           ;Esclavo1.c: 208:     flag = 0;
   549  0275  1283               	bcf	3,5	;RP0=0, select bank0
   550  0276  1303               	bcf	3,6	;RP1=0, select bank0
   551  0277  01DA               	clrf	_flag
   552                           
   553                           ;Esclavo1.c: 209:     state = 0;
   554  0278  01D8               	clrf	_state
   555  0279                     l2117:	
   556                           
   557                           ;Esclavo1.c: 212:         flag ++;
   558  0279  3001               	movlw	1
   559  027A  00D1               	movwf	??_main
   560  027B  0851               	movf	??_main,w
   561  027C  07DA               	addwf	_flag,f
   562                           
   563                           ;Esclavo1.c: 213:         if (flag == 255){
   564  027D  0A5A               	incf	_flag,w
   565  027E  1D03               	btfss	3,2
   566  027F  2A84               	goto	l2123
   567                           
   568                           ;Esclavo1.c: 214:             door ++;
   569  0280  3001               	movlw	1
   570  0281  00D1               	movwf	??_main
   571  0282  0851               	movf	??_main,w
   572  0283  07D9               	addwf	_door,f
   573  0284                     l2123:	
   574                           
   575                           ;Esclavo1.c: 216:         ADC_LUZ = read_ADC();
   576  0284  120A  118A  25B4  120A  118A  	fcall	_read_ADC
   577  0289  1283               	bcf	3,5	;RP0=0, select bank0
   578  028A  1303               	bcf	3,6	;RP1=0, select bank0
   579  028B  00D1               	movwf	??_main
   580  028C  0851               	movf	??_main,w
   581  028D  00DE               	movwf	_ADC_LUZ
   582                           
   583                           ;Esclavo1.c: 217:         ADCLUZI2C = ADC_LUZ;
   584  028E  085E               	movf	_ADC_LUZ,w
   585  028F  00D1               	movwf	??_main
   586  0290  0851               	movf	??_main,w
   587  0291  00DB               	movwf	_ADCLUZI2C
   588                           
   589                           ;Esclavo1.c: 219:         duty_cycle = DutyCycle(ADC_LUZ);
   590  0292  085E               	movf	_ADC_LUZ,w
   591  0293  120A  118A  239E  120A  118A  	fcall	_DutyCycle
   592  0298  1283               	bcf	3,5	;RP0=0, select bank0
   593  0299  1303               	bcf	3,6	;RP1=0, select bank0
   594  029A  00D1               	movwf	??_main
   595  029B  0851               	movf	??_main,w
   596  029C  00DC               	movwf	_duty_cycle
   597                           
   598                           ;Esclavo1.c: 228:         if(door==100){
   599  029D  3064               	movlw	100
   600  029E  0659               	xorwf	_door,w
   601  029F  1D03               	btfss	3,2
   602  02A0  2A79               	goto	l2117
   603                           
   604                           ;Esclavo1.c: 229:             door = 0;
   605  02A1  01D9               	clrf	_door
   606                           
   607                           ;Esclavo1.c: 231:         TMR1H = 0;
   608  02A2  018F               	clrf	15	;volatile
   609                           
   610                           ;Esclavo1.c: 232:         TMR1L = 0;
   611  02A3  018E               	clrf	14	;volatile
   612                           
   613                           ;Esclavo1.c: 233:         PORTDbits.RD0 = 1;
   614  02A4  1408               	bsf	8,0	;volatile
   615                           
   616                           ;Esclavo1.c: 234:         _delay((unsigned long)((10)*(8000000/4000000.0)));
   617  02A5  3005               	movlw	5
   618  02A6  1283               	bcf	3,5	;RP0=0, select bank0
   619  02A7  1303               	bcf	3,6	;RP1=0, select bank0
   620  02A8  00D1               	movwf	??_main
   621  02A9                     u2287:	
   622  02A9  0BD1               	decfsz	??_main,f
   623  02AA  2AA9               	goto	u2287
   624  02AB  2AAC               	nop2
   625                           
   626                           ;Esclavo1.c: 235:         PORTDbits.RD0 = 0;
   627  02AC  1283               	bcf	3,5	;RP0=0, select bank0
   628  02AD  1303               	bcf	3,6	;RP1=0, select bank0
   629  02AE  1008               	bcf	8,0	;volatile
   630  02AF                     l243:	
   631                           ;Esclavo1.c: 237:         while(!PORTDbits.RD1);
   632                           
   633  02AF  1C88               	btfss	8,1	;volatile
   634  02B0  2AAF               	goto	l243
   635                           
   636                           ;Esclavo1.c: 238:         TMR1ON = 1;
   637  02B1  1410               	bsf	16,0	;volatile
   638  02B2                     l246:	
   639                           ;Esclavo1.c: 239:         while(PORTDbits.RD1);
   640                           
   641  02B2  1888               	btfsc	8,1	;volatile
   642  02B3  2AB2               	goto	l246
   643                           
   644                           ;Esclavo1.c: 240:         TMR1ON = 0;
   645  02B4  1010               	bcf	16,0	;volatile
   646                           
   647                           ;Esclavo1.c: 242:         a = (TMR1L | (TMR1H<<8));
   648  02B5  080F               	movf	15,w	;volatile
   649  02B6  00D3               	movwf	_a+1
   650  02B7  080E               	movf	14,w	;volatile
   651  02B8  00D2               	movwf	_a
   652                           
   653                           ;Esclavo1.c: 243:         a = a/58.82;
   654  02B9  0852               	movf	_a,w
   655  02BA  00A0               	movwf	___xxtofl@val
   656  02BB  0853               	movf	_a+1,w
   657  02BC  00A1               	movwf	___xxtofl@val+1
   658  02BD  01A2               	clrf	___xxtofl@val+2
   659  02BE  01A3               	clrf	___xxtofl@val+3
   660  02BF  3000               	movlw	0
   661  02C0  120A  118A  21CB  120A  118A  	fcall	___xxtofl
   662  02C5  1283               	bcf	3,5	;RP0=0, select bank0
   663  02C6  1303               	bcf	3,6	;RP1=0, select bank0
   664  02C7  0823               	movf	?___xxtofl+3,w
   665  02C8  00B5               	movwf	___fldiv@b+3
   666  02C9  0822               	movf	?___xxtofl+2,w
   667  02CA  00B4               	movwf	___fldiv@b+2
   668  02CB  0821               	movf	?___xxtofl+1,w
   669  02CC  00B3               	movwf	___fldiv@b+1
   670  02CD  0820               	movf	?___xxtofl,w
   671  02CE  00B2               	movwf	___fldiv@b
   672  02CF  3042               	movlw	66
   673  02D0  00B1               	movwf	___fldiv@a+3
   674  02D1  306B               	movlw	107
   675  02D2  00B0               	movwf	___fldiv@a+2
   676  02D3  3047               	movlw	71
   677  02D4  00AF               	movwf	___fldiv@a+1
   678  02D5  30AE               	movlw	174
   679  02D6  00AE               	movwf	___fldiv@a
   680  02D7  120A  118A  2028  120A  118A  	fcall	___fldiv
   681  02DC  1283               	bcf	3,5	;RP0=0, select bank0
   682  02DD  1303               	bcf	3,6	;RP1=0, select bank0
   683  02DE  0831               	movf	?___fldiv+3,w
   684  02DF  00CB               	movwf	___fltol@f1+3
   685  02E0  0830               	movf	?___fldiv+2,w
   686  02E1  00CA               	movwf	___fltol@f1+2
   687  02E2  082F               	movf	?___fldiv+1,w
   688  02E3  00C9               	movwf	___fltol@f1+1
   689  02E4  082E               	movf	?___fldiv,w
   690  02E5  00C8               	movwf	___fltol@f1
   691  02E6  120A  118A  2483  120A  118A  	fcall	___fltol
   692  02EB  1283               	bcf	3,5	;RP0=0, select bank0
   693  02EC  1303               	bcf	3,6	;RP1=0, select bank0
   694  02ED  0849               	movf	?___fltol+1,w
   695  02EE  00D3               	movwf	_a+1
   696  02EF  0848               	movf	?___fltol,w
   697  02F0  00D2               	movwf	_a
   698                           
   699                           ;Esclavo1.c: 244:         a = a + 1;
   700  02F1  0852               	movf	_a,w
   701  02F2  3E01               	addlw	1
   702  02F3  00D2               	movwf	_a
   703  02F4  0853               	movf	_a+1,w
   704  02F5  1803               	skipnc
   705  02F6  3E01               	addlw	1
   706  02F7  3E00               	addlw	0
   707  02F8  00D3               	movwf	_a+1
   708                           
   709                           ;Esclavo1.c: 246:         if (a<=7)
   710  02F9  3000               	movlw	0
   711  02FA  0253               	subwf	_a+1,w
   712  02FB  3008               	movlw	8
   713  02FC  1903               	skipnz
   714  02FD  0252               	subwf	_a,w
   715  02FE  1803               	skipnc
   716  02FF  2B03               	goto	l2149
   717                           
   718                           ;Esclavo1.c: 247:         {;Esclavo1.c: 249:             state = 1;
   719  0300  01D8               	clrf	_state
   720  0301  0AD8               	incf	_state,f
   721                           
   722                           ;Esclavo1.c: 250:         }
   723  0302  2B04               	goto	l2151
   724  0303                     l2149:	
   725                           
   726                           ;Esclavo1.c: 252:             state = 0;
   727  0303  01D8               	clrf	_state
   728  0304                     l2151:	
   729                           
   730                           ;Esclavo1.c: 256:         if (state == 1){
   731  0304  0358               	decf	_state,w
   732  0305  1D03               	btfss	3,2
   733  0306  2B0B               	goto	l2155
   734                           
   735                           ;Esclavo1.c: 257:             on_time = 0x2;
   736  0307  3002               	movlw	2
   737  0308  00D1               	movwf	??_main
   738  0309  0851               	movf	??_main,w
   739  030A  00DD               	movwf	_on_time
   740  030B                     l2155:	
   741                           
   742                           ;Esclavo1.c: 259:         if(state == 0){
   743  030B  0858               	movf	_state,w
   744  030C  1D03               	btfss	3,2
   745  030D  2A79               	goto	l2117
   746                           
   747                           ;Esclavo1.c: 260:             on_time = 0x3;
   748  030E  3003               	movlw	3
   749  030F  00D1               	movwf	??_main
   750  0310  0851               	movf	??_main,w
   751  0311  00DD               	movwf	_on_time
   752  0312  2A79               	goto	l2117
   753  0313                     __end_of_main:	
   754                           
   755                           	psect	text1
   756  04F0                     __ptext1:	
   757 ;; *************** function _setup *****************
   758 ;; Defined at:
   759 ;;		line 123 in file "Esclavo1.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0
   775 ;;      Temps:          0       2       0       0       0
   776 ;;      Totals:         0       2       0       0       0
   777 ;;Total ram usage:        2 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    2
   780 ;; This function calls:
   781 ;;		_I2C_Slave_Init
   782 ;;		_initOscilador
   783 ;;		_initTimero
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _setup
   791  04F0                     _setup:	
   792                           
   793                           ;Esclavo1.c: 124:     initOscilador(7);
   794                           
   795                           ;incstack = 0
   796                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   797  04F0  3007               	movlw	7
   798  04F1  120A  118A  254D  120A  118A  	fcall	_initOscilador
   799                           
   800                           ;Esclavo1.c: 125:     ANSEL = 0;
   801  04F6  1683               	bsf	3,5	;RP0=1, select bank3
   802  04F7  1703               	bsf	3,6	;RP1=1, select bank3
   803  04F8  0188               	clrf	8	;volatile
   804                           
   805                           ;Esclavo1.c: 126:     ANSELH = 0;
   806  04F9  0189               	clrf	9	;volatile
   807                           
   808                           ;Esclavo1.c: 127:     TRISD = 0b00000010;
   809  04FA  3002               	movlw	2
   810  04FB  1683               	bsf	3,5	;RP0=1, select bank1
   811  04FC  1303               	bcf	3,6	;RP1=0, select bank1
   812  04FD  0088               	movwf	8	;volatile
   813                           
   814                           ;Esclavo1.c: 128:     TRISB = 0;
   815  04FE  0186               	clrf	6	;volatile
   816                           
   817                           ;Esclavo1.c: 130:     PORTA = 0;
   818  04FF  1283               	bcf	3,5	;RP0=0, select bank0
   819  0500  1303               	bcf	3,6	;RP1=0, select bank0
   820  0501  0185               	clrf	5	;volatile
   821                           
   822                           ;Esclavo1.c: 131:     PORTD = 0;
   823  0502  0188               	clrf	8	;volatile
   824                           
   825                           ;Esclavo1.c: 132:     TRISB = 0;
   826  0503  1683               	bsf	3,5	;RP0=1, select bank1
   827  0504  1303               	bcf	3,6	;RP1=0, select bank1
   828  0505  0186               	clrf	6	;volatile
   829                           
   830                           ;Esclavo1.c: 133:     TRISAbits.TRISA0 = 1;
   831  0506  1405               	bsf	5,0	;volatile
   832                           
   833                           ;Esclavo1.c: 134:     TRISAbits.TRISA4 = 1;
   834  0507  1605               	bsf	5,4	;volatile
   835                           
   836                           ;Esclavo1.c: 135:     TRISCbits.TRISC1 = 0;
   837  0508  1087               	bcf	7,1	;volatile
   838                           
   839                           ;Esclavo1.c: 137:     PORTBbits.RB5 = 0;
   840  0509  1283               	bcf	3,5	;RP0=0, select bank0
   841  050A  1303               	bcf	3,6	;RP1=0, select bank0
   842  050B  1286               	bcf	6,5	;volatile
   843                           
   844                           ;Esclavo1.c: 138:     PORTCbits.RC1 = 0;
   845  050C  1087               	bcf	7,1	;volatile
   846                           
   847                           ;Esclavo1.c: 139:     on_time = 0x2;
   848  050D  3002               	movlw	2
   849  050E  00A8               	movwf	??_setup
   850  050F  0828               	movf	??_setup,w
   851  0510  00DD               	movwf	_on_time
   852                           
   853                           ;Esclavo1.c: 140:     duty_cycle = 0U;
   854  0511  01DC               	clrf	_duty_cycle
   855                           
   856                           ;Esclavo1.c: 143:     initTimero(0, 0, 2, pres);
   857  0512  3000               	movlw	0
   858  0513  00A0               	movwf	initTimero@tocs
   859  0514  00A1               	movwf	initTimero@tocs+1
   860  0515  3000               	movlw	0
   861  0516  00A2               	movwf	initTimero@psa
   862  0517  00A3               	movwf	initTimero@psa+1
   863  0518  3002               	movlw	2
   864  0519  00A4               	movwf	initTimero@prescaler
   865  051A  3000               	movlw	0
   866  051B  00A5               	movwf	initTimero@prescaler+1
   867  051C  3083               	movlw	131
   868  051D  00A6               	movwf	initTimero@valor
   869  051E  3000               	movlw	0
   870  051F  00A7               	movwf	initTimero@valor+1
   871  0520  120A  118A  2416  120A  118A  	fcall	_initTimero
   872                           
   873                           ;Esclavo1.c: 146:     T1CON = 0x10;
   874  0525  3010               	movlw	16
   875  0526  1283               	bcf	3,5	;RP0=0, select bank0
   876  0527  1303               	bcf	3,6	;RP1=0, select bank0
   877  0528  0090               	movwf	16	;volatile
   878                           
   879                           ;Esclavo1.c: 149:     ANSELbits.ANS0 = 1;
   880  0529  1683               	bsf	3,5	;RP0=1, select bank3
   881  052A  1703               	bsf	3,6	;RP1=1, select bank3
   882  052B  1408               	bsf	8,0	;volatile
   883                           
   884                           ;Esclavo1.c: 150:     ADCON1bits.VCFG0 = 0;
   885  052C  1683               	bsf	3,5	;RP0=1, select bank1
   886  052D  1303               	bcf	3,6	;RP1=0, select bank1
   887  052E  121F               	bcf	31,4	;volatile
   888                           
   889                           ;Esclavo1.c: 151:     ADCON1bits.VCFG1 = 0;
   890  052F  129F               	bcf	31,5	;volatile
   891                           
   892                           ;Esclavo1.c: 152:     ADCON1bits.ADFM = 0;
   893  0530  139F               	bcf	31,7	;volatile
   894                           
   895                           ;Esclavo1.c: 153:     ADCON0bits.ADCS1 = 1;
   896  0531  1283               	bcf	3,5	;RP0=0, select bank0
   897  0532  1303               	bcf	3,6	;RP1=0, select bank0
   898  0533  179F               	bsf	31,7	;volatile
   899                           
   900                           ;Esclavo1.c: 154:     ADCON0bits.ADCS0 = 0;
   901  0534  131F               	bcf	31,6	;volatile
   902                           
   903                           ;Esclavo1.c: 155:     ADCON0bits.ADON = 1;
   904  0535  141F               	bsf	31,0	;volatile
   905                           
   906                           ;Esclavo1.c: 156:     ADCON0bits.CHS3 = 0;
   907  0536  129F               	bcf	31,5	;volatile
   908                           
   909                           ;Esclavo1.c: 157:     ADCON0bits.CHS2 = 0;
   910  0537  121F               	bcf	31,4	;volatile
   911                           
   912                           ;Esclavo1.c: 158:     ADCON0bits.CHS1 = 0;
   913  0538  119F               	bcf	31,3	;volatile
   914                           
   915                           ;Esclavo1.c: 159:     ADCON0bits.CHS0 = 0;
   916  0539  111F               	bcf	31,2	;volatile
   917                           
   918                           ;Esclavo1.c: 160:     _delay((unsigned long)((2)*(8000000/4000.0)));
   919  053A  3006               	movlw	6
   920  053B  1283               	bcf	3,5	;RP0=0, select bank0
   921  053C  1303               	bcf	3,6	;RP1=0, select bank0
   922  053D  00A9               	movwf	??_setup+1
   923  053E  302F               	movlw	47
   924  053F  00A8               	movwf	??_setup
   925  0540                     u2297:	
   926  0540  0BA8               	decfsz	??_setup,f
   927  0541  2D40               	goto	u2297
   928  0542  0BA9               	decfsz	??_setup+1,f
   929  0543  2D40               	goto	u2297
   930  0544  2D45               	nop2
   931                           
   932                           ;Esclavo1.c: 163:     I2C_Slave_Init(0x02);
   933  0545  3002               	movlw	2
   934  0546  00F4               	movwf	I2C_Slave_Init@address
   935  0547  3000               	movlw	0
   936  0548  00F5               	movwf	I2C_Slave_Init@address+1
   937  0549  120A  118A  259B   	fcall	_I2C_Slave_Init
   938  054C  0008               	return
   939  054D                     __end_of_setup:	
   940                           
   941                           	psect	text2
   942  0416                     __ptext2:	
   943 ;; *************** function _initTimero *****************
   944 ;; Defined at:
   945 ;;		line 7 in file "./Timer0.h"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  tocs            2    0[BANK0 ] int 
   948 ;;  psa             2    2[BANK0 ] int 
   949 ;;  prescaler       2    4[BANK0 ] int 
   950 ;;  valor           2    6[BANK0 ] int 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       8       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0
   965 ;;      Totals:         0       8       0       0       0
   966 ;;Total ram usage:        8 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_setup
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _initTimero
   978  0416                     _initTimero:	
   979                           
   980                           ;./Timer0.h: 9:     if(tocs==1){
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _initTimero: [wreg-fsr0h+status,2+status,0]
   984  0416  1283               	bcf	3,5	;RP0=0, select bank0
   985  0417  1303               	bcf	3,6	;RP1=0, select bank0
   986  0418  0320               	decf	initTimero@tocs,w
   987  0419  0421               	iorwf	initTimero@tocs+1,w
   988  041A  1D03               	btfss	3,2
   989  041B  2C20               	goto	l130
   990                           
   991                           ;./Timer0.h: 10:         OPTION_REGbits.T0CS = 1;
   992  041C  1683               	bsf	3,5	;RP0=1, select bank1
   993  041D  1303               	bcf	3,6	;RP1=0, select bank1
   994  041E  1681               	bsf	1,5	;volatile
   995                           
   996                           ;./Timer0.h: 11:     }else{
   997  041F  2C23               	goto	l1471
   998  0420                     l130:	
   999                           
  1000                           ;./Timer0.h: 12:         OPTION_REGbits.T0CS = 0;
  1001  0420  1683               	bsf	3,5	;RP0=1, select bank1
  1002  0421  1303               	bcf	3,6	;RP1=0, select bank1
  1003  0422  1281               	bcf	1,5	;volatile
  1004  0423                     l1471:	
  1005                           
  1006                           ;./Timer0.h: 15:     if(psa == 1){
  1007  0423  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0424  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0425  0322               	decf	initTimero@psa,w
  1010  0426  0423               	iorwf	initTimero@psa+1,w
  1011  0427  1D03               	btfss	3,2
  1012  0428  2C2D               	goto	l132
  1013                           
  1014                           ;./Timer0.h: 16:         OPTION_REGbits.PSA = 1;
  1015  0429  1683               	bsf	3,5	;RP0=1, select bank1
  1016  042A  1303               	bcf	3,6	;RP1=0, select bank1
  1017  042B  1581               	bsf	1,3	;volatile
  1018                           
  1019                           ;./Timer0.h: 17:     }else{
  1020  042C  2C57               	goto	l1477
  1021  042D                     l132:	
  1022                           
  1023                           ;./Timer0.h: 18:         OPTION_REGbits.PSA = 0;
  1024  042D  1683               	bsf	3,5	;RP0=1, select bank1
  1025  042E  1303               	bcf	3,6	;RP1=0, select bank1
  1026  042F  1181               	bcf	1,3	;volatile
  1027  0430  2C57               	goto	l1477
  1028  0431                     l135:	
  1029                           ;./Timer0.h: 22:         case 0:
  1030                           
  1031                           
  1032                           ;./Timer0.h: 24:             OPTION_REGbits.PS0 = 0;
  1033  0431  1683               	bsf	3,5	;RP0=1, select bank1
  1034  0432  1303               	bcf	3,6	;RP1=0, select bank1
  1035  0433  1001               	bcf	1,0	;volatile
  1036  0434  2C38               	goto	L1
  1037  0435                     l137:	
  1038                           ;./Timer0.h: 28:         case 1:
  1039                           
  1040                           ;./Timer0.h: 27:             break;
  1041                           
  1042                           ;./Timer0.h: 26:             OPTION_REGbits.PS2 = 0;
  1043                           
  1044                           ;./Timer0.h: 25:             OPTION_REGbits.PS1 = 0;
  1045                           
  1046                           
  1047                           ;./Timer0.h: 30:             OPTION_REGbits.PS0 = 1;
  1048  0435  1683               	bsf	3,5	;RP0=1, select bank1
  1049  0436  1303               	bcf	3,6	;RP1=0, select bank1
  1050  0437  1401               	bsf	1,0	;volatile
  1051  0438                     L1:	
  1052                           
  1053                           ;./Timer0.h: 31:             OPTION_REGbits.PS1 = 0;
  1054  0438  1081               	bcf	1,1	;volatile
  1055  0439  2C42               	goto	L3
  1056  043A                     l138:	
  1057                           ;./Timer0.h: 34:         case 2:
  1058                           
  1059                           ;./Timer0.h: 33:             break;
  1060                           
  1061                           ;./Timer0.h: 32:             OPTION_REGbits.PS2 = 0;
  1062                           
  1063                           
  1064                           ;./Timer0.h: 36:             OPTION_REGbits.PS0 = 0;
  1065  043A  1683               	bsf	3,5	;RP0=1, select bank1
  1066  043B  1303               	bcf	3,6	;RP1=0, select bank1
  1067  043C  1001               	bcf	1,0	;volatile
  1068  043D  2C41               	goto	L7
  1069  043E                     l139:	
  1070                           ;./Timer0.h: 40:         case 3:
  1071                           
  1072                           ;./Timer0.h: 39:             break;
  1073                           
  1074                           ;./Timer0.h: 38:             OPTION_REGbits.PS2 = 0;
  1075                           
  1076                           ;./Timer0.h: 37:             OPTION_REGbits.PS1 = 1;
  1077                           
  1078                           
  1079                           ;./Timer0.h: 42:             OPTION_REGbits.PS0 = 1;
  1080  043E  1683               	bsf	3,5	;RP0=1, select bank1
  1081  043F  1303               	bcf	3,6	;RP1=0, select bank1
  1082  0440  1401               	bsf	1,0	;volatile
  1083  0441                     L7:	
  1084                           
  1085                           ;./Timer0.h: 43:             OPTION_REGbits.PS1 = 1;
  1086  0441  1481               	bsf	1,1	;volatile
  1087  0442                     L3:	
  1088                           
  1089                           ;./Timer0.h: 44:             OPTION_REGbits.PS2 = 0;
  1090  0442  1101               	bcf	1,2	;volatile
  1091                           
  1092                           ;./Timer0.h: 45:             break;
  1093  0443  2C78               	goto	l136
  1094  0444                     l140:	
  1095                           ;./Timer0.h: 46:         case 4:
  1096                           
  1097                           
  1098                           ;./Timer0.h: 48:             OPTION_REGbits.PS0 = 0;
  1099  0444  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0445  1303               	bcf	3,6	;RP1=0, select bank1
  1101  0446  1001               	bcf	1,0	;volatile
  1102  0447  2C4B               	goto	L4
  1103  0448                     l141:	
  1104                           ;./Timer0.h: 52:         case 5:
  1105                           
  1106                           ;./Timer0.h: 51:             break;
  1107                           
  1108                           ;./Timer0.h: 50:             OPTION_REGbits.PS2 = 1;
  1109                           
  1110                           ;./Timer0.h: 49:             OPTION_REGbits.PS1 = 0;
  1111                           
  1112                           
  1113                           ;./Timer0.h: 54:             OPTION_REGbits.PS0 = 1;
  1114  0448  1683               	bsf	3,5	;RP0=1, select bank1
  1115  0449  1303               	bcf	3,6	;RP1=0, select bank1
  1116  044A  1401               	bsf	1,0	;volatile
  1117  044B                     L4:	
  1118                           
  1119                           ;./Timer0.h: 55:             OPTION_REGbits.PS1 = 0;
  1120  044B  1081               	bcf	1,1	;volatile
  1121  044C  2C55               	goto	L6
  1122  044D                     l142:	
  1123                           ;./Timer0.h: 58:         case 6:
  1124                           
  1125                           ;./Timer0.h: 57:             break;
  1126                           
  1127                           ;./Timer0.h: 56:             OPTION_REGbits.PS2 = 1;
  1128                           
  1129                           
  1130                           ;./Timer0.h: 60:             OPTION_REGbits.PS0 = 0;
  1131  044D  1683               	bsf	3,5	;RP0=1, select bank1
  1132  044E  1303               	bcf	3,6	;RP1=0, select bank1
  1133  044F  1001               	bcf	1,0	;volatile
  1134  0450  2C54               	goto	L8
  1135  0451                     l143:	
  1136                           ;./Timer0.h: 64:         case 7:
  1137                           
  1138                           ;./Timer0.h: 63:             break;
  1139                           
  1140                           ;./Timer0.h: 62:             OPTION_REGbits.PS2 = 1;
  1141                           
  1142                           ;./Timer0.h: 61:             OPTION_REGbits.PS1 = 1;
  1143                           
  1144                           
  1145                           ;./Timer0.h: 66:             OPTION_REGbits.PS0 = 1;
  1146  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1147  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1148  0453  1401               	bsf	1,0	;volatile
  1149  0454                     L8:	
  1150                           
  1151                           ;./Timer0.h: 67:             OPTION_REGbits.PS1 = 1;
  1152  0454  1481               	bsf	1,1	;volatile
  1153  0455                     L6:	
  1154                           
  1155                           ;./Timer0.h: 68:             OPTION_REGbits.PS2 = 1;
  1156  0455  1501               	bsf	1,2	;volatile
  1157                           
  1158                           ;./Timer0.h: 69:             break;
  1159  0456  2C78               	goto	l136
  1160  0457                     l1477:	
  1161                           
  1162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1163                           ; Switch size 1, requested type "simple"
  1164                           ; Number of cases is 1, Range of values is 0 to 0
  1165                           ; switch strategies available:
  1166                           ; Name         Instructions Cycles
  1167                           ; simple_byte            4     3 (average)
  1168                           ; direct_byte           11     8 (fixed)
  1169                           ; jumptable            260     6 (fixed)
  1170                           ;	Chosen strategy is simple_byte
  1171  0457  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0458  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0459  0825               	movf	initTimero@prescaler+1,w
  1174  045A  3A00               	xorlw	0	; case 0
  1175  045B  1903               	skipnz
  1176  045C  2C5E               	goto	l2209
  1177  045D  2C78               	goto	l136
  1178  045E                     l2209:	
  1179                           
  1180                           ; Switch size 1, requested type "simple"
  1181                           ; Number of cases is 8, Range of values is 0 to 7
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte           25    13 (average)
  1185                           ; direct_byte           32     8 (fixed)
  1186                           ; jumptable            260     6 (fixed)
  1187                           ;	Chosen strategy is simple_byte
  1188  045E  0824               	movf	initTimero@prescaler,w
  1189  045F  3A00               	xorlw	0	; case 0
  1190  0460  1903               	skipnz
  1191  0461  2C31               	goto	l135
  1192  0462  3A01               	xorlw	1	; case 1
  1193  0463  1903               	skipnz
  1194  0464  2C35               	goto	l137
  1195  0465  3A03               	xorlw	3	; case 2
  1196  0466  1903               	skipnz
  1197  0467  2C3A               	goto	l138
  1198  0468  3A01               	xorlw	1	; case 3
  1199  0469  1903               	skipnz
  1200  046A  2C3E               	goto	l139
  1201  046B  3A07               	xorlw	7	; case 4
  1202  046C  1903               	skipnz
  1203  046D  2C44               	goto	l140
  1204  046E  3A01               	xorlw	1	; case 5
  1205  046F  1903               	skipnz
  1206  0470  2C48               	goto	l141
  1207  0471  3A03               	xorlw	3	; case 6
  1208  0472  1903               	skipnz
  1209  0473  2C4D               	goto	l142
  1210  0474  3A01               	xorlw	1	; case 7
  1211  0475  1903               	skipnz
  1212  0476  2C51               	goto	l143
  1213  0477  2C78               	goto	l136
  1214  0478                     l136:	
  1215                           
  1216                           ;./Timer0.h: 72:     INTCONbits.GIE = 1;
  1217  0478  178B               	bsf	11,7	;volatile
  1218                           
  1219                           ;./Timer0.h: 73:     OPTION_REGbits.nRBPU = 1;
  1220  0479  1683               	bsf	3,5	;RP0=1, select bank1
  1221  047A  1303               	bcf	3,6	;RP1=0, select bank1
  1222  047B  1781               	bsf	1,7	;volatile
  1223                           
  1224                           ;./Timer0.h: 74:     INTCONbits.T0IE = 1;
  1225  047C  168B               	bsf	11,5	;volatile
  1226                           
  1227                           ;./Timer0.h: 75:     INTCONbits.T0IF = 0;
  1228  047D  110B               	bcf	11,2	;volatile
  1229                           
  1230                           ;./Timer0.h: 76:     TMR0 = valor;
  1231  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1232  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0480  0826               	movf	initTimero@valor,w
  1234  0481  0081               	movwf	1	;volatile
  1235  0482  0008               	return
  1236  0483                     __end_of_initTimero:	
  1237                           
  1238                           	psect	text3
  1239  054D                     __ptext3:	
  1240 ;; *************** function _initOscilador *****************
  1241 ;; Defined at:
  1242 ;;		line 15 in file "./Oscilador.h"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  frec            1    wreg     unsigned char 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  frec            1    0[BANK0 ] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         0       0       0       0       0
  1257 ;;      Locals:         0       1       0       0       0
  1258 ;;      Temps:          2       0       0       0       0
  1259 ;;      Totals:         2       1       0       0       0
  1260 ;;Total ram usage:        3 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_setup
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _initOscilador
  1272  054D                     _initOscilador:	
  1273                           
  1274                           ;incstack = 0
  1275                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
  1276                           ;initOscilador@frec stored from wreg
  1277  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1278  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1279  054F  00A0               	movwf	initOscilador@frec
  1280                           
  1281                           ;./Oscilador.h: 17:             break;
  1282  0550  2D77               	goto	l1999
  1283  0551                     l117:	
  1284                           ;./Oscilador.h: 18:         case 2:
  1285                           
  1286                           
  1287                           ;./Oscilador.h: 20:             OSCCONbits.IRCF0 = 0;
  1288  0551  1683               	bsf	3,5	;RP0=1, select bank1
  1289  0552  1303               	bcf	3,6	;RP1=0, select bank1
  1290  0553  120F               	bcf	15,4	;volatile
  1291  0554  2D58               	goto	L9
  1292  0555                     l119:	
  1293                           ;./Oscilador.h: 24:         case 3:
  1294                           
  1295                           ;./Oscilador.h: 23:             break;
  1296                           
  1297                           ;./Oscilador.h: 22:             OSCCONbits.IRCF2 = 0;
  1298                           
  1299                           ;./Oscilador.h: 21:             OSCCONbits.IRCF1 = 1;
  1300                           
  1301                           
  1302                           ;./Oscilador.h: 26:             OSCCONbits.IRCF0 = 1;
  1303  0555  1683               	bsf	3,5	;RP0=1, select bank1
  1304  0556  1303               	bcf	3,6	;RP1=0, select bank1
  1305  0557  160F               	bsf	15,4	;volatile
  1306  0558                     L9:	
  1307                           
  1308                           ;./Oscilador.h: 27:             OSCCONbits.IRCF1 = 1;
  1309  0558  128F               	bcf	15,5	;volatile
  1310  0559  2D62               	goto	L11
  1311  055A                     l120:	
  1312                           ;./Oscilador.h: 30:         case 4:
  1313                           
  1314                           ;./Oscilador.h: 29:             break;
  1315                           
  1316                           ;./Oscilador.h: 28:             OSCCONbits.IRCF2 = 0;
  1317                           
  1318                           
  1319                           ;./Oscilador.h: 32:             OSCCONbits.IRCF0 = 0;
  1320  055A  1683               	bsf	3,5	;RP0=1, select bank1
  1321  055B  1303               	bcf	3,6	;RP1=0, select bank1
  1322  055C  120F               	bcf	15,4	;volatile
  1323  055D  2D61               	goto	L16
  1324  055E                     l121:	
  1325                           ;./Oscilador.h: 36:         case 5:
  1326                           
  1327                           ;./Oscilador.h: 35:             break;
  1328                           
  1329                           ;./Oscilador.h: 34:             OSCCONbits.IRCF2 = 1;
  1330                           
  1331                           ;./Oscilador.h: 33:             OSCCONbits.IRCF1 = 0;
  1332                           
  1333                           
  1334                           ;./Oscilador.h: 38:             OSCCONbits.IRCF0 = 1;
  1335  055E  1683               	bsf	3,5	;RP0=1, select bank1
  1336  055F  1303               	bcf	3,6	;RP1=0, select bank1
  1337  0560  160F               	bsf	15,4	;volatile
  1338  0561                     L16:	
  1339                           
  1340                           ;./Oscilador.h: 39:             OSCCONbits.IRCF1 = 0;
  1341  0561  168F               	bsf	15,5	;volatile
  1342  0562                     L11:	
  1343                           
  1344                           ;./Oscilador.h: 40:             OSCCONbits.IRCF2 = 1;
  1345  0562  130F               	bcf	15,6	;volatile
  1346                           
  1347                           ;./Oscilador.h: 41:             break;
  1348  0563  2D99               	goto	l118
  1349  0564                     l122:	
  1350                           ;./Oscilador.h: 42:         case 6:
  1351                           
  1352                           
  1353                           ;./Oscilador.h: 44:             OSCCONbits.IRCF0 = 0;
  1354  0564  1683               	bsf	3,5	;RP0=1, select bank1
  1355  0565  1303               	bcf	3,6	;RP1=0, select bank1
  1356  0566  120F               	bcf	15,4	;volatile
  1357  0567  2D6B               	goto	L12
  1358  0568                     l123:	
  1359                           ;./Oscilador.h: 48:         case 7:
  1360                           
  1361                           ;./Oscilador.h: 47:             break;
  1362                           
  1363                           ;./Oscilador.h: 46:             OSCCONbits.IRCF2 = 1;
  1364                           
  1365                           ;./Oscilador.h: 45:             OSCCONbits.IRCF1 = 1;
  1366                           
  1367                           
  1368                           ;./Oscilador.h: 50:             OSCCONbits.IRCF0 = 1;
  1369  0568  1683               	bsf	3,5	;RP0=1, select bank1
  1370  0569  1303               	bcf	3,6	;RP1=0, select bank1
  1371  056A  160F               	bsf	15,4	;volatile
  1372  056B                     L12:	
  1373                           
  1374                           ;./Oscilador.h: 51:             OSCCONbits.IRCF1 = 1;
  1375  056B  128F               	bcf	15,5	;volatile
  1376  056C  2D75               	goto	L15
  1377  056D                     l124:	
  1378                           ;./Oscilador.h: 54:         default:
  1379                           
  1380                           ;./Oscilador.h: 53:             break;
  1381                           
  1382                           ;./Oscilador.h: 52:             OSCCONbits.IRCF2 = 1;
  1383                           
  1384                           
  1385                           ;./Oscilador.h: 56:             OSCCONbits.IRCF0 = 1;
  1386  056D  1683               	bsf	3,5	;RP0=1, select bank1
  1387  056E  1303               	bcf	3,6	;RP1=0, select bank1
  1388  056F  120F               	bcf	15,4	;volatile
  1389  0570  2D74               	goto	L17
  1390  0571                     l125:	
  1391                           ;./Oscilador.h: 60: 
  1392                           
  1393                           ;./Oscilador.h: 59:             break;
  1394                           
  1395                           ;./Oscilador.h: 58:             OSCCONbits.IRCF2 = 1;
  1396                           
  1397                           ;./Oscilador.h: 57:             OSCCONbits.IRCF1 = 1;
  1398                           
  1399  0571                     l126:	
  1400                           ;./Oscilador.h: 63: }
  1401                           
  1402                           ;./Oscilador.h: 62:     OSCCONbits.SCS = 1;
  1403                           
  1404  0571  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0572  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0573  160F               	bsf	15,4	;volatile
  1407  0574                     L17:	
  1408  0574  168F               	bsf	15,5	;volatile
  1409  0575                     L15:	
  1410  0575  170F               	bsf	15,6	;volatile
  1411  0576  2D99               	goto	l118
  1412  0577                     l1999:	
  1413  0577  0820               	movf	initOscilador@frec,w
  1414  0578  00F4               	movwf	??_initOscilador
  1415  0579  01F5               	clrf	??_initOscilador+1
  1416                           
  1417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1418                           ; Switch size 1, requested type "simple"
  1419                           ; Number of cases is 1, Range of values is 0 to 0
  1420                           ; switch strategies available:
  1421                           ; Name         Instructions Cycles
  1422                           ; simple_byte            4     3 (average)
  1423                           ; direct_byte           11     8 (fixed)
  1424                           ; jumptable            260     6 (fixed)
  1425                           ;	Chosen strategy is simple_byte
  1426  057A  0875               	movf	??_initOscilador+1,w
  1427  057B  3A00               	xorlw	0	; case 0
  1428  057C  1903               	skipnz
  1429  057D  2D7F               	goto	l2211
  1430  057E  2D71               	goto	l126
  1431  057F                     l2211:	
  1432                           
  1433                           ; Switch size 1, requested type "simple"
  1434                           ; Number of cases is 8, Range of values is 0 to 7
  1435                           ; switch strategies available:
  1436                           ; Name         Instructions Cycles
  1437                           ; simple_byte           25    13 (average)
  1438                           ; direct_byte           32     8 (fixed)
  1439                           ; jumptable            260     6 (fixed)
  1440                           ;	Chosen strategy is simple_byte
  1441  057F  0874               	movf	??_initOscilador,w
  1442  0580  3A00               	xorlw	0	; case 0
  1443  0581  1903               	skipnz
  1444  0582  2D51               	goto	l117
  1445  0583  3A01               	xorlw	1	; case 1
  1446  0584  1903               	skipnz
  1447  0585  2D55               	goto	l119
  1448  0586  3A03               	xorlw	3	; case 2
  1449  0587  1903               	skipnz
  1450  0588  2D5A               	goto	l120
  1451  0589  3A01               	xorlw	1	; case 3
  1452  058A  1903               	skipnz
  1453  058B  2D5E               	goto	l121
  1454  058C  3A07               	xorlw	7	; case 4
  1455  058D  1903               	skipnz
  1456  058E  2D64               	goto	l122
  1457  058F  3A01               	xorlw	1	; case 5
  1458  0590  1903               	skipnz
  1459  0591  2D68               	goto	l123
  1460  0592  3A03               	xorlw	3	; case 6
  1461  0593  1903               	skipnz
  1462  0594  2D6D               	goto	l124
  1463  0595  3A01               	xorlw	1	; case 7
  1464  0596  1903               	skipnz
  1465  0597  2D71               	goto	l125
  1466  0598  2D71               	goto	l126
  1467  0599                     l118:	
  1468  0599  140F               	bsf	15,0	;volatile
  1469  059A  0008               	return
  1470  059B                     __end_of_initOscilador:	
  1471                           
  1472                           	psect	text4
  1473  059B                     __ptext4:	
  1474 ;; *************** function _I2C_Slave_Init *****************
  1475 ;; Defined at:
  1476 ;;		line 93 in file "./I2C.h"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  address         2    4[COMMON] short 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         2       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0
  1493 ;;      Totals:         2       0       0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    1
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_setup
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function _I2C_Slave_Init
  1506  059B                     _I2C_Slave_Init:	
  1507                           
  1508                           ;./I2C.h: 93: void I2C_Slave_Init(short address);./I2C.h: 94: {;./I2C.h: 95:     SSPADD 
      +                          = address;
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in _I2C_Slave_Init: [wreg]
  1512  059B  0874               	movf	I2C_Slave_Init@address,w
  1513  059C  1683               	bsf	3,5	;RP0=1, select bank1
  1514  059D  1303               	bcf	3,6	;RP1=0, select bank1
  1515  059E  0093               	movwf	19	;volatile
  1516                           
  1517                           ;./I2C.h: 96:     SSPCON = 0x36;
  1518  059F  3036               	movlw	54
  1519  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1520  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1521  05A2  0094               	movwf	20	;volatile
  1522                           
  1523                           ;./I2C.h: 97:     SSPSTAT = 0x80;
  1524  05A3  3080               	movlw	128
  1525  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  1526  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  1527  05A6  0094               	movwf	20	;volatile
  1528                           
  1529                           ;./I2C.h: 98:     SSPCON2 = 0x01;
  1530  05A7  3001               	movlw	1
  1531  05A8  0091               	movwf	17	;volatile
  1532                           
  1533                           ;./I2C.h: 99:     TRISC3 = 1;
  1534  05A9  1587               	bsf	7,3	;volatile
  1535                           
  1536                           ;./I2C.h: 100:     TRISC4 = 1;
  1537  05AA  1607               	bsf	7,4	;volatile
  1538                           
  1539                           ;./I2C.h: 101:     GIE = 1;
  1540  05AB  178B               	bsf	11,7	;volatile
  1541                           
  1542                           ;./I2C.h: 102:     PEIE = 1;
  1543  05AC  170B               	bsf	11,6	;volatile
  1544                           
  1545                           ;./I2C.h: 103:     SSPIF = 0;
  1546  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1547  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1548  05AF  118C               	bcf	12,3	;volatile
  1549                           
  1550                           ;./I2C.h: 104:     SSPIE = 1;
  1551  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  1552  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  1553  05B2  158C               	bsf	12,3	;volatile
  1554  05B3  0008               	return
  1555  05B4                     __end_of_I2C_Slave_Init:	
  1556                           
  1557                           	psect	text5
  1558  05B4                     __ptext5:	
  1559 ;; *************** function _read_ADC *****************
  1560 ;; Defined at:
  1561 ;;		line 167 in file "Esclavo1.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      unsigned char 
  1568 ;; Registers used:
  1569 ;;		wreg
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0
  1578 ;;      Totals:         0       0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function _read_ADC
  1591  05B4                     _read_ADC:	
  1592                           
  1593                           ;Esclavo1.c: 168:   ADCON0bits.GO_nDONE = 1;
  1594                           
  1595                           ;incstack = 0
  1596                           ; Regs used in _read_ADC: [wreg]
  1597  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1598  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1599  05B6  149F               	bsf	31,1	;volatile
  1600  05B7                     l208:	
  1601                           ;Esclavo1.c: 169:   while(ADCON0bits.GO_nDONE == 1);
  1602                           
  1603  05B7  189F               	btfsc	31,1	;volatile
  1604  05B8  2DB7               	goto	l208
  1605                           
  1606                           ;Esclavo1.c: 170:   return (ADRESH);
  1607  05B9  081E               	movf	30,w	;volatile
  1608  05BA  0008               	return
  1609  05BB                     __end_of_read_ADC:	
  1610                           
  1611                           	psect	text6
  1612  01CB                     __ptext6:	
  1613 ;; *************** function ___xxtofl *****************
  1614 ;; Defined at:
  1615 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  sign            1    wreg     unsigned char 
  1618 ;;  val             4    0[BANK0 ] long 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  sign            1    8[BANK0 ] unsigned char 
  1621 ;;  arg             4   10[BANK0 ] unsigned long 
  1622 ;;  exp             1    9[BANK0 ] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  4    0[BANK0 ] unsigned char 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       4       0       0       0
  1633 ;;      Locals:         0       6       0       0       0
  1634 ;;      Temps:          0       4       0       0       0
  1635 ;;      Totals:         0      14       0       0       0
  1636 ;;Total ram usage:       14 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function ___xxtofl
  1648  01CB                     ___xxtofl:	
  1649                           
  1650                           ;incstack = 0
  1651                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1652                           ;___xxtofl@sign stored from wreg
  1653  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1654  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1655  01CD  00A8               	movwf	___xxtofl@sign
  1656  01CE  0828               	movf	___xxtofl@sign,w
  1657  01CF  1D03               	btfss	3,2
  1658  01D0  1FA3               	btfss	___xxtofl@val+3,7
  1659  01D1  29E2               	goto	l2073
  1660  01D2  0920               	comf	___xxtofl@val,w
  1661  01D3  00AA               	movwf	___xxtofl@arg
  1662  01D4  0921               	comf	___xxtofl@val+1,w
  1663  01D5  00AB               	movwf	___xxtofl@arg+1
  1664  01D6  0922               	comf	___xxtofl@val+2,w
  1665  01D7  00AC               	movwf	___xxtofl@arg+2
  1666  01D8  0923               	comf	___xxtofl@val+3,w
  1667  01D9  00AD               	movwf	___xxtofl@arg+3
  1668  01DA  0AAA               	incf	___xxtofl@arg,f
  1669  01DB  1903               	skipnz
  1670  01DC  0AAB               	incf	___xxtofl@arg+1,f
  1671  01DD  1903               	skipnz
  1672  01DE  0AAC               	incf	___xxtofl@arg+2,f
  1673  01DF  1903               	skipnz
  1674  01E0  0AAD               	incf	___xxtofl@arg+3,f
  1675  01E1  29EA               	goto	l768
  1676  01E2                     l2073:	
  1677  01E2  0823               	movf	___xxtofl@val+3,w
  1678  01E3  00AD               	movwf	___xxtofl@arg+3
  1679  01E4  0822               	movf	___xxtofl@val+2,w
  1680  01E5  00AC               	movwf	___xxtofl@arg+2
  1681  01E6  0821               	movf	___xxtofl@val+1,w
  1682  01E7  00AB               	movwf	___xxtofl@arg+1
  1683  01E8  0820               	movf	___xxtofl@val,w
  1684  01E9  00AA               	movwf	___xxtofl@arg
  1685  01EA                     l768:	
  1686  01EA  0823               	movf	___xxtofl@val+3,w
  1687  01EB  0422               	iorwf	___xxtofl@val+2,w
  1688  01EC  0421               	iorwf	___xxtofl@val+1,w
  1689  01ED  0420               	iorwf	___xxtofl@val,w
  1690  01EE  1D03               	skipz
  1691  01EF  29F9               	goto	l2079
  1692  01F0  3000               	movlw	0
  1693  01F1  00A3               	movwf	?___xxtofl+3
  1694  01F2  3000               	movlw	0
  1695  01F3  00A2               	movwf	?___xxtofl+2
  1696  01F4  3000               	movlw	0
  1697  01F5  00A1               	movwf	?___xxtofl+1
  1698  01F6  3000               	movlw	0
  1699  01F7  00A0               	movwf	?___xxtofl
  1700  01F8  0008               	return
  1701  01F9                     l2079:	
  1702  01F9  3096               	movlw	150
  1703  01FA  00A4               	movwf	??___xxtofl
  1704  01FB  0824               	movf	??___xxtofl,w
  1705  01FC  00A9               	movwf	___xxtofl@exp
  1706  01FD                     l2083:	
  1707  01FD  30FE               	movlw	254
  1708  01FE  052D               	andwf	___xxtofl@arg+3,w
  1709  01FF  1903               	btfsc	3,2
  1710  0200  2A2A               	goto	l774
  1711  0201  3001               	movlw	1
  1712  0202  00A4               	movwf	??___xxtofl
  1713  0203  0824               	movf	??___xxtofl,w
  1714  0204  07A9               	addwf	___xxtofl@exp,f
  1715  0205  3001               	movlw	1
  1716  0206                     u2105:	
  1717  0206  1003               	clrc
  1718  0207  0CAD               	rrf	___xxtofl@arg+3,f
  1719  0208  0CAC               	rrf	___xxtofl@arg+2,f
  1720  0209  0CAB               	rrf	___xxtofl@arg+1,f
  1721  020A  0CAA               	rrf	___xxtofl@arg,f
  1722  020B  3EFF               	addlw	-1
  1723  020C  1D03               	skipz
  1724  020D  2A06               	goto	u2105
  1725  020E  29FD               	goto	l2083
  1726  020F                     l2085:	
  1727  020F  3001               	movlw	1
  1728  0210  00A4               	movwf	??___xxtofl
  1729  0211  0824               	movf	??___xxtofl,w
  1730  0212  07A9               	addwf	___xxtofl@exp,f
  1731  0213  3001               	movlw	1
  1732  0214  07AA               	addwf	___xxtofl@arg,f
  1733  0215  3000               	movlw	0
  1734  0216  1803               	skipnc
  1735  0217  3001               	movlw	1
  1736  0218  07AB               	addwf	___xxtofl@arg+1,f
  1737  0219  3000               	movlw	0
  1738  021A  1803               	skipnc
  1739  021B  3001               	movlw	1
  1740  021C  07AC               	addwf	___xxtofl@arg+2,f
  1741  021D  3000               	movlw	0
  1742  021E  1803               	skipnc
  1743  021F  3001               	movlw	1
  1744  0220  07AD               	addwf	___xxtofl@arg+3,f
  1745  0221  3001               	movlw	1
  1746  0222                     u2125:	
  1747  0222  1003               	clrc
  1748  0223  0CAD               	rrf	___xxtofl@arg+3,f
  1749  0224  0CAC               	rrf	___xxtofl@arg+2,f
  1750  0225  0CAB               	rrf	___xxtofl@arg+1,f
  1751  0226  0CAA               	rrf	___xxtofl@arg,f
  1752  0227  3EFF               	addlw	-1
  1753  0228  1D03               	skipz
  1754  0229  2A22               	goto	u2125
  1755  022A                     l774:	
  1756  022A  30FF               	movlw	255
  1757  022B  052D               	andwf	___xxtofl@arg+3,w
  1758  022C  1903               	btfsc	3,2
  1759  022D  2A3E               	goto	l2093
  1760  022E  2A0F               	goto	l2085
  1761  022F                     l2095:	
  1762  022F  3002               	movlw	2
  1763  0230  0229               	subwf	___xxtofl@exp,w
  1764  0231  1C03               	btfss	3,0
  1765  0232  2A40               	goto	l781
  1766  0233  3001               	movlw	1
  1767  0234  02A9               	subwf	___xxtofl@exp,f
  1768  0235  3001               	movlw	1
  1769  0236  00A4               	movwf	??___xxtofl
  1770  0237                     u2145:	
  1771  0237  1003               	clrc
  1772  0238  0DAA               	rlf	___xxtofl@arg,f
  1773  0239  0DAB               	rlf	___xxtofl@arg+1,f
  1774  023A  0DAC               	rlf	___xxtofl@arg+2,f
  1775  023B  0DAD               	rlf	___xxtofl@arg+3,f
  1776  023C  0BA4               	decfsz	??___xxtofl,f
  1777  023D  2A37               	goto	u2145
  1778  023E                     l2093:	
  1779  023E  1FAC               	btfss	___xxtofl@arg+2,7
  1780  023F  2A2F               	goto	l2095
  1781  0240                     l781:	
  1782  0240  1829               	btfsc	___xxtofl@exp,0
  1783  0241  2A4A               	goto	l782
  1784  0242  30FF               	movlw	255
  1785  0243  05AA               	andwf	___xxtofl@arg,f
  1786  0244  30FF               	movlw	255
  1787  0245  05AB               	andwf	___xxtofl@arg+1,f
  1788  0246  307F               	movlw	127
  1789  0247  05AC               	andwf	___xxtofl@arg+2,f
  1790  0248  30FF               	movlw	255
  1791  0249  05AD               	andwf	___xxtofl@arg+3,f
  1792  024A                     l782:	
  1793  024A  1003               	clrc
  1794  024B  0CA9               	rrf	___xxtofl@exp,f
  1795  024C  0829               	movf	___xxtofl@exp,w
  1796  024D  00A4               	movwf	??___xxtofl
  1797  024E  01A5               	clrf	??___xxtofl+1
  1798  024F  01A6               	clrf	??___xxtofl+2
  1799  0250  01A7               	clrf	??___xxtofl+3
  1800  0251  3018               	movlw	24
  1801  0252                     u2185:	
  1802  0252  1003               	clrc
  1803  0253  0DA4               	rlf	??___xxtofl,f
  1804  0254  0DA5               	rlf	??___xxtofl+1,f
  1805  0255  0DA6               	rlf	??___xxtofl+2,f
  1806  0256  0DA7               	rlf	??___xxtofl+3,f
  1807  0257  3EFF               	addlw	-1
  1808  0258  1D03               	skipz
  1809  0259  2A52               	goto	u2185
  1810  025A  0824               	movf	??___xxtofl,w
  1811  025B  04AA               	iorwf	___xxtofl@arg,f
  1812  025C  0825               	movf	??___xxtofl+1,w
  1813  025D  04AB               	iorwf	___xxtofl@arg+1,f
  1814  025E  0826               	movf	??___xxtofl+2,w
  1815  025F  04AC               	iorwf	___xxtofl@arg+2,f
  1816  0260  0827               	movf	??___xxtofl+3,w
  1817  0261  04AD               	iorwf	___xxtofl@arg+3,f
  1818  0262  0828               	movf	___xxtofl@sign,w
  1819  0263  1D03               	btfss	3,2
  1820  0264  1FA3               	btfss	___xxtofl@val+3,7
  1821  0265  2A67               	goto	l2107
  1822  0266  17AD               	bsf	___xxtofl@arg+3,7
  1823  0267                     l2107:	
  1824  0267  082D               	movf	___xxtofl@arg+3,w
  1825  0268  00A3               	movwf	?___xxtofl+3
  1826  0269  082C               	movf	___xxtofl@arg+2,w
  1827  026A  00A2               	movwf	?___xxtofl+2
  1828  026B  082B               	movf	___xxtofl@arg+1,w
  1829  026C  00A1               	movwf	?___xxtofl+1
  1830  026D  082A               	movf	___xxtofl@arg,w
  1831  026E  00A0               	movwf	?___xxtofl
  1832  026F  0008               	return
  1833  0270                     __end_of___xxtofl:	
  1834                           
  1835                           	psect	text7
  1836  0483                     __ptext7:	
  1837 ;; *************** function ___fltol *****************
  1838 ;; Defined at:
  1839 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  f1              4   40[BANK0 ] unsigned char 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  exp1            1    5[COMMON] unsigned char 
  1844 ;;  sign1           1    4[COMMON] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  4   40[BANK0 ] long 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       4       0       0       0
  1855 ;;      Locals:         2       0       0       0       0
  1856 ;;      Temps:          0       5       0       0       0
  1857 ;;      Totals:         2       9       0       0       0
  1858 ;;Total ram usage:       11 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    1
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function ___fltol
  1870  0483                     ___fltol:	
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1874  0483  1003               	clrc
  1875  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0486  0D4A               	rlf	___fltol@f1+2,w
  1878  0487  0D4B               	rlf	___fltol@f1+3,w
  1879  0488  00CC               	movwf	??___fltol
  1880  0489  084C               	movf	??___fltol,w
  1881  048A  00F5               	movwf	___fltol@exp1
  1882  048B  0875               	movf	___fltol@exp1,w
  1883  048C  1D03               	btfss	3,2
  1884  048D  2C97               	goto	l1623
  1885  048E                     l1619:	
  1886  048E  3000               	movlw	0
  1887  048F  00CB               	movwf	?___fltol+3
  1888  0490  3000               	movlw	0
  1889  0491  00CA               	movwf	?___fltol+2
  1890  0492  3000               	movlw	0
  1891  0493  00C9               	movwf	?___fltol+1
  1892  0494  3000               	movlw	0
  1893  0495  00C8               	movwf	?___fltol
  1894  0496  0008               	return
  1895  0497                     l1623:	
  1896  0497  0848               	movf	___fltol@f1,w
  1897  0498  00CC               	movwf	??___fltol
  1898  0499  0849               	movf	___fltol@f1+1,w
  1899  049A  00CD               	movwf	??___fltol+1
  1900  049B  084A               	movf	___fltol@f1+2,w
  1901  049C  00CE               	movwf	??___fltol+2
  1902  049D  084B               	movf	___fltol@f1+3,w
  1903  049E  00CF               	movwf	??___fltol+3
  1904  049F  301F               	movlw	31
  1905  04A0                     u1315:	
  1906  04A0  1003               	clrc
  1907  04A1  0CCF               	rrf	??___fltol+3,f
  1908  04A2  0CCE               	rrf	??___fltol+2,f
  1909  04A3  0CCD               	rrf	??___fltol+1,f
  1910  04A4  0CCC               	rrf	??___fltol,f
  1911  04A5  3EFF               	addlw	-1
  1912  04A6  1D03               	skipz
  1913  04A7  2CA0               	goto	u1315
  1914  04A8  084C               	movf	??___fltol,w
  1915  04A9  00D0               	movwf	??___fltol+4
  1916  04AA  0850               	movf	??___fltol+4,w
  1917  04AB  00F4               	movwf	___fltol@sign1
  1918  04AC  17CA               	bsf	___fltol@f1+2,7
  1919  04AD  30FF               	movlw	255
  1920  04AE  05C8               	andwf	___fltol@f1,f
  1921  04AF  30FF               	movlw	255
  1922  04B0  05C9               	andwf	___fltol@f1+1,f
  1923  04B1  30FF               	movlw	255
  1924  04B2  05CA               	andwf	___fltol@f1+2,f
  1925  04B3  3000               	movlw	0
  1926  04B4  05CB               	andwf	___fltol@f1+3,f
  1927  04B5  3096               	movlw	150
  1928  04B6  02F5               	subwf	___fltol@exp1,f
  1929  04B7  1FF5               	btfss	___fltol@exp1,7
  1930  04B8  2CCE               	goto	l1641
  1931  04B9  0875               	movf	___fltol@exp1,w
  1932  04BA  3A80               	xorlw	128
  1933  04BB  3E97               	addlw	151
  1934  04BC  1C03               	btfss	3,0
  1935  04BD  2C8E               	goto	l1619
  1936  04BE                     l1639:	
  1937  04BE  3001               	movlw	1
  1938  04BF                     u1345:	
  1939  04BF  1003               	clrc
  1940  04C0  0CCB               	rrf	___fltol@f1+3,f
  1941  04C1  0CCA               	rrf	___fltol@f1+2,f
  1942  04C2  0CC9               	rrf	___fltol@f1+1,f
  1943  04C3  0CC8               	rrf	___fltol@f1,f
  1944  04C4  3EFF               	addlw	-1
  1945  04C5  1D03               	skipz
  1946  04C6  2CBF               	goto	u1345
  1947  04C7  3001               	movlw	1
  1948  04C8  00CC               	movwf	??___fltol
  1949  04C9  084C               	movf	??___fltol,w
  1950  04CA  07F5               	addwf	___fltol@exp1,f
  1951  04CB  1903               	btfsc	3,2
  1952  04CC  2CE1               	goto	l1649
  1953  04CD  2CBE               	goto	l1639
  1954  04CE                     l1641:	
  1955  04CE  3020               	movlw	32
  1956  04CF  0275               	subwf	___fltol@exp1,w
  1957  04D0  1803               	btfsc	3,0
  1958  04D1  2C8E               	goto	l1619
  1959  04D2                     l534:	
  1960  04D2  0875               	movf	___fltol@exp1,w
  1961  04D3  1903               	btfsc	3,2
  1962  04D4  2CE1               	goto	l1649
  1963  04D5  3001               	movlw	1
  1964  04D6  00CC               	movwf	??___fltol
  1965  04D7                     u1375:	
  1966  04D7  1003               	clrc
  1967  04D8  0DC8               	rlf	___fltol@f1,f
  1968  04D9  0DC9               	rlf	___fltol@f1+1,f
  1969  04DA  0DCA               	rlf	___fltol@f1+2,f
  1970  04DB  0DCB               	rlf	___fltol@f1+3,f
  1971  04DC  0BCC               	decfsz	??___fltol,f
  1972  04DD  2CD7               	goto	u1375
  1973  04DE  3001               	movlw	1
  1974  04DF  02F5               	subwf	___fltol@exp1,f
  1975  04E0  2CD2               	goto	l534
  1976  04E1                     l1649:	
  1977  04E1  0874               	movf	___fltol@sign1,w
  1978  04E2  1903               	btfsc	3,2
  1979  04E3  0008               	return
  1980  04E4  09C8               	comf	___fltol@f1,f
  1981  04E5  09C9               	comf	___fltol@f1+1,f
  1982  04E6  09CA               	comf	___fltol@f1+2,f
  1983  04E7  09CB               	comf	___fltol@f1+3,f
  1984  04E8  0AC8               	incf	___fltol@f1,f
  1985  04E9  1903               	skipnz
  1986  04EA  0AC9               	incf	___fltol@f1+1,f
  1987  04EB  1903               	skipnz
  1988  04EC  0ACA               	incf	___fltol@f1+2,f
  1989  04ED  1903               	skipnz
  1990  04EE  0ACB               	incf	___fltol@f1+3,f
  1991  04EF  0008               	return
  1992  04F0                     __end_of___fltol:	
  1993                           
  1994                           	psect	text8
  1995  0028                     __ptext8:	
  1996 ;; *************** function ___fldiv *****************
  1997 ;; Defined at:
  1998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  a               4   14[BANK0 ] long 
  2001 ;;  b               4   18[BANK0 ] long 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  grs             4   34[BANK0 ] unsigned long 
  2004 ;;  rem             4   27[BANK0 ] unsigned long 
  2005 ;;  new_exp         2   32[BANK0 ] int 
  2006 ;;  aexp            1   39[BANK0 ] unsigned char 
  2007 ;;  bexp            1   38[BANK0 ] unsigned char 
  2008 ;;  sign            1   31[BANK0 ] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  4   14[BANK0 ] unsigned char 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, btemp+1
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       8       0       0       0
  2019 ;;      Locals:         0      13       0       0       0
  2020 ;;      Temps:          0       5       0       0       0
  2021 ;;      Totals:         0      26       0       0       0
  2022 ;;Total ram usage:       26 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    1
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function ___fldiv
  2034  0028                     ___fldiv:	
  2035                           
  2036                           ;incstack = 0
  2037                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  2038  0028  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0029  1303               	bcf	3,6	;RP1=0, select bank0
  2040  002A  0835               	movf	___fldiv@b+3,w
  2041  002B  3980               	andlw	128
  2042  002C  00B6               	movwf	??___fldiv
  2043  002D  0836               	movf	??___fldiv,w
  2044  002E  00BF               	movwf	___fldiv@sign
  2045  002F  0835               	movf	___fldiv@b+3,w
  2046  0030  00B6               	movwf	??___fldiv
  2047  0031  0736               	addwf	??___fldiv,w
  2048  0032  00B7               	movwf	??___fldiv+1
  2049  0033  0837               	movf	??___fldiv+1,w
  2050  0034  00C6               	movwf	___fldiv@bexp
  2051  0035  1BB4               	btfsc	___fldiv@b+2,7
  2052  0036  1446               	bsf	___fldiv@bexp,0
  2053  0037  0846               	movf	___fldiv@bexp,w
  2054  0038  1903               	btfsc	3,2
  2055  0039  2848               	goto	l1671
  2056  003A  0A46               	incf	___fldiv@bexp,w
  2057  003B  1D03               	btfss	3,2
  2058  003C  2845               	goto	l1667
  2059  003D  3000               	movlw	0
  2060  003E  00B5               	movwf	___fldiv@b+3
  2061  003F  3000               	movlw	0
  2062  0040  00B4               	movwf	___fldiv@b+2
  2063  0041  3000               	movlw	0
  2064  0042  00B3               	movwf	___fldiv@b+1
  2065  0043  3000               	movlw	0
  2066  0044  00B2               	movwf	___fldiv@b
  2067  0045                     l1667:	
  2068  0045  17B4               	bsf	___fldiv@b+2,7
  2069  0046  01B5               	clrf	___fldiv@b+3
  2070  0047  2850               	goto	l1673
  2071  0048                     l1671:	
  2072  0048  3000               	movlw	0
  2073  0049  00B5               	movwf	___fldiv@b+3
  2074  004A  3000               	movlw	0
  2075  004B  00B4               	movwf	___fldiv@b+2
  2076  004C  3000               	movlw	0
  2077  004D  00B3               	movwf	___fldiv@b+1
  2078  004E  3000               	movlw	0
  2079  004F  00B2               	movwf	___fldiv@b
  2080  0050                     l1673:	
  2081  0050  0831               	movf	___fldiv@a+3,w
  2082  0051  3980               	andlw	128
  2083  0052  00B6               	movwf	??___fldiv
  2084  0053  0836               	movf	??___fldiv,w
  2085  0054  06BF               	xorwf	___fldiv@sign,f
  2086  0055  0831               	movf	___fldiv@a+3,w
  2087  0056  00B6               	movwf	??___fldiv
  2088  0057  0736               	addwf	??___fldiv,w
  2089  0058  00B7               	movwf	??___fldiv+1
  2090  0059  0837               	movf	??___fldiv+1,w
  2091  005A  00C7               	movwf	___fldiv@aexp
  2092  005B  1BB0               	btfsc	___fldiv@a+2,7
  2093  005C  1447               	bsf	___fldiv@aexp,0
  2094  005D  0847               	movf	___fldiv@aexp,w
  2095  005E  1903               	btfsc	3,2
  2096  005F  286E               	goto	l1691
  2097  0060  0A47               	incf	___fldiv@aexp,w
  2098  0061  1D03               	btfss	3,2
  2099  0062  286B               	goto	l1687
  2100  0063  3000               	movlw	0
  2101  0064  00B1               	movwf	___fldiv@a+3
  2102  0065  3000               	movlw	0
  2103  0066  00B0               	movwf	___fldiv@a+2
  2104  0067  3000               	movlw	0
  2105  0068  00AF               	movwf	___fldiv@a+1
  2106  0069  3000               	movlw	0
  2107  006A  00AE               	movwf	___fldiv@a
  2108  006B                     l1687:	
  2109  006B  17B0               	bsf	___fldiv@a+2,7
  2110  006C  01B1               	clrf	___fldiv@a+3
  2111  006D  2876               	goto	l690
  2112  006E                     l1691:	
  2113  006E  3000               	movlw	0
  2114  006F  00B1               	movwf	___fldiv@a+3
  2115  0070  3000               	movlw	0
  2116  0071  00B0               	movwf	___fldiv@a+2
  2117  0072  3000               	movlw	0
  2118  0073  00AF               	movwf	___fldiv@a+1
  2119  0074  3000               	movlw	0
  2120  0075  00AE               	movwf	___fldiv@a
  2121  0076                     l690:	
  2122  0076  0831               	movf	___fldiv@a+3,w
  2123  0077  0430               	iorwf	___fldiv@a+2,w
  2124  0078  042F               	iorwf	___fldiv@a+1,w
  2125  0079  042E               	iorwf	___fldiv@a,w
  2126  007A  1D03               	skipz
  2127  007B  2895               	goto	l1701
  2128  007C  3000               	movlw	0
  2129  007D  00B5               	movwf	___fldiv@b+3
  2130  007E  3000               	movlw	0
  2131  007F  00B4               	movwf	___fldiv@b+2
  2132  0080  3000               	movlw	0
  2133  0081  00B3               	movwf	___fldiv@b+1
  2134  0082  3000               	movlw	0
  2135  0083  00B2               	movwf	___fldiv@b
  2136  0084  3080               	movlw	128
  2137  0085  04B4               	iorwf	___fldiv@b+2,f
  2138  0086  307F               	movlw	127
  2139  0087  04B5               	iorwf	___fldiv@b+3,f
  2140  0088                     L18:	
  2141  0088  083F               	movf	___fldiv@sign,w
  2142  0089  00B6               	movwf	??___fldiv
  2143  008A  0836               	movf	??___fldiv,w
  2144  008B  04B5               	iorwf	___fldiv@b+3,f
  2145  008C  0835               	movf	___fldiv@b+3,w
  2146  008D  00B1               	movwf	?___fldiv+3
  2147  008E  0834               	movf	___fldiv@b+2,w
  2148  008F  00B0               	movwf	?___fldiv+2
  2149  0090  0833               	movf	___fldiv@b+1,w
  2150  0091  00AF               	movwf	?___fldiv+1
  2151  0092  0832               	movf	___fldiv@b,w
  2152  0093  00AE               	movwf	?___fldiv
  2153  0094  0008               	return
  2154  0095                     l1701:	
  2155  0095  0846               	movf	___fldiv@bexp,w
  2156  0096  1D03               	btfss	3,2
  2157  0097  28A1               	goto	l1707
  2158  0098  3000               	movlw	0
  2159  0099  00B1               	movwf	?___fldiv+3
  2160  009A  3000               	movlw	0
  2161  009B  00B0               	movwf	?___fldiv+2
  2162  009C  3000               	movlw	0
  2163  009D  00AF               	movwf	?___fldiv+1
  2164  009E  3000               	movlw	0
  2165  009F  00AE               	movwf	?___fldiv
  2166  00A0  0008               	return
  2167  00A1                     l1707:	
  2168  00A1  0846               	movf	___fldiv@bexp,w
  2169  00A2  00B6               	movwf	??___fldiv
  2170  00A3  01B7               	clrf	??___fldiv+1
  2171  00A4  0837               	movf	??___fldiv+1,w
  2172  00A5  00B9               	movwf	??___fldiv+3
  2173  00A6  0847               	movf	___fldiv@aexp,w
  2174  00A7  0236               	subwf	??___fldiv,w
  2175  00A8  00B8               	movwf	??___fldiv+2
  2176  00A9  1C03               	skipc
  2177  00AA  03B9               	decf	??___fldiv+3,f
  2178  00AB  0838               	movf	??___fldiv+2,w
  2179  00AC  3E7F               	addlw	127
  2180  00AD  00C0               	movwf	___fldiv@new_exp
  2181  00AE  0839               	movf	??___fldiv+3,w
  2182  00AF  1803               	skipnc
  2183  00B0  3E01               	addlw	1
  2184  00B1  3E00               	addlw	0
  2185  00B2  00C1               	movwf	___fldiv@new_exp+1
  2186  00B3  0835               	movf	___fldiv@b+3,w
  2187  00B4  00BE               	movwf	___fldiv@rem+3
  2188  00B5  0834               	movf	___fldiv@b+2,w
  2189  00B6  00BD               	movwf	___fldiv@rem+2
  2190  00B7  0833               	movf	___fldiv@b+1,w
  2191  00B8  00BC               	movwf	___fldiv@rem+1
  2192  00B9  0832               	movf	___fldiv@b,w
  2193  00BA  00BB               	movwf	___fldiv@rem
  2194  00BB  3000               	movlw	0
  2195  00BC  00B5               	movwf	___fldiv@b+3
  2196  00BD  3000               	movlw	0
  2197  00BE  00B4               	movwf	___fldiv@b+2
  2198  00BF  3000               	movlw	0
  2199  00C0  00B3               	movwf	___fldiv@b+1
  2200  00C1  3000               	movlw	0
  2201  00C2  00B2               	movwf	___fldiv@b
  2202  00C3  3000               	movlw	0
  2203  00C4  00C5               	movwf	___fldiv@grs+3
  2204  00C5  3000               	movlw	0
  2205  00C6  00C4               	movwf	___fldiv@grs+2
  2206  00C7  3000               	movlw	0
  2207  00C8  00C3               	movwf	___fldiv@grs+1
  2208  00C9  3000               	movlw	0
  2209  00CA  00C2               	movwf	___fldiv@grs
  2210  00CB  01C7               	clrf	___fldiv@aexp
  2211  00CC                     l1735:	
  2212  00CC  301A               	movlw	26
  2213  00CD  0247               	subwf	___fldiv@aexp,w
  2214  00CE  1803               	btfsc	3,0
  2215  00CF  2914               	goto	l1737
  2216  00D0  0847               	movf	___fldiv@aexp,w
  2217  00D1  1903               	btfsc	3,2
  2218  00D2  28F0               	goto	l1727
  2219  00D3  3001               	movlw	1
  2220  00D4  00B6               	movwf	??___fldiv
  2221  00D5                     u1495:	
  2222  00D5  1003               	clrc
  2223  00D6  0DBB               	rlf	___fldiv@rem,f
  2224  00D7  0DBC               	rlf	___fldiv@rem+1,f
  2225  00D8  0DBD               	rlf	___fldiv@rem+2,f
  2226  00D9  0DBE               	rlf	___fldiv@rem+3,f
  2227  00DA  0BB6               	decfsz	??___fldiv,f
  2228  00DB  28D5               	goto	u1495
  2229  00DC  3001               	movlw	1
  2230  00DD  00B6               	movwf	??___fldiv
  2231  00DE                     u1505:	
  2232  00DE  1003               	clrc
  2233  00DF  0DB2               	rlf	___fldiv@b,f
  2234  00E0  0DB3               	rlf	___fldiv@b+1,f
  2235  00E1  0DB4               	rlf	___fldiv@b+2,f
  2236  00E2  0DB5               	rlf	___fldiv@b+3,f
  2237  00E3  0BB6               	decfsz	??___fldiv,f
  2238  00E4  28DE               	goto	u1505
  2239  00E5  1BC5               	btfsc	___fldiv@grs+3,7
  2240  00E6  1432               	bsf	___fldiv@b,0
  2241  00E7  3001               	movlw	1
  2242  00E8  00B6               	movwf	??___fldiv
  2243  00E9                     u1525:	
  2244  00E9  1003               	clrc
  2245  00EA  0DC2               	rlf	___fldiv@grs,f
  2246  00EB  0DC3               	rlf	___fldiv@grs+1,f
  2247  00EC  0DC4               	rlf	___fldiv@grs+2,f
  2248  00ED  0DC5               	rlf	___fldiv@grs+3,f
  2249  00EE  0BB6               	decfsz	??___fldiv,f
  2250  00EF  28E9               	goto	u1525
  2251  00F0                     l1727:	
  2252  00F0  0831               	movf	___fldiv@a+3,w
  2253  00F1  023E               	subwf	___fldiv@rem+3,w
  2254  00F2  1D03               	skipz
  2255  00F3  28FE               	goto	u1535
  2256  00F4  0830               	movf	___fldiv@a+2,w
  2257  00F5  023D               	subwf	___fldiv@rem+2,w
  2258  00F6  1D03               	skipz
  2259  00F7  28FE               	goto	u1535
  2260  00F8  082F               	movf	___fldiv@a+1,w
  2261  00F9  023C               	subwf	___fldiv@rem+1,w
  2262  00FA  1D03               	skipz
  2263  00FB  28FE               	goto	u1535
  2264  00FC  082E               	movf	___fldiv@a,w
  2265  00FD  023B               	subwf	___fldiv@rem,w
  2266  00FE                     u1535:	
  2267  00FE  1C03               	skipc
  2268  00FF  290F               	goto	l1733
  2269  0100  1745               	bsf	___fldiv@grs+3,6
  2270  0101  082E               	movf	___fldiv@a,w
  2271  0102  02BB               	subwf	___fldiv@rem,f
  2272  0103  082F               	movf	___fldiv@a+1,w
  2273  0104  1C03               	skipc
  2274  0105  0F2F               	incfsz	___fldiv@a+1,w
  2275  0106  02BC               	subwf	___fldiv@rem+1,f
  2276  0107  0830               	movf	___fldiv@a+2,w
  2277  0108  1C03               	skipc
  2278  0109  0F30               	incfsz	___fldiv@a+2,w
  2279  010A  02BD               	subwf	___fldiv@rem+2,f
  2280  010B  0831               	movf	___fldiv@a+3,w
  2281  010C  1C03               	skipc
  2282  010D  0F31               	incfsz	___fldiv@a+3,w
  2283  010E  02BE               	subwf	___fldiv@rem+3,f
  2284  010F                     l1733:	
  2285  010F  3001               	movlw	1
  2286  0110  00B6               	movwf	??___fldiv
  2287  0111  0836               	movf	??___fldiv,w
  2288  0112  07C7               	addwf	___fldiv@aexp,f
  2289  0113  28CC               	goto	l1735
  2290  0114                     l1737:	
  2291  0114  083E               	movf	___fldiv@rem+3,w
  2292  0115  043D               	iorwf	___fldiv@rem+2,w
  2293  0116  043C               	iorwf	___fldiv@rem+1,w
  2294  0117  043B               	iorwf	___fldiv@rem,w
  2295  0118  1D03               	btfss	3,2
  2296  0119  1442               	bsf	___fldiv@grs,0
  2297  011A                     l1751:	
  2298  011A  1BB4               	btfsc	___fldiv@b+2,7
  2299  011B  2937               	goto	l1753
  2300  011C  3001               	movlw	1
  2301  011D  00B6               	movwf	??___fldiv
  2302  011E                     u1565:	
  2303  011E  1003               	clrc
  2304  011F  0DB2               	rlf	___fldiv@b,f
  2305  0120  0DB3               	rlf	___fldiv@b+1,f
  2306  0121  0DB4               	rlf	___fldiv@b+2,f
  2307  0122  0DB5               	rlf	___fldiv@b+3,f
  2308  0123  0BB6               	decfsz	??___fldiv,f
  2309  0124  291E               	goto	u1565
  2310  0125  1BC5               	btfsc	___fldiv@grs+3,7
  2311  0126  1432               	bsf	___fldiv@b,0
  2312  0127  3001               	movlw	1
  2313  0128  00B6               	movwf	??___fldiv
  2314  0129                     u1585:	
  2315  0129  1003               	clrc
  2316  012A  0DC2               	rlf	___fldiv@grs,f
  2317  012B  0DC3               	rlf	___fldiv@grs+1,f
  2318  012C  0DC4               	rlf	___fldiv@grs+2,f
  2319  012D  0DC5               	rlf	___fldiv@grs+3,f
  2320  012E  0BB6               	decfsz	??___fldiv,f
  2321  012F  2929               	goto	u1585
  2322  0130  30FF               	movlw	255
  2323  0131  07C0               	addwf	___fldiv@new_exp,f
  2324  0132  1803               	skipnc
  2325  0133  0AC1               	incf	___fldiv@new_exp+1,f
  2326  0134  30FF               	movlw	255
  2327  0135  07C1               	addwf	___fldiv@new_exp+1,f
  2328  0136  291A               	goto	l1751
  2329  0137                     l1753:	
  2330  0137  01C7               	clrf	___fldiv@aexp
  2331  0138  1FC5               	btfss	___fldiv@grs+3,7
  2332  0139  2950               	goto	l1763
  2333  013A  30FF               	movlw	255
  2334  013B  0542               	andwf	___fldiv@grs,w
  2335  013C  00B6               	movwf	??___fldiv
  2336  013D  30FF               	movlw	255
  2337  013E  0543               	andwf	___fldiv@grs+1,w
  2338  013F  00B7               	movwf	??___fldiv+1
  2339  0140  30FF               	movlw	255
  2340  0141  0544               	andwf	___fldiv@grs+2,w
  2341  0142  00B8               	movwf	??___fldiv+2
  2342  0143  307F               	movlw	127
  2343  0144  0545               	andwf	___fldiv@grs+3,w
  2344  0145  00B9               	movwf	??___fldiv+3
  2345  0146  0839               	movf	??___fldiv+3,w
  2346  0147  0438               	iorwf	??___fldiv+2,w
  2347  0148  0437               	iorwf	??___fldiv+1,w
  2348  0149  0436               	iorwf	??___fldiv,w
  2349  014A  1903               	skipnz
  2350  014B  1832               	btfsc	___fldiv@b,0
  2351  014C  294E               	goto	l1759
  2352  014D  2950               	goto	l1763
  2353  014E                     l1759:	
  2354  014E  01C7               	clrf	___fldiv@aexp
  2355  014F  0AC7               	incf	___fldiv@aexp,f
  2356  0150                     l1763:	
  2357  0150  0847               	movf	___fldiv@aexp,w
  2358  0151  1903               	btfsc	3,2
  2359  0152  2982               	goto	l1773
  2360  0153  3001               	movlw	1
  2361  0154  07B2               	addwf	___fldiv@b,f
  2362  0155  3000               	movlw	0
  2363  0156  1803               	skipnc
  2364  0157  3001               	movlw	1
  2365  0158  07B3               	addwf	___fldiv@b+1,f
  2366  0159  3000               	movlw	0
  2367  015A  1803               	skipnc
  2368  015B  3001               	movlw	1
  2369  015C  07B4               	addwf	___fldiv@b+2,f
  2370  015D  3000               	movlw	0
  2371  015E  1803               	skipnc
  2372  015F  3001               	movlw	1
  2373  0160  07B5               	addwf	___fldiv@b+3,f
  2374  0161  1C35               	btfss	___fldiv@b+3,0
  2375  0162  2982               	goto	l1773
  2376  0163  0832               	movf	___fldiv@b,w
  2377  0164  00B6               	movwf	??___fldiv
  2378  0165  0833               	movf	___fldiv@b+1,w
  2379  0166  00B7               	movwf	??___fldiv+1
  2380  0167  0834               	movf	___fldiv@b+2,w
  2381  0168  00B8               	movwf	??___fldiv+2
  2382  0169  0835               	movf	___fldiv@b+3,w
  2383  016A  00B9               	movwf	??___fldiv+3
  2384  016B  3001               	movlw	1
  2385  016C  00BA               	movwf	??___fldiv+4
  2386  016D                     u1655:	
  2387  016D  0D39               	rlf	??___fldiv+3,w
  2388  016E  0CB9               	rrf	??___fldiv+3,f
  2389  016F  0CB8               	rrf	??___fldiv+2,f
  2390  0170  0CB7               	rrf	??___fldiv+1,f
  2391  0171  0CB6               	rrf	??___fldiv,f
  2392  0172  0BBA               	decfsz	??___fldiv+4,f
  2393  0173  296D               	goto	u1655
  2394  0174  0839               	movf	??___fldiv+3,w
  2395  0175  00B5               	movwf	___fldiv@b+3
  2396  0176  0838               	movf	??___fldiv+2,w
  2397  0177  00B4               	movwf	___fldiv@b+2
  2398  0178  0837               	movf	??___fldiv+1,w
  2399  0179  00B3               	movwf	___fldiv@b+1
  2400  017A  0836               	movf	??___fldiv,w
  2401  017B  00B2               	movwf	___fldiv@b
  2402  017C  3001               	movlw	1
  2403  017D  07C0               	addwf	___fldiv@new_exp,f
  2404  017E  1803               	skipnc
  2405  017F  0AC1               	incf	___fldiv@new_exp+1,f
  2406  0180  3000               	movlw	0
  2407  0181  07C1               	addwf	___fldiv@new_exp+1,f
  2408  0182                     l1773:	
  2409  0182  0841               	movf	___fldiv@new_exp+1,w
  2410  0183  3A80               	xorlw	128
  2411  0184  00FF               	movwf	127
  2412  0185  3080               	movlw	128
  2413  0186  027F               	subwf	127,w
  2414  0187  1D03               	skipz
  2415  0188  298B               	goto	u1665
  2416  0189  30FF               	movlw	255
  2417  018A  0240               	subwf	___fldiv@new_exp,w
  2418  018B                     u1665:	
  2419  018B  1C03               	skipc
  2420  018C  299B               	goto	l1777
  2421  018D  30FF               	movlw	255
  2422  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2423  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0190  00C0               	movwf	___fldiv@new_exp
  2425  0191  3000               	movlw	0
  2426  0192  00C1               	movwf	___fldiv@new_exp+1
  2427  0193  3000               	movlw	0
  2428  0194  00B5               	movwf	___fldiv@b+3
  2429  0195  3000               	movlw	0
  2430  0196  00B4               	movwf	___fldiv@b+2
  2431  0197  3000               	movlw	0
  2432  0198  00B3               	movwf	___fldiv@b+1
  2433  0199  3000               	movlw	0
  2434  019A  00B2               	movwf	___fldiv@b
  2435  019B                     l1777:	
  2436  019B  1283               	bcf	3,5	;RP0=0, select bank0
  2437  019C  1303               	bcf	3,6	;RP1=0, select bank0
  2438  019D  0841               	movf	___fldiv@new_exp+1,w
  2439  019E  3A80               	xorlw	128
  2440  019F  00FF               	movwf	127
  2441  01A0  3080               	movlw	128
  2442  01A1  027F               	subwf	127,w
  2443  01A2  1D03               	skipz
  2444  01A3  29A6               	goto	u1675
  2445  01A4  3001               	movlw	1
  2446  01A5  0240               	subwf	___fldiv@new_exp,w
  2447  01A6                     u1675:	
  2448  01A6  1803               	skipnc
  2449  01A7  29B5               	goto	l712
  2450  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2451  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2452  01AA  01C0               	clrf	___fldiv@new_exp
  2453  01AB  01C1               	clrf	___fldiv@new_exp+1
  2454  01AC  3000               	movlw	0
  2455  01AD  00B5               	movwf	___fldiv@b+3
  2456  01AE  3000               	movlw	0
  2457  01AF  00B4               	movwf	___fldiv@b+2
  2458  01B0  3000               	movlw	0
  2459  01B1  00B3               	movwf	___fldiv@b+1
  2460  01B2  3000               	movlw	0
  2461  01B3  00B2               	movwf	___fldiv@b
  2462  01B4  01BF               	clrf	___fldiv@sign
  2463  01B5                     l712:	
  2464  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2465  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2466  01B7  0840               	movf	___fldiv@new_exp,w
  2467  01B8  00B6               	movwf	??___fldiv
  2468  01B9  0836               	movf	??___fldiv,w
  2469  01BA  00C6               	movwf	___fldiv@bexp
  2470  01BB  1C46               	btfss	___fldiv@bexp,0
  2471  01BC  29BF               	goto	l1789
  2472  01BD  17B4               	bsf	___fldiv@b+2,7
  2473  01BE  29C3               	goto	l714
  2474  01BF                     l1789:	
  2475  01BF  307F               	movlw	127
  2476  01C0  00B6               	movwf	??___fldiv
  2477  01C1  0836               	movf	??___fldiv,w
  2478  01C2  05B4               	andwf	___fldiv@b+2,f
  2479  01C3                     l714:	
  2480  01C3  0846               	movf	___fldiv@bexp,w
  2481  01C4  00B6               	movwf	??___fldiv
  2482  01C5  1003               	clrc
  2483  01C6  0C36               	rrf	??___fldiv,w
  2484  01C7  00B7               	movwf	??___fldiv+1
  2485  01C8  0837               	movf	??___fldiv+1,w
  2486  01C9  00B5               	movwf	___fldiv@b+3
  2487  01CA  2888               	goto	L18
  2488  01CB                     __end_of___fldiv:	
  2489                           
  2490                           	psect	text9
  2491  039E                     __ptext9:	
  2492 ;; *************** function _DutyCycle *****************
  2493 ;; Defined at:
  2494 ;;		line 179 in file "Esclavo1.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  ADC_LUZ         1    wreg     unsigned char 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  ADC_LUZ         1    5[COMMON] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      unsigned char 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       0       0       0       0
  2509 ;;      Locals:         1       0       0       0       0
  2510 ;;      Temps:          1       0       0       0       0
  2511 ;;      Totals:         2       0       0       0       0
  2512 ;;Total ram usage:        2 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _DutyCycle
  2524  039E                     _DutyCycle:	
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _DutyCycle: [wreg+status,2]
  2528                           ;DutyCycle@ADC_LUZ stored from wreg
  2529  039E  00F5               	movwf	DutyCycle@ADC_LUZ
  2530                           
  2531                           ;Esclavo1.c: 180:         if (ADC_LUZ < 13U){
  2532  039F  300D               	movlw	13
  2533  03A0  0275               	subwf	DutyCycle@ADC_LUZ,w
  2534  03A1  1803               	skipnc
  2535  03A2  2BA7               	goto	l1555
  2536                           
  2537                           ;Esclavo1.c: 181:             duty_cycle = 0U;
  2538  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2539  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2540  03A5  01DC               	clrf	_duty_cycle
  2541                           
  2542                           ;Esclavo1.c: 182:         }else if((ADC_LUZ > 13U) && (ADC_LUZ < 26U)){
  2543  03A6  2C12               	goto	l215
  2544  03A7                     l1555:	
  2545  03A7  300E               	movlw	14
  2546  03A8  0275               	subwf	DutyCycle@ADC_LUZ,w
  2547  03A9  1C03               	skipc
  2548  03AA  2BB4               	goto	l1561
  2549  03AB  301A               	movlw	26
  2550  03AC  0275               	subwf	DutyCycle@ADC_LUZ,w
  2551  03AD  1803               	skipnc
  2552  03AE  2BB4               	goto	l1561
  2553                           
  2554                           ;Esclavo1.c: 183:             duty_cycle = 1U;
  2555  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2556  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2557  03B1  01DC               	clrf	_duty_cycle
  2558  03B2  0ADC               	incf	_duty_cycle,f
  2559                           
  2560                           ;Esclavo1.c: 184:         }else if((ADC_LUZ > 26U) && (ADC_LUZ < 39U)){
  2561  03B3  2C12               	goto	l215
  2562  03B4                     l1561:	
  2563  03B4  301B               	movlw	27
  2564  03B5  0275               	subwf	DutyCycle@ADC_LUZ,w
  2565  03B6  1C03               	skipc
  2566  03B7  2BBE               	goto	l1567
  2567  03B8  3027               	movlw	39
  2568  03B9  0275               	subwf	DutyCycle@ADC_LUZ,w
  2569  03BA  1803               	skipnc
  2570  03BB  2BBE               	goto	l1567
  2571                           
  2572                           ;Esclavo1.c: 185:             duty_cycle = 2U;
  2573  03BC  3002               	movlw	2
  2574  03BD  2C0D               	goto	L26
  2575  03BE                     l1567:	
  2576                           ;Esclavo1.c: 186:         }else if((ADC_LUZ > 39U) && (ADC_LUZ < 52U)){
  2577                           
  2578  03BE  3028               	movlw	40
  2579  03BF  0275               	subwf	DutyCycle@ADC_LUZ,w
  2580  03C0  1C03               	skipc
  2581  03C1  2BC8               	goto	l1573
  2582  03C2  3034               	movlw	52
  2583  03C3  0275               	subwf	DutyCycle@ADC_LUZ,w
  2584  03C4  1803               	skipnc
  2585  03C5  2BC8               	goto	l1573
  2586                           
  2587                           ;Esclavo1.c: 187:             duty_cycle = 3U;
  2588  03C6  3003               	movlw	3
  2589  03C7  2C0D               	goto	L26
  2590  03C8                     l1573:	
  2591                           ;Esclavo1.c: 188:         }else if((ADC_LUZ > 52U) && (ADC_LUZ < 65U)){
  2592                           
  2593  03C8  3035               	movlw	53
  2594  03C9  0275               	subwf	DutyCycle@ADC_LUZ,w
  2595  03CA  1C03               	skipc
  2596  03CB  2BD2               	goto	l1579
  2597  03CC  3041               	movlw	65
  2598  03CD  0275               	subwf	DutyCycle@ADC_LUZ,w
  2599  03CE  1803               	skipnc
  2600  03CF  2BD2               	goto	l1579
  2601                           
  2602                           ;Esclavo1.c: 189:             duty_cycle = 4U;
  2603  03D0  3004               	movlw	4
  2604  03D1  2C0D               	goto	L26
  2605  03D2                     l1579:	
  2606                           ;Esclavo1.c: 190:         }else if((ADC_LUZ > 65U) && (ADC_LUZ < 78U)){
  2607                           
  2608  03D2  3042               	movlw	66
  2609  03D3  0275               	subwf	DutyCycle@ADC_LUZ,w
  2610  03D4  1C03               	skipc
  2611  03D5  2BDC               	goto	l1585
  2612  03D6  304E               	movlw	78
  2613  03D7  0275               	subwf	DutyCycle@ADC_LUZ,w
  2614  03D8  1803               	skipnc
  2615  03D9  2BDC               	goto	l1585
  2616                           
  2617                           ;Esclavo1.c: 191:             duty_cycle = 5U;
  2618  03DA  3005               	movlw	5
  2619  03DB  2C0D               	goto	L26
  2620  03DC                     l1585:	
  2621                           ;Esclavo1.c: 192:         }else if((ADC_LUZ > 78U) && (ADC_LUZ < 91U)){
  2622                           
  2623  03DC  304F               	movlw	79
  2624  03DD  0275               	subwf	DutyCycle@ADC_LUZ,w
  2625  03DE  1C03               	skipc
  2626  03DF  2BE6               	goto	l1591
  2627  03E0  305B               	movlw	91
  2628  03E1  0275               	subwf	DutyCycle@ADC_LUZ,w
  2629  03E2  1803               	skipnc
  2630  03E3  2BE6               	goto	l1591
  2631                           
  2632                           ;Esclavo1.c: 193:             duty_cycle = 6U;
  2633  03E4  3006               	movlw	6
  2634  03E5  2C0D               	goto	L26
  2635  03E6                     l1591:	
  2636                           ;Esclavo1.c: 194:         }else if((ADC_LUZ > 91U) && (ADC_LUZ < 104U)){
  2637                           
  2638  03E6  305C               	movlw	92
  2639  03E7  0275               	subwf	DutyCycle@ADC_LUZ,w
  2640  03E8  1C03               	skipc
  2641  03E9  2BF0               	goto	l1597
  2642  03EA  3068               	movlw	104
  2643  03EB  0275               	subwf	DutyCycle@ADC_LUZ,w
  2644  03EC  1803               	skipnc
  2645  03ED  2BF0               	goto	l1597
  2646                           
  2647                           ;Esclavo1.c: 195:             duty_cycle = 7U;
  2648  03EE  3007               	movlw	7
  2649  03EF  2C0D               	goto	L26
  2650  03F0                     l1597:	
  2651                           ;Esclavo1.c: 196:         }else if((ADC_LUZ > 104U) && (ADC_LUZ < 117U)){
  2652                           
  2653  03F0  3069               	movlw	105
  2654  03F1  0275               	subwf	DutyCycle@ADC_LUZ,w
  2655  03F2  1C03               	skipc
  2656  03F3  2BFA               	goto	l1603
  2657  03F4  3075               	movlw	117
  2658  03F5  0275               	subwf	DutyCycle@ADC_LUZ,w
  2659  03F6  1803               	skipnc
  2660  03F7  2BFA               	goto	l1603
  2661                           
  2662                           ;Esclavo1.c: 197:             duty_cycle = 8U;
  2663  03F8  3008               	movlw	8
  2664  03F9  2C0D               	goto	L26
  2665  03FA                     l1603:	
  2666                           ;Esclavo1.c: 198:         }else if((ADC_LUZ > 117U) && (ADC_LUZ < 130U)){
  2667                           
  2668  03FA  3076               	movlw	118
  2669  03FB  0275               	subwf	DutyCycle@ADC_LUZ,w
  2670  03FC  1C03               	skipc
  2671  03FD  2C04               	goto	l1609
  2672  03FE  3082               	movlw	130
  2673  03FF  0275               	subwf	DutyCycle@ADC_LUZ,w
  2674  0400  1803               	skipnc
  2675  0401  2C04               	goto	l1609
  2676                           
  2677                           ;Esclavo1.c: 199:             duty_cycle = 9U;
  2678  0402  3009               	movlw	9
  2679  0403  2C0D               	goto	L26
  2680  0404                     l1609:	
  2681                           ;Esclavo1.c: 200:         }else if((ADC_LUZ > 130U) && (ADC_LUZ < 143U)){
  2682                           
  2683  0404  3083               	movlw	131
  2684  0405  0275               	subwf	DutyCycle@ADC_LUZ,w
  2685  0406  1C03               	skipc
  2686  0407  2C12               	goto	l215
  2687  0408  308F               	movlw	143
  2688  0409  0275               	subwf	DutyCycle@ADC_LUZ,w
  2689  040A  1803               	skipnc
  2690  040B  2C12               	goto	l215
  2691                           
  2692                           ;Esclavo1.c: 201:             duty_cycle = 10U;
  2693  040C  300A               	movlw	10
  2694  040D                     L26:	
  2695  040D  00F4               	movwf	??_DutyCycle
  2696  040E  0874               	movf	??_DutyCycle,w
  2697  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0411  00DC               	movwf	_duty_cycle
  2700  0412                     l215:	
  2701                           
  2702                           ;Esclavo1.c: 203:         return(duty_cycle);
  2703  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0414  085C               	movf	_duty_cycle,w
  2706  0415  0008               	return
  2707  0416                     __end_of_DutyCycle:	
  2708                           
  2709                           	psect	text10
  2710  0313                     __ptext10:	
  2711 ;; *************** function _isr *****************
  2712 ;; Defined at:
  2713 ;;		line 46 in file "Esclavo1.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         0       0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0
  2729 ;;      Temps:          4       0       0       0       0
  2730 ;;      Totals:         4       0       0       0       0
  2731 ;;Total ram usage:        4 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		Interrupt level 1
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function _isr
  2742  0313                     _isr:	
  2743                           
  2744                           ;Esclavo1.c: 47:    if(PIR1bits.SSPIF == 1){
  2745  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0315  1D8C               	btfss	12,3	;volatile
  2748  0316  2B72               	goto	i1l179
  2749                           
  2750                           ;Esclavo1.c: 49:         SSPCONbits.CKP = 0;
  2751  0317  1214               	bcf	20,4	;volatile
  2752                           
  2753                           ;Esclavo1.c: 51:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  2754  0318  1B14               	btfsc	20,6	;volatile
  2755  0319  2B1C               	goto	i1l1845
  2756  031A  1F94               	btfss	20,7	;volatile
  2757  031B  2B26               	goto	i1l1853
  2758  031C                     i1l1845:	
  2759                           
  2760                           ;Esclavo1.c: 52:             z = SSPBUF;
  2761  031C  0813               	movf	19,w	;volatile
  2762  031D  00F0               	movwf	??_isr
  2763  031E  01F1               	clrf	??_isr+1
  2764  031F  0870               	movf	??_isr,w
  2765  0320  00D6               	movwf	_z
  2766  0321  0871               	movf	??_isr+1,w
  2767  0322  00D7               	movwf	_z+1
  2768                           
  2769                           ;Esclavo1.c: 53:             SSPCONbits.SSPOV = 0;
  2770  0323  1314               	bcf	20,6	;volatile
  2771                           
  2772                           ;Esclavo1.c: 54:             SSPCONbits.WCOL = 0;
  2773  0324  1394               	bcf	20,7	;volatile
  2774                           
  2775                           ;Esclavo1.c: 55:             SSPCONbits.CKP = 1;
  2776  0325  1614               	bsf	20,4	;volatile
  2777  0326                     i1l1853:	
  2778                           
  2779                           ;Esclavo1.c: 59:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  2780  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2781  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2782  0328  1E94               	btfss	20,5	;volatile
  2783  0329  1914               	btfsc	20,2	;volatile
  2784  032A  2B46               	goto	i1l183
  2785                           
  2786                           ;Esclavo1.c: 61:             z = SSPBUF;
  2787  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2788  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2789  032D  0813               	movf	19,w	;volatile
  2790  032E  00F0               	movwf	??_isr
  2791  032F  01F1               	clrf	??_isr+1
  2792  0330  0870               	movf	??_isr,w
  2793  0331  00D6               	movwf	_z
  2794  0332  0871               	movf	??_isr+1,w
  2795  0333  00D7               	movwf	_z+1
  2796                           
  2797                           ;Esclavo1.c: 63:             PIR1bits.SSPIF = 0;
  2798  0334  118C               	bcf	12,3	;volatile
  2799                           
  2800                           ;Esclavo1.c: 64:             SSPCONbits.CKP = 1;
  2801  0335  1614               	bsf	20,4	;volatile
  2802  0336                     i1l184:	
  2803                           ;Esclavo1.c: 65:             while(!SSPSTATbits.BF);
  2804                           
  2805  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0338  1C14               	btfss	20,0	;volatile
  2808  0339  2B36               	goto	i1l184
  2809                           
  2810                           ;Esclavo1.c: 66:             variable = SSPBUF;
  2811  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2812  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2813  033C  0813               	movf	19,w	;volatile
  2814  033D  00F0               	movwf	??_isr
  2815  033E  0870               	movf	??_isr,w
  2816  033F  00F9               	movwf	_variable
  2817                           
  2818                           ;Esclavo1.c: 67:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  2819  0340  30A6               	movlw	166
  2820  0341  00F0               	movwf	??_isr
  2821  0342                     u230_27:	
  2822  0342  0BF0               	decfsz	??_isr,f
  2823  0343  2B42               	goto	u230_27
  2824  0344  0000               	nop
  2825                           
  2826                           ;Esclavo1.c: 70:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  2827  0345  2B6F               	goto	i1l187
  2828  0346                     i1l183:	
  2829  0346  1E94               	btfss	20,5	;volatile
  2830  0347  1D14               	btfss	20,2	;volatile
  2831  0348  2B6F               	goto	i1l187
  2832                           
  2833                           ;Esclavo1.c: 71:             z = SSPBUF;
  2834  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2835  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2836  034B  0813               	movf	19,w	;volatile
  2837  034C  00F0               	movwf	??_isr
  2838  034D  01F1               	clrf	??_isr+1
  2839  034E  0870               	movf	??_isr,w
  2840  034F  00D6               	movwf	_z
  2841  0350  0871               	movf	??_isr+1,w
  2842  0351  00D7               	movwf	_z+1
  2843                           
  2844                           ;Esclavo1.c: 72:             BF = 0;
  2845  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2846  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2847  0354  1014               	bcf	20,0	;volatile
  2848                           
  2849                           ;Esclavo1.c: 73:             if(variable == 0x1){
  2850  0355  0379               	decf	_variable,w
  2851  0356  1D03               	btfss	3,2
  2852  0357  2B5C               	goto	i1l1875
  2853                           
  2854                           ;Esclavo1.c: 74:               SSPBUF = ADCLUZI2C;
  2855  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2857  035A  085B               	movf	_ADCLUZI2C,w
  2858  035B  2B63               	goto	L27
  2859  035C                     i1l1875:	
  2860                           ;Esclavo1.c: 75:             }else if(variable == 0x2){
  2861                           
  2862  035C  3002               	movlw	2
  2863  035D  0679               	xorwf	_variable,w
  2864  035E  1D03               	btfss	3,2
  2865  035F  2B64               	goto	i1l1879
  2866                           
  2867                           ;Esclavo1.c: 76:                SSPBUF = a;
  2868  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0362  0852               	movf	_a,w
  2871  0363                     L27:	
  2872  0363  0093               	movwf	19	;volatile
  2873  0364                     i1l1879:	
  2874                           
  2875                           ;Esclavo1.c: 78:             SSPCONbits.CKP = 1;
  2876  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2877  0365  1614               	bsf	20,4	;volatile
  2878                           
  2879                           ;Esclavo1.c: 79:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  2880  0366  30A6               	movlw	166
  2881  0367  00F0               	movwf	??_isr
  2882  0368                     u231_27:	
  2883  0368  0BF0               	decfsz	??_isr,f
  2884  0369  2B68               	goto	u231_27
  2885  036A  0000               	nop
  2886  036B                     i1l192:	
  2887                           ;Esclavo1.c: 80:             while(SSPSTATbits.BF);
  2888                           
  2889  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2890  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2891  036D  1814               	btfsc	20,0	;volatile
  2892  036E  2B6B               	goto	i1l192
  2893  036F                     i1l187:	
  2894                           
  2895                           ;Esclavo1.c: 83:         PIR1bits.SSPIF = 0;
  2896  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2897  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2898  0371  118C               	bcf	12,3	;volatile
  2899  0372                     i1l179:	
  2900                           ;Esclavo1.c: 84:     }
  2901                           
  2902                           
  2903                           ;Esclavo1.c: 86:    if(TMR0IF == 1)
  2904  0372  1D0B               	btfss	11,2	;volatile
  2905  0373  2B97               	goto	i1l202
  2906                           
  2907                           ;Esclavo1.c: 87:     {;Esclavo1.c: 88:         TMR0 = 132;
  2908  0374  3084               	movlw	132
  2909  0375  0081               	movwf	1	;volatile
  2910                           
  2911                           ;Esclavo1.c: 89:         TMR0IF=0;
  2912  0376  110B               	bcf	11,2	;volatile
  2913                           
  2914                           ;Esclavo1.c: 90:         contPWM++;
  2915  0377  3001               	movlw	1
  2916  0378  00F0               	movwf	??_isr
  2917  0379  0870               	movf	??_isr,w
  2918  037A  07F8               	addwf	_contPWM,f
  2919                           
  2920                           ;Esclavo1.c: 91:         contLuz++;
  2921  037B  3001               	movlw	1
  2922  037C  00F0               	movwf	??_isr
  2923  037D  0870               	movf	??_isr,w
  2924  037E  07F7               	addwf	_contLuz,f
  2925                           
  2926                           ;Esclavo1.c: 97:         if(contLuz < duty_cycle){
  2927  037F  085C               	movf	_duty_cycle,w
  2928  0380  0277               	subwf	_contLuz,w
  2929  0381  1803               	skipnc
  2930  0382  2B85               	goto	i1l196
  2931                           
  2932                           ;Esclavo1.c: 98:             PORTBbits.RB5 = 1;
  2933  0383  1686               	bsf	6,5	;volatile
  2934                           
  2935                           ;Esclavo1.c: 99:         }else{
  2936  0384  2B8A               	goto	i1l1895
  2937  0385                     i1l196:	
  2938                           
  2939                           ;Esclavo1.c: 100:             PORTBbits.RB5 = 0;
  2940  0385  1286               	bcf	6,5	;volatile
  2941                           
  2942                           ;Esclavo1.c: 101:             if(contLuz == 10U){
  2943  0386  300A               	movlw	10
  2944  0387  0677               	xorwf	_contLuz,w
  2945  0388  1903               	btfsc	3,2
  2946                           
  2947                           ;Esclavo1.c: 102:                 contLuz = 0U;
  2948  0389  01F7               	clrf	_contLuz
  2949  038A                     i1l1895:	
  2950                           
  2951                           ;Esclavo1.c: 106:     if (contPWM <= on_time)
  2952  038A  0878               	movf	_contPWM,w
  2953  038B  025D               	subwf	_on_time,w
  2954  038C  1803               	btfsc	3,0
  2955                           
  2956                           ;Esclavo1.c: 107:     {;Esclavo1.c: 108:         PORTCbits.RC1 = 1;
  2957  038D  1487               	bsf	7,1	;volatile
  2958                           
  2959                           ;Esclavo1.c: 111:     if (contPWM >= on_time)
  2960  038E  085D               	movf	_on_time,w
  2961  038F  0278               	subwf	_contPWM,w
  2962  0390  1C03               	skipc
  2963  0391  2B97               	goto	i1l202
  2964                           
  2965                           ;Esclavo1.c: 112:     {;Esclavo1.c: 113:         PORTCbits.RC1 = 0;
  2966  0392  1087               	bcf	7,1	;volatile
  2967                           
  2968                           ;Esclavo1.c: 114:         if(contPWM == 40U){
  2969  0393  3028               	movlw	40
  2970  0394  0678               	xorwf	_contPWM,w
  2971  0395  1903               	btfsc	3,2
  2972                           
  2973                           ;Esclavo1.c: 116:             contPWM = 0U;
  2974  0396  01F8               	clrf	_contPWM
  2975  0397                     i1l202:	
  2976  0397  0873               	movf	??_isr+3,w
  2977  0398  008A               	movwf	10
  2978  0399  0E72               	swapf	(??_isr+2)^(0+4294967168),w
  2979  039A  0083               	movwf	3
  2980  039B  0EFE               	swapf	126,f
  2981  039C  0E7E               	swapf	126,w
  2982  039D  0009               	retfie
  2983  039E                     __end_of_isr:	
  2984  007E                     btemp	set	126	;btemp
  2985  007E                     wtemp0	set	126
  2986                           
  2987                           	psect	intentry
  2988  0004                     __pintentry:	
  2989                           ;incstack = 0
  2990                           ; Regs used in _isr: [wreg+status,2+status,0]
  2991                           
  2992  0004                     interrupt_function:	
  2993  007E                     saved_w	set	btemp
  2994  0004  00FE               	movwf	btemp
  2995  0005  0E03               	swapf	3,w
  2996  0006  00F2               	movwf	??_isr+2
  2997  0007  080A               	movf	10,w
  2998  0008  00F3               	movwf	??_isr+3
  2999  0009  120A  118A  2B13   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     50      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DutyCycle
    _main->___fltol
    _setup->_I2C_Slave_Init
    _setup->_initOscilador

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _setup->_initTimero
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3127
                                             49 BANK0      1     1      0
                          _DutyCycle
                            ___fldiv
                            ___fltol
                           ___xxtofl
                           _read_ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     521
                                              8 BANK0      2     2      0
                     _I2C_Slave_Init
                      _initOscilador
                         _initTimero
 ---------------------------------------------------------------------------------
 (2) _initTimero                                           8     0      8     392
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                              4 COMMON     2     2      0
                                             40 BANK0      9     5      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _DutyCycle                                            2     2      0     462
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DutyCycle
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _read_ADC
   _setup
     _I2C_Slave_Init
     _initOscilador
     _initTimero

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     32      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 10 23:52:39 2019

            ___fldiv@aexp 0047              ___fldiv@bexp 0046                         _a 0052  
                       _z 0056              ___fldiv@sign 003F               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        _BF 04A0                       l120 055A  
                     l121 055E                       l122 0564                       l130 0420  
                     l123 0568                       l124 056D                       l140 0444  
                     l132 042D                       l125 0571                       l117 0551  
                     l141 0448                       l126 0571                       l118 0599  
                     l142 044D                       l215 0412                       l119 0555  
                     l143 0451                       l135 0431                       l208 05B7  
                     l136 0478                       l137 0435                       l138 043A  
                     l139 043E                       l243 02AF                       l246 02B2  
                     l534 04D2                       l712 01B5                       l714 01C3  
                     l690 0076                       l781 0240                       l782 024A  
                     l774 022A                       l768 01EA                       _GIE 005F  
            __CFG_CPD$OFF 0000                       _isr 0313              __CFG_LVP$OFF 0000  
            ___fltol@exp1 0075                      l2107 0267                      l2211 057F  
                    l2123 0284                      l2117 0279                      l2151 0304  
                    l2073 01E2                      l2209 045E                      l1603 03FA  
                    l2083 01FD                      l2155 030B                      l1701 0095  
                    l2093 023E                      l2085 020F                      l2149 0303  
                    l1623 0497                      l2095 022F                      l2079 01F9  
                    l1471 0423                      l1609 0404                      l1561 03B4  
                    l1641 04CE                      l1555 03A7                      l1707 00A1  
                    l1619 048E                      l1573 03C8                      l1733 010F  
                    l1477 0457                      l1591 03E6                      l1567 03BE  
                    l1751 011A                      l1727 00F0                      l1735 00CC  
                    l1671 0048                      l1639 04BE                      l1585 03DC  
                    l1753 0137                      l1737 0114                      l1673 0050  
                    l1649 04E1                      l1579 03D2                      l1763 0150  
                    l1691 006E                      l1667 0045                      l1597 03F0  
                    l1773 0182                      l1759 014E                      l1687 006B  
                    l1777 019B                      l1789 01BF                      l1999 0577  
                    ?_isr 0070                      u2105 0206                      u1315 04A0  
                    u2125 0222                      u1505 00DE                      u1345 04BF  
                    u2145 0237                      u1525 00E9                      u1535 00FE  
                    u1375 04D7                      u2185 0252                      u1565 011E  
                    u1655 016D                      u1495 00D5                      u2287 02A9  
                    u1665 018B                      u1585 0129                      u2297 0540  
                    u1675 01A6                      _PEIE 005E                      _RCEN 048B  
                    _TMR0 0001              __CFG_WRT$OFF 0000                      _dato 0054  
                    _flag 005A                      _door 0059                      _main 0270  
                    _pres 005F                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000           ___fldiv@new_exp 0040                     ??_isr 0070  
           ___fltol@sign1 0074                     ?_main 0070           __end_of___fldiv 01CB  
           __CFG_WDTE$OFF 0000           __end_of___fltol 04F0                     _ANSEL 0188  
                   _T1CON 0010                     i1l202 0397                     i1l183 0346  
                   i1l192 036B                     i1l184 0336                     i1l187 036F  
                   i1l179 0372                     i1l196 0385                     _TMR1H 000F  
                   _TMR1L 000E                     _PORTA 0005                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000                     _setup 04F0  
                   _state 0058            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0313    __size_of_initOscilador 004E  
                  ??_main 0051           initTimero@valor 0026                    _ADRESH 001E  
                  ?_setup 0070                    _ANSELH 0189                    i1l1853 0326  
                  i1l1845 031C                    i1l1875 035C                    i1l1895 038A  
                  i1l1879 0364                    u230_27 0342                    u231_27 0368  
                  _TMR0IF 005A                    _TMR1ON 0080                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 0270        __size_of_DutyCycle 0078  
          __CFG_PWRTE$OFF 0000                 ??___fldiv 0036                 ??___fltol 004C  
        __end_of_read_ADC 05BB                    _puerta 0076                    saved_w 007E  
            ___xxtofl@arg 002A              ___xxtofl@exp 0029              ___xxtofl@val 0020  
 __end_of__initialization 0024             _initOscilador 054D                ___fltol@f1 0048  
          __pcstackCOMMON 0070              __pidataBANK0 05BB   __size_of_I2C_Slave_Init 0019  
           __end_of_setup 054D            _OPTION_REGbits 0081         __end_of_DutyCycle 0416  
                 ??_setup 0028     I2C_Slave_Init@address 0074                __pbssBANK0 0052  
          ?_initOscilador 0070                __pmaintext 0270                __pintentry 0004  
       initOscilador@frec 0020                   _ADC_LUZ 005E                 ?___xxtofl 0020  
                 _SSPCON2 0091                   _SSPSTAT 0094                 _ADCLUZI2C 005B  
               ?_read_ADC 0070                   ___fldiv 0028                _initTimero 0416  
                 ___fltol 0483                 _ANSELbits 0188                   __ptext1 04F0  
                 __ptext2 0416                   __ptext3 054D                   __ptext4 059B  
                 __ptext5 05B4                   __ptext6 01CB                   __ptext7 0483  
                 __ptext8 0028                   __ptext9 039E                   _contPWM 0078  
                 _contLuz 0077              __size_of_isr 008B                ??___xxtofl 0024  
              _duty_cycle 005C                   _on_time 005D           ??_initOscilador 0074  
    end_of_initialization 0024                ??_read_ADC 0074            _I2C_Slave_Init 059B  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
           ___xxtofl@sign 0028                 _TRISAbits 0085                 _TRISCbits 0087  
             ___fldiv@grs 0042               ___fldiv@rem 003B    __end_of_I2C_Slave_Init 05B4  
             ?_initTimero 0020       start_initialization 000F               __end_of_isr 039E  
               _DutyCycle 039E            initTimero@tocs 0020  __CFG_FOSC$INTRC_NOCLKOUT 0000  
         ?_I2C_Slave_Init 0074               __pdataBANK0 005F                 ___fldiv@a 002E  
               ___fldiv@b 0032               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of___xxtofl 00A5       initTimero@prescaler 0024  
              ?_DutyCycle 0070       __size_of_initTimero 006D         __size_of_read_ADC 0007  
                ?___fldiv 002E                  ?___fltol 0048            __size_of_setup 005D  
       interrupt_function 0004                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F               ??_DutyCycle 0074     __end_of_initOscilador 059B  
        DutyCycle@ADC_LUZ 0075             initTimero@psa 0022              ??_initTimero 0074  
        __size_of___fldiv 01A3          __size_of___fltol 006D                  ___xxtofl 01CB  
                __ptext10 0313         __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0076  
      __end_of_initTimero 0483                  _read_ADC 05B4             __size_of_main 00A3  
                _variable 0079                _INTCONbits 000B                  intlevel1 0000  
              _OSCCONbits 008F               _SSPCON2bits 0091                _SSPCONbits 0014  
