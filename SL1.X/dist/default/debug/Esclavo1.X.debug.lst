

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 10 23:46:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.05
    26                           ; Generated 20/12/2018 GMT
    27                           ; 
    28                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataBANK0
   217  0256                     __pidataBANK0:	
   218                           
   219                           ;initializer for _pres
   220  0256  3483               	retlw	131
   221  0008                     _PORTDbits	set	8
   222  000E                     _TMR1L	set	14
   223  000F                     _TMR1H	set	15
   224  001E                     _ADRESH	set	30
   225  001F                     _ADCON0bits	set	31
   226  0010                     _T1CON	set	16
   227  0008                     _PORTD	set	8
   228  0005                     _PORTA	set	5
   229  0007                     _PORTCbits	set	7
   230  0006                     _PORTBbits	set	6
   231  0014                     _SSPCONbits	set	20
   232  000C                     _PIR1bits	set	12
   233  0001                     _TMR0	set	1
   234  000B                     _INTCONbits	set	11
   235  0013                     _SSPBUF	set	19
   236  0014                     _SSPCON	set	20
   237  0080                     _TMR1ON	set	128
   238  005A                     _TMR0IF	set	90
   239  0063                     _SSPIF	set	99
   240  005E                     _PEIE	set	94
   241  005F                     _GIE	set	95
   242  009F                     _ADCON1bits	set	159
   243  0087                     _TRISCbits	set	135
   244  0085                     _TRISAbits	set	133
   245  0086                     _TRISB	set	134
   246  0088                     _TRISD	set	136
   247  0094                     _SSPSTATbits	set	148
   248  0081                     _OPTION_REGbits	set	129
   249  008F                     _OSCCONbits	set	143
   250  0091                     _SSPCON2bits	set	145
   251  0094                     _SSPSTAT	set	148
   252  0093                     _SSPADD	set	147
   253  0091                     _SSPCON2	set	145
   254  04A0                     _BF	set	1184
   255  0463                     _SSPIE	set	1123
   256  048B                     _RCEN	set	1163
   257  043C                     _TRISC4	set	1084
   258  043B                     _TRISC3	set	1083
   259  0188                     _ANSELbits	set	392
   260  0189                     _ANSELH	set	393
   261  0188                     _ANSEL	set	392
   262                           
   263                           ; #config settings
   264  0000                     
   265                           	psect	cinit
   266  07E7                     start_initialization:	
   267  07E7                     __initialization:	
   268                           
   269                           ; Initialize objects allocated to BANK0
   270  07E7  120A  118A  2256   	fcall	__pidataBANK0	;fetch initializer
   271  07EA  00E1               	movwf	__pdataBANK0& (0+127)
   272                           
   273                           ; Clear objects allocated to BANK0
   274  07EB  01D4               	clrf	__pbssBANK0& (0+127)
   275  07EC  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   276  07ED  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   277  07EE  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   278  07EF  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   279  07F0  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   280  07F1  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   281  07F2  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   282  07F3  01DC               	clrf	(__pbssBANK0+8)& (0+127)
   283  07F4  01DD               	clrf	(__pbssBANK0+9)& (0+127)
   284  07F5  01DE               	clrf	(__pbssBANK0+10)& (0+127)
   285  07F6  01DF               	clrf	(__pbssBANK0+11)& (0+127)
   286  07F7  01E0               	clrf	(__pbssBANK0+12)& (0+127)
   287                           
   288                           ; Clear objects allocated to COMMON
   289  07F8  01F6               	clrf	__pbssCOMMON& (0+127)
   290  07F9  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   291  07FA  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   292  07FB  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   293  07FC                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296  07FC                     __end_of__initialization:	
   297  07FC  0183               	clrf	3
   298  07FD  120A  118A  2CFD   	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMMON
   301  0076                     __pbssCOMMON:	
   302  0076                     _puerta:	
   303  0076                     	ds	1
   304  0077                     _contLuz:	
   305  0077                     	ds	1
   306  0078                     _contPWM:	
   307  0078                     	ds	1
   308  0079                     _variable:	
   309  0079                     	ds	1
   310                           
   311                           	psect	bssBANK0
   312  0054                     __pbssBANK0:	
   313  0054                     _a:	
   314  0054                     	ds	2
   315  0056                     _dato:	
   316  0056                     	ds	2
   317  0058                     _z:	
   318  0058                     	ds	2
   319  005A                     _state:	
   320  005A                     	ds	1
   321  005B                     _door:	
   322  005B                     	ds	1
   323  005C                     _flag:	
   324  005C                     	ds	1
   325  005D                     _ADCLUZI2C:	
   326  005D                     	ds	1
   327  005E                     _duty_cycle:	
   328  005E                     	ds	1
   329  005F                     _on_time:	
   330  005F                     	ds	1
   331  0060                     _ADC_LUZ:	
   332  0060                     	ds	1
   333                           
   334                           	psect	dataBANK0
   335  0061                     __pdataBANK0:	
   336  0061                     _pres:	
   337  0061                     	ds	1
   338                           
   339                           	psect	cstackCOMMON
   340  0071                     __pcstackCOMMON:	
   341  0071                     ?_initOscilador:	
   342  0071                     ?_isr:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0071                     ??_isr:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0071                     ?_setup:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0071                     ?_read_ADC:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0071                     ?_DutyCycle:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0071                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360                           
   361                           ; 1 bytes @ 0x0
   362  0071                     	ds	4
   363  0075                     ??_I2C_Slave_Init:	
   364  0075                     ??_initTimero:	
   365                           ; 1 bytes @ 0x4
   366                           
   367  0075                     ??_read_ADC:	
   368                           ; 1 bytes @ 0x4
   369                           
   370  0075                     ??_DutyCycle:	
   371                           ; 1 bytes @ 0x4
   372                           
   373  0075                     initOscilador@frec:	
   374                           ; 1 bytes @ 0x4
   375                           
   376                           
   377                           ; 1 bytes @ 0x4
   378  0075                     	ds	1
   379                           
   380                           	psect	cstackBANK0
   381  0020                     __pcstackBANK0:	
   382  0020                     ?_I2C_Slave_Init:	
   383  0020                     ??_initOscilador:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0020                     ?_initTimero:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0020                     ?___xxtofl:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0020                     DutyCycle@ADC_LUZ:	
   393                           ; 4 bytes @ 0x0
   394                           
   395  0020                     I2C_Slave_Init@address:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0020                     initTimero@tocs:	
   399                           ; 2 bytes @ 0x0
   400                           
   401  0020                     ___xxtofl@val:	
   402                           ; 2 bytes @ 0x0
   403                           
   404                           
   405                           ; 4 bytes @ 0x0
   406  0020                     	ds	2
   407  0022                     initTimero@psa:	
   408                           
   409                           ; 2 bytes @ 0x2
   410  0022                     	ds	2
   411  0024                     ??___xxtofl:	
   412  0024                     initTimero@prescaler:	
   413                           ; 1 bytes @ 0x4
   414                           
   415                           
   416                           ; 2 bytes @ 0x4
   417  0024                     	ds	2
   418  0026                     initTimero@valor:	
   419                           
   420                           ; 2 bytes @ 0x6
   421  0026                     	ds	2
   422  0028                     ??_setup:	
   423  0028                     ___xxtofl@sign:	
   424                           ; 1 bytes @ 0x8
   425                           
   426                           
   427                           ; 1 bytes @ 0x8
   428  0028                     	ds	1
   429  0029                     ___xxtofl@exp:	
   430                           
   431                           ; 1 bytes @ 0x9
   432  0029                     	ds	1
   433  002A                     ___xxtofl@arg:	
   434                           
   435                           ; 4 bytes @ 0xA
   436  002A                     	ds	4
   437  002E                     ?___fldiv:	
   438  002E                     ___fldiv@a:	
   439                           ; 4 bytes @ 0xE
   440                           
   441                           
   442                           ; 4 bytes @ 0xE
   443  002E                     	ds	4
   444  0032                     ___fldiv@b:	
   445                           
   446                           ; 4 bytes @ 0x12
   447  0032                     	ds	4
   448  0036                     ??___fldiv:	
   449                           
   450                           ; 1 bytes @ 0x16
   451  0036                     	ds	5
   452  003B                     ___fldiv@rem:	
   453                           
   454                           ; 4 bytes @ 0x1B
   455  003B                     	ds	4
   456  003F                     ___fldiv@sign:	
   457                           
   458                           ; 1 bytes @ 0x1F
   459  003F                     	ds	1
   460  0040                     ___fldiv@new_exp:	
   461                           
   462                           ; 2 bytes @ 0x20
   463  0040                     	ds	2
   464  0042                     ___fldiv@grs:	
   465                           
   466                           ; 4 bytes @ 0x22
   467  0042                     	ds	4
   468  0046                     ___fldiv@bexp:	
   469                           
   470                           ; 1 bytes @ 0x26
   471  0046                     	ds	1
   472  0047                     ___fldiv@aexp:	
   473                           
   474                           ; 1 bytes @ 0x27
   475  0047                     	ds	1
   476  0048                     ?___fltol:	
   477  0048                     ___fltol@f1:	
   478                           ; 4 bytes @ 0x28
   479                           
   480                           
   481                           ; 4 bytes @ 0x28
   482  0048                     	ds	4
   483  004C                     ??___fltol:	
   484                           
   485                           ; 1 bytes @ 0x2C
   486  004C                     	ds	5
   487  0051                     ___fltol@sign1:	
   488                           
   489                           ; 1 bytes @ 0x31
   490  0051                     	ds	1
   491  0052                     ___fltol@exp1:	
   492                           
   493                           ; 1 bytes @ 0x32
   494  0052                     	ds	1
   495  0053                     ??_main:	
   496                           
   497                           ; 1 bytes @ 0x33
   498  0053                     	ds	1
   499                           
   500                           	psect	maintext
   501  04FD                     __pmaintext:	
   502 ;;
   503 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   504 ;;
   505 ;; *************** function _main *****************
   506 ;; Defined at:
   507 ;;		line 206 in file "Esclavo1.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : B00/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0
   523 ;;      Temps:          0       1       0       0       0
   524 ;;      Totals:         0       1       0       0       0
   525 ;;Total ram usage:        1 bytes
   526 ;; Hardware stack levels required when called:    3
   527 ;; This function calls:
   528 ;;		_DutyCycle
   529 ;;		___fldiv
   530 ;;		___fltol
   531 ;;		___xxtofl
   532 ;;		_read_ADC
   533 ;;		_setup
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           
   540                           ;psect for function _main
   541  04FD                     _main:	
   542                           
   543                           ;Esclavo1.c: 207:     setup();
   544                           
   545                           ;incstack = 0
   546                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   547  04FD  120A  118A  22C7  120A  118A  	fcall	_setup
   548                           
   549                           ;Esclavo1.c: 208:     flag = 0;
   550  0502  1283               	bcf	3,5	;RP0=0, select bank0
   551  0503  1303               	bcf	3,6	;RP1=0, select bank0
   552  0504  01DC               	clrf	_flag
   553                           
   554                           ;Esclavo1.c: 209:     state = 0;
   555  0505  01DA               	clrf	_state
   556  0506                     l2195:	
   557                           
   558                           ;Esclavo1.c: 212:         flag ++;
   559  0506  3001               	movlw	1
   560  0507  00D3               	movwf	??_main
   561  0508  0853               	movf	??_main,w
   562  0509  07DC               	addwf	_flag,f
   563                           
   564                           ;Esclavo1.c: 213:         if (flag == 255){
   565  050A  0A5C               	incf	_flag,w
   566  050B  1D03               	btfss	3,2
   567  050C  2D11               	goto	l2201
   568                           
   569                           ;Esclavo1.c: 214:             door ++;
   570  050D  3001               	movlw	1
   571  050E  00D3               	movwf	??_main
   572  050F  0853               	movf	??_main,w
   573  0510  07DB               	addwf	_door,f
   574  0511                     l2201:	
   575                           
   576                           ;Esclavo1.c: 216:         ADC_LUZ = read_ADC();
   577  0511  120A  118A  2257  120A  118A  	fcall	_read_ADC
   578  0516  1283               	bcf	3,5	;RP0=0, select bank0
   579  0517  1303               	bcf	3,6	;RP1=0, select bank0
   580  0518  00D3               	movwf	??_main
   581  0519  0853               	movf	??_main,w
   582  051A  00E0               	movwf	_ADC_LUZ
   583                           
   584                           ;Esclavo1.c: 217:         ADCLUZI2C = ADC_LUZ;
   585  051B  0860               	movf	_ADC_LUZ,w
   586  051C  00D3               	movwf	??_main
   587  051D  0853               	movf	??_main,w
   588  051E  00DD               	movwf	_ADCLUZI2C
   589                           
   590                           ;Esclavo1.c: 219:         duty_cycle = DutyCycle(ADC_LUZ);
   591  051F  0860               	movf	_ADC_LUZ,w
   592  0520  120A  118A  2400  120A  118A  	fcall	_DutyCycle
   593  0525  1283               	bcf	3,5	;RP0=0, select bank0
   594  0526  1303               	bcf	3,6	;RP1=0, select bank0
   595  0527  00D3               	movwf	??_main
   596  0528  0853               	movf	??_main,w
   597  0529  00DE               	movwf	_duty_cycle
   598                           
   599                           ;Esclavo1.c: 228:         if(door==10){
   600  052A  300A               	movlw	10
   601  052B  065B               	xorwf	_door,w
   602  052C  1D03               	btfss	3,2
   603  052D  2D06               	goto	l2195
   604                           
   605                           ;Esclavo1.c: 230:         TMR1H = 0;
   606  052E  018F               	clrf	15	;volatile
   607                           
   608                           ;Esclavo1.c: 231:         TMR1L = 0;
   609  052F  018E               	clrf	14	;volatile
   610                           
   611                           ;Esclavo1.c: 232:         PORTDbits.RD0 = 1;
   612  0530  1408               	bsf	8,0	;volatile
   613                           
   614                           ;Esclavo1.c: 233:         _delay((unsigned long)((10)*(8000000/4000000.0)));
   615  0531  3005               	movlw	5
   616  0532  1283               	bcf	3,5	;RP0=0, select bank0
   617  0533  1303               	bcf	3,6	;RP1=0, select bank0
   618  0534  00D3               	movwf	??_main
   619  0535                     u2497:	
   620  0535  0BD3               	decfsz	??_main,f
   621  0536  2D35               	goto	u2497
   622  0537  2D38               	nop2
   623                           
   624                           ;Esclavo1.c: 234:         PORTDbits.RD0 = 0;
   625  0538  1283               	bcf	3,5	;RP0=0, select bank0
   626  0539  1303               	bcf	3,6	;RP1=0, select bank0
   627  053A  1008               	bcf	8,0	;volatile
   628  053B                     l243:	
   629                           ;Esclavo1.c: 236:         while(!PORTDbits.RD1);
   630                           
   631  053B  1C88               	btfss	8,1	;volatile
   632  053C  2D3B               	goto	l243
   633                           
   634                           ;Esclavo1.c: 237:         TMR1ON = 1;
   635  053D  1410               	bsf	16,0	;volatile
   636  053E                     l246:	
   637                           ;Esclavo1.c: 238:         while(PORTDbits.RD1);
   638                           
   639  053E  1888               	btfsc	8,1	;volatile
   640  053F  2D3E               	goto	l246
   641                           
   642                           ;Esclavo1.c: 239:         TMR1ON = 0;
   643  0540  1010               	bcf	16,0	;volatile
   644                           
   645                           ;Esclavo1.c: 241:         a = (TMR1L | (TMR1H<<8));
   646  0541  080F               	movf	15,w	;volatile
   647  0542  00D5               	movwf	_a+1
   648  0543  080E               	movf	14,w	;volatile
   649  0544  00D4               	movwf	_a
   650                           
   651                           ;Esclavo1.c: 242:         a = a/58.82;
   652  0545  0854               	movf	_a,w
   653  0546  00A0               	movwf	___xxtofl@val
   654  0547  0855               	movf	_a+1,w
   655  0548  00A1               	movwf	___xxtofl@val+1
   656  0549  01A2               	clrf	___xxtofl@val+2
   657  054A  01A3               	clrf	___xxtofl@val+3
   658  054B  3000               	movlw	0
   659  054C  120A  118A  259F  120A  118A  	fcall	___xxtofl
   660  0551  1283               	bcf	3,5	;RP0=0, select bank0
   661  0552  1303               	bcf	3,6	;RP1=0, select bank0
   662  0553  0823               	movf	?___xxtofl+3,w
   663  0554  00B5               	movwf	___fldiv@b+3
   664  0555  0822               	movf	?___xxtofl+2,w
   665  0556  00B4               	movwf	___fldiv@b+2
   666  0557  0821               	movf	?___xxtofl+1,w
   667  0558  00B3               	movwf	___fldiv@b+1
   668  0559  0820               	movf	?___xxtofl,w
   669  055A  00B2               	movwf	___fldiv@b
   670  055B  3042               	movlw	66
   671  055C  00B1               	movwf	___fldiv@a+3
   672  055D  306B               	movlw	107
   673  055E  00B0               	movwf	___fldiv@a+2
   674  055F  3047               	movlw	71
   675  0560  00AF               	movwf	___fldiv@a+1
   676  0561  30AE               	movlw	174
   677  0562  00AE               	movwf	___fldiv@a
   678  0563  120A  118A  2644  120A  118A  	fcall	___fldiv
   679  0568  1283               	bcf	3,5	;RP0=0, select bank0
   680  0569  1303               	bcf	3,6	;RP1=0, select bank0
   681  056A  0831               	movf	?___fldiv+3,w
   682  056B  00CB               	movwf	___fltol@f1+3
   683  056C  0830               	movf	?___fldiv+2,w
   684  056D  00CA               	movwf	___fltol@f1+2
   685  056E  082F               	movf	?___fldiv+1,w
   686  056F  00C9               	movwf	___fltol@f1+1
   687  0570  082E               	movf	?___fldiv,w
   688  0571  00C8               	movwf	___fltol@f1
   689  0572  120A  118A  2326  120A  118A  	fcall	___fltol
   690  0577  1283               	bcf	3,5	;RP0=0, select bank0
   691  0578  1303               	bcf	3,6	;RP1=0, select bank0
   692  0579  0849               	movf	?___fltol+1,w
   693  057A  00D5               	movwf	_a+1
   694  057B  0848               	movf	?___fltol,w
   695  057C  00D4               	movwf	_a
   696                           
   697                           ;Esclavo1.c: 243:         a = a + 1;
   698  057D  0854               	movf	_a,w
   699  057E  3E01               	addlw	1
   700  057F  00D4               	movwf	_a
   701  0580  0855               	movf	_a+1,w
   702  0581  1803               	skipnc
   703  0582  3E01               	addlw	1
   704  0583  3E00               	addlw	0
   705  0584  00D5               	movwf	_a+1
   706                           
   707                           ;Esclavo1.c: 245:         if (a<=10)
   708  0585  3000               	movlw	0
   709  0586  0255               	subwf	_a+1,w
   710  0587  300B               	movlw	11
   711  0588  1903               	skipnz
   712  0589  0254               	subwf	_a,w
   713  058A  1803               	skipnc
   714  058B  2D8F               	goto	l2227
   715                           
   716                           ;Esclavo1.c: 246:         {;Esclavo1.c: 248:             state = 1;
   717  058C  01DA               	clrf	_state
   718  058D  0ADA               	incf	_state,f
   719                           
   720                           ;Esclavo1.c: 249:         }
   721  058E  2D90               	goto	l2229
   722  058F                     l2227:	
   723                           
   724                           ;Esclavo1.c: 251:             state = 0;
   725  058F  01DA               	clrf	_state
   726  0590                     l2229:	
   727                           
   728                           ;Esclavo1.c: 255:         if (state == 1){
   729  0590  035A               	decf	_state,w
   730  0591  1D03               	btfss	3,2
   731  0592  2D97               	goto	l2233
   732                           
   733                           ;Esclavo1.c: 256:             on_time = 0x2;
   734  0593  3002               	movlw	2
   735  0594  00D3               	movwf	??_main
   736  0595  0853               	movf	??_main,w
   737  0596  00DF               	movwf	_on_time
   738  0597                     l2233:	
   739                           
   740                           ;Esclavo1.c: 258:         if(state == 0){
   741  0597  085A               	movf	_state,w
   742  0598  1D03               	btfss	3,2
   743  0599  2D06               	goto	l2195
   744                           
   745                           ;Esclavo1.c: 259:             on_time = 0x3;
   746  059A  3003               	movlw	3
   747  059B  00D3               	movwf	??_main
   748  059C  0853               	movf	??_main,w
   749  059D  00DF               	movwf	_on_time
   750  059E  2D06               	goto	l2195
   751  059F                     __end_of_main:	
   752                           
   753                           	psect	text1
   754  02C7                     __ptext1:	
   755 ;; *************** function _setup *****************
   756 ;; Defined at:
   757 ;;		line 123 in file "Esclavo1.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0
   773 ;;      Temps:          0       2       0       0       0
   774 ;;      Totals:         0       2       0       0       0
   775 ;;Total ram usage:        2 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    2
   778 ;; This function calls:
   779 ;;		_I2C_Slave_Init
   780 ;;		_initOscilador
   781 ;;		_initTimero
   782 ;; This function is called by:
   783 ;;		_main
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function _setup
   789  02C7                     _setup:	
   790                           
   791                           ;Esclavo1.c: 124:     initOscilador(7);
   792                           
   793                           ;incstack = 0
   794                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   795  02C7  3007               	movlw	7
   796  02C8  120A  118A  2279  120A  118A  	fcall	_initOscilador
   797                           
   798                           ;Esclavo1.c: 125:     ANSEL = 0;
   799  02CD  1683               	bsf	3,5	;RP0=1, select bank3
   800  02CE  1703               	bsf	3,6	;RP1=1, select bank3
   801  02CF  0188               	clrf	8	;volatile
   802                           
   803                           ;Esclavo1.c: 126:     ANSELH = 0;
   804  02D0  0189               	clrf	9	;volatile
   805                           
   806                           ;Esclavo1.c: 127:     TRISD = 0b00000010;
   807  02D1  3002               	movlw	2
   808  02D2  1683               	bsf	3,5	;RP0=1, select bank1
   809  02D3  1303               	bcf	3,6	;RP1=0, select bank1
   810  02D4  0088               	movwf	8	;volatile
   811                           
   812                           ;Esclavo1.c: 128:     TRISB = 0;
   813  02D5  0186               	clrf	6	;volatile
   814                           
   815                           ;Esclavo1.c: 130:     PORTA = 0;
   816  02D6  1283               	bcf	3,5	;RP0=0, select bank0
   817  02D7  1303               	bcf	3,6	;RP1=0, select bank0
   818  02D8  0185               	clrf	5	;volatile
   819                           
   820                           ;Esclavo1.c: 131:     PORTD = 0;
   821  02D9  0188               	clrf	8	;volatile
   822                           
   823                           ;Esclavo1.c: 132:     TRISB = 0;
   824  02DA  1683               	bsf	3,5	;RP0=1, select bank1
   825  02DB  1303               	bcf	3,6	;RP1=0, select bank1
   826  02DC  0186               	clrf	6	;volatile
   827                           
   828                           ;Esclavo1.c: 133:     TRISAbits.TRISA0 = 1;
   829  02DD  1405               	bsf	5,0	;volatile
   830                           
   831                           ;Esclavo1.c: 134:     TRISAbits.TRISA4 = 1;
   832  02DE  1605               	bsf	5,4	;volatile
   833                           
   834                           ;Esclavo1.c: 135:     TRISCbits.TRISC1 = 0;
   835  02DF  1087               	bcf	7,1	;volatile
   836                           
   837                           ;Esclavo1.c: 137:     PORTBbits.RB5 = 0;
   838  02E0  1283               	bcf	3,5	;RP0=0, select bank0
   839  02E1  1303               	bcf	3,6	;RP1=0, select bank0
   840  02E2  1286               	bcf	6,5	;volatile
   841                           
   842                           ;Esclavo1.c: 138:     PORTCbits.RC1 = 0;
   843  02E3  1087               	bcf	7,1	;volatile
   844                           
   845                           ;Esclavo1.c: 139:     on_time = 0x2;
   846  02E4  3002               	movlw	2
   847  02E5  00A8               	movwf	??_setup
   848  02E6  0828               	movf	??_setup,w
   849  02E7  00DF               	movwf	_on_time
   850                           
   851                           ;Esclavo1.c: 140:     duty_cycle = 0U;
   852  02E8  01DE               	clrf	_duty_cycle
   853                           
   854                           ;Esclavo1.c: 143:     initTimero(0, 0, 2, pres);
   855  02E9  3000               	movlw	0
   856  02EA  00A0               	movwf	initTimero@tocs
   857  02EB  00A1               	movwf	initTimero@tocs+1
   858  02EC  3000               	movlw	0
   859  02ED  00A2               	movwf	initTimero@psa
   860  02EE  00A3               	movwf	initTimero@psa+1
   861  02EF  3002               	movlw	2
   862  02F0  00A4               	movwf	initTimero@prescaler
   863  02F1  3000               	movlw	0
   864  02F2  00A5               	movwf	initTimero@prescaler+1
   865  02F3  3083               	movlw	131
   866  02F4  00A6               	movwf	initTimero@valor
   867  02F5  3000               	movlw	0
   868  02F6  00A7               	movwf	initTimero@valor+1
   869  02F7  120A  118A  2393  120A  118A  	fcall	_initTimero
   870                           
   871                           ;Esclavo1.c: 146:     T1CON = 0x10;
   872  02FC  3010               	movlw	16
   873  02FD  1283               	bcf	3,5	;RP0=0, select bank0
   874  02FE  1303               	bcf	3,6	;RP1=0, select bank0
   875  02FF  0090               	movwf	16	;volatile
   876                           
   877                           ;Esclavo1.c: 149:     ANSELbits.ANS0 = 1;
   878  0300  1683               	bsf	3,5	;RP0=1, select bank3
   879  0301  1703               	bsf	3,6	;RP1=1, select bank3
   880  0302  1408               	bsf	8,0	;volatile
   881                           
   882                           ;Esclavo1.c: 150:     ADCON1bits.VCFG0 = 0;
   883  0303  1683               	bsf	3,5	;RP0=1, select bank1
   884  0304  1303               	bcf	3,6	;RP1=0, select bank1
   885  0305  121F               	bcf	31,4	;volatile
   886                           
   887                           ;Esclavo1.c: 151:     ADCON1bits.VCFG1 = 0;
   888  0306  129F               	bcf	31,5	;volatile
   889                           
   890                           ;Esclavo1.c: 152:     ADCON1bits.ADFM = 0;
   891  0307  139F               	bcf	31,7	;volatile
   892                           
   893                           ;Esclavo1.c: 153:     ADCON0bits.ADCS1 = 1;
   894  0308  1283               	bcf	3,5	;RP0=0, select bank0
   895  0309  1303               	bcf	3,6	;RP1=0, select bank0
   896  030A  179F               	bsf	31,7	;volatile
   897                           
   898                           ;Esclavo1.c: 154:     ADCON0bits.ADCS0 = 0;
   899  030B  131F               	bcf	31,6	;volatile
   900                           
   901                           ;Esclavo1.c: 155:     ADCON0bits.ADON = 1;
   902  030C  141F               	bsf	31,0	;volatile
   903                           
   904                           ;Esclavo1.c: 156:     ADCON0bits.CHS3 = 0;
   905  030D  129F               	bcf	31,5	;volatile
   906                           
   907                           ;Esclavo1.c: 157:     ADCON0bits.CHS2 = 0;
   908  030E  121F               	bcf	31,4	;volatile
   909                           
   910                           ;Esclavo1.c: 158:     ADCON0bits.CHS1 = 0;
   911  030F  119F               	bcf	31,3	;volatile
   912                           
   913                           ;Esclavo1.c: 159:     ADCON0bits.CHS0 = 0;
   914  0310  111F               	bcf	31,2	;volatile
   915                           
   916                           ;Esclavo1.c: 160:     _delay((unsigned long)((2)*(8000000/4000.0)));
   917  0311  3006               	movlw	6
   918  0312  1283               	bcf	3,5	;RP0=0, select bank0
   919  0313  1303               	bcf	3,6	;RP1=0, select bank0
   920  0314  00A9               	movwf	??_setup+1
   921  0315  302F               	movlw	47
   922  0316  00A8               	movwf	??_setup
   923  0317                     u2507:	
   924  0317  0BA8               	decfsz	??_setup,f
   925  0318  2B17               	goto	u2507
   926  0319  0BA9               	decfsz	??_setup+1,f
   927  031A  2B17               	goto	u2507
   928  031B  2B1C               	nop2
   929                           
   930                           ;Esclavo1.c: 163:     I2C_Slave_Init(0x20);
   931  031C  3020               	movlw	32
   932  031D  1283               	bcf	3,5	;RP0=0, select bank0
   933  031E  1303               	bcf	3,6	;RP1=0, select bank0
   934  031F  00A0               	movwf	I2C_Slave_Init@address
   935  0320  3000               	movlw	0
   936  0321  00A1               	movwf	I2C_Slave_Init@address+1
   937  0322  120A  118A  225E   	fcall	_I2C_Slave_Init
   938  0325  0008               	return
   939  0326                     __end_of_setup:	
   940                           
   941                           	psect	text2
   942  0393                     __ptext2:	
   943 ;; *************** function _initTimero *****************
   944 ;; Defined at:
   945 ;;		line 7 in file "./Timer0.h"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  tocs            2    0[BANK0 ] int 
   948 ;;  psa             2    2[BANK0 ] int 
   949 ;;  prescaler       2    4[BANK0 ] int 
   950 ;;  valor           2    6[BANK0 ] int 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       8       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0
   965 ;;      Totals:         0       8       0       0       0
   966 ;;Total ram usage:        8 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_setup
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _initTimero
   978  0393                     _initTimero:	
   979                           
   980                           ;./Timer0.h: 9:     if(tocs==1){
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _initTimero: [wreg-fsr0h+status,2+status,0]
   984  0393  1283               	bcf	3,5	;RP0=0, select bank0
   985  0394  1303               	bcf	3,6	;RP1=0, select bank0
   986  0395  0320               	decf	initTimero@tocs,w
   987  0396  0421               	iorwf	initTimero@tocs+1,w
   988  0397  1D03               	btfss	3,2
   989  0398  2B9D               	goto	l130
   990                           
   991                           ;./Timer0.h: 10:         OPTION_REGbits.T0CS = 1;
   992  0399  1683               	bsf	3,5	;RP0=1, select bank1
   993  039A  1303               	bcf	3,6	;RP1=0, select bank1
   994  039B  1681               	bsf	1,5	;volatile
   995                           
   996                           ;./Timer0.h: 11:     }else{
   997  039C  2BA0               	goto	l1471
   998  039D                     l130:	
   999                           
  1000                           ;./Timer0.h: 12:         OPTION_REGbits.T0CS = 0;
  1001  039D  1683               	bsf	3,5	;RP0=1, select bank1
  1002  039E  1303               	bcf	3,6	;RP1=0, select bank1
  1003  039F  1281               	bcf	1,5	;volatile
  1004  03A0                     l1471:	
  1005                           
  1006                           ;./Timer0.h: 15:     if(psa == 1){
  1007  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1008  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1009  03A2  0322               	decf	initTimero@psa,w
  1010  03A3  0423               	iorwf	initTimero@psa+1,w
  1011  03A4  1D03               	btfss	3,2
  1012  03A5  2BAA               	goto	l132
  1013                           
  1014                           ;./Timer0.h: 16:         OPTION_REGbits.PSA = 1;
  1015  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  1016  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  1017  03A8  1581               	bsf	1,3	;volatile
  1018                           
  1019                           ;./Timer0.h: 17:     }else{
  1020  03A9  2BD4               	goto	l1477
  1021  03AA                     l132:	
  1022                           
  1023                           ;./Timer0.h: 18:         OPTION_REGbits.PSA = 0;
  1024  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  1025  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  1026  03AC  1181               	bcf	1,3	;volatile
  1027  03AD  2BD4               	goto	l1477
  1028  03AE                     l135:	
  1029                           ;./Timer0.h: 22:         case 0:
  1030                           
  1031                           
  1032                           ;./Timer0.h: 24:             OPTION_REGbits.PS0 = 0;
  1033  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1034  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1035  03B0  1001               	bcf	1,0	;volatile
  1036  03B1  2BB5               	goto	L1
  1037  03B2                     l137:	
  1038                           ;./Timer0.h: 28:         case 1:
  1039                           
  1040                           ;./Timer0.h: 27:             break;
  1041                           
  1042                           ;./Timer0.h: 26:             OPTION_REGbits.PS2 = 0;
  1043                           
  1044                           ;./Timer0.h: 25:             OPTION_REGbits.PS1 = 0;
  1045                           
  1046                           
  1047                           ;./Timer0.h: 30:             OPTION_REGbits.PS0 = 1;
  1048  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  1049  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  1050  03B4  1401               	bsf	1,0	;volatile
  1051  03B5                     L1:	
  1052                           
  1053                           ;./Timer0.h: 31:             OPTION_REGbits.PS1 = 0;
  1054  03B5  1081               	bcf	1,1	;volatile
  1055  03B6  2BBF               	goto	L3
  1056  03B7                     l138:	
  1057                           ;./Timer0.h: 34:         case 2:
  1058                           
  1059                           ;./Timer0.h: 33:             break;
  1060                           
  1061                           ;./Timer0.h: 32:             OPTION_REGbits.PS2 = 0;
  1062                           
  1063                           
  1064                           ;./Timer0.h: 36:             OPTION_REGbits.PS0 = 0;
  1065  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  1066  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  1067  03B9  1001               	bcf	1,0	;volatile
  1068  03BA  2BBE               	goto	L7
  1069  03BB                     l139:	
  1070                           ;./Timer0.h: 40:         case 3:
  1071                           
  1072                           ;./Timer0.h: 39:             break;
  1073                           
  1074                           ;./Timer0.h: 38:             OPTION_REGbits.PS2 = 0;
  1075                           
  1076                           ;./Timer0.h: 37:             OPTION_REGbits.PS1 = 1;
  1077                           
  1078                           
  1079                           ;./Timer0.h: 42:             OPTION_REGbits.PS0 = 1;
  1080  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1081  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  1082  03BD  1401               	bsf	1,0	;volatile
  1083  03BE                     L7:	
  1084                           
  1085                           ;./Timer0.h: 43:             OPTION_REGbits.PS1 = 1;
  1086  03BE  1481               	bsf	1,1	;volatile
  1087  03BF                     L3:	
  1088                           
  1089                           ;./Timer0.h: 44:             OPTION_REGbits.PS2 = 0;
  1090  03BF  1101               	bcf	1,2	;volatile
  1091                           
  1092                           ;./Timer0.h: 45:             break;
  1093  03C0  2BF5               	goto	l136
  1094  03C1                     l140:	
  1095                           ;./Timer0.h: 46:         case 4:
  1096                           
  1097                           
  1098                           ;./Timer0.h: 48:             OPTION_REGbits.PS0 = 0;
  1099  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1100  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1101  03C3  1001               	bcf	1,0	;volatile
  1102  03C4  2BC8               	goto	L4
  1103  03C5                     l141:	
  1104                           ;./Timer0.h: 52:         case 5:
  1105                           
  1106                           ;./Timer0.h: 51:             break;
  1107                           
  1108                           ;./Timer0.h: 50:             OPTION_REGbits.PS2 = 1;
  1109                           
  1110                           ;./Timer0.h: 49:             OPTION_REGbits.PS1 = 0;
  1111                           
  1112                           
  1113                           ;./Timer0.h: 54:             OPTION_REGbits.PS0 = 1;
  1114  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  1115  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  1116  03C7  1401               	bsf	1,0	;volatile
  1117  03C8                     L4:	
  1118                           
  1119                           ;./Timer0.h: 55:             OPTION_REGbits.PS1 = 0;
  1120  03C8  1081               	bcf	1,1	;volatile
  1121  03C9  2BD2               	goto	L6
  1122  03CA                     l142:	
  1123                           ;./Timer0.h: 58:         case 6:
  1124                           
  1125                           ;./Timer0.h: 57:             break;
  1126                           
  1127                           ;./Timer0.h: 56:             OPTION_REGbits.PS2 = 1;
  1128                           
  1129                           
  1130                           ;./Timer0.h: 60:             OPTION_REGbits.PS0 = 0;
  1131  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1132  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1133  03CC  1001               	bcf	1,0	;volatile
  1134  03CD  2BD1               	goto	L8
  1135  03CE                     l143:	
  1136                           ;./Timer0.h: 64:         case 7:
  1137                           
  1138                           ;./Timer0.h: 63:             break;
  1139                           
  1140                           ;./Timer0.h: 62:             OPTION_REGbits.PS2 = 1;
  1141                           
  1142                           ;./Timer0.h: 61:             OPTION_REGbits.PS1 = 1;
  1143                           
  1144                           
  1145                           ;./Timer0.h: 66:             OPTION_REGbits.PS0 = 1;
  1146  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  1147  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  1148  03D0  1401               	bsf	1,0	;volatile
  1149  03D1                     L8:	
  1150                           
  1151                           ;./Timer0.h: 67:             OPTION_REGbits.PS1 = 1;
  1152  03D1  1481               	bsf	1,1	;volatile
  1153  03D2                     L6:	
  1154                           
  1155                           ;./Timer0.h: 68:             OPTION_REGbits.PS2 = 1;
  1156  03D2  1501               	bsf	1,2	;volatile
  1157                           
  1158                           ;./Timer0.h: 69:             break;
  1159  03D3  2BF5               	goto	l136
  1160  03D4                     l1477:	
  1161                           
  1162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1163                           ; Switch size 1, requested type "simple"
  1164                           ; Number of cases is 1, Range of values is 0 to 0
  1165                           ; switch strategies available:
  1166                           ; Name         Instructions Cycles
  1167                           ; simple_byte            4     3 (average)
  1168                           ; direct_byte           11     8 (fixed)
  1169                           ; jumptable            260     6 (fixed)
  1170                           ;	Chosen strategy is simple_byte
  1171  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1172  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1173  03D6  0825               	movf	initTimero@prescaler+1,w
  1174  03D7  3A00               	xorlw	0	; case 0
  1175  03D8  1903               	skipnz
  1176  03D9  2BDB               	goto	l2277
  1177  03DA  2BF5               	goto	l136
  1178  03DB                     l2277:	
  1179                           
  1180                           ; Switch size 1, requested type "simple"
  1181                           ; Number of cases is 8, Range of values is 0 to 7
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte           25    13 (average)
  1185                           ; direct_byte           32     8 (fixed)
  1186                           ; jumptable            260     6 (fixed)
  1187                           ;	Chosen strategy is simple_byte
  1188  03DB  0824               	movf	initTimero@prescaler,w
  1189  03DC  3A00               	xorlw	0	; case 0
  1190  03DD  1903               	skipnz
  1191  03DE  2BAE               	goto	l135
  1192  03DF  3A01               	xorlw	1	; case 1
  1193  03E0  1903               	skipnz
  1194  03E1  2BB2               	goto	l137
  1195  03E2  3A03               	xorlw	3	; case 2
  1196  03E3  1903               	skipnz
  1197  03E4  2BB7               	goto	l138
  1198  03E5  3A01               	xorlw	1	; case 3
  1199  03E6  1903               	skipnz
  1200  03E7  2BBB               	goto	l139
  1201  03E8  3A07               	xorlw	7	; case 4
  1202  03E9  1903               	skipnz
  1203  03EA  2BC1               	goto	l140
  1204  03EB  3A01               	xorlw	1	; case 5
  1205  03EC  1903               	skipnz
  1206  03ED  2BC5               	goto	l141
  1207  03EE  3A03               	xorlw	3	; case 6
  1208  03EF  1903               	skipnz
  1209  03F0  2BCA               	goto	l142
  1210  03F1  3A01               	xorlw	1	; case 7
  1211  03F2  1903               	skipnz
  1212  03F3  2BCE               	goto	l143
  1213  03F4  2BF5               	goto	l136
  1214  03F5                     l136:	
  1215                           
  1216                           ;./Timer0.h: 72:     INTCONbits.GIE = 1;
  1217  03F5  178B               	bsf	11,7	;volatile
  1218                           
  1219                           ;./Timer0.h: 73:     OPTION_REGbits.nRBPU = 1;
  1220  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  1221  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  1222  03F8  1781               	bsf	1,7	;volatile
  1223                           
  1224                           ;./Timer0.h: 74:     INTCONbits.T0IE = 1;
  1225  03F9  168B               	bsf	11,5	;volatile
  1226                           
  1227                           ;./Timer0.h: 75:     INTCONbits.T0IF = 0;
  1228  03FA  110B               	bcf	11,2	;volatile
  1229                           
  1230                           ;./Timer0.h: 76:     TMR0 = valor;
  1231  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1232  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1233  03FD  0826               	movf	initTimero@valor,w
  1234  03FE  0081               	movwf	1	;volatile
  1235  03FF  0008               	return
  1236  0400                     __end_of_initTimero:	
  1237                           
  1238                           	psect	text3
  1239  0279                     __ptext3:	
  1240 ;; *************** function _initOscilador *****************
  1241 ;; Defined at:
  1242 ;;		line 15 in file "./Oscilador.h"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  frec            1    wreg     unsigned char 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  frec            1    4[COMMON] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         0       0       0       0       0
  1257 ;;      Locals:         1       0       0       0       0
  1258 ;;      Temps:          0       2       0       0       0
  1259 ;;      Totals:         1       2       0       0       0
  1260 ;;Total ram usage:        3 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_setup
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _initOscilador
  1272  0279                     _initOscilador:	
  1273                           
  1274                           ;incstack = 0
  1275                           ; Regs used in _initOscilador: [wreg-fsr0h+status,2+status,0]
  1276                           ;initOscilador@frec stored from wreg
  1277  0279  00F5               	movwf	initOscilador@frec
  1278                           
  1279                           ;./Oscilador.h: 17:             break;
  1280  027A  2AA1               	goto	l2013
  1281  027B                     l117:	
  1282                           ;./Oscilador.h: 18:         case 2:
  1283                           
  1284                           
  1285                           ;./Oscilador.h: 20:             OSCCONbits.IRCF0 = 0;
  1286  027B  1683               	bsf	3,5	;RP0=1, select bank1
  1287  027C  1303               	bcf	3,6	;RP1=0, select bank1
  1288  027D  120F               	bcf	15,4	;volatile
  1289  027E  2A82               	goto	L9
  1290  027F                     l119:	
  1291                           ;./Oscilador.h: 24:         case 3:
  1292                           
  1293                           ;./Oscilador.h: 23:             break;
  1294                           
  1295                           ;./Oscilador.h: 22:             OSCCONbits.IRCF2 = 0;
  1296                           
  1297                           ;./Oscilador.h: 21:             OSCCONbits.IRCF1 = 1;
  1298                           
  1299                           
  1300                           ;./Oscilador.h: 26:             OSCCONbits.IRCF0 = 1;
  1301  027F  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0280  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0281  160F               	bsf	15,4	;volatile
  1304  0282                     L9:	
  1305                           
  1306                           ;./Oscilador.h: 27:             OSCCONbits.IRCF1 = 1;
  1307  0282  128F               	bcf	15,5	;volatile
  1308  0283  2A8C               	goto	L11
  1309  0284                     l120:	
  1310                           ;./Oscilador.h: 30:         case 4:
  1311                           
  1312                           ;./Oscilador.h: 29:             break;
  1313                           
  1314                           ;./Oscilador.h: 28:             OSCCONbits.IRCF2 = 0;
  1315                           
  1316                           
  1317                           ;./Oscilador.h: 32:             OSCCONbits.IRCF0 = 0;
  1318  0284  1683               	bsf	3,5	;RP0=1, select bank1
  1319  0285  1303               	bcf	3,6	;RP1=0, select bank1
  1320  0286  120F               	bcf	15,4	;volatile
  1321  0287  2A8B               	goto	L16
  1322  0288                     l121:	
  1323                           ;./Oscilador.h: 36:         case 5:
  1324                           
  1325                           ;./Oscilador.h: 35:             break;
  1326                           
  1327                           ;./Oscilador.h: 34:             OSCCONbits.IRCF2 = 1;
  1328                           
  1329                           ;./Oscilador.h: 33:             OSCCONbits.IRCF1 = 0;
  1330                           
  1331                           
  1332                           ;./Oscilador.h: 38:             OSCCONbits.IRCF0 = 1;
  1333  0288  1683               	bsf	3,5	;RP0=1, select bank1
  1334  0289  1303               	bcf	3,6	;RP1=0, select bank1
  1335  028A  160F               	bsf	15,4	;volatile
  1336  028B                     L16:	
  1337                           
  1338                           ;./Oscilador.h: 39:             OSCCONbits.IRCF1 = 0;
  1339  028B  168F               	bsf	15,5	;volatile
  1340  028C                     L11:	
  1341                           
  1342                           ;./Oscilador.h: 40:             OSCCONbits.IRCF2 = 1;
  1343  028C  130F               	bcf	15,6	;volatile
  1344                           
  1345                           ;./Oscilador.h: 41:             break;
  1346  028D  2AC5               	goto	l118
  1347  028E                     l122:	
  1348                           ;./Oscilador.h: 42:         case 6:
  1349                           
  1350                           
  1351                           ;./Oscilador.h: 44:             OSCCONbits.IRCF0 = 0;
  1352  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1353  028F  1303               	bcf	3,6	;RP1=0, select bank1
  1354  0290  120F               	bcf	15,4	;volatile
  1355  0291  2A95               	goto	L12
  1356  0292                     l123:	
  1357                           ;./Oscilador.h: 48:         case 7:
  1358                           
  1359                           ;./Oscilador.h: 47:             break;
  1360                           
  1361                           ;./Oscilador.h: 46:             OSCCONbits.IRCF2 = 1;
  1362                           
  1363                           ;./Oscilador.h: 45:             OSCCONbits.IRCF1 = 1;
  1364                           
  1365                           
  1366                           ;./Oscilador.h: 50:             OSCCONbits.IRCF0 = 1;
  1367  0292  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0293  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0294  160F               	bsf	15,4	;volatile
  1370  0295                     L12:	
  1371                           
  1372                           ;./Oscilador.h: 51:             OSCCONbits.IRCF1 = 1;
  1373  0295  128F               	bcf	15,5	;volatile
  1374  0296  2A9F               	goto	L15
  1375  0297                     l124:	
  1376                           ;./Oscilador.h: 54:         default:
  1377                           
  1378                           ;./Oscilador.h: 53:             break;
  1379                           
  1380                           ;./Oscilador.h: 52:             OSCCONbits.IRCF2 = 1;
  1381                           
  1382                           
  1383                           ;./Oscilador.h: 56:             OSCCONbits.IRCF0 = 1;
  1384  0297  1683               	bsf	3,5	;RP0=1, select bank1
  1385  0298  1303               	bcf	3,6	;RP1=0, select bank1
  1386  0299  120F               	bcf	15,4	;volatile
  1387  029A  2A9E               	goto	L17
  1388  029B                     l125:	
  1389                           ;./Oscilador.h: 60: 
  1390                           
  1391                           ;./Oscilador.h: 59:             break;
  1392                           
  1393                           ;./Oscilador.h: 58:             OSCCONbits.IRCF2 = 1;
  1394                           
  1395                           ;./Oscilador.h: 57:             OSCCONbits.IRCF1 = 1;
  1396                           
  1397  029B                     l126:	
  1398                           ;./Oscilador.h: 63: }
  1399                           
  1400                           ;./Oscilador.h: 62:     OSCCONbits.SCS = 1;
  1401                           
  1402  029B  1683               	bsf	3,5	;RP0=1, select bank1
  1403  029C  1303               	bcf	3,6	;RP1=0, select bank1
  1404  029D  160F               	bsf	15,4	;volatile
  1405  029E                     L17:	
  1406  029E  168F               	bsf	15,5	;volatile
  1407  029F                     L15:	
  1408  029F  170F               	bsf	15,6	;volatile
  1409  02A0  2AC5               	goto	l118
  1410  02A1                     l2013:	
  1411  02A1  0875               	movf	initOscilador@frec,w
  1412  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1413  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1414  02A4  00A0               	movwf	??_initOscilador
  1415  02A5  01A1               	clrf	??_initOscilador+1
  1416                           
  1417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1418                           ; Switch size 1, requested type "simple"
  1419                           ; Number of cases is 1, Range of values is 0 to 0
  1420                           ; switch strategies available:
  1421                           ; Name         Instructions Cycles
  1422                           ; simple_byte            4     3 (average)
  1423                           ; direct_byte           11     8 (fixed)
  1424                           ; jumptable            260     6 (fixed)
  1425                           ;	Chosen strategy is simple_byte
  1426  02A6  0821               	movf	??_initOscilador+1,w
  1427  02A7  3A00               	xorlw	0	; case 0
  1428  02A8  1903               	skipnz
  1429  02A9  2AAB               	goto	l2279
  1430  02AA  2A9B               	goto	l126
  1431  02AB                     l2279:	
  1432                           
  1433                           ; Switch size 1, requested type "simple"
  1434                           ; Number of cases is 8, Range of values is 0 to 7
  1435                           ; switch strategies available:
  1436                           ; Name         Instructions Cycles
  1437                           ; simple_byte           25    13 (average)
  1438                           ; direct_byte           32     8 (fixed)
  1439                           ; jumptable            260     6 (fixed)
  1440                           ;	Chosen strategy is simple_byte
  1441  02AB  0820               	movf	??_initOscilador,w
  1442  02AC  3A00               	xorlw	0	; case 0
  1443  02AD  1903               	skipnz
  1444  02AE  2A7B               	goto	l117
  1445  02AF  3A01               	xorlw	1	; case 1
  1446  02B0  1903               	skipnz
  1447  02B1  2A7F               	goto	l119
  1448  02B2  3A03               	xorlw	3	; case 2
  1449  02B3  1903               	skipnz
  1450  02B4  2A84               	goto	l120
  1451  02B5  3A01               	xorlw	1	; case 3
  1452  02B6  1903               	skipnz
  1453  02B7  2A88               	goto	l121
  1454  02B8  3A07               	xorlw	7	; case 4
  1455  02B9  1903               	skipnz
  1456  02BA  2A8E               	goto	l122
  1457  02BB  3A01               	xorlw	1	; case 5
  1458  02BC  1903               	skipnz
  1459  02BD  2A92               	goto	l123
  1460  02BE  3A03               	xorlw	3	; case 6
  1461  02BF  1903               	skipnz
  1462  02C0  2A97               	goto	l124
  1463  02C1  3A01               	xorlw	1	; case 7
  1464  02C2  1903               	skipnz
  1465  02C3  2A9B               	goto	l125
  1466  02C4  2A9B               	goto	l126
  1467  02C5                     l118:	
  1468  02C5  140F               	bsf	15,0	;volatile
  1469  02C6  0008               	return
  1470  02C7                     __end_of_initOscilador:	
  1471                           
  1472                           	psect	text4
  1473  025E                     __ptext4:	
  1474 ;; *************** function _I2C_Slave_Init *****************
  1475 ;; Defined at:
  1476 ;;		line 93 in file "./I2C.h"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  address         2    0[BANK0 ] short 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       2       0       0       0
  1491 ;;      Locals:         0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0
  1493 ;;      Totals:         0       2       0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    1
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_setup
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function _I2C_Slave_Init
  1506  025E                     _I2C_Slave_Init:	
  1507                           
  1508                           ;./I2C.h: 93: void I2C_Slave_Init(short address);./I2C.h: 94: {;./I2C.h: 95:     SSPADD 
      +                          = address;
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in _I2C_Slave_Init: [wreg]
  1512  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1513  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0260  0820               	movf	I2C_Slave_Init@address,w
  1515  0261  1683               	bsf	3,5	;RP0=1, select bank1
  1516  0262  1303               	bcf	3,6	;RP1=0, select bank1
  1517  0263  0093               	movwf	19	;volatile
  1518                           
  1519                           ;./I2C.h: 96:     SSPCON = 0x36;
  1520  0264  3036               	movlw	54
  1521  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0267  0094               	movwf	20	;volatile
  1524                           
  1525                           ;./I2C.h: 97:     SSPSTAT = 0x80;
  1526  0268  3080               	movlw	128
  1527  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1528  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1529  026B  0094               	movwf	20	;volatile
  1530                           
  1531                           ;./I2C.h: 98:     SSPCON2 = 0x01;
  1532  026C  3001               	movlw	1
  1533  026D  0091               	movwf	17	;volatile
  1534                           
  1535                           ;./I2C.h: 99:     TRISC3 = 1;
  1536  026E  1587               	bsf	7,3	;volatile
  1537                           
  1538                           ;./I2C.h: 100:     TRISC4 = 1;
  1539  026F  1607               	bsf	7,4	;volatile
  1540                           
  1541                           ;./I2C.h: 101:     GIE = 1;
  1542  0270  178B               	bsf	11,7	;volatile
  1543                           
  1544                           ;./I2C.h: 102:     PEIE = 1;
  1545  0271  170B               	bsf	11,6	;volatile
  1546                           
  1547                           ;./I2C.h: 103:     SSPIF = 0;
  1548  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0274  118C               	bcf	12,3	;volatile
  1551                           
  1552                           ;./I2C.h: 104:     SSPIE = 1;
  1553  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0277  158C               	bsf	12,3	;volatile
  1556  0278  0008               	return
  1557  0279                     __end_of_I2C_Slave_Init:	
  1558                           
  1559                           	psect	text5
  1560  0257                     __ptext5:	
  1561 ;; *************** function _read_ADC *****************
  1562 ;; Defined at:
  1563 ;;		line 167 in file "Esclavo1.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      unsigned char 
  1570 ;; Registers used:
  1571 ;;		wreg
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0
  1580 ;;      Totals:         0       0       0       0       0
  1581 ;;Total ram usage:        0 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    1
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function _read_ADC
  1593  0257                     _read_ADC:	
  1594                           
  1595                           ;Esclavo1.c: 168:   ADCON0bits.GO_nDONE = 1;
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _read_ADC: [wreg]
  1599  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1600  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1601  0259  149F               	bsf	31,1	;volatile
  1602  025A                     l208:	
  1603                           ;Esclavo1.c: 169:   while(ADCON0bits.GO_nDONE == 1);
  1604                           
  1605  025A  189F               	btfsc	31,1	;volatile
  1606  025B  2A5A               	goto	l208
  1607                           
  1608                           ;Esclavo1.c: 170:   return (ADRESH);
  1609  025C  081E               	movf	30,w	;volatile
  1610  025D  0008               	return
  1611  025E                     __end_of_read_ADC:	
  1612                           
  1613                           	psect	text6
  1614  059F                     __ptext6:	
  1615 ;; *************** function ___xxtofl *****************
  1616 ;; Defined at:
  1617 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  sign            1    wreg     unsigned char 
  1620 ;;  val             4    0[BANK0 ] long 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  sign            1    8[BANK0 ] unsigned char 
  1623 ;;  arg             4   10[BANK0 ] unsigned long 
  1624 ;;  exp             1    9[BANK0 ] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  4    0[BANK0 ] unsigned char 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         0       4       0       0       0
  1635 ;;      Locals:         0       6       0       0       0
  1636 ;;      Temps:          0       4       0       0       0
  1637 ;;      Totals:         0      14       0       0       0
  1638 ;;Total ram usage:       14 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function ___xxtofl
  1650  059F                     ___xxtofl:	
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1654                           ;___xxtofl@sign stored from wreg
  1655  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1656  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1657  05A1  00A8               	movwf	___xxtofl@sign
  1658  05A2  0828               	movf	___xxtofl@sign,w
  1659  05A3  1D03               	btfss	3,2
  1660  05A4  1FA3               	btfss	___xxtofl@val+3,7
  1661  05A5  2DB6               	goto	l2151
  1662  05A6  0920               	comf	___xxtofl@val,w
  1663  05A7  00AA               	movwf	___xxtofl@arg
  1664  05A8  0921               	comf	___xxtofl@val+1,w
  1665  05A9  00AB               	movwf	___xxtofl@arg+1
  1666  05AA  0922               	comf	___xxtofl@val+2,w
  1667  05AB  00AC               	movwf	___xxtofl@arg+2
  1668  05AC  0923               	comf	___xxtofl@val+3,w
  1669  05AD  00AD               	movwf	___xxtofl@arg+3
  1670  05AE  0AAA               	incf	___xxtofl@arg,f
  1671  05AF  1903               	skipnz
  1672  05B0  0AAB               	incf	___xxtofl@arg+1,f
  1673  05B1  1903               	skipnz
  1674  05B2  0AAC               	incf	___xxtofl@arg+2,f
  1675  05B3  1903               	skipnz
  1676  05B4  0AAD               	incf	___xxtofl@arg+3,f
  1677  05B5  2DBE               	goto	l768
  1678  05B6                     l2151:	
  1679  05B6  0823               	movf	___xxtofl@val+3,w
  1680  05B7  00AD               	movwf	___xxtofl@arg+3
  1681  05B8  0822               	movf	___xxtofl@val+2,w
  1682  05B9  00AC               	movwf	___xxtofl@arg+2
  1683  05BA  0821               	movf	___xxtofl@val+1,w
  1684  05BB  00AB               	movwf	___xxtofl@arg+1
  1685  05BC  0820               	movf	___xxtofl@val,w
  1686  05BD  00AA               	movwf	___xxtofl@arg
  1687  05BE                     l768:	
  1688  05BE  0823               	movf	___xxtofl@val+3,w
  1689  05BF  0422               	iorwf	___xxtofl@val+2,w
  1690  05C0  0421               	iorwf	___xxtofl@val+1,w
  1691  05C1  0420               	iorwf	___xxtofl@val,w
  1692  05C2  1D03               	skipz
  1693  05C3  2DCD               	goto	l2157
  1694  05C4  3000               	movlw	0
  1695  05C5  00A3               	movwf	?___xxtofl+3
  1696  05C6  3000               	movlw	0
  1697  05C7  00A2               	movwf	?___xxtofl+2
  1698  05C8  3000               	movlw	0
  1699  05C9  00A1               	movwf	?___xxtofl+1
  1700  05CA  3000               	movlw	0
  1701  05CB  00A0               	movwf	?___xxtofl
  1702  05CC  0008               	return
  1703  05CD                     l2157:	
  1704  05CD  3096               	movlw	150
  1705  05CE  00A4               	movwf	??___xxtofl
  1706  05CF  0824               	movf	??___xxtofl,w
  1707  05D0  00A9               	movwf	___xxtofl@exp
  1708  05D1                     l2161:	
  1709  05D1  30FE               	movlw	254
  1710  05D2  052D               	andwf	___xxtofl@arg+3,w
  1711  05D3  1903               	btfsc	3,2
  1712  05D4  2DFE               	goto	l774
  1713  05D5  3001               	movlw	1
  1714  05D6  00A4               	movwf	??___xxtofl
  1715  05D7  0824               	movf	??___xxtofl,w
  1716  05D8  07A9               	addwf	___xxtofl@exp,f
  1717  05D9  3001               	movlw	1
  1718  05DA                     u2315:	
  1719  05DA  1003               	clrc
  1720  05DB  0CAD               	rrf	___xxtofl@arg+3,f
  1721  05DC  0CAC               	rrf	___xxtofl@arg+2,f
  1722  05DD  0CAB               	rrf	___xxtofl@arg+1,f
  1723  05DE  0CAA               	rrf	___xxtofl@arg,f
  1724  05DF  3EFF               	addlw	-1
  1725  05E0  1D03               	skipz
  1726  05E1  2DDA               	goto	u2315
  1727  05E2  2DD1               	goto	l2161
  1728  05E3                     l2163:	
  1729  05E3  3001               	movlw	1
  1730  05E4  00A4               	movwf	??___xxtofl
  1731  05E5  0824               	movf	??___xxtofl,w
  1732  05E6  07A9               	addwf	___xxtofl@exp,f
  1733  05E7  3001               	movlw	1
  1734  05E8  07AA               	addwf	___xxtofl@arg,f
  1735  05E9  3000               	movlw	0
  1736  05EA  1803               	skipnc
  1737  05EB  3001               	movlw	1
  1738  05EC  07AB               	addwf	___xxtofl@arg+1,f
  1739  05ED  3000               	movlw	0
  1740  05EE  1803               	skipnc
  1741  05EF  3001               	movlw	1
  1742  05F0  07AC               	addwf	___xxtofl@arg+2,f
  1743  05F1  3000               	movlw	0
  1744  05F2  1803               	skipnc
  1745  05F3  3001               	movlw	1
  1746  05F4  07AD               	addwf	___xxtofl@arg+3,f
  1747  05F5  3001               	movlw	1
  1748  05F6                     u2335:	
  1749  05F6  1003               	clrc
  1750  05F7  0CAD               	rrf	___xxtofl@arg+3,f
  1751  05F8  0CAC               	rrf	___xxtofl@arg+2,f
  1752  05F9  0CAB               	rrf	___xxtofl@arg+1,f
  1753  05FA  0CAA               	rrf	___xxtofl@arg,f
  1754  05FB  3EFF               	addlw	-1
  1755  05FC  1D03               	skipz
  1756  05FD  2DF6               	goto	u2335
  1757  05FE                     l774:	
  1758  05FE  30FF               	movlw	255
  1759  05FF  052D               	andwf	___xxtofl@arg+3,w
  1760  0600  1903               	btfsc	3,2
  1761  0601  2E12               	goto	l2171
  1762  0602  2DE3               	goto	l2163
  1763  0603                     l2173:	
  1764  0603  3002               	movlw	2
  1765  0604  0229               	subwf	___xxtofl@exp,w
  1766  0605  1C03               	btfss	3,0
  1767  0606  2E14               	goto	l781
  1768  0607  3001               	movlw	1
  1769  0608  02A9               	subwf	___xxtofl@exp,f
  1770  0609  3001               	movlw	1
  1771  060A  00A4               	movwf	??___xxtofl
  1772  060B                     u2355:	
  1773  060B  1003               	clrc
  1774  060C  0DAA               	rlf	___xxtofl@arg,f
  1775  060D  0DAB               	rlf	___xxtofl@arg+1,f
  1776  060E  0DAC               	rlf	___xxtofl@arg+2,f
  1777  060F  0DAD               	rlf	___xxtofl@arg+3,f
  1778  0610  0BA4               	decfsz	??___xxtofl,f
  1779  0611  2E0B               	goto	u2355
  1780  0612                     l2171:	
  1781  0612  1FAC               	btfss	___xxtofl@arg+2,7
  1782  0613  2E03               	goto	l2173
  1783  0614                     l781:	
  1784  0614  1829               	btfsc	___xxtofl@exp,0
  1785  0615  2E1E               	goto	l782
  1786  0616  30FF               	movlw	255
  1787  0617  05AA               	andwf	___xxtofl@arg,f
  1788  0618  30FF               	movlw	255
  1789  0619  05AB               	andwf	___xxtofl@arg+1,f
  1790  061A  307F               	movlw	127
  1791  061B  05AC               	andwf	___xxtofl@arg+2,f
  1792  061C  30FF               	movlw	255
  1793  061D  05AD               	andwf	___xxtofl@arg+3,f
  1794  061E                     l782:	
  1795  061E  1003               	clrc
  1796  061F  0CA9               	rrf	___xxtofl@exp,f
  1797  0620  0829               	movf	___xxtofl@exp,w
  1798  0621  00A4               	movwf	??___xxtofl
  1799  0622  01A5               	clrf	??___xxtofl+1
  1800  0623  01A6               	clrf	??___xxtofl+2
  1801  0624  01A7               	clrf	??___xxtofl+3
  1802  0625  3018               	movlw	24
  1803  0626                     u2395:	
  1804  0626  1003               	clrc
  1805  0627  0DA4               	rlf	??___xxtofl,f
  1806  0628  0DA5               	rlf	??___xxtofl+1,f
  1807  0629  0DA6               	rlf	??___xxtofl+2,f
  1808  062A  0DA7               	rlf	??___xxtofl+3,f
  1809  062B  3EFF               	addlw	-1
  1810  062C  1D03               	skipz
  1811  062D  2E26               	goto	u2395
  1812  062E  0824               	movf	??___xxtofl,w
  1813  062F  04AA               	iorwf	___xxtofl@arg,f
  1814  0630  0825               	movf	??___xxtofl+1,w
  1815  0631  04AB               	iorwf	___xxtofl@arg+1,f
  1816  0632  0826               	movf	??___xxtofl+2,w
  1817  0633  04AC               	iorwf	___xxtofl@arg+2,f
  1818  0634  0827               	movf	??___xxtofl+3,w
  1819  0635  04AD               	iorwf	___xxtofl@arg+3,f
  1820  0636  0828               	movf	___xxtofl@sign,w
  1821  0637  1D03               	btfss	3,2
  1822  0638  1FA3               	btfss	___xxtofl@val+3,7
  1823  0639  2E3B               	goto	l2185
  1824  063A  17AD               	bsf	___xxtofl@arg+3,7
  1825  063B                     l2185:	
  1826  063B  082D               	movf	___xxtofl@arg+3,w
  1827  063C  00A3               	movwf	?___xxtofl+3
  1828  063D  082C               	movf	___xxtofl@arg+2,w
  1829  063E  00A2               	movwf	?___xxtofl+2
  1830  063F  082B               	movf	___xxtofl@arg+1,w
  1831  0640  00A1               	movwf	?___xxtofl+1
  1832  0641  082A               	movf	___xxtofl@arg,w
  1833  0642  00A0               	movwf	?___xxtofl
  1834  0643  0008               	return
  1835  0644                     __end_of___xxtofl:	
  1836                           
  1837                           	psect	text7
  1838  0326                     __ptext7:	
  1839 ;; *************** function ___fltol *****************
  1840 ;; Defined at:
  1841 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  f1              4   40[BANK0 ] unsigned char 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  exp1            1   50[BANK0 ] unsigned char 
  1846 ;;  sign1           1   49[BANK0 ] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  4   40[BANK0 ] long 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         0       4       0       0       0
  1857 ;;      Locals:         0       2       0       0       0
  1858 ;;      Temps:          0       5       0       0       0
  1859 ;;      Totals:         0      11       0       0       0
  1860 ;;Total ram usage:       11 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function ___fltol
  1872  0326                     ___fltol:	
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1876  0326  1003               	clrc
  1877  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0329  0D4A               	rlf	___fltol@f1+2,w
  1880  032A  0D4B               	rlf	___fltol@f1+3,w
  1881  032B  00CC               	movwf	??___fltol
  1882  032C  084C               	movf	??___fltol,w
  1883  032D  00D2               	movwf	___fltol@exp1
  1884  032E  0852               	movf	___fltol@exp1,w
  1885  032F  1D03               	btfss	3,2
  1886  0330  2B3A               	goto	l1623
  1887  0331                     l1619:	
  1888  0331  3000               	movlw	0
  1889  0332  00CB               	movwf	?___fltol+3
  1890  0333  3000               	movlw	0
  1891  0334  00CA               	movwf	?___fltol+2
  1892  0335  3000               	movlw	0
  1893  0336  00C9               	movwf	?___fltol+1
  1894  0337  3000               	movlw	0
  1895  0338  00C8               	movwf	?___fltol
  1896  0339  0008               	return
  1897  033A                     l1623:	
  1898  033A  0848               	movf	___fltol@f1,w
  1899  033B  00CC               	movwf	??___fltol
  1900  033C  0849               	movf	___fltol@f1+1,w
  1901  033D  00CD               	movwf	??___fltol+1
  1902  033E  084A               	movf	___fltol@f1+2,w
  1903  033F  00CE               	movwf	??___fltol+2
  1904  0340  084B               	movf	___fltol@f1+3,w
  1905  0341  00CF               	movwf	??___fltol+3
  1906  0342  301F               	movlw	31
  1907  0343                     u1315:	
  1908  0343  1003               	clrc
  1909  0344  0CCF               	rrf	??___fltol+3,f
  1910  0345  0CCE               	rrf	??___fltol+2,f
  1911  0346  0CCD               	rrf	??___fltol+1,f
  1912  0347  0CCC               	rrf	??___fltol,f
  1913  0348  3EFF               	addlw	-1
  1914  0349  1D03               	skipz
  1915  034A  2B43               	goto	u1315
  1916  034B  084C               	movf	??___fltol,w
  1917  034C  00D0               	movwf	??___fltol+4
  1918  034D  0850               	movf	??___fltol+4,w
  1919  034E  00D1               	movwf	___fltol@sign1
  1920  034F  17CA               	bsf	___fltol@f1+2,7
  1921  0350  30FF               	movlw	255
  1922  0351  05C8               	andwf	___fltol@f1,f
  1923  0352  30FF               	movlw	255
  1924  0353  05C9               	andwf	___fltol@f1+1,f
  1925  0354  30FF               	movlw	255
  1926  0355  05CA               	andwf	___fltol@f1+2,f
  1927  0356  3000               	movlw	0
  1928  0357  05CB               	andwf	___fltol@f1+3,f
  1929  0358  3096               	movlw	150
  1930  0359  02D2               	subwf	___fltol@exp1,f
  1931  035A  1FD2               	btfss	___fltol@exp1,7
  1932  035B  2B71               	goto	l1641
  1933  035C  0852               	movf	___fltol@exp1,w
  1934  035D  3A80               	xorlw	128
  1935  035E  3E97               	addlw	151
  1936  035F  1C03               	btfss	3,0
  1937  0360  2B31               	goto	l1619
  1938  0361                     l1639:	
  1939  0361  3001               	movlw	1
  1940  0362                     u1345:	
  1941  0362  1003               	clrc
  1942  0363  0CCB               	rrf	___fltol@f1+3,f
  1943  0364  0CCA               	rrf	___fltol@f1+2,f
  1944  0365  0CC9               	rrf	___fltol@f1+1,f
  1945  0366  0CC8               	rrf	___fltol@f1,f
  1946  0367  3EFF               	addlw	-1
  1947  0368  1D03               	skipz
  1948  0369  2B62               	goto	u1345
  1949  036A  3001               	movlw	1
  1950  036B  00CC               	movwf	??___fltol
  1951  036C  084C               	movf	??___fltol,w
  1952  036D  07D2               	addwf	___fltol@exp1,f
  1953  036E  1903               	btfsc	3,2
  1954  036F  2B84               	goto	l1649
  1955  0370  2B61               	goto	l1639
  1956  0371                     l1641:	
  1957  0371  3020               	movlw	32
  1958  0372  0252               	subwf	___fltol@exp1,w
  1959  0373  1803               	btfsc	3,0
  1960  0374  2B31               	goto	l1619
  1961  0375                     l534:	
  1962  0375  0852               	movf	___fltol@exp1,w
  1963  0376  1903               	btfsc	3,2
  1964  0377  2B84               	goto	l1649
  1965  0378  3001               	movlw	1
  1966  0379  00CC               	movwf	??___fltol
  1967  037A                     u1375:	
  1968  037A  1003               	clrc
  1969  037B  0DC8               	rlf	___fltol@f1,f
  1970  037C  0DC9               	rlf	___fltol@f1+1,f
  1971  037D  0DCA               	rlf	___fltol@f1+2,f
  1972  037E  0DCB               	rlf	___fltol@f1+3,f
  1973  037F  0BCC               	decfsz	??___fltol,f
  1974  0380  2B7A               	goto	u1375
  1975  0381  3001               	movlw	1
  1976  0382  02D2               	subwf	___fltol@exp1,f
  1977  0383  2B75               	goto	l534
  1978  0384                     l1649:	
  1979  0384  0851               	movf	___fltol@sign1,w
  1980  0385  1903               	btfsc	3,2
  1981  0386  0008               	return
  1982  0387  09C8               	comf	___fltol@f1,f
  1983  0388  09C9               	comf	___fltol@f1+1,f
  1984  0389  09CA               	comf	___fltol@f1+2,f
  1985  038A  09CB               	comf	___fltol@f1+3,f
  1986  038B  0AC8               	incf	___fltol@f1,f
  1987  038C  1903               	skipnz
  1988  038D  0AC9               	incf	___fltol@f1+1,f
  1989  038E  1903               	skipnz
  1990  038F  0ACA               	incf	___fltol@f1+2,f
  1991  0390  1903               	skipnz
  1992  0391  0ACB               	incf	___fltol@f1+3,f
  1993  0392  0008               	return
  1994  0393                     __end_of___fltol:	
  1995                           
  1996                           	psect	text8
  1997  0644                     __ptext8:	
  1998 ;; *************** function ___fldiv *****************
  1999 ;; Defined at:
  2000 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  a               4   14[BANK0 ] long 
  2003 ;;  b               4   18[BANK0 ] long 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  grs             4   34[BANK0 ] unsigned long 
  2006 ;;  rem             4   27[BANK0 ] unsigned long 
  2007 ;;  new_exp         2   32[BANK0 ] int 
  2008 ;;  aexp            1   39[BANK0 ] unsigned char 
  2009 ;;  bexp            1   38[BANK0 ] unsigned char 
  2010 ;;  sign            1   31[BANK0 ] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  4   14[BANK0 ] unsigned char 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, btemp+1
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         0       8       0       0       0
  2021 ;;      Locals:         0      13       0       0       0
  2022 ;;      Temps:          0       5       0       0       0
  2023 ;;      Totals:         0      26       0       0       0
  2024 ;;Total ram usage:       26 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function ___fldiv
  2036  0644                     ___fldiv:	
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  2040  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0645  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0646  0835               	movf	___fldiv@b+3,w
  2043  0647  3980               	andlw	128
  2044  0648  00B6               	movwf	??___fldiv
  2045  0649  0836               	movf	??___fldiv,w
  2046  064A  00BF               	movwf	___fldiv@sign
  2047  064B  0835               	movf	___fldiv@b+3,w
  2048  064C  00B6               	movwf	??___fldiv
  2049  064D  0736               	addwf	??___fldiv,w
  2050  064E  00B7               	movwf	??___fldiv+1
  2051  064F  0837               	movf	??___fldiv+1,w
  2052  0650  00C6               	movwf	___fldiv@bexp
  2053  0651  1BB4               	btfsc	___fldiv@b+2,7
  2054  0652  1446               	bsf	___fldiv@bexp,0
  2055  0653  0846               	movf	___fldiv@bexp,w
  2056  0654  1903               	btfsc	3,2
  2057  0655  2E64               	goto	l1671
  2058  0656  0A46               	incf	___fldiv@bexp,w
  2059  0657  1D03               	btfss	3,2
  2060  0658  2E61               	goto	l1667
  2061  0659  3000               	movlw	0
  2062  065A  00B5               	movwf	___fldiv@b+3
  2063  065B  3000               	movlw	0
  2064  065C  00B4               	movwf	___fldiv@b+2
  2065  065D  3000               	movlw	0
  2066  065E  00B3               	movwf	___fldiv@b+1
  2067  065F  3000               	movlw	0
  2068  0660  00B2               	movwf	___fldiv@b
  2069  0661                     l1667:	
  2070  0661  17B4               	bsf	___fldiv@b+2,7
  2071  0662  01B5               	clrf	___fldiv@b+3
  2072  0663  2E6C               	goto	l1673
  2073  0664                     l1671:	
  2074  0664  3000               	movlw	0
  2075  0665  00B5               	movwf	___fldiv@b+3
  2076  0666  3000               	movlw	0
  2077  0667  00B4               	movwf	___fldiv@b+2
  2078  0668  3000               	movlw	0
  2079  0669  00B3               	movwf	___fldiv@b+1
  2080  066A  3000               	movlw	0
  2081  066B  00B2               	movwf	___fldiv@b
  2082  066C                     l1673:	
  2083  066C  0831               	movf	___fldiv@a+3,w
  2084  066D  3980               	andlw	128
  2085  066E  00B6               	movwf	??___fldiv
  2086  066F  0836               	movf	??___fldiv,w
  2087  0670  06BF               	xorwf	___fldiv@sign,f
  2088  0671  0831               	movf	___fldiv@a+3,w
  2089  0672  00B6               	movwf	??___fldiv
  2090  0673  0736               	addwf	??___fldiv,w
  2091  0674  00B7               	movwf	??___fldiv+1
  2092  0675  0837               	movf	??___fldiv+1,w
  2093  0676  00C7               	movwf	___fldiv@aexp
  2094  0677  1BB0               	btfsc	___fldiv@a+2,7
  2095  0678  1447               	bsf	___fldiv@aexp,0
  2096  0679  0847               	movf	___fldiv@aexp,w
  2097  067A  1903               	btfsc	3,2
  2098  067B  2E8A               	goto	l1691
  2099  067C  0A47               	incf	___fldiv@aexp,w
  2100  067D  1D03               	btfss	3,2
  2101  067E  2E87               	goto	l1687
  2102  067F  3000               	movlw	0
  2103  0680  00B1               	movwf	___fldiv@a+3
  2104  0681  3000               	movlw	0
  2105  0682  00B0               	movwf	___fldiv@a+2
  2106  0683  3000               	movlw	0
  2107  0684  00AF               	movwf	___fldiv@a+1
  2108  0685  3000               	movlw	0
  2109  0686  00AE               	movwf	___fldiv@a
  2110  0687                     l1687:	
  2111  0687  17B0               	bsf	___fldiv@a+2,7
  2112  0688  01B1               	clrf	___fldiv@a+3
  2113  0689  2E92               	goto	l690
  2114  068A                     l1691:	
  2115  068A  3000               	movlw	0
  2116  068B  00B1               	movwf	___fldiv@a+3
  2117  068C  3000               	movlw	0
  2118  068D  00B0               	movwf	___fldiv@a+2
  2119  068E  3000               	movlw	0
  2120  068F  00AF               	movwf	___fldiv@a+1
  2121  0690  3000               	movlw	0
  2122  0691  00AE               	movwf	___fldiv@a
  2123  0692                     l690:	
  2124  0692  0831               	movf	___fldiv@a+3,w
  2125  0693  0430               	iorwf	___fldiv@a+2,w
  2126  0694  042F               	iorwf	___fldiv@a+1,w
  2127  0695  042E               	iorwf	___fldiv@a,w
  2128  0696  1D03               	skipz
  2129  0697  2EB1               	goto	l1701
  2130  0698  3000               	movlw	0
  2131  0699  00B5               	movwf	___fldiv@b+3
  2132  069A  3000               	movlw	0
  2133  069B  00B4               	movwf	___fldiv@b+2
  2134  069C  3000               	movlw	0
  2135  069D  00B3               	movwf	___fldiv@b+1
  2136  069E  3000               	movlw	0
  2137  069F  00B2               	movwf	___fldiv@b
  2138  06A0  3080               	movlw	128
  2139  06A1  04B4               	iorwf	___fldiv@b+2,f
  2140  06A2  307F               	movlw	127
  2141  06A3  04B5               	iorwf	___fldiv@b+3,f
  2142  06A4                     L18:	
  2143  06A4  083F               	movf	___fldiv@sign,w
  2144  06A5  00B6               	movwf	??___fldiv
  2145  06A6  0836               	movf	??___fldiv,w
  2146  06A7  04B5               	iorwf	___fldiv@b+3,f
  2147  06A8  0835               	movf	___fldiv@b+3,w
  2148  06A9  00B1               	movwf	?___fldiv+3
  2149  06AA  0834               	movf	___fldiv@b+2,w
  2150  06AB  00B0               	movwf	?___fldiv+2
  2151  06AC  0833               	movf	___fldiv@b+1,w
  2152  06AD  00AF               	movwf	?___fldiv+1
  2153  06AE  0832               	movf	___fldiv@b,w
  2154  06AF  00AE               	movwf	?___fldiv
  2155  06B0  0008               	return
  2156  06B1                     l1701:	
  2157  06B1  0846               	movf	___fldiv@bexp,w
  2158  06B2  1D03               	btfss	3,2
  2159  06B3  2EBD               	goto	l1707
  2160  06B4  3000               	movlw	0
  2161  06B5  00B1               	movwf	?___fldiv+3
  2162  06B6  3000               	movlw	0
  2163  06B7  00B0               	movwf	?___fldiv+2
  2164  06B8  3000               	movlw	0
  2165  06B9  00AF               	movwf	?___fldiv+1
  2166  06BA  3000               	movlw	0
  2167  06BB  00AE               	movwf	?___fldiv
  2168  06BC  0008               	return
  2169  06BD                     l1707:	
  2170  06BD  0846               	movf	___fldiv@bexp,w
  2171  06BE  00B6               	movwf	??___fldiv
  2172  06BF  01B7               	clrf	??___fldiv+1
  2173  06C0  0837               	movf	??___fldiv+1,w
  2174  06C1  00B9               	movwf	??___fldiv+3
  2175  06C2  0847               	movf	___fldiv@aexp,w
  2176  06C3  0236               	subwf	??___fldiv,w
  2177  06C4  00B8               	movwf	??___fldiv+2
  2178  06C5  1C03               	skipc
  2179  06C6  03B9               	decf	??___fldiv+3,f
  2180  06C7  0838               	movf	??___fldiv+2,w
  2181  06C8  3E7F               	addlw	127
  2182  06C9  00C0               	movwf	___fldiv@new_exp
  2183  06CA  0839               	movf	??___fldiv+3,w
  2184  06CB  1803               	skipnc
  2185  06CC  3E01               	addlw	1
  2186  06CD  3E00               	addlw	0
  2187  06CE  00C1               	movwf	___fldiv@new_exp+1
  2188  06CF  0835               	movf	___fldiv@b+3,w
  2189  06D0  00BE               	movwf	___fldiv@rem+3
  2190  06D1  0834               	movf	___fldiv@b+2,w
  2191  06D2  00BD               	movwf	___fldiv@rem+2
  2192  06D3  0833               	movf	___fldiv@b+1,w
  2193  06D4  00BC               	movwf	___fldiv@rem+1
  2194  06D5  0832               	movf	___fldiv@b,w
  2195  06D6  00BB               	movwf	___fldiv@rem
  2196  06D7  3000               	movlw	0
  2197  06D8  00B5               	movwf	___fldiv@b+3
  2198  06D9  3000               	movlw	0
  2199  06DA  00B4               	movwf	___fldiv@b+2
  2200  06DB  3000               	movlw	0
  2201  06DC  00B3               	movwf	___fldiv@b+1
  2202  06DD  3000               	movlw	0
  2203  06DE  00B2               	movwf	___fldiv@b
  2204  06DF  3000               	movlw	0
  2205  06E0  00C5               	movwf	___fldiv@grs+3
  2206  06E1  3000               	movlw	0
  2207  06E2  00C4               	movwf	___fldiv@grs+2
  2208  06E3  3000               	movlw	0
  2209  06E4  00C3               	movwf	___fldiv@grs+1
  2210  06E5  3000               	movlw	0
  2211  06E6  00C2               	movwf	___fldiv@grs
  2212  06E7  01C7               	clrf	___fldiv@aexp
  2213  06E8                     l1735:	
  2214  06E8  301A               	movlw	26
  2215  06E9  0247               	subwf	___fldiv@aexp,w
  2216  06EA  1803               	btfsc	3,0
  2217  06EB  2F30               	goto	l1737
  2218  06EC  0847               	movf	___fldiv@aexp,w
  2219  06ED  1903               	btfsc	3,2
  2220  06EE  2F0C               	goto	l1727
  2221  06EF  3001               	movlw	1
  2222  06F0  00B6               	movwf	??___fldiv
  2223  06F1                     u1495:	
  2224  06F1  1003               	clrc
  2225  06F2  0DBB               	rlf	___fldiv@rem,f
  2226  06F3  0DBC               	rlf	___fldiv@rem+1,f
  2227  06F4  0DBD               	rlf	___fldiv@rem+2,f
  2228  06F5  0DBE               	rlf	___fldiv@rem+3,f
  2229  06F6  0BB6               	decfsz	??___fldiv,f
  2230  06F7  2EF1               	goto	u1495
  2231  06F8  3001               	movlw	1
  2232  06F9  00B6               	movwf	??___fldiv
  2233  06FA                     u1505:	
  2234  06FA  1003               	clrc
  2235  06FB  0DB2               	rlf	___fldiv@b,f
  2236  06FC  0DB3               	rlf	___fldiv@b+1,f
  2237  06FD  0DB4               	rlf	___fldiv@b+2,f
  2238  06FE  0DB5               	rlf	___fldiv@b+3,f
  2239  06FF  0BB6               	decfsz	??___fldiv,f
  2240  0700  2EFA               	goto	u1505
  2241  0701  1BC5               	btfsc	___fldiv@grs+3,7
  2242  0702  1432               	bsf	___fldiv@b,0
  2243  0703  3001               	movlw	1
  2244  0704  00B6               	movwf	??___fldiv
  2245  0705                     u1525:	
  2246  0705  1003               	clrc
  2247  0706  0DC2               	rlf	___fldiv@grs,f
  2248  0707  0DC3               	rlf	___fldiv@grs+1,f
  2249  0708  0DC4               	rlf	___fldiv@grs+2,f
  2250  0709  0DC5               	rlf	___fldiv@grs+3,f
  2251  070A  0BB6               	decfsz	??___fldiv,f
  2252  070B  2F05               	goto	u1525
  2253  070C                     l1727:	
  2254  070C  0831               	movf	___fldiv@a+3,w
  2255  070D  023E               	subwf	___fldiv@rem+3,w
  2256  070E  1D03               	skipz
  2257  070F  2F1A               	goto	u1535
  2258  0710  0830               	movf	___fldiv@a+2,w
  2259  0711  023D               	subwf	___fldiv@rem+2,w
  2260  0712  1D03               	skipz
  2261  0713  2F1A               	goto	u1535
  2262  0714  082F               	movf	___fldiv@a+1,w
  2263  0715  023C               	subwf	___fldiv@rem+1,w
  2264  0716  1D03               	skipz
  2265  0717  2F1A               	goto	u1535
  2266  0718  082E               	movf	___fldiv@a,w
  2267  0719  023B               	subwf	___fldiv@rem,w
  2268  071A                     u1535:	
  2269  071A  1C03               	skipc
  2270  071B  2F2B               	goto	l1733
  2271  071C  1745               	bsf	___fldiv@grs+3,6
  2272  071D  082E               	movf	___fldiv@a,w
  2273  071E  02BB               	subwf	___fldiv@rem,f
  2274  071F  082F               	movf	___fldiv@a+1,w
  2275  0720  1C03               	skipc
  2276  0721  0F2F               	incfsz	___fldiv@a+1,w
  2277  0722  02BC               	subwf	___fldiv@rem+1,f
  2278  0723  0830               	movf	___fldiv@a+2,w
  2279  0724  1C03               	skipc
  2280  0725  0F30               	incfsz	___fldiv@a+2,w
  2281  0726  02BD               	subwf	___fldiv@rem+2,f
  2282  0727  0831               	movf	___fldiv@a+3,w
  2283  0728  1C03               	skipc
  2284  0729  0F31               	incfsz	___fldiv@a+3,w
  2285  072A  02BE               	subwf	___fldiv@rem+3,f
  2286  072B                     l1733:	
  2287  072B  3001               	movlw	1
  2288  072C  00B6               	movwf	??___fldiv
  2289  072D  0836               	movf	??___fldiv,w
  2290  072E  07C7               	addwf	___fldiv@aexp,f
  2291  072F  2EE8               	goto	l1735
  2292  0730                     l1737:	
  2293  0730  083E               	movf	___fldiv@rem+3,w
  2294  0731  043D               	iorwf	___fldiv@rem+2,w
  2295  0732  043C               	iorwf	___fldiv@rem+1,w
  2296  0733  043B               	iorwf	___fldiv@rem,w
  2297  0734  1D03               	btfss	3,2
  2298  0735  1442               	bsf	___fldiv@grs,0
  2299  0736                     l1751:	
  2300  0736  1BB4               	btfsc	___fldiv@b+2,7
  2301  0737  2F53               	goto	l1753
  2302  0738  3001               	movlw	1
  2303  0739  00B6               	movwf	??___fldiv
  2304  073A                     u1565:	
  2305  073A  1003               	clrc
  2306  073B  0DB2               	rlf	___fldiv@b,f
  2307  073C  0DB3               	rlf	___fldiv@b+1,f
  2308  073D  0DB4               	rlf	___fldiv@b+2,f
  2309  073E  0DB5               	rlf	___fldiv@b+3,f
  2310  073F  0BB6               	decfsz	??___fldiv,f
  2311  0740  2F3A               	goto	u1565
  2312  0741  1BC5               	btfsc	___fldiv@grs+3,7
  2313  0742  1432               	bsf	___fldiv@b,0
  2314  0743  3001               	movlw	1
  2315  0744  00B6               	movwf	??___fldiv
  2316  0745                     u1585:	
  2317  0745  1003               	clrc
  2318  0746  0DC2               	rlf	___fldiv@grs,f
  2319  0747  0DC3               	rlf	___fldiv@grs+1,f
  2320  0748  0DC4               	rlf	___fldiv@grs+2,f
  2321  0749  0DC5               	rlf	___fldiv@grs+3,f
  2322  074A  0BB6               	decfsz	??___fldiv,f
  2323  074B  2F45               	goto	u1585
  2324  074C  30FF               	movlw	255
  2325  074D  07C0               	addwf	___fldiv@new_exp,f
  2326  074E  1803               	skipnc
  2327  074F  0AC1               	incf	___fldiv@new_exp+1,f
  2328  0750  30FF               	movlw	255
  2329  0751  07C1               	addwf	___fldiv@new_exp+1,f
  2330  0752  2F36               	goto	l1751
  2331  0753                     l1753:	
  2332  0753  01C7               	clrf	___fldiv@aexp
  2333  0754  1FC5               	btfss	___fldiv@grs+3,7
  2334  0755  2F6C               	goto	l1763
  2335  0756  30FF               	movlw	255
  2336  0757  0542               	andwf	___fldiv@grs,w
  2337  0758  00B6               	movwf	??___fldiv
  2338  0759  30FF               	movlw	255
  2339  075A  0543               	andwf	___fldiv@grs+1,w
  2340  075B  00B7               	movwf	??___fldiv+1
  2341  075C  30FF               	movlw	255
  2342  075D  0544               	andwf	___fldiv@grs+2,w
  2343  075E  00B8               	movwf	??___fldiv+2
  2344  075F  307F               	movlw	127
  2345  0760  0545               	andwf	___fldiv@grs+3,w
  2346  0761  00B9               	movwf	??___fldiv+3
  2347  0762  0839               	movf	??___fldiv+3,w
  2348  0763  0438               	iorwf	??___fldiv+2,w
  2349  0764  0437               	iorwf	??___fldiv+1,w
  2350  0765  0436               	iorwf	??___fldiv,w
  2351  0766  1903               	skipnz
  2352  0767  1832               	btfsc	___fldiv@b,0
  2353  0768  2F6A               	goto	l1759
  2354  0769  2F6C               	goto	l1763
  2355  076A                     l1759:	
  2356  076A  01C7               	clrf	___fldiv@aexp
  2357  076B  0AC7               	incf	___fldiv@aexp,f
  2358  076C                     l1763:	
  2359  076C  0847               	movf	___fldiv@aexp,w
  2360  076D  1903               	btfsc	3,2
  2361  076E  2F9E               	goto	l1773
  2362  076F  3001               	movlw	1
  2363  0770  07B2               	addwf	___fldiv@b,f
  2364  0771  3000               	movlw	0
  2365  0772  1803               	skipnc
  2366  0773  3001               	movlw	1
  2367  0774  07B3               	addwf	___fldiv@b+1,f
  2368  0775  3000               	movlw	0
  2369  0776  1803               	skipnc
  2370  0777  3001               	movlw	1
  2371  0778  07B4               	addwf	___fldiv@b+2,f
  2372  0779  3000               	movlw	0
  2373  077A  1803               	skipnc
  2374  077B  3001               	movlw	1
  2375  077C  07B5               	addwf	___fldiv@b+3,f
  2376  077D  1C35               	btfss	___fldiv@b+3,0
  2377  077E  2F9E               	goto	l1773
  2378  077F  0832               	movf	___fldiv@b,w
  2379  0780  00B6               	movwf	??___fldiv
  2380  0781  0833               	movf	___fldiv@b+1,w
  2381  0782  00B7               	movwf	??___fldiv+1
  2382  0783  0834               	movf	___fldiv@b+2,w
  2383  0784  00B8               	movwf	??___fldiv+2
  2384  0785  0835               	movf	___fldiv@b+3,w
  2385  0786  00B9               	movwf	??___fldiv+3
  2386  0787  3001               	movlw	1
  2387  0788  00BA               	movwf	??___fldiv+4
  2388  0789                     u1655:	
  2389  0789  0D39               	rlf	??___fldiv+3,w
  2390  078A  0CB9               	rrf	??___fldiv+3,f
  2391  078B  0CB8               	rrf	??___fldiv+2,f
  2392  078C  0CB7               	rrf	??___fldiv+1,f
  2393  078D  0CB6               	rrf	??___fldiv,f
  2394  078E  0BBA               	decfsz	??___fldiv+4,f
  2395  078F  2F89               	goto	u1655
  2396  0790  0839               	movf	??___fldiv+3,w
  2397  0791  00B5               	movwf	___fldiv@b+3
  2398  0792  0838               	movf	??___fldiv+2,w
  2399  0793  00B4               	movwf	___fldiv@b+2
  2400  0794  0837               	movf	??___fldiv+1,w
  2401  0795  00B3               	movwf	___fldiv@b+1
  2402  0796  0836               	movf	??___fldiv,w
  2403  0797  00B2               	movwf	___fldiv@b
  2404  0798  3001               	movlw	1
  2405  0799  07C0               	addwf	___fldiv@new_exp,f
  2406  079A  1803               	skipnc
  2407  079B  0AC1               	incf	___fldiv@new_exp+1,f
  2408  079C  3000               	movlw	0
  2409  079D  07C1               	addwf	___fldiv@new_exp+1,f
  2410  079E                     l1773:	
  2411  079E  0841               	movf	___fldiv@new_exp+1,w
  2412  079F  3A80               	xorlw	128
  2413  07A0  00FF               	movwf	127
  2414  07A1  3080               	movlw	128
  2415  07A2  027F               	subwf	127,w
  2416  07A3  1D03               	skipz
  2417  07A4  2FA7               	goto	u1665
  2418  07A5  30FF               	movlw	255
  2419  07A6  0240               	subwf	___fldiv@new_exp,w
  2420  07A7                     u1665:	
  2421  07A7  1C03               	skipc
  2422  07A8  2FB7               	goto	l1777
  2423  07A9  30FF               	movlw	255
  2424  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  2425  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  2426  07AC  00C0               	movwf	___fldiv@new_exp
  2427  07AD  3000               	movlw	0
  2428  07AE  00C1               	movwf	___fldiv@new_exp+1
  2429  07AF  3000               	movlw	0
  2430  07B0  00B5               	movwf	___fldiv@b+3
  2431  07B1  3000               	movlw	0
  2432  07B2  00B4               	movwf	___fldiv@b+2
  2433  07B3  3000               	movlw	0
  2434  07B4  00B3               	movwf	___fldiv@b+1
  2435  07B5  3000               	movlw	0
  2436  07B6  00B2               	movwf	___fldiv@b
  2437  07B7                     l1777:	
  2438  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  2439  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  2440  07B9  0841               	movf	___fldiv@new_exp+1,w
  2441  07BA  3A80               	xorlw	128
  2442  07BB  00FF               	movwf	127
  2443  07BC  3080               	movlw	128
  2444  07BD  027F               	subwf	127,w
  2445  07BE  1D03               	skipz
  2446  07BF  2FC2               	goto	u1675
  2447  07C0  3001               	movlw	1
  2448  07C1  0240               	subwf	___fldiv@new_exp,w
  2449  07C2                     u1675:	
  2450  07C2  1803               	skipnc
  2451  07C3  2FD1               	goto	l712
  2452  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  2453  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  2454  07C6  01C0               	clrf	___fldiv@new_exp
  2455  07C7  01C1               	clrf	___fldiv@new_exp+1
  2456  07C8  3000               	movlw	0
  2457  07C9  00B5               	movwf	___fldiv@b+3
  2458  07CA  3000               	movlw	0
  2459  07CB  00B4               	movwf	___fldiv@b+2
  2460  07CC  3000               	movlw	0
  2461  07CD  00B3               	movwf	___fldiv@b+1
  2462  07CE  3000               	movlw	0
  2463  07CF  00B2               	movwf	___fldiv@b
  2464  07D0  01BF               	clrf	___fldiv@sign
  2465  07D1                     l712:	
  2466  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  2467  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  2468  07D3  0840               	movf	___fldiv@new_exp,w
  2469  07D4  00B6               	movwf	??___fldiv
  2470  07D5  0836               	movf	??___fldiv,w
  2471  07D6  00C6               	movwf	___fldiv@bexp
  2472  07D7  1C46               	btfss	___fldiv@bexp,0
  2473  07D8  2FDB               	goto	l1789
  2474  07D9  17B4               	bsf	___fldiv@b+2,7
  2475  07DA  2FDF               	goto	l714
  2476  07DB                     l1789:	
  2477  07DB  307F               	movlw	127
  2478  07DC  00B6               	movwf	??___fldiv
  2479  07DD  0836               	movf	??___fldiv,w
  2480  07DE  05B4               	andwf	___fldiv@b+2,f
  2481  07DF                     l714:	
  2482  07DF  0846               	movf	___fldiv@bexp,w
  2483  07E0  00B6               	movwf	??___fldiv
  2484  07E1  1003               	clrc
  2485  07E2  0C36               	rrf	??___fldiv,w
  2486  07E3  00B7               	movwf	??___fldiv+1
  2487  07E4  0837               	movf	??___fldiv+1,w
  2488  07E5  00B5               	movwf	___fldiv@b+3
  2489  07E6  2EA4               	goto	L18
  2490  07E7                     __end_of___fldiv:	
  2491                           
  2492                           	psect	text9
  2493  0400                     __ptext9:	
  2494 ;; *************** function _DutyCycle *****************
  2495 ;; Defined at:
  2496 ;;		line 179 in file "Esclavo1.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  ADC_LUZ         1    wreg     unsigned char 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  ADC_LUZ         1    0[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      unsigned char 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         0       0       0       0       0
  2511 ;;      Locals:         0       1       0       0       0
  2512 ;;      Temps:          1       0       0       0       0
  2513 ;;      Totals:         1       1       0       0       0
  2514 ;;Total ram usage:        2 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    1
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _DutyCycle
  2526  0400                     _DutyCycle:	
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _DutyCycle: [wreg+status,2]
  2530                           ;DutyCycle@ADC_LUZ stored from wreg
  2531  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0402  00A0               	movwf	DutyCycle@ADC_LUZ
  2534                           
  2535                           ;Esclavo1.c: 180:         if (ADC_LUZ < 13U){
  2536  0403  300D               	movlw	13
  2537  0404  0220               	subwf	DutyCycle@ADC_LUZ,w
  2538  0405  1803               	skipnc
  2539  0406  2C09               	goto	l2083
  2540                           
  2541                           ;Esclavo1.c: 181:             duty_cycle = 0U;
  2542  0407  01DE               	clrf	_duty_cycle
  2543                           
  2544                           ;Esclavo1.c: 182:         }else if((ADC_LUZ > 13U) && (ADC_LUZ < 26U)){
  2545  0408  2C70               	goto	l215
  2546  0409                     l2083:	
  2547  0409  300E               	movlw	14
  2548  040A  0220               	subwf	DutyCycle@ADC_LUZ,w
  2549  040B  1C03               	skipc
  2550  040C  2C14               	goto	l2089
  2551  040D  301A               	movlw	26
  2552  040E  0220               	subwf	DutyCycle@ADC_LUZ,w
  2553  040F  1803               	skipnc
  2554  0410  2C14               	goto	l2089
  2555                           
  2556                           ;Esclavo1.c: 183:             duty_cycle = 1U;
  2557  0411  01DE               	clrf	_duty_cycle
  2558  0412  0ADE               	incf	_duty_cycle,f
  2559                           
  2560                           ;Esclavo1.c: 184:         }else if((ADC_LUZ > 26U) && (ADC_LUZ < 39U)){
  2561  0413  2C70               	goto	l215
  2562  0414                     l2089:	
  2563  0414  301B               	movlw	27
  2564  0415  0220               	subwf	DutyCycle@ADC_LUZ,w
  2565  0416  1C03               	skipc
  2566  0417  2C1E               	goto	l2095
  2567  0418  3027               	movlw	39
  2568  0419  0220               	subwf	DutyCycle@ADC_LUZ,w
  2569  041A  1803               	skipnc
  2570  041B  2C1E               	goto	l2095
  2571                           
  2572                           ;Esclavo1.c: 185:             duty_cycle = 2U;
  2573  041C  3002               	movlw	2
  2574  041D  2C6D               	goto	L26
  2575  041E                     l2095:	
  2576                           ;Esclavo1.c: 186:         }else if((ADC_LUZ > 39U) && (ADC_LUZ < 52U)){
  2577                           
  2578  041E  3028               	movlw	40
  2579  041F  0220               	subwf	DutyCycle@ADC_LUZ,w
  2580  0420  1C03               	skipc
  2581  0421  2C28               	goto	l2101
  2582  0422  3034               	movlw	52
  2583  0423  0220               	subwf	DutyCycle@ADC_LUZ,w
  2584  0424  1803               	skipnc
  2585  0425  2C28               	goto	l2101
  2586                           
  2587                           ;Esclavo1.c: 187:             duty_cycle = 3U;
  2588  0426  3003               	movlw	3
  2589  0427  2C6D               	goto	L26
  2590  0428                     l2101:	
  2591                           ;Esclavo1.c: 188:         }else if((ADC_LUZ > 52U) && (ADC_LUZ < 65U)){
  2592                           
  2593  0428  3035               	movlw	53
  2594  0429  0220               	subwf	DutyCycle@ADC_LUZ,w
  2595  042A  1C03               	skipc
  2596  042B  2C32               	goto	l2107
  2597  042C  3041               	movlw	65
  2598  042D  0220               	subwf	DutyCycle@ADC_LUZ,w
  2599  042E  1803               	skipnc
  2600  042F  2C32               	goto	l2107
  2601                           
  2602                           ;Esclavo1.c: 189:             duty_cycle = 4U;
  2603  0430  3004               	movlw	4
  2604  0431  2C6D               	goto	L26
  2605  0432                     l2107:	
  2606                           ;Esclavo1.c: 190:         }else if((ADC_LUZ > 65U) && (ADC_LUZ < 78U)){
  2607                           
  2608  0432  3042               	movlw	66
  2609  0433  0220               	subwf	DutyCycle@ADC_LUZ,w
  2610  0434  1C03               	skipc
  2611  0435  2C3C               	goto	l2113
  2612  0436  304E               	movlw	78
  2613  0437  0220               	subwf	DutyCycle@ADC_LUZ,w
  2614  0438  1803               	skipnc
  2615  0439  2C3C               	goto	l2113
  2616                           
  2617                           ;Esclavo1.c: 191:             duty_cycle = 5U;
  2618  043A  3005               	movlw	5
  2619  043B  2C6D               	goto	L26
  2620  043C                     l2113:	
  2621                           ;Esclavo1.c: 192:         }else if((ADC_LUZ > 78U) && (ADC_LUZ < 91U)){
  2622                           
  2623  043C  304F               	movlw	79
  2624  043D  0220               	subwf	DutyCycle@ADC_LUZ,w
  2625  043E  1C03               	skipc
  2626  043F  2C46               	goto	l2119
  2627  0440  305B               	movlw	91
  2628  0441  0220               	subwf	DutyCycle@ADC_LUZ,w
  2629  0442  1803               	skipnc
  2630  0443  2C46               	goto	l2119
  2631                           
  2632                           ;Esclavo1.c: 193:             duty_cycle = 6U;
  2633  0444  3006               	movlw	6
  2634  0445  2C6D               	goto	L26
  2635  0446                     l2119:	
  2636                           ;Esclavo1.c: 194:         }else if((ADC_LUZ > 91U) && (ADC_LUZ < 104U)){
  2637                           
  2638  0446  305C               	movlw	92
  2639  0447  0220               	subwf	DutyCycle@ADC_LUZ,w
  2640  0448  1C03               	skipc
  2641  0449  2C50               	goto	l2125
  2642  044A  3068               	movlw	104
  2643  044B  0220               	subwf	DutyCycle@ADC_LUZ,w
  2644  044C  1803               	skipnc
  2645  044D  2C50               	goto	l2125
  2646                           
  2647                           ;Esclavo1.c: 195:             duty_cycle = 7U;
  2648  044E  3007               	movlw	7
  2649  044F  2C6D               	goto	L26
  2650  0450                     l2125:	
  2651                           ;Esclavo1.c: 196:         }else if((ADC_LUZ > 104U) && (ADC_LUZ < 117U)){
  2652                           
  2653  0450  3069               	movlw	105
  2654  0451  0220               	subwf	DutyCycle@ADC_LUZ,w
  2655  0452  1C03               	skipc
  2656  0453  2C5A               	goto	l2131
  2657  0454  3075               	movlw	117
  2658  0455  0220               	subwf	DutyCycle@ADC_LUZ,w
  2659  0456  1803               	skipnc
  2660  0457  2C5A               	goto	l2131
  2661                           
  2662                           ;Esclavo1.c: 197:             duty_cycle = 8U;
  2663  0458  3008               	movlw	8
  2664  0459  2C6D               	goto	L26
  2665  045A                     l2131:	
  2666                           ;Esclavo1.c: 198:         }else if((ADC_LUZ > 117U) && (ADC_LUZ < 130U)){
  2667                           
  2668  045A  3076               	movlw	118
  2669  045B  0220               	subwf	DutyCycle@ADC_LUZ,w
  2670  045C  1C03               	skipc
  2671  045D  2C64               	goto	l2137
  2672  045E  3082               	movlw	130
  2673  045F  0220               	subwf	DutyCycle@ADC_LUZ,w
  2674  0460  1803               	skipnc
  2675  0461  2C64               	goto	l2137
  2676                           
  2677                           ;Esclavo1.c: 199:             duty_cycle = 9U;
  2678  0462  3009               	movlw	9
  2679  0463  2C6D               	goto	L26
  2680  0464                     l2137:	
  2681                           ;Esclavo1.c: 200:         }else if((ADC_LUZ > 130U) && (ADC_LUZ < 143U)){
  2682                           
  2683  0464  3083               	movlw	131
  2684  0465  0220               	subwf	DutyCycle@ADC_LUZ,w
  2685  0466  1C03               	skipc
  2686  0467  2C70               	goto	l215
  2687  0468  308F               	movlw	143
  2688  0469  0220               	subwf	DutyCycle@ADC_LUZ,w
  2689  046A  1803               	skipnc
  2690  046B  2C70               	goto	l215
  2691                           
  2692                           ;Esclavo1.c: 201:             duty_cycle = 10U;
  2693  046C  300A               	movlw	10
  2694  046D                     L26:	
  2695  046D  00F5               	movwf	??_DutyCycle
  2696  046E  0875               	movf	??_DutyCycle,w
  2697  046F  00DE               	movwf	_duty_cycle
  2698  0470                     l215:	
  2699                           
  2700                           ;Esclavo1.c: 203:         return(duty_cycle);
  2701  0470  085E               	movf	_duty_cycle,w
  2702  0471  0008               	return
  2703  0472                     __end_of_DutyCycle:	
  2704                           
  2705                           	psect	text10
  2706  0472                     __ptext10:	
  2707 ;; *************** function _isr *****************
  2708 ;; Defined at:
  2709 ;;		line 46 in file "Esclavo1.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2723 ;;      Params:         0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0
  2725 ;;      Temps:          4       0       0       0       0
  2726 ;;      Totals:         4       0       0       0       0
  2727 ;;Total ram usage:        4 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		Interrupt level 1
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function _isr
  2738  0472                     _isr:	
  2739                           
  2740                           ;Esclavo1.c: 47:    if(PIR1bits.SSPIF == 1){
  2741  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0474  1D8C               	btfss	12,3	;volatile
  2744  0475  2CD1               	goto	i1l179
  2745                           
  2746                           ;Esclavo1.c: 49:         SSPCONbits.CKP = 0;
  2747  0476  1214               	bcf	20,4	;volatile
  2748                           
  2749                           ;Esclavo1.c: 51:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  2750  0477  1B14               	btfsc	20,6	;volatile
  2751  0478  2C7B               	goto	i1l1845
  2752  0479  1F94               	btfss	20,7	;volatile
  2753  047A  2C85               	goto	i1l1853
  2754  047B                     i1l1845:	
  2755                           
  2756                           ;Esclavo1.c: 52:             z = SSPBUF;
  2757  047B  0813               	movf	19,w	;volatile
  2758  047C  00F1               	movwf	??_isr
  2759  047D  01F2               	clrf	??_isr+1
  2760  047E  0871               	movf	??_isr,w
  2761  047F  00D8               	movwf	_z
  2762  0480  0872               	movf	??_isr+1,w
  2763  0481  00D9               	movwf	_z+1
  2764                           
  2765                           ;Esclavo1.c: 53:             SSPCONbits.SSPOV = 0;
  2766  0482  1314               	bcf	20,6	;volatile
  2767                           
  2768                           ;Esclavo1.c: 54:             SSPCONbits.WCOL = 0;
  2769  0483  1394               	bcf	20,7	;volatile
  2770                           
  2771                           ;Esclavo1.c: 55:             SSPCONbits.CKP = 1;
  2772  0484  1614               	bsf	20,4	;volatile
  2773  0485                     i1l1853:	
  2774                           
  2775                           ;Esclavo1.c: 59:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  2776  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2777  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2778  0487  1E94               	btfss	20,5	;volatile
  2779  0488  1914               	btfsc	20,2	;volatile
  2780  0489  2CA5               	goto	i1l183
  2781                           
  2782                           ;Esclavo1.c: 61:             z = SSPBUF;
  2783  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2784  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2785  048C  0813               	movf	19,w	;volatile
  2786  048D  00F1               	movwf	??_isr
  2787  048E  01F2               	clrf	??_isr+1
  2788  048F  0871               	movf	??_isr,w
  2789  0490  00D8               	movwf	_z
  2790  0491  0872               	movf	??_isr+1,w
  2791  0492  00D9               	movwf	_z+1
  2792                           
  2793                           ;Esclavo1.c: 63:             PIR1bits.SSPIF = 0;
  2794  0493  118C               	bcf	12,3	;volatile
  2795                           
  2796                           ;Esclavo1.c: 64:             SSPCONbits.CKP = 1;
  2797  0494  1614               	bsf	20,4	;volatile
  2798  0495                     i1l184:	
  2799                           ;Esclavo1.c: 65:             while(!SSPSTATbits.BF);
  2800                           
  2801  0495  1683               	bsf	3,5	;RP0=1, select bank1
  2802  0496  1303               	bcf	3,6	;RP1=0, select bank1
  2803  0497  1C14               	btfss	20,0	;volatile
  2804  0498  2C95               	goto	i1l184
  2805                           
  2806                           ;Esclavo1.c: 66:             variable = SSPBUF;
  2807  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2808  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2809  049B  0813               	movf	19,w	;volatile
  2810  049C  00F1               	movwf	??_isr
  2811  049D  0871               	movf	??_isr,w
  2812  049E  00F9               	movwf	_variable
  2813                           
  2814                           ;Esclavo1.c: 67:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  2815  049F  30A6               	movlw	166
  2816  04A0  00F1               	movwf	??_isr
  2817  04A1                     u251_27:	
  2818  04A1  0BF1               	decfsz	??_isr,f
  2819  04A2  2CA1               	goto	u251_27
  2820  04A3  0000               	nop
  2821                           
  2822                           ;Esclavo1.c: 70:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  2823  04A4  2CCE               	goto	i1l187
  2824  04A5                     i1l183:	
  2825  04A5  1E94               	btfss	20,5	;volatile
  2826  04A6  1D14               	btfss	20,2	;volatile
  2827  04A7  2CCE               	goto	i1l187
  2828                           
  2829                           ;Esclavo1.c: 71:             z = SSPBUF;
  2830  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2831  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2832  04AA  0813               	movf	19,w	;volatile
  2833  04AB  00F1               	movwf	??_isr
  2834  04AC  01F2               	clrf	??_isr+1
  2835  04AD  0871               	movf	??_isr,w
  2836  04AE  00D8               	movwf	_z
  2837  04AF  0872               	movf	??_isr+1,w
  2838  04B0  00D9               	movwf	_z+1
  2839                           
  2840                           ;Esclavo1.c: 72:             BF = 0;
  2841  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2842  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2843  04B3  1014               	bcf	20,0	;volatile
  2844                           
  2845                           ;Esclavo1.c: 73:             if(variable == 0x1){
  2846  04B4  0379               	decf	_variable,w
  2847  04B5  1D03               	btfss	3,2
  2848  04B6  2CBB               	goto	i1l1875
  2849                           
  2850                           ;Esclavo1.c: 74:               SSPBUF = ADCLUZI2C;
  2851  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2852  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2853  04B9  085D               	movf	_ADCLUZI2C,w
  2854  04BA  2CC2               	goto	L27
  2855  04BB                     i1l1875:	
  2856                           ;Esclavo1.c: 75:             }else if(variable == 0x2){
  2857                           
  2858  04BB  3002               	movlw	2
  2859  04BC  0679               	xorwf	_variable,w
  2860  04BD  1D03               	btfss	3,2
  2861  04BE  2CC3               	goto	i1l1879
  2862                           
  2863                           ;Esclavo1.c: 76:                SSPBUF = a;
  2864  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2865  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2866  04C1  0854               	movf	_a,w
  2867  04C2                     L27:	
  2868  04C2  0093               	movwf	19	;volatile
  2869  04C3                     i1l1879:	
  2870                           
  2871                           ;Esclavo1.c: 78:             SSPCONbits.CKP = 1;
  2872  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2873  04C4  1614               	bsf	20,4	;volatile
  2874                           
  2875                           ;Esclavo1.c: 79:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  2876  04C5  30A6               	movlw	166
  2877  04C6  00F1               	movwf	??_isr
  2878  04C7                     u252_27:	
  2879  04C7  0BF1               	decfsz	??_isr,f
  2880  04C8  2CC7               	goto	u252_27
  2881  04C9  0000               	nop
  2882  04CA                     i1l192:	
  2883                           ;Esclavo1.c: 80:             while(SSPSTATbits.BF);
  2884                           
  2885  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2886  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2887  04CC  1814               	btfsc	20,0	;volatile
  2888  04CD  2CCA               	goto	i1l192
  2889  04CE                     i1l187:	
  2890                           
  2891                           ;Esclavo1.c: 83:         PIR1bits.SSPIF = 0;
  2892  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2893  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2894  04D0  118C               	bcf	12,3	;volatile
  2895  04D1                     i1l179:	
  2896                           ;Esclavo1.c: 84:     }
  2897                           
  2898                           
  2899                           ;Esclavo1.c: 86:    if(TMR0IF == 1)
  2900  04D1  1D0B               	btfss	11,2	;volatile
  2901  04D2  2CF6               	goto	i1l202
  2902                           
  2903                           ;Esclavo1.c: 87:     {;Esclavo1.c: 88:         TMR0 = 132;
  2904  04D3  3084               	movlw	132
  2905  04D4  0081               	movwf	1	;volatile
  2906                           
  2907                           ;Esclavo1.c: 89:         TMR0IF=0;
  2908  04D5  110B               	bcf	11,2	;volatile
  2909                           
  2910                           ;Esclavo1.c: 90:         contPWM++;
  2911  04D6  3001               	movlw	1
  2912  04D7  00F1               	movwf	??_isr
  2913  04D8  0871               	movf	??_isr,w
  2914  04D9  07F8               	addwf	_contPWM,f
  2915                           
  2916                           ;Esclavo1.c: 91:         contLuz++;
  2917  04DA  3001               	movlw	1
  2918  04DB  00F1               	movwf	??_isr
  2919  04DC  0871               	movf	??_isr,w
  2920  04DD  07F7               	addwf	_contLuz,f
  2921                           
  2922                           ;Esclavo1.c: 97:         if(contLuz < duty_cycle){
  2923  04DE  085E               	movf	_duty_cycle,w
  2924  04DF  0277               	subwf	_contLuz,w
  2925  04E0  1803               	skipnc
  2926  04E1  2CE4               	goto	i1l196
  2927                           
  2928                           ;Esclavo1.c: 98:             PORTBbits.RB5 = 1;
  2929  04E2  1686               	bsf	6,5	;volatile
  2930                           
  2931                           ;Esclavo1.c: 99:         }else{
  2932  04E3  2CE9               	goto	i1l1895
  2933  04E4                     i1l196:	
  2934                           
  2935                           ;Esclavo1.c: 100:             PORTBbits.RB5 = 0;
  2936  04E4  1286               	bcf	6,5	;volatile
  2937                           
  2938                           ;Esclavo1.c: 101:             if(contLuz == 10U){
  2939  04E5  300A               	movlw	10
  2940  04E6  0677               	xorwf	_contLuz,w
  2941  04E7  1903               	btfsc	3,2
  2942                           
  2943                           ;Esclavo1.c: 102:                 contLuz = 0U;
  2944  04E8  01F7               	clrf	_contLuz
  2945  04E9                     i1l1895:	
  2946                           
  2947                           ;Esclavo1.c: 106:     if (contPWM <= on_time)
  2948  04E9  0878               	movf	_contPWM,w
  2949  04EA  025F               	subwf	_on_time,w
  2950  04EB  1803               	btfsc	3,0
  2951                           
  2952                           ;Esclavo1.c: 107:     {;Esclavo1.c: 108:         PORTCbits.RC1 = 1;
  2953  04EC  1487               	bsf	7,1	;volatile
  2954                           
  2955                           ;Esclavo1.c: 111:     if (contPWM >= on_time)
  2956  04ED  085F               	movf	_on_time,w
  2957  04EE  0278               	subwf	_contPWM,w
  2958  04EF  1C03               	skipc
  2959  04F0  2CF6               	goto	i1l202
  2960                           
  2961                           ;Esclavo1.c: 112:     {;Esclavo1.c: 113:         PORTCbits.RC1 = 0;
  2962  04F1  1087               	bcf	7,1	;volatile
  2963                           
  2964                           ;Esclavo1.c: 114:         if(contPWM == 40U){
  2965  04F2  3028               	movlw	40
  2966  04F3  0678               	xorwf	_contPWM,w
  2967  04F4  1903               	btfsc	3,2
  2968                           
  2969                           ;Esclavo1.c: 116:             contPWM = 0U;
  2970  04F5  01F8               	clrf	_contPWM
  2971  04F6                     i1l202:	
  2972  04F6  0874               	movf	??_isr+3,w
  2973  04F7  008A               	movwf	10
  2974  04F8  0E73               	swapf	(??_isr+2)^(0+4294967168),w
  2975  04F9  0083               	movwf	3
  2976  04FA  0EFE               	swapf	126,f
  2977  04FB  0E7E               	swapf	126,w
  2978  04FC  0009               	retfie
  2979  04FD                     __end_of_isr:	
  2980  007E                     btemp	set	126	;btemp
  2981  007E                     wtemp0	set	126
  2982                           
  2983                           	psect	intentry
  2984  0004                     __pintentry:	
  2985                           ;incstack = 0
  2986                           ; Regs used in _isr: [wreg+status,2+status,0]
  2987                           
  2988  0004                     interrupt_function:	
  2989  007E                     saved_w	set	btemp
  2990  0004  00FE               	movwf	btemp
  2991  0005  0E03               	swapf	3,w
  2992  0006  00F3               	movwf	??_isr+2
  2993  0007  080A               	movf	10,w
  2994  0008  00F4               	movwf	??_isr+3
  2995  0009  120A  118A  2C72   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      5       9
    BANK0            80     52      66
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DutyCycle
    _setup->_initOscilador

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _setup->_initTimero
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3339
                                             51 BANK0      1     1      0
                          _DutyCycle
                            ___fldiv
                            ___fltol
                           ___xxtofl
                           _read_ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     544
                                              8 BANK0      2     2      0
                     _I2C_Slave_Init
                      _initOscilador
                         _initTimero
 ---------------------------------------------------------------------------------
 (2) _initTimero                                           8     0      8     392
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _initOscilador                                        3     3      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _read_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             40 BANK0     11     7      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _DutyCycle                                            2     2      0     651
                                              4 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DutyCycle
   ___fldiv
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _read_ADC
   _setup
     _I2C_Slave_Init
     _initOscilador
     _initTimero

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      5       9       1       69.2%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 10 23:46:30 2019

            ___fldiv@aexp 0047              ___fldiv@bexp 0046                         _a 0054  
                       _z 0058              ___fldiv@sign 003F               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        _BF 04A0                       l120 0284  
                     l121 0288                       l122 028E                       l130 039D  
                     l123 0292                       l124 0297                       l140 03C1  
                     l132 03AA                       l125 029B                       l117 027B  
                     l141 03C5                       l126 029B                       l118 02C5  
                     l142 03CA                       l215 0470                       l119 027F  
                     l143 03CE                       l135 03AE                       l208 025A  
                     l136 03F5                       l137 03B2                       l138 03B7  
                     l139 03BB                       l243 053B                       l246 053E  
                     l534 0375                       l712 07D1                       l714 07DF  
                     l690 0692                       l781 0614                       l782 061E  
                     l774 05FE                       l768 05BE                       _GIE 005F  
            __CFG_CPD$OFF 0000                       _isr 0472              __CFG_LVP$OFF 0000  
            ___fltol@exp1 0052                      l2101 0428                      l2013 02A1  
                    l2113 043C                      l2201 0511                      l2131 045A  
                    l2107 0432                      l2125 0450                      l2119 0446  
                    l2151 05B6                      l2137 0464                      l2161 05D1  
                    l2233 0597                      l2083 0409                      l2171 0612  
                    l2163 05E3                      l2227 058F                      l1701 06B1  
                    l2173 0603                      l2157 05CD                      l2229 0590  
                    l2095 041E                      l1623 033A                      l1471 03A0  
                    l2089 0414                      l1641 0371                      l2185 063B  
                    l1707 06BD                      l1619 0331                      l2195 0506  
                    l1733 072B                      l2277 03DB                      l1477 03D4  
                    l1751 0736                      l1727 070C                      l1735 06E8  
                    l1671 0664                      l1639 0361                      l2279 02AB  
                    l1753 0753                      l1737 0730                      l1673 066C  
                    l1649 0384                      l1763 076C                      l1691 068A  
                    l1667 0661                      l1773 079E                      l1759 076A  
                    l1687 0687                      l1777 07B7                      l1789 07DB  
                    ?_isr 0071                      u1315 0343                      u1505 06FA  
                    u1345 0362                      u2315 05DA                      u1525 0705  
                    u1535 071A                      u1375 037A                      u2335 05F6  
                    u2355 060B                      u2507 0317                      u1565 073A  
                    u1655 0789                      u1495 06F1                      u1665 07A7  
                    u1585 0745                      u1675 07C2                      u2395 0626  
                    u2497 0535                      _PEIE 005E                      _RCEN 048B  
                    _TMR0 0001              __CFG_WRT$OFF 0000                      _dato 0056  
                    _flag 005C                      _door 005B                      _main 04FD  
                    _pres 0061                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000           ___fldiv@new_exp 0040                     ??_isr 0071  
           ___fltol@sign1 0051                     ?_main 0071           __end_of___fldiv 07E7  
           __CFG_WDTE$OFF 0000           __end_of___fltol 0393                     _ANSEL 0188  
                   _T1CON 0010                     i1l202 04F6                     i1l183 04A5  
                   i1l192 04CA                     i1l184 0495                     i1l187 04CE  
                   i1l179 04D1                     i1l196 04E4                     _TMR1H 000F  
                   _TMR1L 000E                     _PORTA 0005                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000                     _setup 02C7  
                   _state 005A            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07E7              __end_of_main 059F    __size_of_initOscilador 004E  
                  ??_main 0053           initTimero@valor 0026                    _ADRESH 001E  
                  ?_setup 0071                    _ANSELH 0189                    i1l1853 0485  
                  i1l1845 047B                    i1l1875 04BB                    i1l1895 04E9  
                  i1l1879 04C3                    u251_27 04A1                    u252_27 04C7  
                  _TMR0IF 005A                    _TMR1ON 0080                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 0644        __size_of_DutyCycle 0072  
          __CFG_PWRTE$OFF 0000                 ??___fldiv 0036                 ??___fltol 004C  
        __end_of_read_ADC 025E                    _puerta 0076                    saved_w 007E  
            ___xxtofl@arg 002A              ___xxtofl@exp 0029              ___xxtofl@val 0020  
 __end_of__initialization 07FC             _initOscilador 0279                ___fltol@f1 0048  
          __pcstackCOMMON 0071              __pidataBANK0 0256   __size_of_I2C_Slave_Init 001B  
           __end_of_setup 0326            _OPTION_REGbits 0081         __end_of_DutyCycle 0472  
                 ??_setup 0028     I2C_Slave_Init@address 0020                __pbssBANK0 0054  
          ?_initOscilador 0071                __pmaintext 04FD                __pintentry 0004  
       initOscilador@frec 0075                   _ADC_LUZ 0060                 ?___xxtofl 0020  
                 _SSPCON2 0091                   _SSPSTAT 0094                 _ADCLUZI2C 005D  
               ?_read_ADC 0071                   ___fldiv 0644                _initTimero 0393  
                 ___fltol 0326                 _ANSELbits 0188                   __ptext1 02C7  
                 __ptext2 0393                   __ptext3 0279                   __ptext4 025E  
                 __ptext5 0257                   __ptext6 059F                   __ptext7 0326  
                 __ptext8 0644                   __ptext9 0400                   _contPWM 0078  
                 _contLuz 0077              __size_of_isr 008B                ??___xxtofl 0024  
              _duty_cycle 005E                   _on_time 005F           ??_initOscilador 0020  
    end_of_initialization 07FC                ??_read_ADC 0075            _I2C_Slave_Init 025E  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
           ___xxtofl@sign 0028                 _TRISAbits 0085                 _TRISCbits 0087  
             ___fldiv@grs 0042               ___fldiv@rem 003B    __end_of_I2C_Slave_Init 0279  
             ?_initTimero 0020       start_initialization 07E7               __end_of_isr 04FD  
               _DutyCycle 0400            initTimero@tocs 0020  __CFG_FOSC$INTRC_NOCLKOUT 0000  
         ?_I2C_Slave_Init 0020               __pdataBANK0 0061                 ___fldiv@a 002E  
               ___fldiv@b 0032               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of___xxtofl 00A5       initTimero@prescaler 0024  
              ?_DutyCycle 0071       __size_of_initTimero 006D         __size_of_read_ADC 0007  
                ?___fldiv 002E                  ?___fltol 0048            __size_of_setup 005F  
       interrupt_function 0004                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F               ??_DutyCycle 0075     __end_of_initOscilador 02C7  
        DutyCycle@ADC_LUZ 0020             initTimero@psa 0022              ??_initTimero 0075  
        __size_of___fldiv 01A3          __size_of___fltol 006D                  ___xxtofl 059F  
                __ptext10 0472         __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0075  
      __end_of_initTimero 0400                  _read_ADC 0257             __size_of_main 00A2  
                _variable 0079                _INTCONbits 000B                  intlevel1 0000  
              _OSCCONbits 008F               _SSPCON2bits 0091                _SSPCONbits 0014  
