

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 10:38:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.05
    25                           ; Generated 20/12/2018 GMT
    26                           ; 
    27                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	idataBANK0
   294  024C                     __pidataBANK0:	
   295                           
   296                           ;initializer for _contador
   297  024C  34FF               	retlw	255
   298  0013                     _SSPBUF	set	19
   299  0014                     _SSPCON	set	20
   300  0018                     _RCSTAbits	set	24
   301  000C                     _PIR1bits	set	12
   302  000B                     _INTCONbits	set	11
   303  0008                     _PORTD	set	8
   304  0006                     _PORTB	set	6
   305  0005                     _PORTAbits	set	5
   306  001A                     _RCREG	set	26
   307  0019                     _TXREG	set	25
   308  0008                     _PORTDbits	set	8
   309  00C4                     _CREN	set	196
   310  0065                     _RCIF	set	101
   311  0064                     _TXIF	set	100
   312  0063                     _SSPIF	set	99
   313  0094                     _SSPSTATbits	set	148
   314  0094                     _SSPSTAT	set	148
   315  009A                     _SPBRGH	set	154
   316  0098                     _TXSTAbits	set	152
   317  0085                     _TRISAbits	set	133
   318  008C                     _PIE1bits	set	140
   319  0087                     _TRISCbits	set	135
   320  0088                     _TRISD	set	136
   321  0086                     _TRISB	set	134
   322  0085                     _TRISA	set	133
   323  008F                     _OSCCONbits	set	143
   324  043B                     _TRISC3	set	1083
   325  043D                     _TRISC5	set	1085
   326  0187                     _BAUDCTLbits	set	391
   327  0189                     _ANSELH	set	393
   328  0188                     _ANSEL	set	392
   329                           
   330                           ; #config settings
   331  0000                     
   332                           	psect	cinit
   333  000F                     start_initialization:	
   334  000F                     __initialization:	
   335                           
   336                           ; Initialize objects allocated to BANK0
   337  000F  120A  118A  224C   	fcall	__pidataBANK0	;fetch initializer
   338  0012  00AD               	movwf	__pdataBANK0& (0+127)
   339                           
   340                           ; Clear objects allocated to BANK0
   341  0013  01A8               	clrf	__pbssBANK0& (0+127)
   342  0014  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   343  0015  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   344  0016  01AB               	clrf	(__pbssBANK0+3)& (0+127)
   345  0017  01AC               	clrf	(__pbssBANK0+4)& (0+127)
   346                           
   347                           ; Clear objects allocated to COMMON
   348  0018  01F6               	clrf	__pbssCOMMON& (0+127)
   349  0019  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   350  001A  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   351  001B  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   352  001C                     end_of_initialization:	
   353                           ;End of C runtime variable initialization code
   354                           
   355  001C                     __end_of__initialization:	
   356  001C  0183               	clrf	3
   357  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   358                           
   359                           	psect	bssCOMMON
   360  0076                     __pbssCOMMON:	
   361  0076                     _minutos:	
   362  0076                     	ds	1
   363  0077                     _hora:	
   364  0077                     	ds	1
   365  0078                     _precensia:	
   366  0078                     	ds	1
   367  0079                     _estado:	
   368  0079                     	ds	1
   369                           
   370                           	psect	bssBANK0
   371  0028                     __pbssBANK0:	
   372  0028                     _luz:	
   373  0028                     	ds	1
   374  0029                     _humedad:	
   375  0029                     	ds	1
   376  002A                     _temperatura:	
   377  002A                     	ds	1
   378  002B                     _distancia:	
   379  002B                     	ds	1
   380  002C                     _disp:	
   381  002C                     	ds	1
   382                           
   383                           	psect	dataBANK0
   384  002D                     __pdataBANK0:	
   385  002D                     _contador:	
   386  002D                     	ds	1
   387                           
   388                           	psect	cstackCOMMON
   389  0070                     __pcstackCOMMON:	
   390  0070                     ?_spiRead:	
   391  0070                     ??_spiRead:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_spiWrite:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ??_spiWrite:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_setup:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_isr:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_UART_Rx:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_main:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_spiReceiveWait:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ??_spiReceiveWait:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     spiWrite@dat:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 1 bytes @ 0x0
   423  0070                     	ds	1
   424  0071                     ??_isr:	
   425                           
   426                           ; 1 bytes @ 0x1
   427  0071                     	ds	3
   428  0074                     ??_spiInit:	
   429  0074                     ??_initOsc:	
   430                           ; 1 bytes @ 0x4
   431                           
   432  0074                     ?_UART_Tx:	
   433                           ; 1 bytes @ 0x4
   434                           
   435  0074                     ??_UART_Rx:	
   436                           ; 1 bytes @ 0x4
   437                           
   438  0074                     spiInit@sType:	
   439                           ; 1 bytes @ 0x4
   440                           
   441  0074                     UART_Tx@val:	
   442                           ; 1 bytes @ 0x4
   443                           
   444                           
   445                           ; 2 bytes @ 0x4
   446  0074                     	ds	2
   447  0076                     ??_UART_Tx:	
   448                           
   449                           	psect	cstackBANK0
   450  0020                     __pcstackBANK0:	
   451                           ; 1 bytes @ 0x6
   452                           
   453  0020                     ?_spiInit:	
   454  0020                     ?_initOsc:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0020                     initOsc@osts:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0020                     spiInit@sDataSample:	
   461                           ; 1 bytes @ 0x0
   462                           
   463                           
   464                           ; 1 bytes @ 0x0
   465  0020                     	ds	1
   466  0021                     initOsc@hts:	
   467  0021                     spiInit@sClockIdle:	
   468                           ; 1 bytes @ 0x1
   469                           
   470                           
   471                           ; 1 bytes @ 0x1
   472  0021                     	ds	1
   473  0022                     initOsc@lts:	
   474  0022                     spiInit@sTransmitEdge:	
   475                           ; 1 bytes @ 0x2
   476                           
   477                           
   478                           ; 1 bytes @ 0x2
   479  0022                     	ds	1
   480  0023                     initOsc@scs:	
   481                           
   482                           ; 1 bytes @ 0x3
   483  0023                     	ds	1
   484  0024                     initOsc@frec:	
   485                           
   486                           ; 1 bytes @ 0x4
   487  0024                     	ds	1
   488  0025                     ??_setup:	
   489                           
   490                           ; 1 bytes @ 0x5
   491  0025                     	ds	1
   492  0026                     ??_main:	
   493                           
   494                           ; 1 bytes @ 0x6
   495  0026                     	ds	2
   496                           
   497                           	psect	maintext
   498  0020                     __pmaintext:	
   499 ;;
   500 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   501 ;;
   502 ;; *************** function _main *****************
   503 ;; Defined at:
   504 ;;		line 91 in file "EsclvRPI.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : B00/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       2       0       0       0
   521 ;;      Totals:         0       2       0       0       0
   522 ;;Total ram usage:        2 bytes
   523 ;; Hardware stack levels required when called:    5
   524 ;; This function calls:
   525 ;;		_UART_Rx
   526 ;;		_UART_Tx
   527 ;;		_setup
   528 ;; This function is called by:
   529 ;;		Startup code after reset
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function _main
   535  0020                     _main:	
   536                           
   537                           ;EsclvRPI.c: 93:     setup();
   538                           
   539                           ;incstack = 0
   540                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   541  0020  120A  118A  217D  120A  118A  	fcall	_setup
   542  0025                     l1327:	
   543                           
   544                           ;EsclvRPI.c: 98:         while(PORTAbits.RA0){
   545  0025  1283               	bcf	3,5	;RP0=0, select bank0
   546  0026  1303               	bcf	3,6	;RP1=0, select bank0
   547  0027  1C05               	btfss	5,0	;volatile
   548  0028  2825               	goto	l1327
   549                           
   550                           ;EsclvRPI.c: 99:         UART_Tx(1U);
   551  0029  3001               	movlw	1
   552  002A  00F4               	movwf	UART_Tx@val
   553  002B  3000               	movlw	0
   554  002C  00F5               	movwf	UART_Tx@val+1
   555  002D  120A  118A  222B  120A  118A  	fcall	_UART_Tx
   556                           
   557                           ;EsclvRPI.c: 100:         PORTDbits.RD2 = 1;
   558  0032  1283               	bcf	3,5	;RP0=0, select bank0
   559  0033  1303               	bcf	3,6	;RP1=0, select bank0
   560  0034  1508               	bsf	8,2	;volatile
   561                           
   562                           ;EsclvRPI.c: 101:         humedad = UART_Rx();
   563  0035  120A  118A  2233  120A  118A  	fcall	_UART_Rx
   564  003A  1283               	bcf	3,5	;RP0=0, select bank0
   565  003B  1303               	bcf	3,6	;RP1=0, select bank0
   566  003C  00A6               	movwf	??_main
   567  003D  0826               	movf	??_main,w
   568  003E  00A9               	movwf	_humedad
   569                           
   570                           ;EsclvRPI.c: 102:         _delay((unsigned long)((10)*(8000000/4000.0)));
   571  003F  301A               	movlw	26
   572  0040  1283               	bcf	3,5	;RP0=0, select bank0
   573  0041  1303               	bcf	3,6	;RP1=0, select bank0
   574  0042  00A7               	movwf	??_main+1
   575  0043  30F7               	movlw	247
   576  0044  00A6               	movwf	??_main
   577  0045                     u417:	
   578  0045  0BA6               	decfsz	??_main,f
   579  0046  2845               	goto	u417
   580  0047  0BA7               	decfsz	??_main+1,f
   581  0048  2845               	goto	u417
   582  0049  284A               	nop2
   583                           
   584                           ;EsclvRPI.c: 103:         UART_Tx(2U);
   585  004A  3002               	movlw	2
   586  004B  00F4               	movwf	UART_Tx@val
   587  004C  3000               	movlw	0
   588  004D  00F5               	movwf	UART_Tx@val+1
   589  004E  120A  118A  222B  120A  118A  	fcall	_UART_Tx
   590                           
   591                           ;EsclvRPI.c: 104:         precensia = UART_Rx();
   592  0053  120A  118A  2233  120A  118A  	fcall	_UART_Rx
   593  0058  1283               	bcf	3,5	;RP0=0, select bank0
   594  0059  1303               	bcf	3,6	;RP1=0, select bank0
   595  005A  00A6               	movwf	??_main
   596  005B  0826               	movf	??_main,w
   597  005C  00F8               	movwf	_precensia
   598                           
   599                           ;EsclvRPI.c: 105:         _delay((unsigned long)((10)*(8000000/4000.0)));
   600  005D  301A               	movlw	26
   601  005E  1283               	bcf	3,5	;RP0=0, select bank0
   602  005F  1303               	bcf	3,6	;RP1=0, select bank0
   603  0060  00A7               	movwf	??_main+1
   604  0061  30F7               	movlw	247
   605  0062  00A6               	movwf	??_main
   606  0063                     u427:	
   607  0063  0BA6               	decfsz	??_main,f
   608  0064  2863               	goto	u427
   609  0065  0BA7               	decfsz	??_main+1,f
   610  0066  2863               	goto	u427
   611  0067  2868               	nop2
   612                           
   613                           ;EsclvRPI.c: 106:         UART_Tx(3U);
   614  0068  3003               	movlw	3
   615  0069  00F4               	movwf	UART_Tx@val
   616  006A  3000               	movlw	0
   617  006B  00F5               	movwf	UART_Tx@val+1
   618  006C  120A  118A  222B  120A  118A  	fcall	_UART_Tx
   619                           
   620                           ;EsclvRPI.c: 107:         temperatura = UART_Rx();
   621  0071  120A  118A  2233  120A  118A  	fcall	_UART_Rx
   622  0076  1283               	bcf	3,5	;RP0=0, select bank0
   623  0077  1303               	bcf	3,6	;RP1=0, select bank0
   624  0078  00A6               	movwf	??_main
   625  0079  0826               	movf	??_main,w
   626  007A  00AA               	movwf	_temperatura
   627                           
   628                           ;EsclvRPI.c: 108:         _delay((unsigned long)((10)*(8000000/4000.0)));
   629  007B  301A               	movlw	26
   630  007C  1283               	bcf	3,5	;RP0=0, select bank0
   631  007D  1303               	bcf	3,6	;RP1=0, select bank0
   632  007E  00A7               	movwf	??_main+1
   633  007F  30F7               	movlw	247
   634  0080  00A6               	movwf	??_main
   635  0081                     u437:	
   636  0081  0BA6               	decfsz	??_main,f
   637  0082  2881               	goto	u437
   638  0083  0BA7               	decfsz	??_main+1,f
   639  0084  2881               	goto	u437
   640  0085  2886               	nop2
   641                           
   642                           ;EsclvRPI.c: 109:         UART_Tx(4U);
   643  0086  3004               	movlw	4
   644  0087  00F4               	movwf	UART_Tx@val
   645  0088  3000               	movlw	0
   646  0089  00F5               	movwf	UART_Tx@val+1
   647  008A  120A  118A  222B  120A  118A  	fcall	_UART_Tx
   648                           
   649                           ;EsclvRPI.c: 110:         distancia = UART_Rx();
   650  008F  120A  118A  2233  120A  118A  	fcall	_UART_Rx
   651  0094  1283               	bcf	3,5	;RP0=0, select bank0
   652  0095  1303               	bcf	3,6	;RP1=0, select bank0
   653  0096  00A6               	movwf	??_main
   654  0097  0826               	movf	??_main,w
   655  0098  00AB               	movwf	_distancia
   656                           
   657                           ;EsclvRPI.c: 111:         _delay((unsigned long)((10)*(8000000/4000.0)));
   658  0099  301A               	movlw	26
   659  009A  1283               	bcf	3,5	;RP0=0, select bank0
   660  009B  1303               	bcf	3,6	;RP1=0, select bank0
   661  009C  00A7               	movwf	??_main+1
   662  009D  30F7               	movlw	247
   663  009E  00A6               	movwf	??_main
   664  009F                     u447:	
   665  009F  0BA6               	decfsz	??_main,f
   666  00A0  289F               	goto	u447
   667  00A1  0BA7               	decfsz	??_main+1,f
   668  00A2  289F               	goto	u447
   669  00A3  28A4               	nop2
   670                           
   671                           ;EsclvRPI.c: 112:         UART_Tx(5U);
   672  00A4  3005               	movlw	5
   673  00A5  00F4               	movwf	UART_Tx@val
   674  00A6  3000               	movlw	0
   675  00A7  00F5               	movwf	UART_Tx@val+1
   676  00A8  120A  118A  222B  120A  118A  	fcall	_UART_Tx
   677                           
   678                           ;EsclvRPI.c: 113:         hora = UART_Rx();
   679  00AD  120A  118A  2233  120A  118A  	fcall	_UART_Rx
   680  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   681  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   682  00B4  00A6               	movwf	??_main
   683  00B5  0826               	movf	??_main,w
   684  00B6  00F7               	movwf	_hora
   685                           
   686                           ;EsclvRPI.c: 114:         _delay((unsigned long)((10)*(8000000/4000.0)));
   687  00B7  301A               	movlw	26
   688  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   689  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   690  00BA  00A7               	movwf	??_main+1
   691  00BB  30F7               	movlw	247
   692  00BC  00A6               	movwf	??_main
   693  00BD                     u457:	
   694  00BD  0BA6               	decfsz	??_main,f
   695  00BE  28BD               	goto	u457
   696  00BF  0BA7               	decfsz	??_main+1,f
   697  00C0  28BD               	goto	u457
   698  00C1  28C2               	nop2
   699                           
   700                           ;EsclvRPI.c: 115:         UART_Tx(6U);
   701  00C2  3006               	movlw	6
   702  00C3  00F4               	movwf	UART_Tx@val
   703  00C4  3000               	movlw	0
   704  00C5  00F5               	movwf	UART_Tx@val+1
   705  00C6  120A  118A  222B  120A  118A  	fcall	_UART_Tx
   706                           
   707                           ;EsclvRPI.c: 116:         minutos = UART_Rx();
   708  00CB  120A  118A  2233  120A  118A  	fcall	_UART_Rx
   709  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   710  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   711  00D2  00A6               	movwf	??_main
   712  00D3  0826               	movf	??_main,w
   713  00D4  00F6               	movwf	_minutos
   714                           
   715                           ;EsclvRPI.c: 117:         _delay((unsigned long)((10)*(8000000/4000.0)));
   716  00D5  301A               	movlw	26
   717  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   718  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   719  00D8  00A7               	movwf	??_main+1
   720  00D9  30F7               	movlw	247
   721  00DA  00A6               	movwf	??_main
   722  00DB                     u467:	
   723  00DB  0BA6               	decfsz	??_main,f
   724  00DC  28DB               	goto	u467
   725  00DD  0BA7               	decfsz	??_main+1,f
   726  00DE  28DB               	goto	u467
   727  00DF  28E0               	nop2
   728                           
   729                           ;EsclvRPI.c: 118:         UART_Tx(7U);
   730  00E0  3007               	movlw	7
   731  00E1  00F4               	movwf	UART_Tx@val
   732  00E2  3000               	movlw	0
   733  00E3  00F5               	movwf	UART_Tx@val+1
   734  00E4  120A  118A  222B  120A  118A  	fcall	_UART_Tx
   735                           
   736                           ;EsclvRPI.c: 119:         luz = UART_Rx();
   737  00E9  120A  118A  2233  120A  118A  	fcall	_UART_Rx
   738  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   739  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   740  00F0  00A6               	movwf	??_main
   741  00F1  0826               	movf	??_main,w
   742  00F2  00A8               	movwf	_luz
   743                           
   744                           ;EsclvRPI.c: 120:         _delay((unsigned long)((10)*(8000000/4000.0)));
   745  00F3  301A               	movlw	26
   746  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   747  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   748  00F6  00A7               	movwf	??_main+1
   749  00F7  30F7               	movlw	247
   750  00F8  00A6               	movwf	??_main
   751  00F9                     u477:	
   752  00F9  0BA6               	decfsz	??_main,f
   753  00FA  28F9               	goto	u477
   754  00FB  0BA7               	decfsz	??_main+1,f
   755  00FC  28F9               	goto	u477
   756  00FD  28FE               	nop2
   757  00FE  2825               	goto	l1327
   758  00FF                     __end_of_main:	
   759                           
   760                           	psect	text1
   761  017D                     __ptext1:	
   762 ;; *************** function _setup *****************
   763 ;; Defined at:
   764 ;;		line 128 in file "EsclvRPI.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       1       0       0       0
   781 ;;      Totals:         0       1       0       0       0
   782 ;;Total ram usage:        1 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    4
   785 ;; This function calls:
   786 ;;		_initOsc
   787 ;;		_spiInit
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _setup
   795  017D                     _setup:	
   796                           
   797                           ;EsclvRPI.c: 129:     initOsc(7, 1, 1, 0 ,1);
   798                           
   799                           ;incstack = 0
   800                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   801  017D  1283               	bcf	3,5	;RP0=0, select bank0
   802  017E  1303               	bcf	3,6	;RP1=0, select bank0
   803  017F  01A0               	clrf	initOsc@osts
   804  0180  0AA0               	incf	initOsc@osts,f
   805  0181  01A1               	clrf	initOsc@hts
   806  0182  0AA1               	incf	initOsc@hts,f
   807  0183  01A2               	clrf	initOsc@lts
   808  0184  01A3               	clrf	initOsc@scs
   809  0185  0AA3               	incf	initOsc@scs,f
   810  0186  3007               	movlw	7
   811  0187  120A  118A  20FF  120A  118A  	fcall	_initOsc
   812                           
   813                           ;EsclvRPI.c: 130:     ANSEL = 0;
   814  018C  1683               	bsf	3,5	;RP0=1, select bank3
   815  018D  1703               	bsf	3,6	;RP1=1, select bank3
   816  018E  0188               	clrf	8	;volatile
   817                           
   818                           ;EsclvRPI.c: 131:     ANSELH = 0;
   819  018F  0189               	clrf	9	;volatile
   820                           
   821                           ;EsclvRPI.c: 133:     TRISA = 1U;
   822  0190  3001               	movlw	1
   823  0191  1683               	bsf	3,5	;RP0=1, select bank1
   824  0192  1303               	bcf	3,6	;RP1=0, select bank1
   825  0193  0085               	movwf	5	;volatile
   826                           
   827                           ;EsclvRPI.c: 134:     TRISB = 0;
   828  0194  0186               	clrf	6	;volatile
   829                           
   830                           ;EsclvRPI.c: 135:     TRISD = 0;
   831  0195  0188               	clrf	8	;volatile
   832                           
   833                           ;EsclvRPI.c: 136:     PORTB = 0;
   834  0196  1283               	bcf	3,5	;RP0=0, select bank0
   835  0197  1303               	bcf	3,6	;RP1=0, select bank0
   836  0198  0186               	clrf	6	;volatile
   837                           
   838                           ;EsclvRPI.c: 137:     PORTD = 0;
   839  0199  0188               	clrf	8	;volatile
   840                           
   841                           ;EsclvRPI.c: 138:     TRISCbits.TRISC7 = 1;
   842  019A  1683               	bsf	3,5	;RP0=1, select bank1
   843  019B  1303               	bcf	3,6	;RP1=0, select bank1
   844  019C  1787               	bsf	7,7	;volatile
   845                           
   846                           ;EsclvRPI.c: 140:     PORTDbits.RD2 = 0;
   847  019D  1283               	bcf	3,5	;RP0=0, select bank0
   848  019E  1303               	bcf	3,6	;RP1=0, select bank0
   849  019F  1108               	bcf	8,2	;volatile
   850                           
   851                           ;EsclvRPI.c: 141:     PORTDbits.RD3 = 0;
   852  01A0  1188               	bcf	8,3	;volatile
   853                           
   854                           ;EsclvRPI.c: 143:     INTCONbits.GIE = 1;
   855  01A1  178B               	bsf	11,7	;volatile
   856                           
   857                           ;EsclvRPI.c: 144:     INTCONbits.PEIE = 1;
   858  01A2  170B               	bsf	11,6	;volatile
   859                           
   860                           ;EsclvRPI.c: 145:     PIR1bits.SSPIF = 0;
   861  01A3  118C               	bcf	12,3	;volatile
   862                           
   863                           ;EsclvRPI.c: 146:     PIE1bits.SSPIE = 1;
   864  01A4  1683               	bsf	3,5	;RP0=1, select bank1
   865  01A5  1303               	bcf	3,6	;RP1=0, select bank1
   866  01A6  158C               	bsf	12,3	;volatile
   867                           
   868                           ;EsclvRPI.c: 147:     TRISAbits.TRISA5 = 1;
   869  01A7  1685               	bsf	5,5	;volatile
   870                           
   871                           ;EsclvRPI.c: 148:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_ACTIVE_2_IDLE);
   872  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   873  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   874  01AA  01A0               	clrf	spiInit@sDataSample
   875  01AB  01A1               	clrf	spiInit@sClockIdle
   876  01AC  3040               	movlw	64
   877  01AD  00A5               	movwf	??_setup
   878  01AE  0825               	movf	??_setup,w
   879  01AF  00A2               	movwf	spiInit@sTransmitEdge
   880  01B0  3024               	movlw	36
   881  01B1  120A  118A  220F   	fcall	_spiInit
   882                           
   883                           ;EsclvRPI.c: 151:     BAUDCTLbits.BRG16 = 0;
   884  01B4  1683               	bsf	3,5	;RP0=1, select bank3
   885  01B5  1703               	bsf	3,6	;RP1=1, select bank3
   886  01B6  1187               	bcf	7,3	;volatile
   887                           
   888                           ;EsclvRPI.c: 152:     TXSTAbits.BRGH = 1;
   889  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   890  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   891  01B9  1518               	bsf	24,2	;volatile
   892                           
   893                           ;EsclvRPI.c: 153:     SPBRGH = 0x0;
   894  01BA  019A               	clrf	26	;volatile
   895                           
   896                           ;EsclvRPI.c: 154:     SPBRGH = 0x51;
   897  01BB  3051               	movlw	81
   898  01BC  009A               	movwf	26	;volatile
   899                           
   900                           ;EsclvRPI.c: 155:     TXSTAbits.SYNC = 0;
   901  01BD  1218               	bcf	24,4	;volatile
   902                           
   903                           ;EsclvRPI.c: 156:     RCSTAbits.SPEN = 1;
   904  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   905  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   906  01C0  1798               	bsf	24,7	;volatile
   907                           
   908                           ;EsclvRPI.c: 157:     TXSTAbits.TX9 = 0;
   909  01C1  1683               	bsf	3,5	;RP0=1, select bank1
   910  01C2  1303               	bcf	3,6	;RP1=0, select bank1
   911  01C3  1318               	bcf	24,6	;volatile
   912                           
   913                           ;EsclvRPI.c: 158:     TXSTAbits.TXEN = 1;
   914  01C4  1698               	bsf	24,5	;volatile
   915                           
   916                           ;EsclvRPI.c: 159:     CREN = 1;
   917  01C5  1283               	bcf	3,5	;RP0=0, select bank0
   918  01C6  1303               	bcf	3,6	;RP1=0, select bank0
   919  01C7  1618               	bsf	24,4	;volatile
   920  01C8  0008               	return
   921  01C9                     __end_of_setup:	
   922                           
   923                           	psect	text2
   924  020F                     __ptext2:	
   925 ;; *************** function _spiInit *****************
   926 ;; Defined at:
   927 ;;		line 12 in file "SPI.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  sType           1    wreg     enum E1264
   930 ;;  sDataSample     1    0[BANK0 ] enum E1272
   931 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   932 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  sType           1    4[COMMON] enum E1264
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         0       3       0       0       0
   945 ;;      Locals:         1       0       0       0       0
   946 ;;      Temps:          0       0       0       0       0
   947 ;;      Totals:         1       3       0       0       0
   948 ;;Total ram usage:        4 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    3
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_setup
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           
   959                           ;psect for function _spiInit
   960  020F                     _spiInit:	
   961                           
   962                           ;incstack = 0
   963                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   964                           ;spiInit@sType stored from wreg
   965  020F  00F4               	movwf	spiInit@sType
   966                           
   967                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   968  0210  1683               	bsf	3,5	;RP0=1, select bank1
   969  0211  1303               	bcf	3,6	;RP1=0, select bank1
   970  0212  1287               	bcf	7,5	;volatile
   971                           
   972                           ;SPI.c: 15:     if(sType & 0b00000100)
   973  0213  1D74               	btfss	spiInit@sType,2
   974  0214  2A1D               	goto	l1233
   975                           
   976                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   977  0215  1283               	bcf	3,5	;RP0=0, select bank0
   978  0216  1303               	bcf	3,6	;RP1=0, select bank0
   979  0217  0822               	movf	spiInit@sTransmitEdge,w
   980  0218  1683               	bsf	3,5	;RP0=1, select bank1
   981  0219  1303               	bcf	3,6	;RP1=0, select bank1
   982  021A  0094               	movwf	20	;volatile
   983                           
   984                           ;SPI.c: 18:         TRISC3 = 1;
   985  021B  1587               	bsf	7,3	;volatile
   986                           
   987                           ;SPI.c: 19:     }
   988  021C  2A25               	goto	l163
   989  021D                     l1233:	
   990                           
   991                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   992  021D  1283               	bcf	3,5	;RP0=0, select bank0
   993  021E  1303               	bcf	3,6	;RP1=0, select bank0
   994  021F  0820               	movf	spiInit@sDataSample,w
   995  0220  0422               	iorwf	spiInit@sTransmitEdge,w
   996  0221  1683               	bsf	3,5	;RP0=1, select bank1
   997  0222  1303               	bcf	3,6	;RP1=0, select bank1
   998  0223  0094               	movwf	20	;volatile
   999                           
  1000                           ;SPI.c: 23:         TRISC3 = 0;
  1001  0224  1187               	bcf	7,3	;volatile
  1002  0225                     l163:	
  1003                           ;SPI.c: 24:     }
  1004                           
  1005                           
  1006                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1007  0225  0874               	movf	spiInit@sType,w
  1008  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0228  0421               	iorwf	spiInit@sClockIdle,w
  1011  0229  0094               	movwf	20	;volatile
  1012  022A  0008               	return
  1013  022B                     __end_of_spiInit:	
  1014                           
  1015                           	psect	text3
  1016  00FF                     __ptext3:	
  1017 ;; *************** function _initOsc *****************
  1018 ;; Defined at:
  1019 ;;		line 8 in file "./oscilador.h"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  frec            1    wreg     unsigned char 
  1022 ;;  osts            1    0[BANK0 ] unsigned char 
  1023 ;;  hts             1    1[BANK0 ] unsigned char 
  1024 ;;  lts             1    2[BANK0 ] unsigned char 
  1025 ;;  scs             1    3[BANK0 ] unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  frec            1    4[BANK0 ] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       4       0       0       0
  1038 ;;      Locals:         0       1       0       0       0
  1039 ;;      Temps:          2       0       0       0       0
  1040 ;;      Totals:         2       5       0       0       0
  1041 ;;Total ram usage:        7 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    3
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_setup
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function _initOsc
  1053  00FF                     _initOsc:	
  1054                           
  1055                           ;incstack = 0
  1056                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1057                           ;initOsc@frec stored from wreg
  1058  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1060  0101  00A4               	movwf	initOsc@frec
  1061                           
  1062                           ;./oscilador.h: 10:     switch(frec){
  1063  0102  292A               	goto	l1203
  1064  0103                     l64:	
  1065                           ;./oscilador.h: 11:         case 0:
  1066                           
  1067                           
  1068                           ;./oscilador.h: 13:             OSCCONbits.IRCF0 = 0;
  1069  0103  1683               	bsf	3,5	;RP0=1, select bank1
  1070  0104  1303               	bcf	3,6	;RP1=0, select bank1
  1071  0105  120F               	bcf	15,4	;volatile
  1072  0106  290A               	goto	L1
  1073  0107                     l66:	
  1074                           ;./oscilador.h: 18:         case 1:
  1075                           
  1076                           ;./oscilador.h: 17:             break;
  1077                           
  1078                           ;./oscilador.h: 15:             OSCCONbits.IRCF2 = 0;
  1079                           
  1080                           ;./oscilador.h: 14:             OSCCONbits.IRCF1 = 0;
  1081                           
  1082                           
  1083                           ;./oscilador.h: 20:             OSCCONbits.IRCF0 = 1;
  1084  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1085  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1086  0109  160F               	bsf	15,4	;volatile
  1087  010A                     L1:	
  1088                           
  1089                           ;./oscilador.h: 21:             OSCCONbits.IRCF1 = 0;
  1090  010A  128F               	bcf	15,5	;volatile
  1091  010B  2914               	goto	L3
  1092  010C                     l67:	
  1093                           ;./oscilador.h: 25:         case 2:
  1094                           
  1095                           ;./oscilador.h: 24:             break;
  1096                           
  1097                           ;./oscilador.h: 22:             OSCCONbits.IRCF2 = 0;
  1098                           
  1099                           
  1100                           ;./oscilador.h: 27:             OSCCONbits.IRCF0 = 0;
  1101  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1102  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1103  010E  120F               	bcf	15,4	;volatile
  1104  010F  2913               	goto	L8
  1105  0110                     l68:	
  1106                           ;./oscilador.h: 32:         case 3:
  1107                           
  1108                           ;./oscilador.h: 31:             break;
  1109                           
  1110                           ;./oscilador.h: 29:             OSCCONbits.IRCF2 = 0;
  1111                           
  1112                           ;./oscilador.h: 28:             OSCCONbits.IRCF1 = 1;
  1113                           
  1114                           
  1115                           ;./oscilador.h: 34:             OSCCONbits.IRCF0 = 1;
  1116  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1117  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1118  0112  160F               	bsf	15,4	;volatile
  1119  0113                     L8:	
  1120                           
  1121                           ;./oscilador.h: 35:             OSCCONbits.IRCF1 = 1;
  1122  0113  168F               	bsf	15,5	;volatile
  1123  0114                     L3:	
  1124                           
  1125                           ;./oscilador.h: 36:             OSCCONbits.IRCF2 = 0;
  1126  0114  130F               	bcf	15,6	;volatile
  1127                           
  1128                           ;./oscilador.h: 38:             break;
  1129  0115  294C               	goto	l1205
  1130  0116                     l69:	
  1131                           ;./oscilador.h: 39:         case 4:
  1132                           
  1133                           
  1134                           ;./oscilador.h: 41:             OSCCONbits.IRCF0 = 0;
  1135  0116  1683               	bsf	3,5	;RP0=1, select bank1
  1136  0117  1303               	bcf	3,6	;RP1=0, select bank1
  1137  0118  120F               	bcf	15,4	;volatile
  1138  0119  291D               	goto	L4
  1139  011A                     l70:	
  1140                           ;./oscilador.h: 46:         case 5:
  1141                           
  1142                           ;./oscilador.h: 45:             break;
  1143                           
  1144                           ;./oscilador.h: 43:             OSCCONbits.IRCF2 = 1;
  1145                           
  1146                           ;./oscilador.h: 42:             OSCCONbits.IRCF1 = 0;
  1147                           
  1148                           
  1149                           ;./oscilador.h: 48:             OSCCONbits.IRCF0 = 1;
  1150  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1151  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1152  011C  160F               	bsf	15,4	;volatile
  1153  011D                     L4:	
  1154                           
  1155                           ;./oscilador.h: 49:             OSCCONbits.IRCF1 = 0;
  1156  011D  128F               	bcf	15,5	;volatile
  1157  011E  2928               	goto	L7
  1158  011F                     l71:	
  1159                           ;./oscilador.h: 53:         case 6:
  1160                           
  1161                           ;./oscilador.h: 52:             break;
  1162                           
  1163                           ;./oscilador.h: 50:             OSCCONbits.IRCF2 = 1;
  1164                           
  1165  011F  2924               	goto	l73
  1166  0120                     l72:	
  1167                           ;./oscilador.h: 60:         case 7:
  1168                           
  1169                           ;./oscilador.h: 59:             break;
  1170                           
  1171                           ;./oscilador.h: 57:             OSCCONbits.IRCF2 = 1;
  1172                           
  1173                           ;./oscilador.h: 56:             OSCCONbits.IRCF1 = 1;
  1174                           
  1175                           ;./oscilador.h: 55:             OSCCONbits.IRCF0 = 0;
  1176                           
  1177                           
  1178                           ;./oscilador.h: 62:             OSCCONbits.IRCF0 = 1;
  1179  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1180  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1181  0122  160F               	bsf	15,4	;volatile
  1182  0123  2927               	goto	L9
  1183  0124                     l73:	
  1184                           ;./oscilador.h: 67:         default:
  1185                           
  1186                           ;./oscilador.h: 66:             break;
  1187                           
  1188                           ;./oscilador.h: 64:             OSCCONbits.IRCF2 = 1;
  1189                           
  1190                           ;./oscilador.h: 63:             OSCCONbits.IRCF1 = 1;
  1191                           
  1192                           
  1193                           ;./oscilador.h: 69:             OSCCONbits.IRCF0 = 0;
  1194  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0126  120F               	bcf	15,4	;volatile
  1197  0127                     L9:	
  1198                           
  1199                           ;./oscilador.h: 70:             OSCCONbits.IRCF1 = 1;
  1200  0127  168F               	bsf	15,5	;volatile
  1201  0128                     L7:	
  1202                           
  1203                           ;./oscilador.h: 71:             OSCCONbits.IRCF2 = 1;
  1204  0128  170F               	bsf	15,6	;volatile
  1205                           
  1206                           ;./oscilador.h: 72:             break;
  1207  0129  294C               	goto	l1205
  1208  012A                     l1203:	
  1209  012A  0824               	movf	initOsc@frec,w
  1210  012B  00F4               	movwf	??_initOsc
  1211  012C  01F5               	clrf	??_initOsc+1
  1212                           
  1213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1214                           ; Switch size 1, requested type "simple"
  1215                           ; Number of cases is 1, Range of values is 0 to 0
  1216                           ; switch strategies available:
  1217                           ; Name         Instructions Cycles
  1218                           ; simple_byte            4     3 (average)
  1219                           ; direct_byte           11     8 (fixed)
  1220                           ; jumptable            260     6 (fixed)
  1221                           ;	Chosen strategy is simple_byte
  1222  012D  0875               	movf	??_initOsc+1,w
  1223  012E  3A00               	xorlw	0	; case 0
  1224  012F  1903               	skipnz
  1225  0130  2932               	goto	l1359
  1226  0131  2924               	goto	l73
  1227  0132                     l1359:	
  1228                           
  1229                           ; Switch size 1, requested type "simple"
  1230                           ; Number of cases is 8, Range of values is 0 to 7
  1231                           ; switch strategies available:
  1232                           ; Name         Instructions Cycles
  1233                           ; simple_byte           25    13 (average)
  1234                           ; direct_byte           32     8 (fixed)
  1235                           ; jumptable            260     6 (fixed)
  1236                           ;	Chosen strategy is simple_byte
  1237  0132  0874               	movf	??_initOsc,w
  1238  0133  3A00               	xorlw	0	; case 0
  1239  0134  1903               	skipnz
  1240  0135  2903               	goto	l64
  1241  0136  3A01               	xorlw	1	; case 1
  1242  0137  1903               	skipnz
  1243  0138  2907               	goto	l66
  1244  0139  3A03               	xorlw	3	; case 2
  1245  013A  1903               	skipnz
  1246  013B  290C               	goto	l67
  1247  013C  3A01               	xorlw	1	; case 3
  1248  013D  1903               	skipnz
  1249  013E  2910               	goto	l68
  1250  013F  3A07               	xorlw	7	; case 4
  1251  0140  1903               	skipnz
  1252  0141  2916               	goto	l69
  1253  0142  3A01               	xorlw	1	; case 5
  1254  0143  1903               	skipnz
  1255  0144  291A               	goto	l70
  1256  0145  3A03               	xorlw	3	; case 6
  1257  0146  1903               	skipnz
  1258  0147  291F               	goto	l71
  1259  0148  3A01               	xorlw	1	; case 7
  1260  0149  1903               	skipnz
  1261  014A  2920               	goto	l72
  1262  014B  2924               	goto	l73
  1263  014C                     l1205:	
  1264                           
  1265                           ;./oscilador.h: 74:     if(osts==1){
  1266  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1267  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1268  014E  0320               	decf	initOsc@osts,w
  1269  014F  1D03               	btfss	3,2
  1270  0150  2955               	goto	l74
  1271                           
  1272                           ;./oscilador.h: 75:         OSCCONbits.OSTS = 1;
  1273  0151  1683               	bsf	3,5	;RP0=1, select bank1
  1274  0152  1303               	bcf	3,6	;RP1=0, select bank1
  1275  0153  158F               	bsf	15,3	;volatile
  1276                           
  1277                           ;./oscilador.h: 76:     } else{
  1278  0154  2958               	goto	l1209
  1279  0155                     l74:	
  1280                           
  1281                           ;./oscilador.h: 77:         OSCCONbits.OSTS = 0;
  1282  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1284  0157  118F               	bcf	15,3	;volatile
  1285  0158                     l1209:	
  1286                           
  1287                           ;./oscilador.h: 80:     if(hts==1){
  1288  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1290  015A  0321               	decf	initOsc@hts,w
  1291  015B  1D03               	btfss	3,2
  1292  015C  2961               	goto	l76
  1293                           
  1294                           ;./oscilador.h: 81:         OSCCONbits.HTS = 1;
  1295  015D  1683               	bsf	3,5	;RP0=1, select bank1
  1296  015E  1303               	bcf	3,6	;RP1=0, select bank1
  1297  015F  150F               	bsf	15,2	;volatile
  1298                           
  1299                           ;./oscilador.h: 82:     } else{
  1300  0160  2964               	goto	l1213
  1301  0161                     l76:	
  1302                           
  1303                           ;./oscilador.h: 83:         OSCCONbits.HTS = 0;
  1304  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1305  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1306  0163  110F               	bcf	15,2	;volatile
  1307  0164                     l1213:	
  1308                           
  1309                           ;./oscilador.h: 86:     if(lts==1){
  1310  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0166  0322               	decf	initOsc@lts,w
  1313  0167  1D03               	btfss	3,2
  1314  0168  296D               	goto	l78
  1315                           
  1316                           ;./oscilador.h: 87:         OSCCONbits.LTS = 1;
  1317  0169  1683               	bsf	3,5	;RP0=1, select bank1
  1318  016A  1303               	bcf	3,6	;RP1=0, select bank1
  1319  016B  148F               	bsf	15,1	;volatile
  1320                           
  1321                           ;./oscilador.h: 88:     } else{
  1322  016C  2970               	goto	l1217
  1323  016D                     l78:	
  1324                           
  1325                           ;./oscilador.h: 89:         OSCCONbits.LTS = 0;
  1326  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1327  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1328  016F  108F               	bcf	15,1	;volatile
  1329  0170                     l1217:	
  1330                           
  1331                           ;./oscilador.h: 92:     if(scs==1){
  1332  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0172  0323               	decf	initOsc@scs,w
  1335  0173  1D03               	btfss	3,2
  1336  0174  2979               	goto	l80
  1337                           
  1338                           ;./oscilador.h: 93:         OSCCONbits.SCS = 1;
  1339  0175  1683               	bsf	3,5	;RP0=1, select bank1
  1340  0176  1303               	bcf	3,6	;RP1=0, select bank1
  1341  0177  140F               	bsf	15,0	;volatile
  1342                           
  1343                           ;./oscilador.h: 94:     } else{
  1344  0178  0008               	return
  1345  0179                     l80:	
  1346                           
  1347                           ;./oscilador.h: 95:         OSCCONbits.SCS = 0;
  1348  0179  1683               	bsf	3,5	;RP0=1, select bank1
  1349  017A  1303               	bcf	3,6	;RP1=0, select bank1
  1350  017B  100F               	bcf	15,0	;volatile
  1351  017C  0008               	return
  1352  017D                     __end_of_initOsc:	
  1353                           
  1354                           	psect	text4
  1355  022B                     __ptext4:	
  1356 ;; *************** function _UART_Tx *****************
  1357 ;; Defined at:
  1358 ;;		line 76 in file "EsclvRPI.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  val             2    4[COMMON] unsigned int 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         2       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0
  1375 ;;      Totals:         2       0       0       0       0
  1376 ;;Total ram usage:        2 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    3
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           
  1387                           ;psect for function _UART_Tx
  1388  022B                     _UART_Tx:	
  1389  022B                     l124:	
  1390                           ;EsclvRPI.c: 76: void UART_Tx(unsigned int val);EsclvRPI.c: 77: {;EsclvRPI.c: 78:     wh
      +                          ile(TXIF == 0);
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _UART_Tx: [wreg]
  1394                           
  1395  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1396  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1397  022D  1E0C               	btfss	12,4	;volatile
  1398  022E  2A2B               	goto	l124
  1399                           
  1400                           ;EsclvRPI.c: 79:     TXIF = 0;
  1401  022F  120C               	bcf	12,4	;volatile
  1402                           
  1403                           ;EsclvRPI.c: 80:     TXREG = val;
  1404  0230  0874               	movf	UART_Tx@val,w
  1405  0231  0099               	movwf	25	;volatile
  1406  0232  0008               	return
  1407  0233                     __end_of_UART_Tx:	
  1408                           
  1409                           	psect	text5
  1410  0233                     __ptext5:	
  1411 ;; *************** function _UART_Rx *****************
  1412 ;; Defined at:
  1413 ;;		line 84 in file "EsclvRPI.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      unsigned char 
  1420 ;; Registers used:
  1421 ;;		wreg
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    3
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _UART_Rx
  1443  0233                     _UART_Rx:	
  1444  0233                     l130:	
  1445                           ;EsclvRPI.c: 86:     while(RCIF == 0);
  1446                           
  1447                           ;incstack = 0
  1448                           ; Regs used in _UART_Rx: [wreg]
  1449                           
  1450  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0235  1E8C               	btfss	12,5	;volatile
  1453  0236  2A33               	goto	l130
  1454                           
  1455                           ;EsclvRPI.c: 87:     RCIF = 0;
  1456  0237  128C               	bcf	12,5	;volatile
  1457                           
  1458                           ;EsclvRPI.c: 88:     return(RCREG);
  1459  0238  081A               	movf	26,w	;volatile
  1460  0239  0008               	return
  1461  023A                     __end_of_UART_Rx:	
  1462                           
  1463                           	psect	text6
  1464  01C9                     __ptext6:	
  1465 ;; *************** function _isr *****************
  1466 ;; Defined at:
  1467 ;;		line 39 in file "EsclvRPI.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0, pclath, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1481 ;;      Params:         0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0
  1483 ;;      Temps:          3       0       0       0       0
  1484 ;;      Totals:         3       0       0       0       0
  1485 ;;Total ram usage:        3 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    2
  1488 ;; This function calls:
  1489 ;;		_spiRead
  1490 ;;		_spiWrite
  1491 ;; This function is called by:
  1492 ;;		Interrupt level 1
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _isr
  1498  01C9                     _isr:	
  1499                           
  1500                           ;EsclvRPI.c: 41:    if(SSPIF == 1){
  1501  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1502  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1503  01CB  1D8C               	btfss	12,3	;volatile
  1504  01CC  2A08               	goto	i1l121
  1505                           
  1506                           ;EsclvRPI.c: 43:        estado = spiRead();
  1507  01CD  120A  118A  223A  120A  118A  	fcall	_spiRead
  1508  01D2  00F1               	movwf	??_isr
  1509  01D3  0871               	movf	??_isr,w
  1510  01D4  00F9               	movwf	_estado
  1511                           
  1512                           ;EsclvRPI.c: 44:        PORTDbits.RD3 =1;
  1513  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1514  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1515  01D7  1588               	bsf	8,3	;volatile
  1516                           
  1517                           ;EsclvRPI.c: 45:        if (estado == 0x1)
  1518  01D8  0379               	decf	_estado,w
  1519  01D9  1D03               	btfss	3,2
  1520  01DA  29DD               	goto	i1l1103
  1521                           
  1522                           ;EsclvRPI.c: 46:        {;EsclvRPI.c: 47:            spiWrite(humedad);
  1523  01DB  0829               	movf	_humedad,w
  1524  01DC  2A00               	goto	L10
  1525  01DD                     i1l1103:	
  1526                           ;EsclvRPI.c: 48:        }else if (estado == 0x2)
  1527                           
  1528  01DD  3002               	movlw	2
  1529  01DE  0679               	xorwf	_estado,w
  1530  01DF  1D03               	btfss	3,2
  1531  01E0  29E3               	goto	i1l1107
  1532                           
  1533                           ;EsclvRPI.c: 49:        {;EsclvRPI.c: 50:             spiWrite(precensia);
  1534  01E1  0878               	movf	_precensia,w
  1535  01E2  2A00               	goto	L10
  1536  01E3                     i1l1107:	
  1537                           ;EsclvRPI.c: 51:        }else if (estado == 0x3)
  1538                           
  1539  01E3  3003               	movlw	3
  1540  01E4  0679               	xorwf	_estado,w
  1541  01E5  1D03               	btfss	3,2
  1542  01E6  29E9               	goto	i1l1111
  1543                           
  1544                           ;EsclvRPI.c: 52:        {;EsclvRPI.c: 53:             spiWrite(temperatura);
  1545  01E7  082A               	movf	_temperatura,w
  1546  01E8  2A00               	goto	L10
  1547  01E9                     i1l1111:	
  1548                           ;EsclvRPI.c: 54:        }else if (estado == 0x4)
  1549                           
  1550  01E9  3004               	movlw	4
  1551  01EA  0679               	xorwf	_estado,w
  1552  01EB  1D03               	btfss	3,2
  1553  01EC  29EF               	goto	i1l1115
  1554                           
  1555                           ;EsclvRPI.c: 55:        {;EsclvRPI.c: 56:             spiWrite(distancia);
  1556  01ED  082B               	movf	_distancia,w
  1557  01EE  2A00               	goto	L10
  1558  01EF                     i1l1115:	
  1559                           ;EsclvRPI.c: 57:        }
  1560                           
  1561  01EF  3005               	movlw	5
  1562  01F0  0679               	xorwf	_estado,w
  1563  01F1  1D03               	btfss	3,2
  1564  01F2  29F5               	goto	i1l1119
  1565                           
  1566                           ;EsclvRPI.c: 59:        {;EsclvRPI.c: 60:             spiWrite(hora);
  1567  01F3  0877               	movf	_hora,w
  1568  01F4  2A00               	goto	L10
  1569  01F5                     i1l1119:	
  1570                           ;EsclvRPI.c: 61:        }else if (estado == 0x6)
  1571                           
  1572  01F5  3006               	movlw	6
  1573  01F6  0679               	xorwf	_estado,w
  1574  01F7  1D03               	btfss	3,2
  1575  01F8  29FB               	goto	i1l1123
  1576                           
  1577                           ;EsclvRPI.c: 62:        {;EsclvRPI.c: 63:             spiWrite(minutos);
  1578  01F9  0876               	movf	_minutos,w
  1579  01FA  2A00               	goto	L10
  1580  01FB                     i1l1123:	
  1581                           ;EsclvRPI.c: 64:        }else if (estado == 0x7)
  1582                           
  1583  01FB  3007               	movlw	7
  1584  01FC  0679               	xorwf	_estado,w
  1585  01FD  1D03               	btfss	3,2
  1586  01FE  2A05               	goto	i1l1127
  1587                           
  1588                           ;EsclvRPI.c: 65:        {;EsclvRPI.c: 66:             spiWrite(luz);
  1589  01FF  0828               	movf	_luz,w
  1590  0200                     L10:	
  1591  0200  120A  118A  2241  120A  118A  	fcall	_spiWrite
  1592  0205                     i1l1127:	
  1593                           
  1594                           ;EsclvRPI.c: 69:        SSPIF = 0;
  1595  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0207  118C               	bcf	12,3	;volatile
  1598  0208                     i1l121:	
  1599  0208  0873               	movf	??_isr+2,w
  1600  0209  008A               	movwf	10
  1601  020A  0E72               	swapf	(??_isr+1)^(0+4294967168),w
  1602  020B  0083               	movwf	3
  1603  020C  0EFE               	swapf	126,f
  1604  020D  0E7E               	swapf	126,w
  1605  020E  0009               	retfie
  1606  020F                     __end_of_isr:	
  1607                           
  1608                           	psect	intentry
  1609  0004                     __pintentry:	
  1610                           ;incstack = 0
  1611                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1612                           
  1613  0004                     interrupt_function:	
  1614  007E                     saved_w	set	btemp
  1615  0004  00FE               	movwf	btemp
  1616  0005  0E03               	swapf	3,w
  1617  0006  00F2               	movwf	??_isr+1
  1618  0007  080A               	movf	10,w
  1619  0008  00F3               	movwf	??_isr+2
  1620  0009  120A  118A  29C9   	ljmp	_isr
  1621                           
  1622                           	psect	text7
  1623  0241                     __ptext7:	
  1624 ;; *************** function _spiWrite *****************
  1625 ;; Defined at:
  1626 ;;		line 34 in file "SPI.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  dat             1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  dat             1    0[COMMON] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         1       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0
  1643 ;;      Totals:         1       0       0       0       0
  1644 ;;Total ram usage:        1 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_isr
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _spiWrite
  1655  0241                     _spiWrite:	
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in _spiWrite: [wreg]
  1659                           ;spiWrite@dat stored from wreg
  1660  0241  00F0               	movwf	spiWrite@dat
  1661                           
  1662                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1663  0242  0870               	movf	spiWrite@dat,w
  1664  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0245  0093               	movwf	19	;volatile
  1667  0246  0008               	return
  1668  0247                     __end_of_spiWrite:	
  1669                           
  1670                           	psect	text8
  1671  023A                     __ptext8:	
  1672 ;; *************** function _spiRead *****************
  1673 ;; Defined at:
  1674 ;;		line 47 in file "SPI.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      unsigned char 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0
  1691 ;;      Totals:         0       0       0       0       0
  1692 ;;Total ram usage:        0 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    1
  1695 ;; This function calls:
  1696 ;;		_spiReceiveWait
  1697 ;; This function is called by:
  1698 ;;		_isr
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           
  1703                           ;psect for function _spiRead
  1704  023A                     _spiRead:	
  1705                           
  1706                           ;SPI.c: 49:     spiReceiveWait();
  1707                           
  1708                           ;incstack = 0
  1709                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1710  023A  120A  118A  2247   	fcall	_spiReceiveWait
  1711                           
  1712                           ;SPI.c: 50:     return(SSPBUF);
  1713  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1714  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1715  023F  0813               	movf	19,w	;volatile
  1716  0240  0008               	return
  1717  0241                     __end_of_spiRead:	
  1718                           
  1719                           	psect	text9
  1720  0247                     __ptext9:	
  1721 ;; *************** function _spiReceiveWait *****************
  1722 ;; Defined at:
  1723 ;;		line 29 in file "SPI.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		None
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_spiRead
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           
  1751                           ;psect for function _spiReceiveWait
  1752  0247                     _spiReceiveWait:	
  1753  0247                     i1l167:	
  1754                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in _spiReceiveWait: []
  1758                           
  1759  0247  1683               	bsf	3,5	;RP0=1, select bank1
  1760  0248  1303               	bcf	3,6	;RP1=0, select bank1
  1761  0249  1814               	btfsc	20,0	;volatile
  1762  024A  0008               	return
  1763  024B  2A47               	goto	i1l167
  1764  024C                     __end_of_spiReceiveWait:	
  1765  007E                     btemp	set	126	;btemp
  1766  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      8      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Tx
    _setup->_initOsc

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_initOsc

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1525
                                              6 BANK0      2     2      0
                            _UART_Rx
                            _UART_Tx
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     971
                                              5 BANK0      1     1      0
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              7     3      4     515
                                              4 COMMON     2     2      0
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _UART_Tx                                              2     0      2     554
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Rx
   _UART_Tx
   _setup
     _initOsc
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8       E       5       17.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      18      12        0.0%
ABS                  0      0      18       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 10:38:26 2019

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l70 011A  
                      l71 011F                        l80 0179                        l72 0120  
                      l64 0103                        l73 0124                        l74 0155  
                      l66 0107                        l67 010C                        l76 0161  
                      l68 0110                        l69 0116                        l78 016D  
                     l130 0233                       l124 022B                       l163 0225  
                     u417 0045              __CFG_CPD$OFF 0000                       u427 0063  
                     u437 0081                       u447 009F                       u457 00BD  
                     u467 00DB                       u477 00F9                       _isr 01C9  
                     _luz 0028              __CFG_LVP$OFF 0000                      l1203 012A  
                    l1213 0164                      l1205 014C                      l1217 0170  
                    l1209 0158                      l1233 021D                      l1327 0025  
                    l1359 0132                      ?_isr 0070                      _CREN 00C4  
                    _RCIF 0065                      _TXIF 0064              __CFG_WRT$OFF 0000  
         __end_of_UART_Rx 023A           __end_of_UART_Tx 0233                      _disp 002C  
                    _main 0020                      _hora 0077                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0071  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l121 0208                     i1l167 0247                     _RCREG 001A  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _SSPIF 0063  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000           __end_of_initOsc 017D  
                   _setup 017D            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiInit 022B           __end_of_spiRead 0241                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 00FF                    ??_main 0026                 ??_UART_Rx 0074  
               ??_UART_Tx 0076                    ?_setup 0070                    _ANSELH 0189  
                  i1l1111 01E9                    i1l1103 01DD                    i1l1123 01FB  
                  i1l1115 01EF                    i1l1107 01E3                    i1l1119 01F5  
                  i1l1127 0205               initOsc@frec 0024               initOsc@osts 0020  
                  _SPBRGH 009A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  _estado 0079                 ??_initOsc 0074                    saved_w 007E  
        __end_of_spiWrite 0247                 ??_spiInit 0074                 ??_spiRead 0070  
 __end_of__initialization 001C            __pcstackCOMMON 0070              __pidataBANK0 024C  
           __end_of_setup 01C9                   ??_setup 0025                __pbssBANK0 0028  
              __pmaintext 0020                __pintentry 0004   __size_of_spiReceiveWait 0005  
                 _UART_Rx 0233                   _UART_Tx 022B                   _SSPSTAT 0094  
               ?_spiWrite 0070                   __ptext1 017D                   __ptext2 020F  
                 __ptext3 00FF                   __ptext4 022B                   __ptext5 0233  
                 __ptext6 01C9                   __ptext7 0241                   __ptext8 023A  
                 __ptext9 0247                   _initOsc 00FF              __size_of_isr 0046  
                 _humedad 0029                   _minutos 0076                   _spiInit 020F  
                 _spiRead 023A      end_of_initialization 001C                 _RCSTAbits 0018  
              ??_spiWrite 0070                 _PORTAbits 0005                 _PORTDbits 0008  
               _TRISAbits 0085                 _TRISCbits 0087               spiWrite@dat 0070  
               _TXSTAbits 0098            _spiReceiveWait 0247               _BAUDCTLbits 0187  
     start_initialization 000F               __end_of_isr 020F                initOsc@hts 0021  
              initOsc@scs 0023                initOsc@lts 0022  __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __end_of_spiReceiveWait 024C               __pdataBANK0 002D               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 0020                  ?_UART_Rx 0070  
                ?_UART_Tx 0074           ?_spiReceiveWait 0070         __size_of_spiWrite 0006  
               _distancia 002B                  ?_initOsc 0020                  ?_spiInit 0020  
                ?_spiRead 0070            __size_of_setup 004C                UART_Tx@val 0074  
    spiInit@sTransmitEdge 0022         interrupt_function 0004                  _PIE1bits 008C  
      spiInit@sDataSample 0020                  _PIR1bits 000C                 _precensia 0078  
        __size_of_UART_Rx 0007          __size_of_UART_Tx 0008          __size_of_initOsc 007E  
        __size_of_spiInit 001C          __size_of_spiRead 0007         __CFG_BOR4V$BOR40V 0000  
                _contador 002D             __size_of_main 00DF                  _spiWrite 0241  
            spiInit@sType 0074         spiInit@sClockIdle 0021                _INTCONbits 000B  
                intlevel1 0000          ??_spiReceiveWait 0070                _OSCCONbits 008F  
             _temperatura 002A  
