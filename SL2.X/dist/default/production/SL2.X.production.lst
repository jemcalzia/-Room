

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 02:40:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.05
    20                           ; Generated 20/12/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	nvBANK0
   289  0028                     __pnvBANK0:	
   290  0028                     _pir:	
   291  0028                     	ds	1
   292  000E                     _TMR1	set	14
   293  000B                     _INTCONbits	set	11
   294  0010                     _T1CONbits	set	16
   295  0014                     _SSPCONbits	set	20
   296  000C                     _PIR1bits	set	12
   297  0013                     _SSPBUF	set	19
   298  0014                     _SSPCON	set	20
   299  0029                     _RA1	set	41
   300  002A                     _RA2	set	42
   301  0028                     _RA0	set	40
   302  0063                     _SSPIF	set	99
   303  005E                     _PEIE	set	94
   304  005F                     _GIE	set	95
   305  008C                     _PIE1bits	set	140
   306  0094                     _SSPSTATbits	set	148
   307  008F                     _OSCCONbits	set	143
   308  0091                     _SSPCON2bits	set	145
   309  0094                     _SSPSTAT	set	148
   310  0093                     _SSPADD	set	147
   311  0091                     _SSPCON2	set	145
   312  0429                     _TRISA1	set	1065
   313  042A                     _TRISA2	set	1066
   314  0428                     _TRISA0	set	1064
   315  04A0                     _BF	set	1184
   316  0463                     _SSPIE	set	1123
   317  048B                     _RCEN	set	1163
   318  043C                     _TRISC4	set	1084
   319  043B                     _TRISC3	set	1083
   320  0188                     _ANSEL	set	392
   321                           
   322                           ; #config settings
   323  0000                     
   324                           	psect	cinit
   325  000F                     start_initialization:	
   326  000F                     __initialization:	
   327                           
   328                           ; Clear objects allocated to COMMON
   329  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   330  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   331  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   332  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   333  0013  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   334                           
   335                           ; Clear objects allocated to BANK0
   336  0014  1283               	bcf	3,5	;RP0=0, select bank0
   337  0015  1303               	bcf	3,6	;RP1=0, select bank0
   338  0016  01A0               	clrf	__pbssBANK0& (0+127)
   339  0017  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   340  0018  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   341  0019  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   342  001A  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   343  001B                     end_of_initialization:	
   344                           ;End of C runtime variable initialization code
   345                           
   346  001B                     __end_of__initialization:	
   347  001B  0183               	clrf	3
   348  001C  120A  118A  288B   	ljmp	_main	;jump to C main() function
   349                           
   350                           	psect	bssCOMMON
   351  0076                     __pbssCOMMON:	
   352  0076                     _flag:	
   353  0076                     	ds	1
   354  0077                     _read:	
   355  0077                     	ds	1
   356  0078                     _alarm:	
   357  0078                     	ds	1
   358  0079                     _hr:	
   359  0079                     	ds	1
   360  007A                     _min:	
   361  007A                     	ds	1
   362                           
   363                           	psect	bssBANK0
   364  0020                     __pbssBANK0:	
   365  0020                     _timer:	
   366  0020                     	ds	2
   367  0022                     _t1_count:	
   368  0022                     	ds	2
   369  0024                     _z:	
   370  0024                     	ds	1
   371                           
   372                           	psect	cstackCOMMON
   373  0070                     __pcstackCOMMON:	
   374  0070                     ?_oscilator_begin:	
   375  0070                     ?_isr:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ??_isr:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_setup:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_main:	
   385                           ; 1 bytes @ 0x0
   386                           
   387                           
   388                           ; 1 bytes @ 0x0
   389  0070                     	ds	3
   390  0073                     ?_timer1_begin:	
   391  0073                     ?_I2C_Slave_Init:	
   392                           ; 1 bytes @ 0x3
   393                           
   394  0073                     ??_oscilator_begin:	
   395                           ; 1 bytes @ 0x3
   396                           
   397  0073                     timer1_begin@prescaler:	
   398                           ; 1 bytes @ 0x3
   399                           
   400  0073                     I2C_Slave_Init@address:	
   401                           ; 1 bytes @ 0x3
   402                           
   403                           
   404                           ; 2 bytes @ 0x3
   405  0073                     	ds	1
   406  0074                     ??_timer1_begin:	
   407  0074                     oscilator_begin@freq:	
   408                           ; 1 bytes @ 0x4
   409                           
   410                           
   411                           ; 1 bytes @ 0x4
   412  0074                     	ds	1
   413  0075                     ??_I2C_Slave_Init:	
   414                           
   415                           ; 1 bytes @ 0x5
   416  0075                     	ds	1
   417                           
   418                           	psect	cstackBANK0
   419  0025                     __pcstackBANK0:	
   420  0025                     timer1_begin@offset:	
   421                           
   422                           ; 1 bytes @ 0x0
   423  0025                     	ds	1
   424  0026                     ??_setup:	
   425                           
   426                           ; 1 bytes @ 0x1
   427  0026                     	ds	1
   428  0027                     ??_main:	
   429                           
   430                           ; 1 bytes @ 0x2
   431  0027                     	ds	1
   432                           
   433                           	psect	maintext
   434  008B                     __pmaintext:	
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 93 in file "Esclavo2.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       1       0       0       0
   457 ;;      Totals:         0       1       0       0       0
   458 ;;Total ram usage:        1 bytes
   459 ;; Hardware stack levels required when called:    3
   460 ;; This function calls:
   461 ;;		_setup
   462 ;; This function is called by:
   463 ;;		Startup code after reset
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _main
   469  008B                     _main:	
   470                           
   471                           ;Esclavo2.c: 95:     setup();
   472                           
   473                           ;incstack = 0
   474                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   475  008B  120A  118A  20CF  120A  118A  	fcall	_setup
   476                           
   477                           ;Esclavo2.c: 96:     pir = RA0;
   478  0090  3000               	movlw	0
   479  0091  1283               	bcf	3,5	;RP0=0, select bank0
   480  0092  1303               	bcf	3,6	;RP1=0, select bank0
   481  0093  1805               	btfsc	5,0	;volatile
   482  0094  3001               	movlw	1
   483  0095  00A8               	movwf	_pir
   484  0096                     l1122:	
   485                           
   486                           ;Esclavo2.c: 98:         timer ++;
   487  0096  3001               	movlw	1
   488  0097  07A0               	addwf	_timer,f
   489  0098  1803               	skipnc
   490  0099  0AA1               	incf	_timer+1,f
   491  009A  3000               	movlw	0
   492  009B  07A1               	addwf	_timer+1,f
   493                           
   494                           ;Esclavo2.c: 99:                 pir = RA0;
   495  009C  3000               	movlw	0
   496  009D  1805               	btfsc	5,0	;volatile
   497  009E  3001               	movlw	1
   498  009F  00A8               	movwf	_pir
   499                           
   500                           ;Esclavo2.c: 100:         if (pir == 1) {
   501  00A0  0328               	decf	_pir,w
   502  00A1  1D03               	btfss	3,2
   503  00A2  28A8               	goto	l1132
   504                           
   505                           ;Esclavo2.c: 102:             RA2 = 1;
   506  00A3  1505               	bsf	5,2	;volatile
   507                           
   508                           ;Esclavo2.c: 103:             flag = 1;
   509  00A4  01F6               	clrf	_flag
   510  00A5  0AF6               	incf	_flag,f
   511                           
   512                           ;Esclavo2.c: 104:             t1_count = 0;
   513  00A6  01A2               	clrf	_t1_count
   514  00A7  01A3               	clrf	_t1_count+1
   515  00A8                     l1132:	
   516                           
   517                           ;Esclavo2.c: 106:         if (flag == 1) {
   518  00A8  0376               	decf	_flag,w
   519  00A9  1D03               	btfss	3,2
   520  00AA  28B4               	goto	l1140
   521                           
   522                           ;Esclavo2.c: 107:             if (t1_count > 240) {
   523  00AB  3000               	movlw	0
   524  00AC  0223               	subwf	_t1_count+1,w
   525  00AD  30F1               	movlw	241
   526  00AE  1903               	skipnz
   527  00AF  0222               	subwf	_t1_count,w
   528  00B0  1C03               	skipc
   529  00B1  28B4               	goto	l1140
   530                           
   531                           ;Esclavo2.c: 108:                 RA2 = 0;
   532  00B2  1105               	bcf	5,2	;volatile
   533                           
   534                           ;Esclavo2.c: 109:                 flag = 0;
   535  00B3  01F6               	clrf	_flag
   536  00B4                     l1140:	
   537                           
   538                           ;Esclavo2.c: 114:         if (hr == 0 & min == 0 & alarm == 0) {
   539  00B4  0879               	movf	_hr,w
   540  00B5  1D03               	btfss	3,2
   541  00B6  28C6               	goto	l1154
   542  00B7  087A               	movf	_min,w
   543  00B8  1D03               	btfss	3,2
   544  00B9  28C6               	goto	l1154
   545  00BA  0878               	movf	_alarm,w
   546  00BB  1D03               	btfss	3,2
   547  00BC  28C6               	goto	l1154
   548                           
   549                           ;Esclavo2.c: 115:             alarm = 1;
   550  00BD  01F8               	clrf	_alarm
   551  00BE  0AF8               	incf	_alarm,f
   552                           
   553                           ;Esclavo2.c: 116:             timer = 0;
   554  00BF  01A0               	clrf	_timer
   555  00C0  01A1               	clrf	_timer+1
   556                           
   557                           ;Esclavo2.c: 117:             hr++;
   558  00C1  3001               	movlw	1
   559  00C2  00A7               	movwf	??_main
   560  00C3  0827               	movf	??_main,w
   561  00C4  07F9               	addwf	_hr,f
   562                           
   563                           ;Esclavo2.c: 118:             RA1 = 1;
   564  00C5  1485               	bsf	5,1	;volatile
   565  00C6                     l1154:	
   566                           
   567                           ;Esclavo2.c: 120:         if (timer == 65535) {
   568  00C6  0A20               	incf	_timer,w
   569  00C7  1D03               	skipz
   570  00C8  2896               	goto	l1122
   571  00C9  0A21               	incf	_timer+1,w
   572  00CA  1D03               	btfss	3,2
   573  00CB  2896               	goto	l1122
   574                           
   575                           ;Esclavo2.c: 121:             RA1 = 0;
   576  00CC  1085               	bcf	5,1	;volatile
   577                           
   578                           ;Esclavo2.c: 122:             alarm = 0;
   579  00CD  01F8               	clrf	_alarm
   580  00CE  2896               	goto	l1122
   581  00CF                     __end_of_main:	
   582                           
   583                           	psect	text1
   584  00CF                     __ptext1:	
   585 ;; *************** function _setup *****************
   586 ;; Defined at:
   587 ;;		line 81 in file "Esclavo2.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0
   603 ;;      Temps:          0       1       0       0       0
   604 ;;      Totals:         0       1       0       0       0
   605 ;;Total ram usage:        1 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    2
   608 ;; This function calls:
   609 ;;		_I2C_Slave_Init
   610 ;;		_oscilator_begin
   611 ;;		_timer1_begin
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _setup
   619  00CF                     _setup:	
   620                           
   621                           ;Esclavo2.c: 83:     oscilator_begin(7);
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   625  00CF  3007               	movlw	7
   626  00D0  120A  118A  212B  120A  118A  	fcall	_oscilator_begin
   627                           
   628                           ;Esclavo2.c: 84:     I2C_Slave_Init(4);
   629  00D5  3004               	movlw	4
   630  00D6  00F3               	movwf	I2C_Slave_Init@address
   631  00D7  3000               	movlw	0
   632  00D8  00F4               	movwf	I2C_Slave_Init@address+1
   633  00D9  120A  118A  2112  120A  118A  	fcall	_I2C_Slave_Init
   634                           
   635                           ;Esclavo2.c: 85:     ANSEL = 0;
   636  00DE  1683               	bsf	3,5	;RP0=1, select bank3
   637  00DF  1703               	bsf	3,6	;RP1=1, select bank3
   638  00E0  0188               	clrf	8	;volatile
   639                           
   640                           ;Esclavo2.c: 86:     TRISA0 = 1;
   641  00E1  1683               	bsf	3,5	;RP0=1, select bank1
   642  00E2  1303               	bcf	3,6	;RP1=0, select bank1
   643  00E3  1405               	bsf	5,0	;volatile
   644                           
   645                           ;Esclavo2.c: 87:     TRISA2 = 0;
   646  00E4  1105               	bcf	5,2	;volatile
   647                           
   648                           ;Esclavo2.c: 88:     TRISA1 = 0;
   649  00E5  1085               	bcf	5,1	;volatile
   650                           
   651                           ;Esclavo2.c: 89:     timer1_begin(0, 3);
   652  00E6  3003               	movlw	3
   653  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   654  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   655  00E9  00A6               	movwf	??_setup
   656  00EA  0826               	movf	??_setup,w
   657  00EB  00F3               	movwf	timer1_begin@prescaler
   658  00EC  3000               	movlw	0
   659  00ED  120A  118A  20F2   	fcall	_timer1_begin
   660                           
   661                           ;Esclavo2.c: 90:     read = 0;
   662  00F0  01F7               	clrf	_read
   663  00F1  0008               	return
   664  00F2                     __end_of_setup:	
   665                           
   666                           	psect	text2
   667  00F2                     __ptext2:	
   668 ;; *************** function _timer1_begin *****************
   669 ;; Defined at:
   670 ;;		line 8 in file "timer1.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  offset          1    wreg     unsigned char 
   673 ;;  prescaler       1    3[COMMON] unsigned char 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  offset          1    0[BANK0 ] unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         1       0       0       0       0
   686 ;;      Locals:         0       1       0       0       0
   687 ;;      Temps:          2       0       0       0       0
   688 ;;      Totals:         3       1       0       0       0
   689 ;;Total ram usage:        4 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_setup
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _timer1_begin
   701  00F2                     _timer1_begin:	
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _timer1_begin: [wreg+status,2+status,0]
   705                           ;timer1_begin@offset stored from wreg
   706  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   707  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   708  00F4  00A5               	movwf	timer1_begin@offset
   709                           
   710                           ;timer1.c: 8: timer1_begin(uint8_t offset, uint8_t prescaler);timer1.c: 9:     {;timer1.
      +                          c: 10:     T1CONbits.T1GINV = 0;
   711  00F5  1390               	bcf	16,7	;volatile
   712                           
   713                           ;timer1.c: 11:     T1CONbits.TMR1GE = 0;
   714  00F6  1310               	bcf	16,6	;volatile
   715                           
   716                           ;timer1.c: 12:     T1CONbits.T1CKPS = prescaler;
   717  00F7  0873               	movf	timer1_begin@prescaler,w
   718  00F8  00F4               	movwf	??_timer1_begin
   719  00F9  0EF4               	swapf	??_timer1_begin,f
   720  00FA  0810               	movf	16,w	;volatile
   721  00FB  0674               	xorwf	??_timer1_begin,w
   722  00FC  39CF               	andlw	-49
   723  00FD  0674               	xorwf	??_timer1_begin,w
   724  00FE  0090               	movwf	16	;volatile
   725                           
   726                           ;timer1.c: 13:     T1CONbits.T1OSCEN = 0;
   727  00FF  1190               	bcf	16,3	;volatile
   728                           
   729                           ;timer1.c: 14:     T1CONbits.TMR1CS = 0;
   730  0100  1090               	bcf	16,1	;volatile
   731                           
   732                           ;timer1.c: 15:     T1CONbits.TMR1ON = 1;
   733  0101  1410               	bsf	16,0	;volatile
   734                           
   735                           ;timer1.c: 17:     INTCONbits.PEIE = 1;
   736  0102  170B               	bsf	11,6	;volatile
   737                           
   738                           ;timer1.c: 18:     PIR1bits.TMR1IF = 0;
   739  0103  100C               	bcf	12,0	;volatile
   740                           
   741                           ;timer1.c: 19:     PIE1bits.TMR1IE = 1;
   742  0104  1683               	bsf	3,5	;RP0=1, select bank1
   743  0105  1303               	bcf	3,6	;RP1=0, select bank1
   744  0106  140C               	bsf	12,0	;volatile
   745                           
   746                           ;timer1.c: 20:     INTCONbits.GIE = 1;
   747  0107  178B               	bsf	11,7	;volatile
   748                           
   749                           ;timer1.c: 21:     TMR1 = offset;
   750  0108  1283               	bcf	3,5	;RP0=0, select bank0
   751  0109  1303               	bcf	3,6	;RP1=0, select bank0
   752  010A  0825               	movf	timer1_begin@offset,w
   753  010B  00F4               	movwf	??_timer1_begin
   754  010C  01F5               	clrf	??_timer1_begin+1
   755  010D  0874               	movf	??_timer1_begin,w
   756  010E  008E               	movwf	14	;volatile
   757  010F  0875               	movf	??_timer1_begin+1,w
   758  0110  008F               	movwf	15	;volatile
   759  0111  0008               	return
   760  0112                     __end_of_timer1_begin:	
   761                           
   762                           	psect	text3
   763  012B                     __ptext3:	
   764 ;; *************** function _oscilator_begin *****************
   765 ;; Defined at:
   766 ;;		line 9 in file "./Oscilator.h"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  freq            1    wreg     unsigned char 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  freq            1    4[COMMON] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         1       0       0       0       0
   782 ;;      Temps:          1       0       0       0       0
   783 ;;      Totals:         2       0       0       0       0
   784 ;;Total ram usage:        2 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_setup
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _oscilator_begin
   796  012B                     _oscilator_begin:	
   797                           
   798                           ;incstack = 0
   799                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
   800                           ;oscilator_begin@freq stored from wreg
   801  012B  00F4               	movwf	oscilator_begin@freq
   802                           
   803                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
   804  012C  0874               	movf	oscilator_begin@freq,w
   805  012D  00F3               	movwf	??_oscilator_begin
   806  012E  0EF3               	swapf	??_oscilator_begin,f
   807  012F  1683               	bsf	3,5	;RP0=1, select bank1
   808  0130  1303               	bcf	3,6	;RP1=0, select bank1
   809  0131  080F               	movf	15,w	;volatile
   810  0132  0673               	xorwf	??_oscilator_begin,w
   811  0133  398F               	andlw	-113
   812  0134  0673               	xorwf	??_oscilator_begin,w
   813  0135  008F               	movwf	15	;volatile
   814                           
   815                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
   816  0136  140F               	bsf	15,0	;volatile
   817                           
   818                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
   819  0137  118F               	bcf	15,3	;volatile
   820  0138  0008               	return
   821  0139                     __end_of_oscilator_begin:	
   822                           
   823                           	psect	text4
   824  0112                     __ptext4:	
   825 ;; *************** function _I2C_Slave_Init *****************
   826 ;; Defined at:
   827 ;;		line 93 in file "./I2C.h"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  address         2    3[COMMON] short 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         2       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         2       0       0       0       0
   845 ;;Total ram usage:        2 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_setup
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _I2C_Slave_Init
   857  0112                     _I2C_Slave_Init:	
   858                           
   859                           ;./I2C.h: 93: void I2C_Slave_Init(short address);./I2C.h: 94: {;./I2C.h: 95:     SSPADD 
      +                          = address;
   860                           
   861                           ;incstack = 0
   862                           ; Regs used in _I2C_Slave_Init: [wreg]
   863  0112  0873               	movf	I2C_Slave_Init@address,w
   864  0113  1683               	bsf	3,5	;RP0=1, select bank1
   865  0114  1303               	bcf	3,6	;RP1=0, select bank1
   866  0115  0093               	movwf	19	;volatile
   867                           
   868                           ;./I2C.h: 96:     SSPCON = 0x36;
   869  0116  3036               	movlw	54
   870  0117  1283               	bcf	3,5	;RP0=0, select bank0
   871  0118  1303               	bcf	3,6	;RP1=0, select bank0
   872  0119  0094               	movwf	20	;volatile
   873                           
   874                           ;./I2C.h: 97:     SSPSTAT = 0x80;
   875  011A  3080               	movlw	128
   876  011B  1683               	bsf	3,5	;RP0=1, select bank1
   877  011C  1303               	bcf	3,6	;RP1=0, select bank1
   878  011D  0094               	movwf	20	;volatile
   879                           
   880                           ;./I2C.h: 98:     SSPCON2 = 0x01;
   881  011E  3001               	movlw	1
   882  011F  0091               	movwf	17	;volatile
   883                           
   884                           ;./I2C.h: 99:     TRISC3 = 1;
   885  0120  1587               	bsf	7,3	;volatile
   886                           
   887                           ;./I2C.h: 100:     TRISC4 = 1;
   888  0121  1607               	bsf	7,4	;volatile
   889                           
   890                           ;./I2C.h: 101:     GIE = 1;
   891  0122  178B               	bsf	11,7	;volatile
   892                           
   893                           ;./I2C.h: 102:     PEIE = 1;
   894  0123  170B               	bsf	11,6	;volatile
   895                           
   896                           ;./I2C.h: 103:     SSPIF = 0;
   897  0124  1283               	bcf	3,5	;RP0=0, select bank0
   898  0125  1303               	bcf	3,6	;RP1=0, select bank0
   899  0126  118C               	bcf	12,3	;volatile
   900                           
   901                           ;./I2C.h: 104:     SSPIE = 1;
   902  0127  1683               	bsf	3,5	;RP0=1, select bank1
   903  0128  1303               	bcf	3,6	;RP1=0, select bank1
   904  0129  158C               	bsf	12,3	;volatile
   905  012A  0008               	return
   906  012B                     __end_of_I2C_Slave_Init:	
   907                           
   908                           	psect	text5
   909  001F                     __ptext5:	
   910 ;; *************** function _isr *****************
   911 ;; Defined at:
   912 ;;		line 32 in file "Esclavo2.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, status,2, status,0
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0
   928 ;;      Temps:          3       0       0       0       0
   929 ;;      Totals:         3       0       0       0       0
   930 ;;Total ram usage:        3 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		Interrupt level 1
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _isr
   941  001F                     _isr:	
   942                           
   943                           ;Esclavo2.c: 34:     if (PIR1bits.SSPIF == 1) {
   944  001F  1283               	bcf	3,5	;RP0=0, select bank0
   945  0020  1303               	bcf	3,6	;RP1=0, select bank0
   946  0021  1D8C               	btfss	12,3	;volatile
   947  0022  2879               	goto	i1l111
   948                           
   949                           ;Esclavo2.c: 36:         SSPCONbits.CKP = 0;
   950  0023  1214               	bcf	20,4	;volatile
   951                           
   952                           ;Esclavo2.c: 38:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)) {
   953  0024  1B14               	btfsc	20,6	;volatile
   954  0025  2828               	goto	i1l998
   955  0026  1F94               	btfss	20,7	;volatile
   956  0027  282F               	goto	i1l1006
   957  0028                     i1l998:	
   958                           
   959                           ;Esclavo2.c: 39:             z = SSPBUF;
   960  0028  0813               	movf	19,w	;volatile
   961  0029  00F0               	movwf	??_isr
   962  002A  0870               	movf	??_isr,w
   963  002B  00A4               	movwf	_z
   964                           
   965                           ;Esclavo2.c: 40:             SSPCONbits.SSPOV = 0;
   966  002C  1314               	bcf	20,6	;volatile
   967                           
   968                           ;Esclavo2.c: 41:             SSPCONbits.WCOL = 0;
   969  002D  1394               	bcf	20,7	;volatile
   970                           
   971                           ;Esclavo2.c: 42:             SSPCONbits.CKP = 1;
   972  002E  1614               	bsf	20,4	;volatile
   973  002F                     i1l1006:	
   974                           
   975                           ;Esclavo2.c: 45:         if (!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   976  002F  1683               	bsf	3,5	;RP0=1, select bank1
   977  0030  1303               	bcf	3,6	;RP1=0, select bank1
   978  0031  1E94               	btfss	20,5	;volatile
   979  0032  1914               	btfsc	20,2	;volatile
   980  0033  285C               	goto	i1l115
   981                           
   982                           ;Esclavo2.c: 47:             z = SSPBUF;
   983  0034  1283               	bcf	3,5	;RP0=0, select bank0
   984  0035  1303               	bcf	3,6	;RP1=0, select bank0
   985  0036  0813               	movf	19,w	;volatile
   986  0037  00F0               	movwf	??_isr
   987  0038  0870               	movf	??_isr,w
   988  0039  00A4               	movwf	_z
   989                           
   990                           ;Esclavo2.c: 49:             PIR1bits.SSPIF = 0;
   991  003A  118C               	bcf	12,3	;volatile
   992                           
   993                           ;Esclavo2.c: 50:             SSPCONbits.CKP = 1;
   994  003B  1614               	bsf	20,4	;volatile
   995  003C                     i1l116:	
   996                           ;Esclavo2.c: 51:             while (!SSPSTATbits.BF);
   997                           
   998  003C  1683               	bsf	3,5	;RP0=1, select bank1
   999  003D  1303               	bcf	3,6	;RP1=0, select bank1
  1000  003E  1C14               	btfss	20,0	;volatile
  1001  003F  283C               	goto	i1l116
  1002                           
  1003                           ;Esclavo2.c: 52:             if (read == 0) {
  1004  0040  0877               	movf	_read,w
  1005  0041  1D03               	btfss	3,2
  1006  0042  284D               	goto	i1l1022
  1007                           
  1008                           ;Esclavo2.c: 53:                 min = SSPBUF;
  1009  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0045  0813               	movf	19,w	;volatile
  1012  0046  00F0               	movwf	??_isr
  1013  0047  0870               	movf	??_isr,w
  1014  0048  00FA               	movwf	_min
  1015                           
  1016                           ;Esclavo2.c: 54:                 read++;
  1017  0049  3001               	movlw	1
  1018  004A  00F0               	movwf	??_isr
  1019  004B  0870               	movf	??_isr,w
  1020  004C  07F7               	addwf	_read,f
  1021  004D                     i1l1022:	
  1022                           
  1023                           ;Esclavo2.c: 56:             if (read == 1) {
  1024  004D  0377               	decf	_read,w
  1025  004E  1D03               	btfss	3,2
  1026  004F  2856               	goto	i1l1028
  1027                           
  1028                           ;Esclavo2.c: 57:                 hr = SSPBUF;
  1029  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0051  0813               	movf	19,w	;volatile
  1031  0052  00F0               	movwf	??_isr
  1032  0053  0870               	movf	??_isr,w
  1033  0054  00F9               	movwf	_hr
  1034                           
  1035                           ;Esclavo2.c: 58:                 read = 0;
  1036  0055  01F7               	clrf	_read
  1037  0056                     i1l1028:	
  1038                           
  1039                           ;Esclavo2.c: 60:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1040  0056  30A6               	movlw	166
  1041  0057  00F0               	movwf	??_isr
  1042  0058                     u50_27:	
  1043  0058  0BF0               	decfsz	??_isr,f
  1044  0059  2858               	goto	u50_27
  1045  005A  0000               	nop
  1046                           
  1047                           ;Esclavo2.c: 62:         } else if (!SSPSTATbits.D_nA && SSPSTATbits.R_nW) {
  1048  005B  2876               	goto	i1l121
  1049  005C                     i1l115:	
  1050  005C  1E94               	btfss	20,5	;volatile
  1051  005D  1D14               	btfss	20,2	;volatile
  1052  005E  2876               	goto	i1l121
  1053                           
  1054                           ;Esclavo2.c: 63:             z = SSPBUF;
  1055  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0061  0813               	movf	19,w	;volatile
  1058  0062  00F0               	movwf	??_isr
  1059  0063  0870               	movf	??_isr,w
  1060  0064  00A4               	movwf	_z
  1061                           
  1062                           ;Esclavo2.c: 64:             BF = 0;
  1063  0065  1683               	bsf	3,5	;RP0=1, select bank1
  1064  0066  1303               	bcf	3,6	;RP1=0, select bank1
  1065  0067  1014               	bcf	20,0	;volatile
  1066                           
  1067                           ;Esclavo2.c: 65:             SSPBUF = pir;
  1068  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1070  006A  0828               	movf	_pir,w
  1071  006B  0093               	movwf	19	;volatile
  1072                           
  1073                           ;Esclavo2.c: 66:             SSPCONbits.CKP = 1;
  1074  006C  1614               	bsf	20,4	;volatile
  1075                           
  1076                           ;Esclavo2.c: 67:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1077  006D  30A6               	movlw	166
  1078  006E  00F0               	movwf	??_isr
  1079  006F                     u51_27:	
  1080  006F  0BF0               	decfsz	??_isr,f
  1081  0070  286F               	goto	u51_27
  1082  0071  0000               	nop
  1083  0072                     i1l123:	
  1084                           ;Esclavo2.c: 68:             while (SSPSTATbits.BF);
  1085                           
  1086  0072  1683               	bsf	3,5	;RP0=1, select bank1
  1087  0073  1303               	bcf	3,6	;RP1=0, select bank1
  1088  0074  1814               	btfsc	20,0	;volatile
  1089  0075  2872               	goto	i1l123
  1090  0076                     i1l121:	
  1091                           
  1092                           ;Esclavo2.c: 72:         PIR1bits.SSPIF = 0;
  1093  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0078  118C               	bcf	12,3	;volatile
  1096  0079                     i1l111:	
  1097                           ;Esclavo2.c: 73:     }
  1098                           
  1099                           
  1100                           ;Esclavo2.c: 74:     if (PIR1bits.TMR1IF) {
  1101  0079  1C0C               	btfss	12,0	;volatile
  1102  007A  2884               	goto	i1l127
  1103                           
  1104                           ;Esclavo2.c: 75:         t1_count++;
  1105  007B  3001               	movlw	1
  1106  007C  07A2               	addwf	_t1_count,f
  1107  007D  1803               	skipnc
  1108  007E  0AA3               	incf	_t1_count+1,f
  1109  007F  3000               	movlw	0
  1110  0080  07A3               	addwf	_t1_count+1,f
  1111                           
  1112                           ;Esclavo2.c: 76:         TMR1 = (0);
  1113  0081  018E               	clrf	14	;volatile
  1114  0082  018F               	clrf	15	;volatile
  1115                           
  1116                           ;Esclavo2.c: 77:         PIR1bits.TMR1IF = 0;
  1117  0083  100C               	bcf	12,0	;volatile
  1118  0084                     i1l127:	
  1119  0084  0872               	movf	??_isr+2,w
  1120  0085  008A               	movwf	10
  1121  0086  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1122  0087  0083               	movwf	3
  1123  0088  0EFE               	swapf	126,f
  1124  0089  0E7E               	swapf	126,w
  1125  008A  0009               	retfie
  1126  008B                     __end_of_isr:	
  1127  007E                     btemp	set	126	;btemp
  1128  007E                     wtemp0	set	126
  1129                           
  1130                           	psect	intentry
  1131  0004                     __pintentry:	
  1132                           ;incstack = 0
  1133                           ; Regs used in _isr: [wreg+status,2+status,0]
  1134                           
  1135  0004                     interrupt_function:	
  1136  007E                     saved_w	set	btemp
  1137  0004  00FE               	movwf	btemp
  1138  0005  0E03               	swapf	3,w
  1139  0006  00F1               	movwf	??_isr+1
  1140  0007  080A               	movf	10,w
  1141  0008  00F2               	movwf	??_isr+2
  1142  0009  120A  118A  281F   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      3       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_timer1_begin

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_timer1_begin

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     272
                                              2 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     272
                                              1 BANK0      1     1      0
                     _I2C_Slave_Init
                    _oscilator_begin
                       _timer1_begin
 ---------------------------------------------------------------------------------
 (2) _timer1_begin                                         4     3      1     152
                                              3 COMMON     3     2      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _oscilator_begin                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init
     _oscilator_begin
     _timer1_begin

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       9       5       11.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 02:40:37 2019

                       _z 0024               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        _hr 0079                       _GIE 005F  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
            __CFG_CPD$OFF 0000                       _min 007A                       _isr 001F  
                     _pir 0028              __CFG_LVP$OFF 0000                      l1122 0096  
                    l1140 00B4                      l1132 00A8                      l1154 00C6  
                    ?_isr 0070                      _PEIE 005E                      _RCEN 048B  
                    _TMR1 000E              __CFG_WRT$OFF 0000                      _flag 0076  
                    _main 008B                      _read 0077                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000   __end_of_oscilator_begin 0139  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l111 0079                     i1l121 0076  
                   i1l123 0072                     i1l115 005C                     i1l116 003C  
                   i1l127 0084                     i1l998 0028                     u50_27 0058  
                   u51_27 006F                     _SSPIE 0463                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _alarm 0078                     _timer 0020  
                   _setup 00CF            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 00CF                    ??_main 0027  
                  ?_setup 0070                    i1l1022 004D                    i1l1006 002F  
                  i1l1028 0056                    _SSPADD 0093                    _TRISA0 0428  
                  _TRISA1 0429                    _TRISA2 042A                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000          ?_oscilator_begin 0070                    saved_w 007E  
 __end_of__initialization 001B            __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 0019  
           __end_of_setup 00F2                   ??_setup 0026     I2C_Slave_Init@address 0073  
              __pbssBANK0 0020                __pmaintext 008B                __pintentry 0004  
                 _SSPCON2 0091                   _SSPSTAT 0094             ?_timer1_begin 0073  
                 __ptext1 00CF                   __ptext2 00F2                   __ptext3 012B  
                 __ptext4 0112                   __ptext5 001F                 _T1CONbits 0010  
            __size_of_isr 006C      end_of_initialization 001B            _I2C_Slave_Init 0112  
          ??_timer1_begin 0074     timer1_begin@prescaler 0073    __end_of_I2C_Slave_Init 012B  
__size_of_oscilator_begin 000E       start_initialization 000F               __end_of_isr 008B  
__CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0073               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 0025      __end_of_timer1_begin 0112  
               __pnvBANK0 0028        timer1_begin@offset 0025         ??_oscilator_begin 0073  
          __size_of_setup 0023         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C       oscilator_begin@freq 0074                  _t1_count 0022  
   __size_of_timer1_begin 0020         __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0075  
           __size_of_main 0044              _timer1_begin 00F2                _INTCONbits 000B  
                intlevel1 0000                _OSCCONbits 008F           _oscilator_begin 012B  
             _SSPCON2bits 0091                _SSPCONbits 0014  
