

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 08:07:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.05
    24                           ; Generated 20/12/2018 GMT
    25                           ; 
    26                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  000E                     _TMR1	set	14
   448  000B                     _INTCONbits	set	11
   449  0010                     _T1CONbits	set	16
   450  0005                     _PORTAbits	set	5
   451  0008                     _PORTD	set	8
   452  0014                     _SSPCONbits	set	20
   453  000C                     _PIR1bits	set	12
   454  0013                     _SSPBUF	set	19
   455  0014                     _SSPCON	set	20
   456  0048                     _RE0	set	72
   457  0063                     _SSPIF	set	99
   458  005E                     _PEIE	set	94
   459  005F                     _GIE	set	95
   460  008C                     _PIE1bits	set	140
   461  0088                     _TRISD	set	136
   462  0094                     _SSPSTATbits	set	148
   463  0091                     _SSPCON2bits	set	145
   464  0094                     _SSPSTAT	set	148
   465  0093                     _SSPADD	set	147
   466  0091                     _SSPCON2	set	145
   467  008F                     _OSCCONbits	set	143
   468  0428                     _TRISA0	set	1064
   469  0429                     _TRISA1	set	1065
   470  04A0                     _BF	set	1184
   471  0463                     _SSPIE	set	1123
   472  048B                     _RCEN	set	1163
   473  043C                     _TRISC4	set	1084
   474  043B                     _TRISC3	set	1083
   475  0188                     _ANSEL	set	392
   476                           
   477                           ; #config settings
   478  0000                     
   479                           	psect	cinit
   480  07F2                     start_initialization:	
   481  07F2                     __initialization:	
   482                           
   483                           ; Clear objects allocated to COMMON
   484  07F2  01F8               	clrf	__pbssCOMMON& (0+127)
   485  07F3  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   486  07F4  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   487                           
   488                           ; Clear objects allocated to BANK0
   489  07F5  1383               	bcf	3,7	;select IRP bank0
   490  07F6  3020               	movlw	low __pbssBANK0
   491  07F7  0084               	movwf	4
   492  07F8  3037               	movlw	low (__pbssBANK0+23)
   493  07F9  120A  118A  256A   	fcall	clear_ram0
   494  07FC                     end_of_initialization:	
   495                           ;End of C runtime variable initialization code
   496                           
   497  07FC                     __end_of__initialization:	
   498  07FC  0183               	clrf	3
   499  07FD  120A  118A  2F4E   	ljmp	_main	;jump to C main() function
   500                           
   501                           	psect	bssCOMMON
   502  0078                     __pbssCOMMON:	
   503  0078                     full_step@i:	
   504  0078                     	ds	2
   505  007A                     _temp_int:	
   506  007A                     	ds	1
   507                           
   508                           	psect	bssBANK0
   509  0020                     __pbssBANK0:	
   510  0020                     wave_rev@a:	
   511  0020                     	ds	2
   512  0022                     wave_rev@i:	
   513  0022                     	ds	2
   514  0024                     full_rev@a:	
   515  0024                     	ds	2
   516  0026                     full_rev@i:	
   517  0026                     	ds	2
   518  0028                     wave_step@a:	
   519  0028                     	ds	2
   520  002A                     wave_step@i:	
   521  002A                     	ds	2
   522  002C                     dht11_read@temp:	
   523  002C                     	ds	1
   524  002D                     dht11_read@i:	
   525  002D                     	ds	1
   526  002E                     _state:	
   527  002E                     	ds	1
   528  002F                     _var:	
   529  002F                     	ds	1
   530  0030                     _z:	
   531  0030                     	ds	1
   532  0031                     _total:	
   533  0031                     	ds	1
   534  0032                     _check:	
   535  0032                     	ds	1
   536  0033                     _hum_dec:	
   537  0033                     	ds	1
   538  0034                     _hum_int:	
   539  0034                     	ds	1
   540  0035                     _temp_dec:	
   541  0035                     	ds	1
   542  0036                     _t1_count:	
   543  0036                     	ds	1
   544                           
   545                           	psect	clrtext
   546  056A                     clear_ram0:	
   547                           ;	Called with FSR containing the base address, and
   548                           ;	W with the last address+1
   549                           
   550  056A  0064               	clrwdt	;clear the watchdog before getting into this loop
   551  056B                     clrloop0:	
   552  056B  0180               	clrf	0	;clear RAM location pointed to by FSR
   553  056C  0A84               	incf	4,f	;increment pointer
   554  056D  0604               	xorwf	4,w	;XOR with final address
   555  056E  1903               	btfsc	3,2	;have we reached the end yet?
   556  056F  3400               	retlw	0	;all done for this memory range, return
   557  0570  0604               	xorwf	4,w	;XOR again to restore value
   558  0571  2D6B               	goto	clrloop0	;do the next byte
   559                           
   560                           	psect	cstackCOMMON
   561  0071                     __pcstackCOMMON:	
   562  0071                     ?_dht11_begin:	
   563  0071                     ?_dht11_check:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0071                     ?_dht11_read:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0071                     ?_oscilator_begin:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0071                     ?_isr:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0071                     ??_isr:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0071                     ?_main:	
   579                           ; 1 bytes @ 0x0
   580                           
   581                           
   582                           ; 1 bytes @ 0x0
   583  0071                     	ds	3
   584  0074                     ?_timer1_begin:	
   585  0074                     ??_dht11_begin:	
   586                           ; 1 bytes @ 0x3
   587                           
   588  0074                     ??_dht11_check:	
   589                           ; 1 bytes @ 0x3
   590                           
   591  0074                     ??_dht11_read:	
   592                           ; 1 bytes @ 0x3
   593                           
   594  0074                     ?_full_rev:	
   595                           ; 1 bytes @ 0x3
   596                           
   597  0074                     ?_full_step:	
   598                           ; 1 bytes @ 0x3
   599                           
   600  0074                     ??_oscilator_begin:	
   601                           ; 1 bytes @ 0x3
   602                           
   603  0074                     ?_I2C_Slave_Init:	
   604                           ; 1 bytes @ 0x3
   605                           
   606  0074                     timer1_begin@prescaler:	
   607                           ; 1 bytes @ 0x3
   608                           
   609  0074                     I2C_Slave_Init@address:	
   610                           ; 1 bytes @ 0x3
   611                           
   612  0074                     full_step@steps:	
   613                           ; 2 bytes @ 0x3
   614                           
   615  0074                     full_rev@steps:	
   616                           ; 2 bytes @ 0x3
   617                           
   618                           
   619                           ; 2 bytes @ 0x3
   620  0074                     	ds	1
   621  0075                     ??_timer1_begin:	
   622  0075                     oscilator_begin@freq:	
   623                           ; 1 bytes @ 0x4
   624                           
   625                           
   626                           ; 1 bytes @ 0x4
   627  0075                     	ds	1
   628  0076                     ??_full_rev:	
   629  0076                     ??_full_step:	
   630                           ; 1 bytes @ 0x5
   631                           
   632  0076                     ??_I2C_Slave_Init:	
   633                           ; 1 bytes @ 0x5
   634                           
   635                           
   636                           ; 1 bytes @ 0x5
   637  0076                     	ds	1
   638  0077                     timer1_begin@offset:	
   639                           
   640                           ; 1 bytes @ 0x6
   641  0077                     	ds	1
   642                           
   643                           	psect	cstackBANK0
   644  0037                     __pcstackBANK0:	
   645  0037                     ??_main:	
   646                           
   647                           ; 1 bytes @ 0x0
   648  0037                     	ds	3
   649                           
   650                           	psect	maintext
   651  074E                     __pmaintext:	
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 79 in file "Esclavo3.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : B00/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          0       3       0       0       0
   674 ;;      Totals:         0       3       0       0       0
   675 ;;Total ram usage:        3 bytes
   676 ;; Hardware stack levels required when called:    2
   677 ;; This function calls:
   678 ;;		_I2C_Slave_Init
   679 ;;		_dht11_begin
   680 ;;		_dht11_check
   681 ;;		_dht11_read
   682 ;;		_full_rev
   683 ;;		_full_step
   684 ;;		_oscilator_begin
   685 ;;		_timer1_begin
   686 ;; This function is called by:
   687 ;;		Startup code after reset
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           
   692                           ;psect for function _main
   693  074E                     _main:	
   694                           
   695                           ;Esclavo3.c: 81:     oscilator_begin(7);
   696                           
   697                           ;incstack = 0
   698                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   699  074E  3007               	movlw	7
   700  074F  120A  118A  257B  120A  118A  	fcall	_oscilator_begin
   701                           
   702                           ;Esclavo3.c: 82:     TRISD = 0;
   703  0754  1683               	bsf	3,5	;RP0=1, select bank1
   704  0755  1303               	bcf	3,6	;RP1=0, select bank1
   705  0756  0188               	clrf	8	;volatile
   706                           
   707                           ;Esclavo3.c: 83:     PORTD = 0;
   708  0757  1283               	bcf	3,5	;RP0=0, select bank0
   709  0758  1303               	bcf	3,6	;RP1=0, select bank0
   710  0759  0188               	clrf	8	;volatile
   711                           
   712                           ;Esclavo3.c: 84:     TRISA1 = 0;
   713  075A  1683               	bsf	3,5	;RP0=1, select bank1
   714  075B  1303               	bcf	3,6	;RP1=0, select bank1
   715  075C  1085               	bcf	5,1	;volatile
   716                           
   717                           ;Esclavo3.c: 85:     ANSEL = 0;
   718  075D  1683               	bsf	3,5	;RP0=1, select bank3
   719  075E  1703               	bsf	3,6	;RP1=1, select bank3
   720  075F  0188               	clrf	8	;volatile
   721                           
   722                           ;Esclavo3.c: 86:     state = 0;
   723  0760  1283               	bcf	3,5	;RP0=0, select bank0
   724  0761  1303               	bcf	3,6	;RP1=0, select bank0
   725  0762  01AE               	clrf	_state
   726                           
   727                           ;Esclavo3.c: 88:     timer1_begin((0), (3));
   728  0763  3003               	movlw	3
   729  0764  00B7               	movwf	??_main
   730  0765  0837               	movf	??_main,w
   731  0766  00F4               	movwf	timer1_begin@prescaler
   732  0767  3000               	movlw	0
   733  0768  120A  118A  25BC  120A  118A  	fcall	_timer1_begin
   734                           
   735                           ;Esclavo3.c: 89:     I2C_Slave_Init(6);
   736  076D  3006               	movlw	6
   737  076E  00F4               	movwf	I2C_Slave_Init@address
   738  076F  3000               	movlw	0
   739  0770  00F5               	movwf	I2C_Slave_Init@address+1
   740  0771  120A  118A  2589  120A  118A  	fcall	_I2C_Slave_Init
   741                           
   742                           ;Esclavo3.c: 90:     PORTD = 0;
   743  0776  1283               	bcf	3,5	;RP0=0, select bank0
   744  0777  1303               	bcf	3,6	;RP1=0, select bank0
   745  0778  0188               	clrf	8	;volatile
   746  0779                     l1471:	
   747                           
   748                           ;Esclavo3.c: 92:         if (t1_count >=10) {
   749  0779  300A               	movlw	10
   750  077A  0236               	subwf	_t1_count,w
   751  077B  1C03               	skipc
   752  077C  2FEA               	goto	l1509
   753                           
   754                           ;Esclavo3.c: 94:             dht11_begin();
   755  077D  120A  118A  25A2  120A  118A  	fcall	_dht11_begin
   756                           
   757                           ;Esclavo3.c: 95:             dht11_check();
   758  0782  120A  118A  2572  120A  118A  	fcall	_dht11_check
   759                           
   760                           ;Esclavo3.c: 96:             hum_int = dht11_read();
   761  0787  120A  118A  25DC  120A  118A  	fcall	_dht11_read
   762  078C  1283               	bcf	3,5	;RP0=0, select bank0
   763  078D  1303               	bcf	3,6	;RP1=0, select bank0
   764  078E  00B7               	movwf	??_main
   765  078F  0837               	movf	??_main,w
   766  0790  00B4               	movwf	_hum_int
   767                           
   768                           ;Esclavo3.c: 97:             hum_dec = dht11_read();
   769  0791  120A  118A  25DC  120A  118A  	fcall	_dht11_read
   770  0796  1283               	bcf	3,5	;RP0=0, select bank0
   771  0797  1303               	bcf	3,6	;RP1=0, select bank0
   772  0798  00B7               	movwf	??_main
   773  0799  0837               	movf	??_main,w
   774  079A  00B3               	movwf	_hum_dec
   775                           
   776                           ;Esclavo3.c: 98:             temp_int = dht11_read();
   777  079B  120A  118A  25DC  120A  118A  	fcall	_dht11_read
   778  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   779  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   780  07A2  00B7               	movwf	??_main
   781  07A3  0837               	movf	??_main,w
   782  07A4  00FA               	movwf	_temp_int
   783                           
   784                           ;Esclavo3.c: 99:             temp_dec = dht11_read();
   785  07A5  120A  118A  25DC  120A  118A  	fcall	_dht11_read
   786  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   787  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   788  07AC  00B7               	movwf	??_main
   789  07AD  0837               	movf	??_main,w
   790  07AE  00B5               	movwf	_temp_dec
   791                           
   792                           ;Esclavo3.c: 100:             check = dht11_read();
   793  07AF  120A  118A  25DC  120A  118A  	fcall	_dht11_read
   794  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   795  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   796  07B6  00B7               	movwf	??_main
   797  07B7  0837               	movf	??_main,w
   798  07B8  00B2               	movwf	_check
   799                           
   800                           ;Esclavo3.c: 101:             total = hum_int + hum_dec + temp_int + temp_dec;
   801  07B9  0833               	movf	_hum_dec,w
   802  07BA  0734               	addwf	_hum_int,w
   803  07BB  00B7               	movwf	??_main
   804  07BC  087A               	movf	_temp_int,w
   805  07BD  0737               	addwf	??_main,w
   806  07BE  00B8               	movwf	??_main+1
   807  07BF  0835               	movf	_temp_dec,w
   808  07C0  0738               	addwf	??_main+1,w
   809  07C1  00B9               	movwf	??_main+2
   810  07C2  0839               	movf	??_main+2,w
   811  07C3  00B1               	movwf	_total
   812                           
   813                           ;Esclavo3.c: 102:             t1_count = 0;
   814  07C4  01B6               	clrf	_t1_count
   815                           
   816                           ;Esclavo3.c: 103:             if (hum_int > 25 & state ==0) {
   817  07C5  301A               	movlw	26
   818  07C6  0234               	subwf	_hum_int,w
   819  07C7  1C03               	skipc
   820  07C8  2FDA               	goto	l1501
   821  07C9  082E               	movf	_state,w
   822  07CA  1D03               	btfss	3,2
   823  07CB  2FDA               	goto	l1501
   824                           
   825                           ;Esclavo3.c: 104:                 full_rev(1605U);
   826  07CC  3045               	movlw	69
   827  07CD  00F4               	movwf	full_rev@steps
   828  07CE  3006               	movlw	6
   829  07CF  00F5               	movwf	full_rev@steps+1
   830  07D0  120A  118A  2662  120A  118A  	fcall	_full_rev
   831                           
   832                           ;Esclavo3.c: 105:                 state = 1;
   833  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   834  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   835  07D7  01AE               	clrf	_state
   836  07D8  0AAE               	incf	_state,f
   837                           
   838                           ;Esclavo3.c: 106:                 PORTD = 0;
   839  07D9  0188               	clrf	8	;volatile
   840  07DA                     l1501:	
   841                           
   842                           ;Esclavo3.c: 108:             if (state) {
   843  07DA  082E               	movf	_state,w
   844  07DB  1903               	btfsc	3,2
   845  07DC  2FEA               	goto	l1509
   846                           
   847                           ;Esclavo3.c: 109:             full_step(1605U);
   848  07DD  3045               	movlw	69
   849  07DE  00F4               	movwf	full_step@steps
   850  07DF  3006               	movlw	6
   851  07E0  00F5               	movwf	full_step@steps+1
   852  07E1  120A  118A  26D1  120A  118A  	fcall	_full_step
   853                           
   854                           ;Esclavo3.c: 110:             state = 0;
   855  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   856  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   857  07E8  01AE               	clrf	_state
   858                           
   859                           ;Esclavo3.c: 111:             PORTD = 0;
   860  07E9  0188               	clrf	8	;volatile
   861  07EA                     l1509:	
   862                           
   863                           ;Esclavo3.c: 117:         if (temp_int > 25) {
   864  07EA  301A               	movlw	26
   865  07EB  027A               	subwf	_temp_int,w
   866  07EC  1C03               	skipc
   867  07ED  2FF0               	goto	l144
   868                           
   869                           ;Esclavo3.c: 118:             RE0 = 1;
   870  07EE  1409               	bsf	9,0	;volatile
   871                           
   872                           ;Esclavo3.c: 119:         } else {
   873  07EF  2F79               	goto	l1471
   874  07F0                     l144:	
   875                           
   876                           ;Esclavo3.c: 120:             RE0 = 0;
   877  07F0  1009               	bcf	9,0	;volatile
   878  07F1  2F79               	goto	l1471
   879  07F2                     __end_of_main:	
   880                           
   881                           	psect	text1
   882  05BC                     __ptext1:	
   883 ;; *************** function _timer1_begin *****************
   884 ;; Defined at:
   885 ;;		line 8 in file "timer1.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  offset          1    wreg     unsigned char 
   888 ;;  prescaler       1    3[COMMON] unsigned char 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  offset          1    6[COMMON] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         1       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0
   902 ;;      Temps:          2       0       0       0       0
   903 ;;      Totals:         4       0       0       0       0
   904 ;;Total ram usage:        4 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           
   915                           ;psect for function _timer1_begin
   916  05BC                     _timer1_begin:	
   917                           
   918                           ;incstack = 0
   919                           ; Regs used in _timer1_begin: [wreg+status,2+status,0]
   920                           ;timer1_begin@offset stored from wreg
   921  05BC  00F7               	movwf	timer1_begin@offset
   922                           
   923                           ;timer1.c: 8: timer1_begin(uint8_t offset, uint8_t prescaler);timer1.c: 9:     {;timer1.
      +                          c: 10:     T1CONbits.T1GINV = 0;
   924  05BD  1283               	bcf	3,5	;RP0=0, select bank0
   925  05BE  1303               	bcf	3,6	;RP1=0, select bank0
   926  05BF  1390               	bcf	16,7	;volatile
   927                           
   928                           ;timer1.c: 11:     T1CONbits.TMR1GE = 0;
   929  05C0  1310               	bcf	16,6	;volatile
   930                           
   931                           ;timer1.c: 12:     T1CONbits.T1CKPS = prescaler;
   932  05C1  0874               	movf	timer1_begin@prescaler,w
   933  05C2  00F5               	movwf	??_timer1_begin
   934  05C3  0EF5               	swapf	??_timer1_begin,f
   935  05C4  0810               	movf	16,w	;volatile
   936  05C5  0675               	xorwf	??_timer1_begin,w
   937  05C6  39CF               	andlw	-49
   938  05C7  0675               	xorwf	??_timer1_begin,w
   939  05C8  0090               	movwf	16	;volatile
   940                           
   941                           ;timer1.c: 13:     T1CONbits.T1OSCEN = 0;
   942  05C9  1190               	bcf	16,3	;volatile
   943                           
   944                           ;timer1.c: 14:     T1CONbits.TMR1CS = 0;
   945  05CA  1090               	bcf	16,1	;volatile
   946                           
   947                           ;timer1.c: 15:     T1CONbits.TMR1ON = 1;
   948  05CB  1410               	bsf	16,0	;volatile
   949                           
   950                           ;timer1.c: 17:     INTCONbits.PEIE = 1;
   951  05CC  170B               	bsf	11,6	;volatile
   952                           
   953                           ;timer1.c: 18:     PIR1bits.TMR1IF = 0;
   954  05CD  100C               	bcf	12,0	;volatile
   955                           
   956                           ;timer1.c: 19:     PIE1bits.TMR1IE = 1;
   957  05CE  1683               	bsf	3,5	;RP0=1, select bank1
   958  05CF  1303               	bcf	3,6	;RP1=0, select bank1
   959  05D0  140C               	bsf	12,0	;volatile
   960                           
   961                           ;timer1.c: 20:     INTCONbits.GIE = 1;
   962  05D1  178B               	bsf	11,7	;volatile
   963                           
   964                           ;timer1.c: 21:     TMR1 = offset;
   965  05D2  0877               	movf	timer1_begin@offset,w
   966  05D3  00F5               	movwf	??_timer1_begin
   967  05D4  01F6               	clrf	??_timer1_begin+1
   968  05D5  0875               	movf	??_timer1_begin,w
   969  05D6  1283               	bcf	3,5	;RP0=0, select bank0
   970  05D7  1303               	bcf	3,6	;RP1=0, select bank0
   971  05D8  008E               	movwf	14	;volatile
   972  05D9  0876               	movf	??_timer1_begin+1,w
   973  05DA  008F               	movwf	15	;volatile
   974  05DB  0008               	return
   975  05DC                     __end_of_timer1_begin:	
   976                           
   977                           	psect	text2
   978  057B                     __ptext2:	
   979 ;; *************** function _oscilator_begin *****************
   980 ;; Defined at:
   981 ;;		line 9 in file "./Oscilator.h"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  freq            1    wreg     unsigned char 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  freq            1    4[COMMON] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       0       0       0       0
   996 ;;      Locals:         1       0       0       0       0
   997 ;;      Temps:          1       0       0       0       0
   998 ;;      Totals:         2       0       0       0       0
   999 ;;Total ram usage:        2 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           
  1010                           ;psect for function _oscilator_begin
  1011  057B                     _oscilator_begin:	
  1012                           
  1013                           ;incstack = 0
  1014                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
  1015                           ;oscilator_begin@freq stored from wreg
  1016  057B  00F5               	movwf	oscilator_begin@freq
  1017                           
  1018                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
  1019  057C  0875               	movf	oscilator_begin@freq,w
  1020  057D  00F4               	movwf	??_oscilator_begin
  1021  057E  0EF4               	swapf	??_oscilator_begin,f
  1022  057F  1683               	bsf	3,5	;RP0=1, select bank1
  1023  0580  1303               	bcf	3,6	;RP1=0, select bank1
  1024  0581  080F               	movf	15,w	;volatile
  1025  0582  0674               	xorwf	??_oscilator_begin,w
  1026  0583  398F               	andlw	-113
  1027  0584  0674               	xorwf	??_oscilator_begin,w
  1028  0585  008F               	movwf	15	;volatile
  1029                           
  1030                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
  1031  0586  140F               	bsf	15,0	;volatile
  1032                           
  1033                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
  1034  0587  118F               	bcf	15,3	;volatile
  1035  0588  0008               	return
  1036  0589                     __end_of_oscilator_begin:	
  1037                           
  1038                           	psect	text3
  1039  06D1                     __ptext3:	
  1040 ;; *************** function _full_step *****************
  1041 ;; Defined at:
  1042 ;;		line 9 in file "stepper.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  steps           2    3[COMMON] unsigned int 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         2       0       0       0       0
  1057 ;;      Locals:         0       0       0       0       0
  1058 ;;      Temps:          2       0       0       0       0
  1059 ;;      Totals:         4       0       0       0       0
  1060 ;;Total ram usage:        4 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _full_step
  1072  06D1                     _full_step:	
  1073  06D1                     l1299:	
  1074                           ;stepper.c: 9: full_step(uint16_t steps);stepper.c: 10:     {;stepper.c: 11:     static 
      +                          uint16_t i;;stepper.c: 12:     while(i<steps)
  1075                           
  1076                           ;incstack = 0
  1077                           ; Regs used in _full_step: [wreg+status,2+status,0]
  1078                           
  1079                           
  1080                           ;stepper.c: 12:     while(i<steps)
  1081  06D1  0875               	movf	full_step@steps+1,w
  1082  06D2  0279               	subwf	full_step@i+1,w
  1083  06D3  1D03               	skipz
  1084  06D4  2ED7               	goto	u715
  1085  06D5  0874               	movf	full_step@steps,w
  1086  06D6  0278               	subwf	full_step@i,w
  1087  06D7                     u715:	
  1088  06D7  1803               	btfsc	3,0
  1089  06D8  0008               	return
  1090                           
  1091                           ;stepper.c: 13:     {;stepper.c: 14:         if ((i % 4) == 1){
  1092  06D9  3003               	movlw	3
  1093  06DA  0578               	andwf	full_step@i,w
  1094  06DB  00F6               	movwf	??_full_step
  1095  06DC  3000               	movlw	0
  1096  06DD  0579               	andwf	full_step@i+1,w
  1097  06DE  00F7               	movwf	??_full_step+1
  1098  06DF  0376               	decf	??_full_step,w
  1099  06E0  0477               	iorwf	??_full_step+1,w
  1100  06E1  1D03               	btfss	3,2
  1101  06E2  2EF0               	goto	l1283
  1102                           
  1103                           ;stepper.c: 15:             PORTD = 3;
  1104  06E3  3003               	movlw	3
  1105  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1106  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1107  06E6  0088               	movwf	8	;volatile
  1108                           
  1109                           ;stepper.c: 16:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1110  06E7  301A               	movlw	26
  1111  06E8  00F7               	movwf	??_full_step+1
  1112  06E9  30F8               	movlw	248
  1113  06EA  00F6               	movwf	??_full_step
  1114  06EB                     u1067:	
  1115  06EB  0BF6               	decfsz	??_full_step,f
  1116  06EC  2EEB               	goto	u1067
  1117  06ED  0BF7               	decfsz	??_full_step+1,f
  1118  06EE  2EEB               	goto	u1067
  1119  06EF  0000               	nop
  1120  06F0                     l1283:	
  1121                           
  1122                           ;stepper.c: 18:         if ((i % 4) == 2){
  1123  06F0  3003               	movlw	3
  1124  06F1  0578               	andwf	full_step@i,w
  1125  06F2  00F6               	movwf	??_full_step
  1126  06F3  3000               	movlw	0
  1127  06F4  0579               	andwf	full_step@i+1,w
  1128  06F5  00F7               	movwf	??_full_step+1
  1129  06F6  3002               	movlw	2
  1130  06F7  0676               	xorwf	??_full_step,w
  1131  06F8  0477               	iorwf	??_full_step+1,w
  1132  06F9  1D03               	btfss	3,2
  1133  06FA  2F08               	goto	l1287
  1134                           
  1135                           ;stepper.c: 19:             PORTD = 6;
  1136  06FB  3006               	movlw	6
  1137  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1138  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1139  06FE  0088               	movwf	8	;volatile
  1140                           
  1141                           ;stepper.c: 20:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1142  06FF  301A               	movlw	26
  1143  0700  00F7               	movwf	??_full_step+1
  1144  0701  30F8               	movlw	248
  1145  0702  00F6               	movwf	??_full_step
  1146  0703                     u1077:	
  1147  0703  0BF6               	decfsz	??_full_step,f
  1148  0704  2F03               	goto	u1077
  1149  0705  0BF7               	decfsz	??_full_step+1,f
  1150  0706  2F03               	goto	u1077
  1151  0707  0000               	nop
  1152  0708                     l1287:	
  1153                           
  1154                           ;stepper.c: 22:         if ((i % 4) == 3){
  1155  0708  3003               	movlw	3
  1156  0709  0578               	andwf	full_step@i,w
  1157  070A  00F6               	movwf	??_full_step
  1158  070B  3000               	movlw	0
  1159  070C  0579               	andwf	full_step@i+1,w
  1160  070D  00F7               	movwf	??_full_step+1
  1161  070E  3003               	movlw	3
  1162  070F  0676               	xorwf	??_full_step,w
  1163  0710  0477               	iorwf	??_full_step+1,w
  1164  0711  1D03               	btfss	3,2
  1165  0712  2F20               	goto	l1291
  1166                           
  1167                           ;stepper.c: 23:             PORTD = 12;
  1168  0713  300C               	movlw	12
  1169  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1170  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1171  0716  0088               	movwf	8	;volatile
  1172                           
  1173                           ;stepper.c: 24:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1174  0717  301A               	movlw	26
  1175  0718  00F7               	movwf	??_full_step+1
  1176  0719  30F8               	movlw	248
  1177  071A  00F6               	movwf	??_full_step
  1178  071B                     u1087:	
  1179  071B  0BF6               	decfsz	??_full_step,f
  1180  071C  2F1B               	goto	u1087
  1181  071D  0BF7               	decfsz	??_full_step+1,f
  1182  071E  2F1B               	goto	u1087
  1183  071F  0000               	nop
  1184  0720                     l1291:	
  1185                           
  1186                           ;stepper.c: 26:         if ((i % 4) == 0){
  1187  0720  3003               	movlw	3
  1188  0721  0578               	andwf	full_step@i,w
  1189  0722  00F6               	movwf	??_full_step
  1190  0723  3000               	movlw	0
  1191  0724  0579               	andwf	full_step@i+1,w
  1192  0725  00F7               	movwf	??_full_step+1
  1193  0726  0876               	movf	??_full_step,w
  1194  0727  0477               	iorwf	??_full_step+1,w
  1195  0728  1D03               	btfss	3,2
  1196  0729  2F37               	goto	l200
  1197                           
  1198                           ;stepper.c: 27:             PORTD = 9;
  1199  072A  3009               	movlw	9
  1200  072B  1283               	bcf	3,5	;RP0=0, select bank0
  1201  072C  1303               	bcf	3,6	;RP1=0, select bank0
  1202  072D  0088               	movwf	8	;volatile
  1203                           
  1204                           ;stepper.c: 28:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1205  072E  301A               	movlw	26
  1206  072F  00F7               	movwf	??_full_step+1
  1207  0730  30F8               	movlw	248
  1208  0731  00F6               	movwf	??_full_step
  1209  0732                     u1097:	
  1210  0732  0BF6               	decfsz	??_full_step,f
  1211  0733  2F32               	goto	u1097
  1212  0734  0BF7               	decfsz	??_full_step+1,f
  1213  0735  2F32               	goto	u1097
  1214  0736  0000               	nop
  1215  0737                     l200:	
  1216                           ;stepper.c: 29:         }
  1217                           
  1218                           
  1219                           ;stepper.c: 30:         i++;
  1220  0737  3001               	movlw	1
  1221  0738  07F8               	addwf	full_step@i,f
  1222  0739  1803               	skipnc
  1223  073A  0AF9               	incf	full_step@i+1,f
  1224  073B  3000               	movlw	0
  1225  073C  07F9               	addwf	full_step@i+1,f
  1226                           
  1227                           ;stepper.c: 31:         if (i==steps-1){
  1228  073D  0874               	movf	full_step@steps,w
  1229  073E  3EFF               	addlw	255
  1230  073F  00F6               	movwf	??_full_step
  1231  0740  0875               	movf	full_step@steps+1,w
  1232  0741  1803               	skipnc
  1233  0742  3E01               	addlw	1
  1234  0743  3EFF               	addlw	255
  1235  0744  00F7               	movwf	??_full_step+1
  1236  0745  0879               	movf	full_step@i+1,w
  1237  0746  0677               	xorwf	??_full_step+1,w
  1238  0747  1D03               	skipz
  1239  0748  2F4B               	goto	u705
  1240  0749  0878               	movf	full_step@i,w
  1241  074A  0676               	xorwf	??_full_step,w
  1242  074B                     u705:	
  1243  074B  1903               	btfsc	3,2
  1244  074C  0008               	return
  1245  074D  2ED1               	goto	l1299
  1246  074E                     __end_of_full_step:	
  1247                           
  1248                           	psect	text4
  1249  0662                     __ptext4:	
  1250 ;; *************** function _full_rev *****************
  1251 ;; Defined at:
  1252 ;;		line 69 in file "stepper.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  steps           2    3[COMMON] unsigned int 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         2       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          2       0       0       0       0
  1269 ;;      Totals:         4       0       0       0       0
  1270 ;;Total ram usage:        4 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _full_rev
  1282  0662                     _full_rev:	
  1283                           
  1284                           ;stepper.c: 69: full_rev(uint16_t steps);stepper.c: 70:     {;stepper.c: 71:     static 
      +                          uint16_t i,a;;stepper.c: 72:     i=0;
  1285                           
  1286                           ;incstack = 0
  1287                           ; Regs used in _full_rev: [wreg+status,2+status,0]
  1288  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0664  01A6               	clrf	full_rev@i
  1291  0665  01A7               	clrf	full_rev@i+1
  1292  0666                     l1275:	
  1293                           ;stepper.c: 73:     while(i<steps)
  1294                           
  1295                           
  1296                           ;stepper.c: 73:     while(i<steps)
  1297  0666  0875               	movf	full_rev@steps+1,w
  1298  0667  0227               	subwf	full_rev@i+1,w
  1299  0668  1D03               	skipz
  1300  0669  2E6C               	goto	u655
  1301  066A  0874               	movf	full_rev@steps,w
  1302  066B  0226               	subwf	full_rev@i,w
  1303  066C                     u655:	
  1304  066C  1803               	btfsc	3,0
  1305  066D  0008               	return
  1306                           
  1307                           ;stepper.c: 74:     {;stepper.c: 75:         a = i%4;
  1308  066E  3003               	movlw	3
  1309  066F  0526               	andwf	full_rev@i,w
  1310  0670  00A4               	movwf	full_rev@a
  1311  0671  3000               	movlw	0
  1312  0672  0527               	andwf	full_rev@i+1,w
  1313  0673  00A5               	movwf	full_rev@a+1
  1314                           
  1315                           ;stepper.c: 76:         if ((a) == 1){
  1316  0674  0324               	decf	full_rev@a,w
  1317  0675  0425               	iorwf	full_rev@a+1,w
  1318  0676  1D03               	btfss	3,2
  1319  0677  2E83               	goto	l1259
  1320                           
  1321                           ;stepper.c: 77:             PORTD = 9;
  1322  0678  3009               	movlw	9
  1323  0679  0088               	movwf	8	;volatile
  1324                           
  1325                           ;stepper.c: 78:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1326  067A  301A               	movlw	26
  1327  067B  00F7               	movwf	??_full_rev+1
  1328  067C  30F8               	movlw	248
  1329  067D  00F6               	movwf	??_full_rev
  1330  067E                     u1107:	
  1331  067E  0BF6               	decfsz	??_full_rev,f
  1332  067F  2E7E               	goto	u1107
  1333  0680  0BF7               	decfsz	??_full_rev+1,f
  1334  0681  2E7E               	goto	u1107
  1335  0682  0000               	nop
  1336  0683                     l1259:	
  1337                           
  1338                           ;stepper.c: 80:         if ((a) == 2){
  1339  0683  3002               	movlw	2
  1340  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0686  0624               	xorwf	full_rev@a,w
  1343  0687  0425               	iorwf	full_rev@a+1,w
  1344  0688  1D03               	btfss	3,2
  1345  0689  2E95               	goto	l1263
  1346                           
  1347                           ;stepper.c: 81:             PORTD = 12;
  1348  068A  300C               	movlw	12
  1349  068B  0088               	movwf	8	;volatile
  1350                           
  1351                           ;stepper.c: 82:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1352  068C  301A               	movlw	26
  1353  068D  00F7               	movwf	??_full_rev+1
  1354  068E  30F8               	movlw	248
  1355  068F  00F6               	movwf	??_full_rev
  1356  0690                     u1117:	
  1357  0690  0BF6               	decfsz	??_full_rev,f
  1358  0691  2E90               	goto	u1117
  1359  0692  0BF7               	decfsz	??_full_rev+1,f
  1360  0693  2E90               	goto	u1117
  1361  0694  0000               	nop
  1362  0695                     l1263:	
  1363                           
  1364                           ;stepper.c: 84:         if ((a) == 3){
  1365  0695  3003               	movlw	3
  1366  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0698  0624               	xorwf	full_rev@a,w
  1369  0699  0425               	iorwf	full_rev@a+1,w
  1370  069A  1D03               	btfss	3,2
  1371  069B  2EA7               	goto	l1267
  1372                           
  1373                           ;stepper.c: 85:             PORTD = 6;
  1374  069C  3006               	movlw	6
  1375  069D  0088               	movwf	8	;volatile
  1376                           
  1377                           ;stepper.c: 86:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1378  069E  301A               	movlw	26
  1379  069F  00F7               	movwf	??_full_rev+1
  1380  06A0  30F8               	movlw	248
  1381  06A1  00F6               	movwf	??_full_rev
  1382  06A2                     u1127:	
  1383  06A2  0BF6               	decfsz	??_full_rev,f
  1384  06A3  2EA2               	goto	u1127
  1385  06A4  0BF7               	decfsz	??_full_rev+1,f
  1386  06A5  2EA2               	goto	u1127
  1387  06A6  0000               	nop
  1388  06A7                     l1267:	
  1389                           
  1390                           ;stepper.c: 88:         if ((a) == 0){
  1391  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1392  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1393  06A9  0824               	movf	full_rev@a,w
  1394  06AA  0425               	iorwf	full_rev@a+1,w
  1395  06AB  1D03               	btfss	3,2
  1396  06AC  2EB8               	goto	l230
  1397                           
  1398                           ;stepper.c: 89:             PORTD = 3;
  1399  06AD  3003               	movlw	3
  1400  06AE  0088               	movwf	8	;volatile
  1401                           
  1402                           ;stepper.c: 90:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1403  06AF  301A               	movlw	26
  1404  06B0  00F7               	movwf	??_full_rev+1
  1405  06B1  30F8               	movlw	248
  1406  06B2  00F6               	movwf	??_full_rev
  1407  06B3                     u1137:	
  1408  06B3  0BF6               	decfsz	??_full_rev,f
  1409  06B4  2EB3               	goto	u1137
  1410  06B5  0BF7               	decfsz	??_full_rev+1,f
  1411  06B6  2EB3               	goto	u1137
  1412  06B7  0000               	nop
  1413  06B8                     l230:	
  1414                           ;stepper.c: 91:         }
  1415                           
  1416                           
  1417                           ;stepper.c: 92:         i++;
  1418  06B8  3001               	movlw	1
  1419  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1420  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1421  06BB  07A6               	addwf	full_rev@i,f
  1422  06BC  1803               	skipnc
  1423  06BD  0AA7               	incf	full_rev@i+1,f
  1424  06BE  3000               	movlw	0
  1425  06BF  07A7               	addwf	full_rev@i+1,f
  1426                           
  1427                           ;stepper.c: 93:         if (i==steps-10){
  1428  06C0  0874               	movf	full_rev@steps,w
  1429  06C1  3EF6               	addlw	246
  1430  06C2  00F6               	movwf	??_full_rev
  1431  06C3  0875               	movf	full_rev@steps+1,w
  1432  06C4  1803               	skipnc
  1433  06C5  3E01               	addlw	1
  1434  06C6  3EFF               	addlw	255
  1435  06C7  00F7               	movwf	??_full_rev+1
  1436  06C8  0827               	movf	full_rev@i+1,w
  1437  06C9  0677               	xorwf	??_full_rev+1,w
  1438  06CA  1D03               	skipz
  1439  06CB  2ECE               	goto	u645
  1440  06CC  0826               	movf	full_rev@i,w
  1441  06CD  0676               	xorwf	??_full_rev,w
  1442  06CE                     u645:	
  1443  06CE  1903               	btfsc	3,2
  1444  06CF  0008               	return
  1445  06D0  2E66               	goto	l1275
  1446  06D1                     __end_of_full_rev:	
  1447                           
  1448                           	psect	text5
  1449  05DC                     __ptext5:	
  1450 ;; *************** function _dht11_read *****************
  1451 ;; Defined at:
  1452 ;;		line 30 in file "dht11_h.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      unsigned char 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0
  1468 ;;      Temps:          2       0       0       0       0
  1469 ;;      Totals:         2       0       0       0       0
  1470 ;;Total ram usage:        2 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _dht11_read
  1482  05DC                     _dht11_read:	
  1483                           
  1484                           ;dht11_h.c: 32:     static uint8_t i = 0, temp = 0;;dht11_h.c: 33:     for(i = 0; i < 8 
      +                          ; i++)
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _dht11_read: [wreg+status,2+status,0]
  1488  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1489  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1490  05DE  01AD               	clrf	dht11_read@i
  1491  05DF                     l178:	
  1492  05DF  1C05               	btfss	5,0	;volatile
  1493  05E0  2DDF               	goto	l178
  1494                           
  1495                           ;dht11_h.c: 36:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  1496  05E1  3013               	movlw	19
  1497  05E2  00F4               	movwf	??_dht11_read
  1498  05E3                     u1147:	
  1499  05E3  0BF4               	decfsz	??_dht11_read,f
  1500  05E4  2DE3               	goto	u1147
  1501  05E5  2DE6               	nop2
  1502                           
  1503                           ;dht11_h.c: 37:         if (PORTAbits.RA0)
  1504  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1505  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1506  05E8  1C05               	btfss	5,0	;volatile
  1507  05E9  2DED               	goto	l1241
  1508                           
  1509                           ;dht11_h.c: 38:         {;dht11_h.c: 39:             temp = ((temp<<1) | 1);
  1510  05EA  1403               	setc
  1511  05EB  0DAC               	rlf	dht11_read@temp,f
  1512                           
  1513                           ;dht11_h.c: 40:         }
  1514  05EC  2DF3               	goto	l183
  1515  05ED                     l1241:	
  1516                           
  1517                           ;dht11_h.c: 42:           temp = (temp<<1);
  1518  05ED  082C               	movf	dht11_read@temp,w
  1519  05EE  00F4               	movwf	??_dht11_read
  1520  05EF  0774               	addwf	??_dht11_read,w
  1521  05F0  00F5               	movwf	??_dht11_read+1
  1522  05F1  0875               	movf	??_dht11_read+1,w
  1523  05F2  00AC               	movwf	dht11_read@temp
  1524  05F3                     l183:	
  1525  05F3  1805               	btfsc	5,0	;volatile
  1526  05F4  2DF3               	goto	l183
  1527                           
  1528                           ;dht11_h.c: 44:     }
  1529  05F5  3001               	movlw	1
  1530  05F6  00F4               	movwf	??_dht11_read
  1531  05F7  0874               	movf	??_dht11_read,w
  1532  05F8  07AD               	addwf	dht11_read@i,f
  1533  05F9  3008               	movlw	8
  1534  05FA  022D               	subwf	dht11_read@i,w
  1535  05FB  1C03               	skipc
  1536  05FC  2DDF               	goto	l178
  1537                           
  1538                           ;dht11_h.c: 45:     return temp;
  1539  05FD  082C               	movf	dht11_read@temp,w
  1540  05FE  0008               	return
  1541  05FF                     __end_of_dht11_read:	
  1542                           
  1543                           	psect	text6
  1544  0572                     __ptext6:	
  1545 ;; *************** function _dht11_check *****************
  1546 ;; Defined at:
  1547 ;;		line 23 in file "dht11_h.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		None
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           
  1576                           ;psect for function _dht11_check
  1577  0572                     _dht11_check:	
  1578  0572                     l160:	
  1579                           ;dht11_h.c: 25:     while(PORTAbits.RA0);
  1580                           
  1581                           ;incstack = 0
  1582                           ; Regs used in _dht11_check: []
  1583                           
  1584  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0574  1805               	btfsc	5,0	;volatile
  1587  0575  2D72               	goto	l160
  1588  0576                     l163:	
  1589  0576  1C05               	btfss	5,0	;volatile
  1590  0577  2D76               	goto	l163
  1591  0578                     l166:	
  1592  0578  1C05               	btfss	5,0	;volatile
  1593  0579  0008               	return
  1594  057A  2D78               	goto	l166
  1595  057B                     __end_of_dht11_check:	
  1596                           
  1597                           	psect	text7
  1598  05A2                     __ptext7:	
  1599 ;; *************** function _dht11_begin *****************
  1600 ;; Defined at:
  1601 ;;		line 12 in file "dht11_h.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0
  1617 ;;      Temps:          2       0       0       0       0
  1618 ;;      Totals:         2       0       0       0       0
  1619 ;;Total ram usage:        2 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _dht11_begin
  1631  05A2                     _dht11_begin:	
  1632                           
  1633                           ;dht11_h.c: 14:     TRISA0 = 0;
  1634                           
  1635                           ;incstack = 0
  1636                           ; Regs used in _dht11_begin: [wreg]
  1637  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  1638  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  1639  05A4  1005               	bcf	5,0	;volatile
  1640                           
  1641                           ;dht11_h.c: 15:     PORTAbits.RA0 = 0;
  1642  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1643  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1644  05A7  1005               	bcf	5,0	;volatile
  1645                           
  1646                           ;dht11_h.c: 16:     _delay((unsigned long)((18)*(8000000/4000.0)));
  1647  05A8  302F               	movlw	47
  1648  05A9  00F5               	movwf	??_dht11_begin+1
  1649  05AA  30BF               	movlw	191
  1650  05AB  00F4               	movwf	??_dht11_begin
  1651  05AC                     u1157:	
  1652  05AC  0BF4               	decfsz	??_dht11_begin,f
  1653  05AD  2DAC               	goto	u1157
  1654  05AE  0BF5               	decfsz	??_dht11_begin+1,f
  1655  05AF  2DAC               	goto	u1157
  1656  05B0  2DB1               	nop2
  1657                           
  1658                           ;dht11_h.c: 17:     PORTAbits.RA0 = 1;
  1659  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1660  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1661  05B3  1405               	bsf	5,0	;volatile
  1662                           
  1663                           ;dht11_h.c: 18:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  1664  05B4  300D               	movlw	13
  1665  05B5  00F4               	movwf	??_dht11_begin
  1666  05B6                     u1167:	
  1667  05B6  0BF4               	decfsz	??_dht11_begin,f
  1668  05B7  2DB6               	goto	u1167
  1669                           
  1670                           ;dht11_h.c: 19:     TRISA0 = 1;
  1671  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  1672  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  1673  05BA  1405               	bsf	5,0	;volatile
  1674  05BB  0008               	return
  1675  05BC                     __end_of_dht11_begin:	
  1676                           
  1677                           	psect	text8
  1678  0589                     __ptext8:	
  1679 ;; *************** function _I2C_Slave_Init *****************
  1680 ;; Defined at:
  1681 ;;		line 93 in file "./I2C.h"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  address         2    3[COMMON] short 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         2       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0
  1698 ;;      Totals:         2       0       0       0       0
  1699 ;;Total ram usage:        2 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _I2C_Slave_Init
  1711  0589                     _I2C_Slave_Init:	
  1712                           
  1713                           ;./I2C.h: 93: void I2C_Slave_Init(short address);./I2C.h: 94: {;./I2C.h: 95:     SSPADD 
      +                          = address;
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in _I2C_Slave_Init: [wreg]
  1717  0589  0874               	movf	I2C_Slave_Init@address,w
  1718  058A  1683               	bsf	3,5	;RP0=1, select bank1
  1719  058B  1303               	bcf	3,6	;RP1=0, select bank1
  1720  058C  0093               	movwf	19	;volatile
  1721                           
  1722                           ;./I2C.h: 96:     SSPCON = 0x36;
  1723  058D  3036               	movlw	54
  1724  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1725  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0590  0094               	movwf	20	;volatile
  1727                           
  1728                           ;./I2C.h: 97:     SSPSTAT = 0x80;
  1729  0591  3080               	movlw	128
  1730  0592  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0593  1303               	bcf	3,6	;RP1=0, select bank1
  1732  0594  0094               	movwf	20	;volatile
  1733                           
  1734                           ;./I2C.h: 98:     SSPCON2 = 0x01;
  1735  0595  3001               	movlw	1
  1736  0596  0091               	movwf	17	;volatile
  1737                           
  1738                           ;./I2C.h: 99:     TRISC3 = 1;
  1739  0597  1587               	bsf	7,3	;volatile
  1740                           
  1741                           ;./I2C.h: 100:     TRISC4 = 1;
  1742  0598  1607               	bsf	7,4	;volatile
  1743                           
  1744                           ;./I2C.h: 101:     GIE = 1;
  1745  0599  178B               	bsf	11,7	;volatile
  1746                           
  1747                           ;./I2C.h: 102:     PEIE = 1;
  1748  059A  170B               	bsf	11,6	;volatile
  1749                           
  1750                           ;./I2C.h: 103:     SSPIF = 0;
  1751  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1752  059C  1303               	bcf	3,6	;RP1=0, select bank0
  1753  059D  118C               	bcf	12,3	;volatile
  1754                           
  1755                           ;./I2C.h: 104:     SSPIE = 1;
  1756  059E  1683               	bsf	3,5	;RP0=1, select bank1
  1757  059F  1303               	bcf	3,6	;RP1=0, select bank1
  1758  05A0  158C               	bsf	12,3	;volatile
  1759  05A1  0008               	return
  1760  05A2                     __end_of_I2C_Slave_Init:	
  1761                           
  1762                           	psect	text9
  1763  05FF                     __ptext9:	
  1764 ;; *************** function _isr *****************
  1765 ;; Defined at:
  1766 ;;		line 32 in file "Esclavo3.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0
  1782 ;;      Temps:          3       0       0       0       0
  1783 ;;      Totals:         3       0       0       0       0
  1784 ;;Total ram usage:        3 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		Interrupt level 1
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function _isr
  1795  05FF                     _isr:	
  1796                           
  1797                           ;Esclavo3.c: 34:     if (PIR1bits.SSPIF == 1) {
  1798  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0601  1D8C               	btfss	12,3	;volatile
  1801  0602  2E52               	goto	i1l119
  1802                           
  1803                           ;Esclavo3.c: 36:         SSPCONbits.CKP = 0;
  1804  0603  1214               	bcf	20,4	;volatile
  1805                           
  1806                           ;Esclavo3.c: 38:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)) {
  1807  0604  1B14               	btfsc	20,6	;volatile
  1808  0605  2E08               	goto	i1l1307
  1809  0606  1F94               	btfss	20,7	;volatile
  1810  0607  2E0F               	goto	i1l1315
  1811  0608                     i1l1307:	
  1812                           
  1813                           ;Esclavo3.c: 39:             z = SSPBUF;
  1814  0608  0813               	movf	19,w	;volatile
  1815  0609  00F1               	movwf	??_isr
  1816  060A  0871               	movf	??_isr,w
  1817  060B  00B0               	movwf	_z
  1818                           
  1819                           ;Esclavo3.c: 40:             SSPCONbits.SSPOV = 0;
  1820  060C  1314               	bcf	20,6	;volatile
  1821                           
  1822                           ;Esclavo3.c: 41:             SSPCONbits.WCOL = 0;
  1823  060D  1394               	bcf	20,7	;volatile
  1824                           
  1825                           ;Esclavo3.c: 42:             SSPCONbits.CKP = 1;
  1826  060E  1614               	bsf	20,4	;volatile
  1827  060F                     i1l1315:	
  1828                           
  1829                           ;Esclavo3.c: 45:         if (!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1830  060F  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0610  1303               	bcf	3,6	;RP1=0, select bank1
  1832  0611  1E94               	btfss	20,5	;volatile
  1833  0612  1914               	btfsc	20,2	;volatile
  1834  0613  2E2C               	goto	i1l123
  1835                           
  1836                           ;Esclavo3.c: 47:             z = SSPBUF;
  1837  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0616  0813               	movf	19,w	;volatile
  1840  0617  00F1               	movwf	??_isr
  1841  0618  0871               	movf	??_isr,w
  1842  0619  00B0               	movwf	_z
  1843                           
  1844                           ;Esclavo3.c: 49:             PIR1bits.SSPIF = 0;
  1845  061A  118C               	bcf	12,3	;volatile
  1846                           
  1847                           ;Esclavo3.c: 50:             SSPCONbits.CKP = 1;
  1848  061B  1614               	bsf	20,4	;volatile
  1849  061C                     i1l124:	
  1850                           ;Esclavo3.c: 51:             while (!SSPSTATbits.BF);
  1851                           
  1852  061C  1683               	bsf	3,5	;RP0=1, select bank1
  1853  061D  1303               	bcf	3,6	;RP1=0, select bank1
  1854  061E  1C14               	btfss	20,0	;volatile
  1855  061F  2E1C               	goto	i1l124
  1856                           
  1857                           ;Esclavo3.c: 52:             var = SSPBUF;
  1858  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0622  0813               	movf	19,w	;volatile
  1861  0623  00F1               	movwf	??_isr
  1862  0624  0871               	movf	??_isr,w
  1863  0625  00AF               	movwf	_var
  1864                           
  1865                           ;Esclavo3.c: 53:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1866  0626  30A6               	movlw	166
  1867  0627  00F1               	movwf	??_isr
  1868  0628                     u117_27:	
  1869  0628  0BF1               	decfsz	??_isr,f
  1870  0629  2E28               	goto	u117_27
  1871  062A  0000               	nop
  1872                           
  1873                           ;Esclavo3.c: 55:         } else if (!SSPSTATbits.D_nA && SSPSTATbits.R_nW) {
  1874  062B  2E4F               	goto	i1l127
  1875  062C                     i1l123:	
  1876  062C  1E94               	btfss	20,5	;volatile
  1877  062D  1D14               	btfss	20,2	;volatile
  1878  062E  2E4F               	goto	i1l127
  1879                           
  1880                           ;Esclavo3.c: 56:             z = SSPBUF;
  1881  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0631  0813               	movf	19,w	;volatile
  1884  0632  00F1               	movwf	??_isr
  1885  0633  0871               	movf	??_isr,w
  1886  0634  00B0               	movwf	_z
  1887                           
  1888                           ;Esclavo3.c: 57:             BF = 0;
  1889  0635  1683               	bsf	3,5	;RP0=1, select bank1
  1890  0636  1303               	bcf	3,6	;RP1=0, select bank1
  1891  0637  1014               	bcf	20,0	;volatile
  1892                           
  1893                           ;Esclavo3.c: 58:             if (var == 1) {
  1894  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1896  063A  032F               	decf	_var,w
  1897  063B  1D03               	btfss	3,2
  1898  063C  2E3F               	goto	i1l1337
  1899                           
  1900                           ;Esclavo3.c: 59:                 SSPBUF = hum_int;
  1901  063D  0834               	movf	_hum_int,w
  1902  063E  0093               	movwf	19	;volatile
  1903  063F                     i1l1337:	
  1904                           
  1905                           ;Esclavo3.c: 61:             if (var == 2) {
  1906  063F  3002               	movlw	2
  1907  0640  062F               	xorwf	_var,w
  1908  0641  1D03               	btfss	3,2
  1909  0642  2E45               	goto	i1l1341
  1910                           
  1911                           ;Esclavo3.c: 62:                 SSPBUF = temp_int;
  1912  0643  087A               	movf	_temp_int,w
  1913  0644  0093               	movwf	19	;volatile
  1914  0645                     i1l1341:	
  1915                           
  1916                           ;Esclavo3.c: 64:             SSPCONbits.CKP = 1;
  1917  0645  1614               	bsf	20,4	;volatile
  1918                           
  1919                           ;Esclavo3.c: 65:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1920  0646  30A6               	movlw	166
  1921  0647  00F1               	movwf	??_isr
  1922  0648                     u118_27:	
  1923  0648  0BF1               	decfsz	??_isr,f
  1924  0649  2E48               	goto	u118_27
  1925  064A  0000               	nop
  1926  064B                     i1l131:	
  1927                           ;Esclavo3.c: 66:             while (SSPSTATbits.BF);
  1928                           
  1929  064B  1683               	bsf	3,5	;RP0=1, select bank1
  1930  064C  1303               	bcf	3,6	;RP1=0, select bank1
  1931  064D  1814               	btfsc	20,0	;volatile
  1932  064E  2E4B               	goto	i1l131
  1933  064F                     i1l127:	
  1934                           
  1935                           ;Esclavo3.c: 70:         PIR1bits.SSPIF = 0;
  1936  064F  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0650  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0651  118C               	bcf	12,3	;volatile
  1939  0652                     i1l119:	
  1940                           ;Esclavo3.c: 71:     }
  1941                           
  1942                           
  1943                           ;Esclavo3.c: 72:     if (PIR1bits.TMR1IF) {
  1944  0652  1C0C               	btfss	12,0	;volatile
  1945  0653  2E5B               	goto	i1l135
  1946                           
  1947                           ;Esclavo3.c: 73:         t1_count++;
  1948  0654  3001               	movlw	1
  1949  0655  00F1               	movwf	??_isr
  1950  0656  0871               	movf	??_isr,w
  1951  0657  07B6               	addwf	_t1_count,f
  1952                           
  1953                           ;Esclavo3.c: 74:         TMR1 = (0);
  1954  0658  018E               	clrf	14	;volatile
  1955  0659  018F               	clrf	15	;volatile
  1956                           
  1957                           ;Esclavo3.c: 75:         PIR1bits.TMR1IF = 0;
  1958  065A  100C               	bcf	12,0	;volatile
  1959  065B                     i1l135:	
  1960  065B  0873               	movf	??_isr+2,w
  1961  065C  008A               	movwf	10
  1962  065D  0E72               	swapf	(??_isr+1)^(0+4294967168),w
  1963  065E  0083               	movwf	3
  1964  065F  0EFE               	swapf	126,f
  1965  0660  0E7E               	swapf	126,w
  1966  0661  0009               	retfie
  1967  0662                     __end_of_isr:	
  1968  007E                     btemp	set	126	;btemp
  1969  007E                     wtemp0	set	126
  1970                           
  1971                           	psect	intentry
  1972  0004                     __pintentry:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _isr: [wreg+status,2+status,0]
  1975                           
  1976  0004                     interrupt_function:	
  1977  007E                     saved_w	set	btemp
  1978  0004  00FE               	movwf	btemp
  1979  0005  0E03               	swapf	3,w
  1980  0006  00F2               	movwf	??_isr+1
  1981  0007  080A               	movf	10,w
  1982  0008  00F3               	movwf	??_isr+2
  1983  0009  120A  118A  2DFF   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      7      10
    BANK0            80      3      26
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_full_rev
    _main->_full_step
    _main->_timer1_begin

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     480
                                              0 BANK0      3     3      0
                     _I2C_Slave_Init
                        _dht11_begin
                        _dht11_check
                         _dht11_read
                           _full_rev
                          _full_step
                    _oscilator_begin
                       _timer1_begin
 ---------------------------------------------------------------------------------
 (1) _timer1_begin                                         4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _oscilator_begin                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _full_step                                            4     2      2     120
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _full_rev                                             4     2      2     120
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _dht11_read                                           2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dht11_check                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dht11_begin                                          2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _dht11_begin
   _dht11_check
   _dht11_read
   _full_rev
   _full_step
   _oscilator_begin
   _timer1_begin

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      7       A       1       76.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 08:07:26 2019

                       _z 0030               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        fsr 0004      __size_of_dht11_begin 001A  
    __size_of_dht11_check 0009                       l200 0737                       l230 06B8  
                     l160 0572                       l144 07F0                       l163 0576  
                     l166 0578                       l183 05F3                       l178 05DF  
                     _GIE 005F                       _RE0 0048              __CFG_CPD$OFF 0000  
                     u705 074B                       u715 06D7                       u645 06CE  
                     u655 066C                       _isr 05FF                       _var 002F  
                     indf 0000              __CFG_LVP$OFF 0000                      l1241 05ED  
                    l1501 07DA                      l1263 0695                      l1267 06A7  
                    l1259 0683                      l1275 0666                      l1291 0720  
                    l1283 06F0                      l1509 07EA                      l1287 0708  
                    l1471 0779                      l1299 06D1                      ?_isr 0071  
                    u1107 067E                      u1117 0690                      u1127 06A2  
                    u1137 06B3                      u1147 05E3                      u1067 06EB  
                    u1157 05AC                      u1077 0703                      u1167 05B6  
                    u1087 071B                      u1097 0732                      _PEIE 005E  
                    _RCEN 048B                      _TMR1 000E              __CFG_WRT$OFF 0000  
                    _main 074E                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000   __end_of_oscilator_begin 0589                     ??_isr 0071  
                   ?_main 0071             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l131 064B                     i1l123 062C                     i1l124 061C  
                   i1l135 065B                     i1l127 064F                     i1l119 0652  
                   _PORTD 0008                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000                     _check 0032  
                   _state 002E                     _total 0031            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07F2              __end_of_main 07F2  
                  ??_main 0037                    i1l1315 060F                    i1l1307 0608  
                  i1l1341 0645                    i1l1337 063F                    u117_27 0628  
                  u118_27 0648                    _SSPADD 0093                    _TRISA0 0428  
                  _TRISA1 0429                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
        ?_oscilator_begin 0071            dht11_read@temp 002C          __end_of_full_rev 06D1  
                  saved_w 007E   __end_of__initialization 07FC            __pcstackCOMMON 0071  
              _dht11_read 05DC   __size_of_I2C_Slave_Init 0019     I2C_Slave_Init@address 0074  
              __pbssBANK0 0020        __size_of_full_step 007D                __pmaintext 074E  
           ??_dht11_begin 0074             ??_dht11_check 0074                __pintentry 0004  
                 _SSPCON2 0091                   _SSPSTAT 0094                 ?_full_rev 0074  
             ?_dht11_read 0071             ?_timer1_begin 0074                   __ptext1 05BC  
                 __ptext2 057B                   __ptext3 06D1                   __ptext4 0662  
                 __ptext5 05DC                   __ptext6 0572                   __ptext7 05A2  
                 __ptext8 0589                   __ptext9 05FF       __end_of_dht11_begin 05BC  
     __end_of_dht11_check 057B                 _T1CONbits 0010              __size_of_isr 0063  
                 _hum_dec 0033                   _hum_int 0034         __end_of_full_step 074E  
                 clrloop0 056B      end_of_initialization 07FC                ??_full_rev 0076  
          _I2C_Slave_Init 0589            ??_timer1_begin 0075                 _PORTAbits 0005  
     __size_of_dht11_read 0023     timer1_begin@prescaler 0074    __end_of_I2C_Slave_Init 05A2  
             _dht11_begin 05A2               _dht11_check 0572  __size_of_oscilator_begin 000E  
     start_initialization 07F2               __end_of_isr 0662  __CFG_FOSC$INTRC_NOCLKOUT 0000  
         ?_I2C_Slave_Init 0074                full_step@i 0078               __pbssCOMMON 0078  
               ___latbits 0002             __pcstackBANK0 0037      __end_of_timer1_begin 05DC  
             dht11_read@i 002D         __size_of_full_rev 006F              ??_dht11_read 0074  
      timer1_begin@offset 0077         ??_oscilator_begin 0074                 _full_step 06D1  
      __end_of_dht11_read 05FF         interrupt_function 0004                 clear_ram0 056A  
                _PIE1bits 008C                  _PIR1bits 000C                wave_step@a 0028  
              wave_step@i 002A                ?_full_step 0074       oscilator_begin@freq 0075  
            ?_dht11_begin 0071              ?_dht11_check 0071                  _t1_count 0036  
               full_rev@a 0024                 full_rev@i 0026     __size_of_timer1_begin 0020  
       __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0076             __size_of_main 00A4  
                _full_rev 0662                  _temp_dec 0035                  _temp_int 007A  
               wave_rev@a 0020                 wave_rev@i 0022              _timer1_begin 05BC  
              _INTCONbits 000B               ??_full_step 0076                  intlevel1 0000  
              _OSCCONbits 008F            full_step@steps 0074             full_rev@steps 0074  
         _oscilator_begin 057B               _SSPCON2bits 0091                _SSPCONbits 0014  
