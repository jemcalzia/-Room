

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 11:12:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.05
    24                           ; Generated 20/12/2018 GMT
    25                           ; 
    26                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  000E                     _TMR1	set	14
   448  000B                     _INTCONbits	set	11
   449  0010                     _T1CONbits	set	16
   450  0009                     _PORTE	set	9
   451  0008                     _PORTD	set	8
   452  0005                     _PORTAbits	set	5
   453  0014                     _SSPCONbits	set	20
   454  000C                     _PIR1bits	set	12
   455  0013                     _SSPBUF	set	19
   456  0014                     _SSPCON	set	20
   457  0048                     _RE0	set	72
   458  0063                     _SSPIF	set	99
   459  005E                     _PEIE	set	94
   460  005F                     _GIE	set	95
   461  008C                     _PIE1bits	set	140
   462  0089                     _TRISE	set	137
   463  0088                     _TRISD	set	136
   464  0094                     _SSPSTATbits	set	148
   465  0091                     _SSPCON2bits	set	145
   466  0094                     _SSPSTAT	set	148
   467  0093                     _SSPADD	set	147
   468  0091                     _SSPCON2	set	145
   469  008F                     _OSCCONbits	set	143
   470  0428                     _TRISA0	set	1064
   471  0429                     _TRISA1	set	1065
   472  04A0                     _BF	set	1184
   473  0463                     _SSPIE	set	1123
   474  048B                     _RCEN	set	1163
   475  043C                     _TRISC4	set	1084
   476  043B                     _TRISC3	set	1083
   477  0188                     _ANSEL	set	392
   478                           
   479                           ; #config settings
   480  0000                     
   481                           	psect	cinit
   482  000F                     start_initialization:	
   483  000F                     __initialization:	
   484                           
   485                           ; Clear objects allocated to COMMON
   486  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   487  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   488  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   489  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   490  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   491  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   492  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   493                           
   494                           ; Clear objects allocated to BANK0
   495  0016  1383               	bcf	3,7	;select IRP bank0
   496  0017  3020               	movlw	low __pbssBANK0
   497  0018  0084               	movwf	4
   498  0019  3034               	movlw	low (__pbssBANK0+20)
   499  001A  120A  118A  22AC   	fcall	clear_ram0
   500  001D                     end_of_initialization:	
   501                           ;End of C runtime variable initialization code
   502                           
   503  001D                     __end_of__initialization:	
   504  001D  0183               	clrf	3
   505  001E  120A  118A  29B1   	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	bssCOMMON
   508  0070                     __pbssCOMMON:	
   509  0070                     wave_rev@a:	
   510  0070                     	ds	2
   511  0072                     wave_step@a:	
   512  0072                     	ds	2
   513  0074                     dht11_read@temp:	
   514  0074                     	ds	1
   515  0075                     dht11_read@i:	
   516  0075                     	ds	1
   517  0076                     _var:	
   518  0076                     	ds	1
   519                           
   520                           	psect	bssBANK0
   521  0020                     __pbssBANK0:	
   522  0020                     wave_rev@i:	
   523  0020                     	ds	2
   524  0022                     full_rev@a:	
   525  0022                     	ds	2
   526  0024                     full_rev@i:	
   527  0024                     	ds	2
   528  0026                     wave_step@i:	
   529  0026                     	ds	2
   530  0028                     full_step@i:	
   531  0028                     	ds	2
   532  002A                     _count:	
   533  002A                     	ds	1
   534  002B                     _state:	
   535  002B                     	ds	1
   536  002C                     _z:	
   537  002C                     	ds	1
   538  002D                     _total:	
   539  002D                     	ds	1
   540  002E                     _check:	
   541  002E                     	ds	1
   542  002F                     _hum_dec:	
   543  002F                     	ds	1
   544  0030                     _hum_int:	
   545  0030                     	ds	1
   546  0031                     _temp_dec:	
   547  0031                     	ds	1
   548  0032                     _temp_int:	
   549  0032                     	ds	1
   550  0033                     _t1_count:	
   551  0033                     	ds	1
   552                           
   553                           	psect	clrtext
   554  02AC                     clear_ram0:	
   555                           ;	Called with FSR containing the base address, and
   556                           ;	W with the last address+1
   557                           
   558  02AC  0064               	clrwdt	;clear the watchdog before getting into this loop
   559  02AD                     clrloop0:	
   560  02AD  0180               	clrf	0	;clear RAM location pointed to by FSR
   561  02AE  0A84               	incf	4,f	;increment pointer
   562  02AF  0604               	xorwf	4,w	;XOR with final address
   563  02B0  1903               	btfsc	3,2	;have we reached the end yet?
   564  02B1  3400               	retlw	0	;all done for this memory range, return
   565  02B2  0604               	xorwf	4,w	;XOR again to restore value
   566  02B3  2AAD               	goto	clrloop0	;do the next byte
   567                           
   568                           	psect	cstackCOMMON
   569  0077                     __pcstackCOMMON:	
   570  0077                     ?_dht11_begin:	
   571  0077                     ??_dht11_begin:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0077                     ?_dht11_check:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0077                     ??_dht11_check:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0077                     ?_dht11_read:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0077                     ??_dht11_read:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0077                     ?_oscilator_begin:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0077                     ?_isr:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0077                     ?_main:	
   593                           ; 1 bytes @ 0x0
   594                           
   595                           
   596                           ; 1 bytes @ 0x0
   597  0077                     	ds	2
   598  0079                     ??_isr:	
   599                           
   600                           ; 1 bytes @ 0x2
   601  0079                     	ds	5
   602                           
   603                           	psect	cstackBANK0
   604  0034                     __pcstackBANK0:	
   605  0034                     ?_timer1_begin:	
   606  0034                     ?_full_rev:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0034                     ?_full_step:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0034                     ??_oscilator_begin:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0034                     ?_I2C_Slave_Init:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0034                     timer1_begin@prescaler:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0034                     I2C_Slave_Init@address:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0034                     full_step@steps:	
   625                           ; 2 bytes @ 0x0
   626                           
   627  0034                     full_rev@steps:	
   628                           ; 2 bytes @ 0x0
   629                           
   630                           
   631                           ; 2 bytes @ 0x0
   632  0034                     	ds	1
   633  0035                     ??_timer1_begin:	
   634  0035                     oscilator_begin@freq:	
   635                           ; 1 bytes @ 0x1
   636                           
   637                           
   638                           ; 1 bytes @ 0x1
   639  0035                     	ds	1
   640  0036                     ??_full_rev:	
   641  0036                     ??_full_step:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0036                     ??_I2C_Slave_Init:	
   645                           ; 1 bytes @ 0x2
   646                           
   647                           
   648                           ; 1 bytes @ 0x2
   649  0036                     	ds	1
   650  0037                     timer1_begin@offset:	
   651                           
   652                           ; 1 bytes @ 0x3
   653  0037                     	ds	1
   654  0038                     ??_main:	
   655                           
   656                           ; 1 bytes @ 0x4
   657  0038                     	ds	1
   658                           
   659                           	psect	maintext
   660  01B1                     __pmaintext:	
   661 ;;
   662 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   663 ;;
   664 ;; *************** function _main *****************
   665 ;; Defined at:
   666 ;;		line 104 in file "Esclavo3.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, pclath, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : B00/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0
   682 ;;      Temps:          0       1       0       0       0
   683 ;;      Totals:         0       1       0       0       0
   684 ;;Total ram usage:        1 bytes
   685 ;; Hardware stack levels required when called:    3
   686 ;; This function calls:
   687 ;;		_I2C_Slave_Init
   688 ;;		_full_rev
   689 ;;		_full_step
   690 ;;		_oscilator_begin
   691 ;;		_timer1_begin
   692 ;; This function is called by:
   693 ;;		Startup code after reset
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _main
   699  01B1                     _main:	
   700                           
   701                           ;Esclavo3.c: 106:     oscilator_begin(7);
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   705  01B1  3007               	movlw	7
   706  01B2  120A  118A  228F  120A  118A  	fcall	_oscilator_begin
   707                           
   708                           ;Esclavo3.c: 107:     TRISD = 0;
   709  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   710  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   711  01B9  0188               	clrf	8	;volatile
   712                           
   713                           ;Esclavo3.c: 108:     PORTD = 0;
   714  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   715  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   716  01BC  0188               	clrf	8	;volatile
   717                           
   718                           ;Esclavo3.c: 109:     TRISA1 = 0;
   719  01BD  1683               	bsf	3,5	;RP0=1, select bank1
   720  01BE  1303               	bcf	3,6	;RP1=0, select bank1
   721  01BF  1085               	bcf	5,1	;volatile
   722                           
   723                           ;Esclavo3.c: 110:     ANSEL = 0;
   724  01C0  1683               	bsf	3,5	;RP0=1, select bank3
   725  01C1  1703               	bsf	3,6	;RP1=1, select bank3
   726  01C2  0188               	clrf	8	;volatile
   727                           
   728                           ;Esclavo3.c: 111:     state = 0;
   729  01C3  1283               	bcf	3,5	;RP0=0, select bank0
   730  01C4  1303               	bcf	3,6	;RP1=0, select bank0
   731  01C5  01AB               	clrf	_state
   732                           
   733                           ;Esclavo3.c: 112:     TRISE = 0;
   734  01C6  1683               	bsf	3,5	;RP0=1, select bank1
   735  01C7  1303               	bcf	3,6	;RP1=0, select bank1
   736  01C8  0189               	clrf	9	;volatile
   737                           
   738                           ;Esclavo3.c: 113:     PORTE = 0;
   739  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   740  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   741  01CB  0189               	clrf	9	;volatile
   742                           
   743                           ;Esclavo3.c: 116:     PORTAbits.RA1 = 0;
   744  01CC  1085               	bcf	5,1	;volatile
   745                           
   746                           ;Esclavo3.c: 118:     timer1_begin((0), (3));
   747  01CD  3003               	movlw	3
   748  01CE  00B8               	movwf	??_main
   749  01CF  0838               	movf	??_main,w
   750  01D0  00B4               	movwf	timer1_begin@prescaler
   751  01D1  3000               	movlw	0
   752  01D2  120A  118A  223A  120A  118A  	fcall	_timer1_begin
   753                           
   754                           ;Esclavo3.c: 119:     I2C_Slave_Init(0x40);
   755  01D7  3040               	movlw	64
   756  01D8  1283               	bcf	3,5	;RP0=0, select bank0
   757  01D9  1303               	bcf	3,6	;RP1=0, select bank0
   758  01DA  00B4               	movwf	I2C_Slave_Init@address
   759  01DB  3000               	movlw	0
   760  01DC  00B5               	movwf	I2C_Slave_Init@address+1
   761  01DD  120A  118A  225A  120A  118A  	fcall	_I2C_Slave_Init
   762                           
   763                           ;Esclavo3.c: 120:     PORTD = 0;
   764  01E2  1283               	bcf	3,5	;RP0=0, select bank0
   765  01E3  1303               	bcf	3,6	;RP1=0, select bank0
   766  01E4  0188               	clrf	8	;volatile
   767  01E5                     l1508:	
   768                           
   769                           ;Esclavo3.c: 123:         if (hum_int > 85) {
   770  01E5  3056               	movlw	86
   771  01E6  0230               	subwf	_hum_int,w
   772  01E7  1C03               	skipc
   773  01E8  29FA               	goto	l1520
   774                           
   775                           ;Esclavo3.c: 124:             if (state == 0) {
   776  01E9  082B               	movf	_state,w
   777  01EA  1D03               	btfss	3,2
   778  01EB  29F9               	goto	l1516
   779                           
   780                           ;Esclavo3.c: 125:                 full_rev(1605U);
   781  01EC  3045               	movlw	69
   782  01ED  00B4               	movwf	full_rev@steps
   783  01EE  3006               	movlw	6
   784  01EF  00B5               	movwf	full_rev@steps+1
   785  01F0  120A  118A  214A  120A  118A  	fcall	_full_rev
   786                           
   787                           ;Esclavo3.c: 126:                 state = 1U;
   788  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   789  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   790  01F7  01AB               	clrf	_state
   791  01F8  0AAB               	incf	_state,f
   792  01F9                     l1516:	
   793                           
   794                           ;Esclavo3.c: 127:                 PORTD = 0;
   795  01F9  0188               	clrf	8	;volatile
   796  01FA                     l1520:	
   797                           ;Esclavo3.c: 128:             } else {
   798                           
   799                           
   800                           ;Esclavo3.c: 133:         if (hum_int <= 85 && state) {
   801  01FA  3056               	movlw	86
   802  01FB  0230               	subwf	_hum_int,w
   803  01FC  1803               	skipnc
   804  01FD  2A0E               	goto	l1530
   805  01FE  082B               	movf	_state,w
   806  01FF  1903               	btfsc	3,2
   807  0200  2A0E               	goto	l1530
   808                           
   809                           ;Esclavo3.c: 134:             full_step(1605U);
   810  0201  3045               	movlw	69
   811  0202  00B4               	movwf	full_step@steps
   812  0203  3006               	movlw	6
   813  0204  00B5               	movwf	full_step@steps+1
   814  0205  120A  118A  20D3  120A  118A  	fcall	_full_step
   815                           
   816                           ;Esclavo3.c: 135:             state = 0;
   817  020A  1283               	bcf	3,5	;RP0=0, select bank0
   818  020B  1303               	bcf	3,6	;RP1=0, select bank0
   819  020C  01AB               	clrf	_state
   820                           
   821                           ;Esclavo3.c: 136:             PORTD = 0;
   822  020D  0188               	clrf	8	;volatile
   823  020E                     l1530:	
   824                           
   825                           ;Esclavo3.c: 139:         if (temp_int > 25) {
   826  020E  301A               	movlw	26
   827  020F  0232               	subwf	_temp_int,w
   828  0210  1C03               	skipc
   829  0211  2A14               	goto	l153
   830                           
   831                           ;Esclavo3.c: 140:             RE0 = 1;
   832  0212  1409               	bsf	9,0	;volatile
   833                           
   834                           ;Esclavo3.c: 141:         } else {
   835  0213  29E5               	goto	l1508
   836  0214                     l153:	
   837                           
   838                           ;Esclavo3.c: 142:             RE0 = 0;
   839  0214  1009               	bcf	9,0	;volatile
   840  0215  29E5               	goto	l1508
   841  0216                     __end_of_main:	
   842                           
   843                           	psect	text1
   844  023A                     __ptext1:	
   845 ;; *************** function _timer1_begin *****************
   846 ;; Defined at:
   847 ;;		line 8 in file "timer1.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  offset          1    wreg     unsigned char 
   850 ;;  prescaler       1    0[BANK0 ] unsigned char 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  offset          1    3[BANK0 ] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       1       0       0       0
   863 ;;      Locals:         0       1       0       0       0
   864 ;;      Temps:          0       2       0       0       0
   865 ;;      Totals:         0       4       0       0       0
   866 ;;Total ram usage:        4 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    2
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function _timer1_begin
   878  023A                     _timer1_begin:	
   879                           
   880                           ;incstack = 0
   881                           ; Regs used in _timer1_begin: [wreg+status,2+status,0]
   882                           ;timer1_begin@offset stored from wreg
   883  023A  1283               	bcf	3,5	;RP0=0, select bank0
   884  023B  1303               	bcf	3,6	;RP1=0, select bank0
   885  023C  00B7               	movwf	timer1_begin@offset
   886                           
   887                           ;timer1.c: 8: timer1_begin(uint8_t offset, uint8_t prescaler);timer1.c: 9:     {;timer1.
      +                          c: 10:     T1CONbits.T1GINV = 0;
   888  023D  1390               	bcf	16,7	;volatile
   889                           
   890                           ;timer1.c: 11:     T1CONbits.TMR1GE = 0;
   891  023E  1310               	bcf	16,6	;volatile
   892                           
   893                           ;timer1.c: 12:     T1CONbits.T1CKPS = prescaler;
   894  023F  0834               	movf	timer1_begin@prescaler,w
   895  0240  00B5               	movwf	??_timer1_begin
   896  0241  0EB5               	swapf	??_timer1_begin,f
   897  0242  0810               	movf	16,w	;volatile
   898  0243  0635               	xorwf	??_timer1_begin,w
   899  0244  39CF               	andlw	-49
   900  0245  0635               	xorwf	??_timer1_begin,w
   901  0246  0090               	movwf	16	;volatile
   902                           
   903                           ;timer1.c: 13:     T1CONbits.T1OSCEN = 0;
   904  0247  1190               	bcf	16,3	;volatile
   905                           
   906                           ;timer1.c: 14:     T1CONbits.TMR1CS = 0;
   907  0248  1090               	bcf	16,1	;volatile
   908                           
   909                           ;timer1.c: 15:     T1CONbits.TMR1ON = 1;
   910  0249  1410               	bsf	16,0	;volatile
   911                           
   912                           ;timer1.c: 17:     INTCONbits.PEIE = 1;
   913  024A  170B               	bsf	11,6	;volatile
   914                           
   915                           ;timer1.c: 18:     PIR1bits.TMR1IF = 0;
   916  024B  100C               	bcf	12,0	;volatile
   917                           
   918                           ;timer1.c: 19:     PIE1bits.TMR1IE = 1;
   919  024C  1683               	bsf	3,5	;RP0=1, select bank1
   920  024D  1303               	bcf	3,6	;RP1=0, select bank1
   921  024E  140C               	bsf	12,0	;volatile
   922                           
   923                           ;timer1.c: 20:     INTCONbits.GIE = 1;
   924  024F  178B               	bsf	11,7	;volatile
   925                           
   926                           ;timer1.c: 21:     TMR1 = offset;
   927  0250  1283               	bcf	3,5	;RP0=0, select bank0
   928  0251  1303               	bcf	3,6	;RP1=0, select bank0
   929  0252  0837               	movf	timer1_begin@offset,w
   930  0253  00B5               	movwf	??_timer1_begin
   931  0254  01B6               	clrf	??_timer1_begin+1
   932  0255  0835               	movf	??_timer1_begin,w
   933  0256  008E               	movwf	14	;volatile
   934  0257  0836               	movf	??_timer1_begin+1,w
   935  0258  008F               	movwf	15	;volatile
   936  0259  0008               	return
   937  025A                     __end_of_timer1_begin:	
   938                           
   939                           	psect	text2
   940  028F                     __ptext2:	
   941 ;; *************** function _oscilator_begin *****************
   942 ;; Defined at:
   943 ;;		line 9 in file "./Oscilator.h"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  freq            1    wreg     unsigned char 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  freq            1    1[BANK0 ] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         0       1       0       0       0
   959 ;;      Temps:          0       1       0       0       0
   960 ;;      Totals:         0       2       0       0       0
   961 ;;Total ram usage:        2 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    2
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _oscilator_begin
   973  028F                     _oscilator_begin:	
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
   977                           ;oscilator_begin@freq stored from wreg
   978  028F  1283               	bcf	3,5	;RP0=0, select bank0
   979  0290  1303               	bcf	3,6	;RP1=0, select bank0
   980  0291  00B5               	movwf	oscilator_begin@freq
   981                           
   982                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
   983  0292  0835               	movf	oscilator_begin@freq,w
   984  0293  00B4               	movwf	??_oscilator_begin
   985  0294  0EB4               	swapf	??_oscilator_begin,f
   986  0295  1683               	bsf	3,5	;RP0=1, select bank1
   987  0296  1303               	bcf	3,6	;RP1=0, select bank1
   988  0297  080F               	movf	15,w	;volatile
   989  0298  1283               	bcf	3,5	;RP0=0, select bank0
   990  0299  1303               	bcf	3,6	;RP1=0, select bank0
   991  029A  0634               	xorwf	??_oscilator_begin,w
   992  029B  398F               	andlw	-113
   993  029C  0634               	xorwf	??_oscilator_begin,w
   994  029D  1683               	bsf	3,5	;RP0=1, select bank1
   995  029E  1303               	bcf	3,6	;RP1=0, select bank1
   996  029F  008F               	movwf	15	;volatile
   997                           
   998                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
   999  02A0  140F               	bsf	15,0	;volatile
  1000                           
  1001                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
  1002  02A1  118F               	bcf	15,3	;volatile
  1003  02A2  0008               	return
  1004  02A3                     __end_of_oscilator_begin:	
  1005                           
  1006                           	psect	text3
  1007  00D3                     __ptext3:	
  1008 ;; *************** function _full_step *****************
  1009 ;; Defined at:
  1010 ;;		line 9 in file "stepper.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  steps           2    0[BANK0 ] unsigned int 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       2       0       0       0
  1025 ;;      Locals:         0       0       0       0       0
  1026 ;;      Temps:          0       2       0       0       0
  1027 ;;      Totals:         0       4       0       0       0
  1028 ;;Total ram usage:        4 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    2
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _full_step
  1040  00D3                     _full_step:	
  1041  00D3                     l1308:	
  1042                           ;stepper.c: 9: full_step(uint16_t steps);stepper.c: 10:     {;stepper.c: 11:     static 
      +                          uint16_t i;;stepper.c: 12:     while(i<steps)
  1043                           
  1044                           ;incstack = 0
  1045                           ; Regs used in _full_step: [wreg+status,2+status,0]
  1046                           
  1047                           
  1048                           ;stepper.c: 12:     while(i<steps)
  1049  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1050  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1051  00D5  0835               	movf	full_step@steps+1,w
  1052  00D6  0229               	subwf	full_step@i+1,w
  1053  00D7  1D03               	skipz
  1054  00D8  28DB               	goto	u665
  1055  00D9  0834               	movf	full_step@steps,w
  1056  00DA  0228               	subwf	full_step@i,w
  1057  00DB                     u665:	
  1058  00DB  1803               	btfsc	3,0
  1059  00DC  0008               	return
  1060                           
  1061                           ;stepper.c: 13:     {;stepper.c: 14:         if ((i % 4) == 1){
  1062  00DD  3003               	movlw	3
  1063  00DE  0528               	andwf	full_step@i,w
  1064  00DF  00B6               	movwf	??_full_step
  1065  00E0  3000               	movlw	0
  1066  00E1  0529               	andwf	full_step@i+1,w
  1067  00E2  00B7               	movwf	??_full_step+1
  1068  00E3  0336               	decf	??_full_step,w
  1069  00E4  0437               	iorwf	??_full_step+1,w
  1070  00E5  1D03               	btfss	3,2
  1071  00E6  28F4               	goto	l1294
  1072                           
  1073                           ;stepper.c: 15:             PORTD = 3;
  1074  00E7  3003               	movlw	3
  1075  00E8  0088               	movwf	8	;volatile
  1076                           
  1077                           ;stepper.c: 16:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1078  00E9  301A               	movlw	26
  1079  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1080  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1081  00EC  00B7               	movwf	??_full_step+1
  1082  00ED  30F7               	movlw	247
  1083  00EE  00B6               	movwf	??_full_step
  1084  00EF                     u1007:	
  1085  00EF  0BB6               	decfsz	??_full_step,f
  1086  00F0  28EF               	goto	u1007
  1087  00F1  0BB7               	decfsz	??_full_step+1,f
  1088  00F2  28EF               	goto	u1007
  1089  00F3  28F4               	nop2
  1090  00F4                     l1294:	
  1091                           
  1092                           ;stepper.c: 18:         if ((i % 4) == 2){
  1093  00F4  3003               	movlw	3
  1094  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1095  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1096  00F7  0528               	andwf	full_step@i,w
  1097  00F8  00B6               	movwf	??_full_step
  1098  00F9  3000               	movlw	0
  1099  00FA  0529               	andwf	full_step@i+1,w
  1100  00FB  00B7               	movwf	??_full_step+1
  1101  00FC  3002               	movlw	2
  1102  00FD  0636               	xorwf	??_full_step,w
  1103  00FE  0437               	iorwf	??_full_step+1,w
  1104  00FF  1D03               	btfss	3,2
  1105  0100  290E               	goto	l1298
  1106                           
  1107                           ;stepper.c: 19:             PORTD = 6;
  1108  0101  3006               	movlw	6
  1109  0102  0088               	movwf	8	;volatile
  1110                           
  1111                           ;stepper.c: 20:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1112  0103  301A               	movlw	26
  1113  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0106  00B7               	movwf	??_full_step+1
  1116  0107  30F7               	movlw	247
  1117  0108  00B6               	movwf	??_full_step
  1118  0109                     u1017:	
  1119  0109  0BB6               	decfsz	??_full_step,f
  1120  010A  2909               	goto	u1017
  1121  010B  0BB7               	decfsz	??_full_step+1,f
  1122  010C  2909               	goto	u1017
  1123  010D  290E               	nop2
  1124  010E                     l1298:	
  1125                           
  1126                           ;stepper.c: 22:         if ((i % 4) == 3){
  1127  010E  3003               	movlw	3
  1128  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0111  0528               	andwf	full_step@i,w
  1131  0112  00B6               	movwf	??_full_step
  1132  0113  3000               	movlw	0
  1133  0114  0529               	andwf	full_step@i+1,w
  1134  0115  00B7               	movwf	??_full_step+1
  1135  0116  3003               	movlw	3
  1136  0117  0636               	xorwf	??_full_step,w
  1137  0118  0437               	iorwf	??_full_step+1,w
  1138  0119  1D03               	btfss	3,2
  1139  011A  2928               	goto	l1302
  1140                           
  1141                           ;stepper.c: 23:             PORTD = 12;
  1142  011B  300C               	movlw	12
  1143  011C  0088               	movwf	8	;volatile
  1144                           
  1145                           ;stepper.c: 24:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1146  011D  301A               	movlw	26
  1147  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1148  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0120  00B7               	movwf	??_full_step+1
  1150  0121  30F7               	movlw	247
  1151  0122  00B6               	movwf	??_full_step
  1152  0123                     u1027:	
  1153  0123  0BB6               	decfsz	??_full_step,f
  1154  0124  2923               	goto	u1027
  1155  0125  0BB7               	decfsz	??_full_step+1,f
  1156  0126  2923               	goto	u1027
  1157  0127  2928               	nop2
  1158  0128                     l1302:	
  1159                           
  1160                           ;stepper.c: 26:         if ((i % 4) == 0){
  1161  0128  3003               	movlw	3
  1162  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1163  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1164  012B  0528               	andwf	full_step@i,w
  1165  012C  00B6               	movwf	??_full_step
  1166  012D  3000               	movlw	0
  1167  012E  0529               	andwf	full_step@i+1,w
  1168  012F  00B7               	movwf	??_full_step+1
  1169  0130  0836               	movf	??_full_step,w
  1170  0131  0437               	iorwf	??_full_step+1,w
  1171  0132  1D03               	btfss	3,2
  1172  0133  2941               	goto	l209
  1173                           
  1174                           ;stepper.c: 27:             PORTD = 9;
  1175  0134  3009               	movlw	9
  1176  0135  0088               	movwf	8	;volatile
  1177                           
  1178                           ;stepper.c: 28:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1179  0136  301A               	movlw	26
  1180  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1181  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0139  00B7               	movwf	??_full_step+1
  1183  013A  30F7               	movlw	247
  1184  013B  00B6               	movwf	??_full_step
  1185  013C                     u1037:	
  1186  013C  0BB6               	decfsz	??_full_step,f
  1187  013D  293C               	goto	u1037
  1188  013E  0BB7               	decfsz	??_full_step+1,f
  1189  013F  293C               	goto	u1037
  1190  0140  2941               	nop2
  1191  0141                     l209:	
  1192                           ;stepper.c: 29:         }
  1193                           
  1194                           
  1195                           ;stepper.c: 30:         i++;
  1196  0141  3001               	movlw	1
  1197  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0144  07A8               	addwf	full_step@i,f
  1200  0145  1803               	skipnc
  1201  0146  0AA9               	incf	full_step@i+1,f
  1202  0147  3000               	movlw	0
  1203  0148  07A9               	addwf	full_step@i+1,f
  1204  0149  28D3               	goto	l1308
  1205  014A                     __end_of_full_step:	
  1206                           
  1207                           	psect	text4
  1208  014A                     __ptext4:	
  1209 ;; *************** function _full_rev *****************
  1210 ;; Defined at:
  1211 ;;		line 69 in file "stepper.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  steps           2    0[BANK0 ] unsigned int 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       2       0       0       0
  1226 ;;      Locals:         0       0       0       0       0
  1227 ;;      Temps:          0       2       0       0       0
  1228 ;;      Totals:         0       4       0       0       0
  1229 ;;Total ram usage:        4 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    2
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _full_rev
  1241  014A                     _full_rev:	
  1242                           
  1243                           ;stepper.c: 69: full_rev(uint16_t steps);stepper.c: 70:     {;stepper.c: 71:     static 
      +                          uint16_t i,a;;stepper.c: 72:     i=0;
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _full_rev: [wreg+status,2+status,0]
  1247  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1248  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1249  014C  01A4               	clrf	full_rev@i
  1250  014D  01A5               	clrf	full_rev@i+1
  1251  014E                     l1286:	
  1252                           ;stepper.c: 73:     while(i<steps)
  1253                           
  1254                           
  1255                           ;stepper.c: 73:     while(i<steps)
  1256  014E  0835               	movf	full_rev@steps+1,w
  1257  014F  0225               	subwf	full_rev@i+1,w
  1258  0150  1D03               	skipz
  1259  0151  2954               	goto	u615
  1260  0152  0834               	movf	full_rev@steps,w
  1261  0153  0224               	subwf	full_rev@i,w
  1262  0154                     u615:	
  1263  0154  1803               	btfsc	3,0
  1264  0155  0008               	return
  1265                           
  1266                           ;stepper.c: 74:     {;stepper.c: 75:         a = i%4;
  1267  0156  3003               	movlw	3
  1268  0157  0524               	andwf	full_rev@i,w
  1269  0158  00A2               	movwf	full_rev@a
  1270  0159  3000               	movlw	0
  1271  015A  0525               	andwf	full_rev@i+1,w
  1272  015B  00A3               	movwf	full_rev@a+1
  1273                           
  1274                           ;stepper.c: 76:         if ((a) == 1){
  1275  015C  0322               	decf	full_rev@a,w
  1276  015D  0423               	iorwf	full_rev@a+1,w
  1277  015E  1D03               	btfss	3,2
  1278  015F  296D               	goto	l1272
  1279                           
  1280                           ;stepper.c: 77:             PORTD = 9;
  1281  0160  3009               	movlw	9
  1282  0161  0088               	movwf	8	;volatile
  1283                           
  1284                           ;stepper.c: 78:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1285  0162  301A               	movlw	26
  1286  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0165  00B7               	movwf	??_full_rev+1
  1289  0166  30F7               	movlw	247
  1290  0167  00B6               	movwf	??_full_rev
  1291  0168                     u1047:	
  1292  0168  0BB6               	decfsz	??_full_rev,f
  1293  0169  2968               	goto	u1047
  1294  016A  0BB7               	decfsz	??_full_rev+1,f
  1295  016B  2968               	goto	u1047
  1296  016C  296D               	nop2
  1297  016D                     l1272:	
  1298                           
  1299                           ;stepper.c: 80:         if ((a) == 2){
  1300  016D  3002               	movlw	2
  1301  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1302  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0170  0622               	xorwf	full_rev@a,w
  1304  0171  0423               	iorwf	full_rev@a+1,w
  1305  0172  1D03               	btfss	3,2
  1306  0173  2981               	goto	l1276
  1307                           
  1308                           ;stepper.c: 81:             PORTD = 12;
  1309  0174  300C               	movlw	12
  1310  0175  0088               	movwf	8	;volatile
  1311                           
  1312                           ;stepper.c: 82:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1313  0176  301A               	movlw	26
  1314  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0179  00B7               	movwf	??_full_rev+1
  1317  017A  30F7               	movlw	247
  1318  017B  00B6               	movwf	??_full_rev
  1319  017C                     u1057:	
  1320  017C  0BB6               	decfsz	??_full_rev,f
  1321  017D  297C               	goto	u1057
  1322  017E  0BB7               	decfsz	??_full_rev+1,f
  1323  017F  297C               	goto	u1057
  1324  0180  2981               	nop2
  1325  0181                     l1276:	
  1326                           
  1327                           ;stepper.c: 84:         if ((a) == 3){
  1328  0181  3003               	movlw	3
  1329  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0184  0622               	xorwf	full_rev@a,w
  1332  0185  0423               	iorwf	full_rev@a+1,w
  1333  0186  1D03               	btfss	3,2
  1334  0187  2995               	goto	l1280
  1335                           
  1336                           ;stepper.c: 85:             PORTD = 6;
  1337  0188  3006               	movlw	6
  1338  0189  0088               	movwf	8	;volatile
  1339                           
  1340                           ;stepper.c: 86:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1341  018A  301A               	movlw	26
  1342  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1343  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1344  018D  00B7               	movwf	??_full_rev+1
  1345  018E  30F7               	movlw	247
  1346  018F  00B6               	movwf	??_full_rev
  1347  0190                     u1067:	
  1348  0190  0BB6               	decfsz	??_full_rev,f
  1349  0191  2990               	goto	u1067
  1350  0192  0BB7               	decfsz	??_full_rev+1,f
  1351  0193  2990               	goto	u1067
  1352  0194  2995               	nop2
  1353  0195                     l1280:	
  1354                           
  1355                           ;stepper.c: 88:         if ((a) == 0){
  1356  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0197  0822               	movf	full_rev@a,w
  1359  0198  0423               	iorwf	full_rev@a+1,w
  1360  0199  1D03               	btfss	3,2
  1361  019A  29A8               	goto	l239
  1362                           
  1363                           ;stepper.c: 89:             PORTD = 3;
  1364  019B  3003               	movlw	3
  1365  019C  0088               	movwf	8	;volatile
  1366                           
  1367                           ;stepper.c: 90:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1368  019D  301A               	movlw	26
  1369  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1370  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1371  01A0  00B7               	movwf	??_full_rev+1
  1372  01A1  30F7               	movlw	247
  1373  01A2  00B6               	movwf	??_full_rev
  1374  01A3                     u1077:	
  1375  01A3  0BB6               	decfsz	??_full_rev,f
  1376  01A4  29A3               	goto	u1077
  1377  01A5  0BB7               	decfsz	??_full_rev+1,f
  1378  01A6  29A3               	goto	u1077
  1379  01A7  29A8               	nop2
  1380  01A8                     l239:	
  1381                           ;stepper.c: 91:         }
  1382                           
  1383                           
  1384                           ;stepper.c: 92:         i++;
  1385  01A8  3001               	movlw	1
  1386  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1387  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1388  01AB  07A4               	addwf	full_rev@i,f
  1389  01AC  1803               	skipnc
  1390  01AD  0AA5               	incf	full_rev@i+1,f
  1391  01AE  3000               	movlw	0
  1392  01AF  07A5               	addwf	full_rev@i+1,f
  1393  01B0  294E               	goto	l1286
  1394  01B1                     __end_of_full_rev:	
  1395                           
  1396                           	psect	text5
  1397  025A                     __ptext5:	
  1398 ;; *************** function _I2C_Slave_Init *****************
  1399 ;; Defined at:
  1400 ;;		line 93 in file "./I2C.h"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  address         2    0[BANK0 ] short 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         0       2       0       0       0
  1415 ;;      Locals:         0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0
  1417 ;;      Totals:         0       2       0       0       0
  1418 ;;Total ram usage:        2 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    2
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _I2C_Slave_Init
  1430  025A                     _I2C_Slave_Init:	
  1431                           
  1432                           ;./I2C.h: 93: void I2C_Slave_Init(short address);./I2C.h: 94: {;./I2C.h: 95:     SSPADD 
      +                          = address;
  1433                           
  1434                           ;incstack = 0
  1435                           ; Regs used in _I2C_Slave_Init: [wreg]
  1436  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1437  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1438  025C  0834               	movf	I2C_Slave_Init@address,w
  1439  025D  1683               	bsf	3,5	;RP0=1, select bank1
  1440  025E  1303               	bcf	3,6	;RP1=0, select bank1
  1441  025F  0093               	movwf	19	;volatile
  1442                           
  1443                           ;./I2C.h: 96:     SSPCON = 0x36;
  1444  0260  3036               	movlw	54
  1445  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0263  0094               	movwf	20	;volatile
  1448                           
  1449                           ;./I2C.h: 97:     SSPSTAT = 0x80;
  1450  0264  3080               	movlw	128
  1451  0265  1683               	bsf	3,5	;RP0=1, select bank1
  1452  0266  1303               	bcf	3,6	;RP1=0, select bank1
  1453  0267  0094               	movwf	20	;volatile
  1454                           
  1455                           ;./I2C.h: 98:     SSPCON2 = 0x01;
  1456  0268  3001               	movlw	1
  1457  0269  0091               	movwf	17	;volatile
  1458                           
  1459                           ;./I2C.h: 99:     TRISC3 = 1;
  1460  026A  1587               	bsf	7,3	;volatile
  1461                           
  1462                           ;./I2C.h: 100:     TRISC4 = 1;
  1463  026B  1607               	bsf	7,4	;volatile
  1464                           
  1465                           ;./I2C.h: 101:     GIE = 1;
  1466  026C  178B               	bsf	11,7	;volatile
  1467                           
  1468                           ;./I2C.h: 102:     PEIE = 1;
  1469  026D  170B               	bsf	11,6	;volatile
  1470                           
  1471                           ;./I2C.h: 103:     SSPIF = 0;
  1472  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1473  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0270  118C               	bcf	12,3	;volatile
  1475                           
  1476                           ;./I2C.h: 104:     SSPIE = 1;
  1477  0271  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0272  1303               	bcf	3,6	;RP1=0, select bank1
  1479  0273  158C               	bsf	12,3	;volatile
  1480  0274  0008               	return
  1481  0275                     __end_of_I2C_Slave_Init:	
  1482                           
  1483                           	psect	text6
  1484  0021                     __ptext6:	
  1485 ;; *************** function _isr *****************
  1486 ;; Defined at:
  1487 ;;		line 33 in file "Esclavo3.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0, pclath, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1501 ;;      Params:         0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0
  1503 ;;      Temps:          5       0       0       0       0
  1504 ;;      Totals:         5       0       0       0       0
  1505 ;;Total ram usage:        5 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    1
  1508 ;; This function calls:
  1509 ;;		_dht11_begin
  1510 ;;		_dht11_check
  1511 ;;		_dht11_read
  1512 ;; This function is called by:
  1513 ;;		Interrupt level 1
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _isr
  1519  0021                     _isr:	
  1520                           
  1521                           ;Esclavo3.c: 35:     if (PIR1bits.SSPIF == 1) {
  1522  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0023  1D8C               	btfss	12,3	;volatile
  1525  0024  2878               	goto	i1l127
  1526                           
  1527                           ;Esclavo3.c: 37:         SSPCONbits.CKP = 0;
  1528  0025  1214               	bcf	20,4	;volatile
  1529                           
  1530                           ;Esclavo3.c: 39:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)) {
  1531  0026  1B14               	btfsc	20,6	;volatile
  1532  0027  282A               	goto	i1l1316
  1533  0028  1F94               	btfss	20,7	;volatile
  1534  0029  2831               	goto	i1l1324
  1535  002A                     i1l1316:	
  1536                           
  1537                           ;Esclavo3.c: 40:             z = SSPBUF;
  1538  002A  0813               	movf	19,w	;volatile
  1539  002B  00F9               	movwf	??_isr
  1540  002C  0879               	movf	??_isr,w
  1541  002D  00AC               	movwf	_z
  1542                           
  1543                           ;Esclavo3.c: 41:             SSPCONbits.SSPOV = 0;
  1544  002E  1314               	bcf	20,6	;volatile
  1545                           
  1546                           ;Esclavo3.c: 42:             SSPCONbits.WCOL = 0;
  1547  002F  1394               	bcf	20,7	;volatile
  1548                           
  1549                           ;Esclavo3.c: 43:             SSPCONbits.CKP = 1;
  1550  0030  1614               	bsf	20,4	;volatile
  1551  0031                     i1l1324:	
  1552                           
  1553                           ;Esclavo3.c: 46:         if (!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1554  0031  1683               	bsf	3,5	;RP0=1, select bank1
  1555  0032  1303               	bcf	3,6	;RP1=0, select bank1
  1556  0033  1E94               	btfss	20,5	;volatile
  1557  0034  1914               	btfsc	20,2	;volatile
  1558  0035  284D               	goto	i1l1336
  1559                           
  1560                           ;Esclavo3.c: 48:             z = SSPBUF;
  1561  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0038  0813               	movf	19,w	;volatile
  1564  0039  00F9               	movwf	??_isr
  1565  003A  0879               	movf	??_isr,w
  1566  003B  00AC               	movwf	_z
  1567                           
  1568                           ;Esclavo3.c: 50:             PIR1bits.SSPIF = 0;
  1569  003C  118C               	bcf	12,3	;volatile
  1570                           
  1571                           ;Esclavo3.c: 51:             SSPCONbits.CKP = 1;
  1572  003D  1614               	bsf	20,4	;volatile
  1573  003E                     i1l132:	
  1574                           ;Esclavo3.c: 52:             while (!SSPSTATbits.BF);
  1575                           
  1576  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1577  003F  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0040  1C14               	btfss	20,0	;volatile
  1579  0041  283E               	goto	i1l132
  1580                           
  1581                           ;Esclavo3.c: 53:             var = SSPBUF;
  1582  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0044  0813               	movf	19,w	;volatile
  1585  0045  00F9               	movwf	??_isr
  1586  0046  0879               	movf	??_isr,w
  1587  0047  00F6               	movwf	_var
  1588                           
  1589                           ;Esclavo3.c: 55:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1590  0048  30A6               	movlw	166
  1591  0049  00F9               	movwf	??_isr
  1592  004A                     u108_27:	
  1593  004A  0BF9               	decfsz	??_isr,f
  1594  004B  284A               	goto	u108_27
  1595  004C  0000               	nop
  1596  004D                     i1l1336:	
  1597                           
  1598                           ;Esclavo3.c: 59:         if (!SSPSTATbits.D_nA && SSPSTATbits.R_nW) {
  1599  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1600  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1601  004F  1E94               	btfss	20,5	;volatile
  1602  0050  1D14               	btfss	20,2	;volatile
  1603  0051  2875               	goto	i1l135
  1604                           
  1605                           ;Esclavo3.c: 60: PORTAbits.RA1 = 1;
  1606  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0054  1485               	bsf	5,1	;volatile
  1609                           
  1610                           ;Esclavo3.c: 61:             z = SSPBUF;
  1611  0055  0813               	movf	19,w	;volatile
  1612  0056  00F9               	movwf	??_isr
  1613  0057  0879               	movf	??_isr,w
  1614  0058  00AC               	movwf	_z
  1615                           
  1616                           ;Esclavo3.c: 62:             BF = 0;
  1617  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1618  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1619  005B  1014               	bcf	20,0	;volatile
  1620                           
  1621                           ;Esclavo3.c: 63:             if (var == 1) {
  1622  005C  0376               	decf	_var,w
  1623  005D  1D03               	btfss	3,2
  1624  005E  2863               	goto	i1l1350
  1625                           
  1626                           ;Esclavo3.c: 64:                 SSPBUF = hum_int;
  1627  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0061  0830               	movf	_hum_int,w
  1630  0062  0093               	movwf	19	;volatile
  1631  0063                     i1l1350:	
  1632                           
  1633                           ;Esclavo3.c: 67:             if (var == 2) {
  1634  0063  3002               	movlw	2
  1635  0064  0676               	xorwf	_var,w
  1636  0065  1D03               	btfss	3,2
  1637  0066  286A               	goto	i1l1354
  1638                           
  1639                           ;Esclavo3.c: 68:                 SSPBUF = temp_int;
  1640  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0068  0832               	movf	_temp_int,w
  1642  0069  0093               	movwf	19	;volatile
  1643  006A                     i1l1354:	
  1644                           
  1645                           ;Esclavo3.c: 72:             SSPCONbits.CKP = 1;
  1646  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1647  006B  1614               	bsf	20,4	;volatile
  1648                           
  1649                           ;Esclavo3.c: 73:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1650  006C  30A6               	movlw	166
  1651  006D  00F9               	movwf	??_isr
  1652  006E                     u109_27:	
  1653  006E  0BF9               	decfsz	??_isr,f
  1654  006F  286E               	goto	u109_27
  1655  0070  0000               	nop
  1656  0071                     i1l138:	
  1657                           ;Esclavo3.c: 74:             while (SSPSTATbits.BF);
  1658                           
  1659  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1660  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1661  0073  1814               	btfsc	20,0	;volatile
  1662  0074  2871               	goto	i1l138
  1663  0075                     i1l135:	
  1664                           ;Esclavo3.c: 76:         }
  1665                           
  1666                           
  1667                           ;Esclavo3.c: 78:         PIR1bits.SSPIF = 0;
  1668  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1669  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1670  0077  118C               	bcf	12,3	;volatile
  1671  0078                     i1l127:	
  1672                           ;Esclavo3.c: 80:     }
  1673                           
  1674                           
  1675                           ;Esclavo3.c: 81:     if (PIR1bits.TMR1IF) {
  1676  0078  1C0C               	btfss	12,0	;volatile
  1677  0079  28CC               	goto	i1l143
  1678                           
  1679                           ;Esclavo3.c: 82:         t1_count++;
  1680  007A  3001               	movlw	1
  1681  007B  00F9               	movwf	??_isr
  1682  007C  0879               	movf	??_isr,w
  1683  007D  07B3               	addwf	_t1_count,f
  1684                           
  1685                           ;Esclavo3.c: 83:         TMR1 = (0);
  1686  007E  018E               	clrf	14	;volatile
  1687  007F  018F               	clrf	15	;volatile
  1688                           
  1689                           ;Esclavo3.c: 85:         if (t1_count == 19) {
  1690  0080  3013               	movlw	19
  1691  0081  0633               	xorwf	_t1_count,w
  1692  0082  1D03               	btfss	3,2
  1693  0083  28CB               	goto	i1l1378
  1694                           
  1695                           ;Esclavo3.c: 87:            dht11_begin();
  1696  0084  120A  118A  2275  120A  118A  	fcall	_dht11_begin
  1697                           
  1698                           ;Esclavo3.c: 88:             dht11_check();
  1699  0089  120A  118A  22A3  120A  118A  	fcall	_dht11_check
  1700                           
  1701                           ;Esclavo3.c: 89:             hum_int = dht11_read();
  1702  008E  120A  118A  2216  120A  118A  	fcall	_dht11_read
  1703  0093  00F9               	movwf	??_isr
  1704  0094  0879               	movf	??_isr,w
  1705  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1706  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1707  0097  00B0               	movwf	_hum_int
  1708                           
  1709                           ;Esclavo3.c: 90:             hum_dec = dht11_read();
  1710  0098  120A  118A  2216  120A  118A  	fcall	_dht11_read
  1711  009D  00F9               	movwf	??_isr
  1712  009E  0879               	movf	??_isr,w
  1713  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1714  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1715  00A1  00AF               	movwf	_hum_dec
  1716                           
  1717                           ;Esclavo3.c: 91:             temp_int = dht11_read();
  1718  00A2  120A  118A  2216  120A  118A  	fcall	_dht11_read
  1719  00A7  00F9               	movwf	??_isr
  1720  00A8  0879               	movf	??_isr,w
  1721  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1722  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1723  00AB  00B2               	movwf	_temp_int
  1724                           
  1725                           ;Esclavo3.c: 92:             temp_dec = dht11_read();
  1726  00AC  120A  118A  2216  120A  118A  	fcall	_dht11_read
  1727  00B1  00F9               	movwf	??_isr
  1728  00B2  0879               	movf	??_isr,w
  1729  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1730  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1731  00B5  00B1               	movwf	_temp_dec
  1732                           
  1733                           ;Esclavo3.c: 93:             check = dht11_read();
  1734  00B6  120A  118A  2216  120A  118A  	fcall	_dht11_read
  1735  00BB  00F9               	movwf	??_isr
  1736  00BC  0879               	movf	??_isr,w
  1737  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1738  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1739  00BF  00AE               	movwf	_check
  1740                           
  1741                           ;Esclavo3.c: 94:             total = hum_int + hum_dec + temp_int + temp_dec;
  1742  00C0  082F               	movf	_hum_dec,w
  1743  00C1  0730               	addwf	_hum_int,w
  1744  00C2  00F9               	movwf	??_isr
  1745  00C3  0832               	movf	_temp_int,w
  1746  00C4  0779               	addwf	??_isr,w
  1747  00C5  00FA               	movwf	??_isr+1
  1748  00C6  0831               	movf	_temp_dec,w
  1749  00C7  077A               	addwf	??_isr+1,w
  1750  00C8  00FB               	movwf	??_isr+2
  1751  00C9  087B               	movf	??_isr+2,w
  1752  00CA  00AD               	movwf	_total
  1753  00CB                     i1l1378:	
  1754                           
  1755                           ;Esclavo3.c: 100:         PIR1bits.TMR1IF = 0;
  1756  00CB  100C               	bcf	12,0	;volatile
  1757  00CC                     i1l143:	
  1758  00CC  087D               	movf	??_isr+4,w
  1759  00CD  008A               	movwf	10
  1760  00CE  0E7C               	swapf	(??_isr+3)^(0+4294967168),w
  1761  00CF  0083               	movwf	3
  1762  00D0  0EFE               	swapf	126,f
  1763  00D1  0E7E               	swapf	126,w
  1764  00D2  0009               	retfie
  1765  00D3                     __end_of_isr:	
  1766                           
  1767                           	psect	intentry
  1768  0004                     __pintentry:	
  1769                           ;incstack = 0
  1770                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1771                           
  1772  0004                     interrupt_function:	
  1773  007E                     saved_w	set	btemp
  1774  0004  00FE               	movwf	btemp
  1775  0005  0E03               	swapf	3,w
  1776  0006  00FC               	movwf	??_isr+3
  1777  0007  080A               	movf	10,w
  1778  0008  00FD               	movwf	??_isr+4
  1779  0009  120A  118A  2821   	ljmp	_isr
  1780                           
  1781                           	psect	text7
  1782  0216                     __ptext7:	
  1783 ;; *************** function _dht11_read *****************
  1784 ;; Defined at:
  1785 ;;		line 30 in file "dht11_h.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      unsigned char 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0
  1801 ;;      Temps:          2       0       0       0       0
  1802 ;;      Totals:         2       0       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_isr
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _dht11_read
  1814  0216                     _dht11_read:	
  1815                           
  1816                           ;dht11_h.c: 32:     static uint8_t i = 0, temp = 0;;dht11_h.c: 33:     for(i = 0; i < 8 
      +                          ; i++)
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _dht11_read: [wreg+status,2+status,0]
  1820  0216  01F5               	clrf	dht11_read@i
  1821  0217                     i1l1224:	
  1822  0217  3008               	movlw	8
  1823  0218  0275               	subwf	dht11_read@i,w
  1824  0219  1803               	btfsc	3,0
  1825  021A  2A38               	goto	i1l1240
  1826  021B                     i1l187:	
  1827  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1828  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1829  021D  1C05               	btfss	5,0	;volatile
  1830  021E  2A1B               	goto	i1l187
  1831                           
  1832                           ;dht11_h.c: 36:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  1833  021F  3013               	movlw	19
  1834  0220  00F7               	movwf	??_dht11_read
  1835  0221                     u110_27:	
  1836  0221  0BF7               	decfsz	??_dht11_read,f
  1837  0222  2A21               	goto	u110_27
  1838  0223  2A24               	nop2
  1839                           
  1840                           ;dht11_h.c: 37:         if (PORTAbits.RA0)
  1841  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0226  1C05               	btfss	5,0	;volatile
  1844  0227  2A2B               	goto	i1l1234
  1845                           
  1846                           ;dht11_h.c: 38:         {;dht11_h.c: 39:             temp = ((temp<<1) | 1);
  1847  0228  1403               	setc
  1848  0229  0DF4               	rlf	dht11_read@temp,f
  1849                           
  1850                           ;dht11_h.c: 40:         }
  1851  022A  2A31               	goto	i1l192
  1852  022B                     i1l1234:	
  1853                           
  1854                           ;dht11_h.c: 42:           temp = (temp<<1);
  1855  022B  0874               	movf	dht11_read@temp,w
  1856  022C  00F7               	movwf	??_dht11_read
  1857  022D  0777               	addwf	??_dht11_read,w
  1858  022E  00F8               	movwf	??_dht11_read+1
  1859  022F  0878               	movf	??_dht11_read+1,w
  1860  0230  00F4               	movwf	dht11_read@temp
  1861  0231                     i1l192:	
  1862  0231  1805               	btfsc	5,0	;volatile
  1863  0232  2A31               	goto	i1l192
  1864                           
  1865                           ;dht11_h.c: 44:     }
  1866  0233  3001               	movlw	1
  1867  0234  00F7               	movwf	??_dht11_read
  1868  0235  0877               	movf	??_dht11_read,w
  1869  0236  07F5               	addwf	dht11_read@i,f
  1870  0237  2A17               	goto	i1l1224
  1871  0238                     i1l1240:	
  1872                           
  1873                           ;dht11_h.c: 45:     return temp;
  1874  0238  0874               	movf	dht11_read@temp,w
  1875  0239  0008               	return
  1876  023A                     __end_of_dht11_read:	
  1877                           
  1878                           	psect	text8
  1879  02A3                     __ptext8:	
  1880 ;; *************** function _dht11_check *****************
  1881 ;; Defined at:
  1882 ;;		line 23 in file "dht11_h.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		None
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0
  1899 ;;      Totals:         0       0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_isr
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _dht11_check
  1911  02A3                     _dht11_check:	
  1912  02A3                     i1l169:	
  1913                           ;dht11_h.c: 25:     while(PORTAbits.RA0);
  1914                           
  1915                           ;incstack = 0
  1916                           ; Regs used in _dht11_check: []
  1917                           
  1918  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1919  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1920  02A5  1805               	btfsc	5,0	;volatile
  1921  02A6  2AA3               	goto	i1l169
  1922  02A7                     i1l172:	
  1923  02A7  1C05               	btfss	5,0	;volatile
  1924  02A8  2AA7               	goto	i1l172
  1925  02A9                     i1l175:	
  1926  02A9  1C05               	btfss	5,0	;volatile
  1927  02AA  0008               	return
  1928  02AB  2AA9               	goto	i1l175
  1929  02AC                     __end_of_dht11_check:	
  1930                           
  1931                           	psect	text9
  1932  0275                     __ptext9:	
  1933 ;; *************** function _dht11_begin *****************
  1934 ;; Defined at:
  1935 ;;		line 12 in file "dht11_h.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0
  1951 ;;      Temps:          2       0       0       0       0
  1952 ;;      Totals:         2       0       0       0       0
  1953 ;;Total ram usage:        2 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_isr
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _dht11_begin
  1964  0275                     _dht11_begin:	
  1965                           
  1966                           ;dht11_h.c: 14:     TRISA0 = 0;
  1967                           
  1968                           ;incstack = 0
  1969                           ; Regs used in _dht11_begin: [wreg]
  1970  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0277  1005               	bcf	5,0	;volatile
  1973                           
  1974                           ;dht11_h.c: 15:     PORTAbits.RA0 = 0;
  1975  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1977  027A  1005               	bcf	5,0	;volatile
  1978                           
  1979                           ;dht11_h.c: 16:     _delay((unsigned long)((18)*(8000000/4000.0)));
  1980  027B  302F               	movlw	47
  1981  027C  00F8               	movwf	??_dht11_begin+1
  1982  027D  30BF               	movlw	191
  1983  027E  00F7               	movwf	??_dht11_begin
  1984  027F                     u111_27:	
  1985  027F  0BF7               	decfsz	??_dht11_begin,f
  1986  0280  2A7F               	goto	u111_27
  1987  0281  0BF8               	decfsz	??_dht11_begin+1,f
  1988  0282  2A7F               	goto	u111_27
  1989  0283  2A84               	nop2
  1990                           
  1991                           ;dht11_h.c: 17:     PORTAbits.RA0 = 1;
  1992  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0286  1405               	bsf	5,0	;volatile
  1995                           
  1996                           ;dht11_h.c: 18:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  1997  0287  300D               	movlw	13
  1998  0288  00F7               	movwf	??_dht11_begin
  1999  0289                     u112_27:	
  2000  0289  0BF7               	decfsz	??_dht11_begin,f
  2001  028A  2A89               	goto	u112_27
  2002                           
  2003                           ;dht11_h.c: 19:     TRISA0 = 1;
  2004  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2005  028C  1303               	bcf	3,6	;RP1=0, select bank1
  2006  028D  1405               	bsf	5,0	;volatile
  2007  028E  0008               	return
  2008  028F                     __end_of_dht11_begin:	
  2009  007E                     btemp	set	126	;btemp
  2010  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80      5      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_dht11_begin
    _isr->_dht11_read

Critical Paths under _main in BANK0

    _main->_full_rev
    _main->_full_step
    _main->_timer1_begin

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     503
                                              4 BANK0      1     1      0
                     _I2C_Slave_Init
                           _full_rev
                          _full_step
                    _oscilator_begin
                       _timer1_begin
 ---------------------------------------------------------------------------------
 (1) _timer1_begin                                         4     3      1     120
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _oscilator_begin                                      2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _full_step                                            4     2      2     120
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _full_rev                                             4     2      2     120
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              2 COMMON     5     5      0
                        _dht11_begin
                        _dht11_check
                         _dht11_read
 ---------------------------------------------------------------------------------
 (3) _dht11_read                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _dht11_check                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dht11_begin                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _full_rev
   _full_step
   _oscilator_begin
   _timer1_begin

 _isr (ROOT)
   _dht11_begin
   _dht11_check
   _dht11_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5      19       5       31.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 11:12:54 2019

                       _z 002C               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        fsr 0004      __size_of_dht11_begin 001A  
    __size_of_dht11_check 0009                       l209 0141                       l153 0214  
                     l239 01A8                       _GIE 005F                       _RE0 0048  
            __CFG_CPD$OFF 0000                       u615 0154                       u665 00DB  
                     _isr 0021                       _var 0076                       indf 0000  
            __CFG_LVP$OFF 0000                      l1302 0128                      l1308 00D3  
                    l1280 0195                      l1272 016D                      l1520 01FA  
                    l1530 020E                      l1276 0181                      l1516 01F9  
                    l1508 01E5                      l1286 014E                      l1294 00F4  
                    l1298 010E                      ?_isr 0077                      u1007 00EF  
                    u1017 0109                      u1027 0123                      u1037 013C  
                    u1047 0168                      u1057 017C                      u1067 0190  
                    u1077 01A3                      _PEIE 005E                      _RCEN 048B  
                    _TMR1 000E              __CFG_WRT$OFF 0000                      _main 01B1  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
 __end_of_oscilator_begin 02A3                     ??_isr 0079                     ?_main 0077  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l132 003E  
                   i1l143 00CC                     i1l135 0075                     i1l127 0078  
                   i1l138 0071                     i1l172 02A7                     i1l175 02A9  
                   i1l192 0231                     i1l169 02A3                     i1l187 021B  
                   _PORTD 0008                     _PORTE 0009                     _TRISD 0088  
                   _SSPIE 0463                     _TRISE 0089                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _check 002E                     _count 002A  
                   _state 002B                     _total 002D            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0216  
                  ??_main 0038                    u110_27 0221                    i1l1240 0238  
                  i1l1224 0217                    i1l1234 022B                    i1l1324 0031  
                  i1l1316 002A                    i1l1350 0063                    u111_27 027F  
                  i1l1336 004D                    i1l1354 006A                    u112_27 0289  
                  i1l1378 00CB                    u108_27 004A                    u109_27 006E  
                  _SSPADD 0093                    _TRISA0 0428                    _TRISA1 0429  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000          ?_oscilator_begin 0077  
          dht11_read@temp 0074          __end_of_full_rev 01B1                    saved_w 007E  
 __end_of__initialization 001D            __pcstackCOMMON 0077                _dht11_read 0216  
 __size_of_I2C_Slave_Init 001B     I2C_Slave_Init@address 0034                __pbssBANK0 0020  
      __size_of_full_step 0077                __pmaintext 01B1             ??_dht11_begin 0077  
           ??_dht11_check 0077                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                 ?_full_rev 0034               ?_dht11_read 0077  
           ?_timer1_begin 0034                   __ptext1 023A                   __ptext2 028F  
                 __ptext3 00D3                   __ptext4 014A                   __ptext5 025A  
                 __ptext6 0021                   __ptext7 0216                   __ptext8 02A3  
                 __ptext9 0275       __end_of_dht11_begin 028F       __end_of_dht11_check 02AC  
               _T1CONbits 0010              __size_of_isr 00B2                   _hum_dec 002F  
                 _hum_int 0030         __end_of_full_step 014A                   clrloop0 02AD  
    end_of_initialization 001D                ??_full_rev 0036            _I2C_Slave_Init 025A  
          ??_timer1_begin 0035                 _PORTAbits 0005       __size_of_dht11_read 0024  
   timer1_begin@prescaler 0034    __end_of_I2C_Slave_Init 0275               _dht11_begin 0275  
             _dht11_check 02A3  __size_of_oscilator_begin 0014       start_initialization 000F  
             __end_of_isr 00D3  __CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0034  
              full_step@i 0028               __pbssCOMMON 0070                 ___latbits 0002  
           __pcstackBANK0 0034      __end_of_timer1_begin 025A               dht11_read@i 0075  
       __size_of_full_rev 0067              ??_dht11_read 0077        timer1_begin@offset 0037  
       ??_oscilator_begin 0034                 _full_step 00D3        __end_of_dht11_read 023A  
       interrupt_function 0004                 clear_ram0 02AC                  _PIE1bits 008C  
                _PIR1bits 000C                wave_step@a 0072                wave_step@i 0026  
              ?_full_step 0034       oscilator_begin@freq 0035              ?_dht11_begin 0077  
            ?_dht11_check 0077                  _t1_count 0033                 full_rev@a 0022  
               full_rev@i 0024     __size_of_timer1_begin 0020         __CFG_BOR4V$BOR40V 0000  
        ??_I2C_Slave_Init 0036             __size_of_main 0065                  _full_rev 014A  
                _temp_dec 0031                  _temp_int 0032                 wave_rev@a 0070  
               wave_rev@i 0020              _timer1_begin 023A                _INTCONbits 000B  
             ??_full_step 0036                  intlevel1 0000                _OSCCONbits 008F  
          full_step@steps 0034             full_rev@steps 0034           _oscilator_begin 028F  
             _SSPCON2bits 0091                _SSPCONbits 0014  
