

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 24 13:32:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.05
    27                           ; Generated 20/12/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294                           
   295                           	psect	strings
   296  0003                     __pstrings:	
   297  0003                     stringtab:	
   298  0003                     __stringtab:	
   299                           
   300                           ;	String table - string pointers are 1 byte each
   301  0003  1BFF               	btfsc	btemp+1,7
   302  0004  280D               	ljmp	stringcode
   303  0005  1383               	bcf	3,7
   304  0006  187F               	btfsc	btemp+1,0
   305  0007  1783               	bsf	3,7
   306  0008  0800               	movf	0,w
   307  0009  0A84               	incf	4,f
   308  000A  1903               	skipnz
   309  000B  0AFF               	incf	btemp+1,f
   310  000C  0008               	return
   311  000D                     stringcode:	
   312  000D                     stringdir:	
   313  000D  3000               	movlw	high stringdir
   314  000E  008A               	movwf	10
   315  000F  0804               	movf	4,w
   316  0010  0A84               	incf	4,f
   317  0011  0782               	addwf	2,f
   318  0012                     __stringbase:	
   319  0012  3400               	retlw	0
   320  0013                     __end_of__stringtab:	
   321  0013                     _dpowers:	
   322  0013  3401               	retlw	1
   323  0014  3400               	retlw	0
   324  0015  340A               	retlw	10
   325  0016  3400               	retlw	0
   326  0017  3464               	retlw	100
   327  0018  3400               	retlw	0
   328  0019  34E8               	retlw	232
   329  001A  3403               	retlw	3
   330  001B  3410               	retlw	16
   331  001C  3427               	retlw	39
   332  001D                     __end_of_dpowers:	
   333  0005                     _PORTA	set	5
   334  0006                     _PORTB	set	6
   335  0028                     _RA0	set	40
   336  002A                     _RA2	set	42
   337  0029                     _RA1	set	41
   338  0086                     _TRISB	set	134
   339  008F                     _OSCCONbits	set	143
   340  0428                     _TRISA0	set	1064
   341  042B                     _TRISA3	set	1067
   342  042A                     _TRISA2	set	1066
   343  0429                     _TRISA1	set	1065
   344  0188                     _ANSEL	set	392
   345  001D                     STR_2:	
   346  001D  3445               	retlw	69	;'E'
   347  001E  3472               	retlw	114	;'r'
   348  001F  3472               	retlw	114	;'r'
   349  0020  346F               	retlw	111	;'o'
   350  0021  3472               	retlw	114	;'r'
   351  0022  342C               	retlw	44	;','
   352  0023  3420               	retlw	32	;' '
   353  0024  3472               	retlw	114	;'r'
   354  0025  3465               	retlw	101	;'e'
   355  0026  3476               	retlw	118	;'v'
   356  0027  3469               	retlw	105	;'i'
   357  0028  3473               	retlw	115	;'s'
   358  0029  3461               	retlw	97	;'a'
   359  002A  3472               	retlw	114	;'r'
   360  002B  3400               	retlw	0
   361  002C                     STR_3:	
   362  002C  3463               	retlw	99	;'c'
   363  002D  346F               	retlw	111	;'o'
   364  002E  346D               	retlw	109	;'m'
   365  002F  3475               	retlw	117	;'u'
   366  0030  346E               	retlw	110	;'n'
   367  0031  3469               	retlw	105	;'i'
   368  0032  3463               	retlw	99	;'c'
   369  0033  3461               	retlw	97	;'a'
   370  0034  3463               	retlw	99	;'c'
   371  0035  3469               	retlw	105	;'i'
   372  0036  346F               	retlw	111	;'o'
   373  0037  346E               	retlw	110	;'n'
   374  0038  3400               	retlw	0
   375  0039                     STR_4:	
   376  0039  3448               	retlw	72	;'H'
   377  003A  3475               	retlw	117	;'u'
   378  003B  346D               	retlw	109	;'m'
   379  003C  3465               	retlw	101	;'e'
   380  003D  3464               	retlw	100	;'d'
   381  003E  3461               	retlw	97	;'a'
   382  003F  3464               	retlw	100	;'d'
   383  0040  343A               	retlw	58	;':'
   384  0041  3420               	retlw	32	;' '
   385  0042  3425               	retlw	37	;'%'
   386  0043  3464               	retlw	100	;'d'
   387  0044  3400               	retlw	0
   388  0045                     STR_1:	
   389  0045  3446               	retlw	70	;'F'
   390  0046  3475               	retlw	117	;'u'
   391  0047  346E               	retlw	110	;'n'
   392  0048  3463               	retlw	99	;'c'
   393  0049  3469               	retlw	105	;'i'
   394  004A  346F               	retlw	111	;'o'
   395  004B  346E               	retlw	110	;'n'
   396  004C  3461               	retlw	97	;'a'
   397  004D  3400               	retlw	0
   398  004E                     STR_6:	
   399  004E  3454               	retlw	84	;'T'
   400  004F  3465               	retlw	101	;'e'
   401  0050  346D               	retlw	109	;'m'
   402  0051  3470               	retlw	112	;'p'
   403  0052  343A               	retlw	58	;':'
   404  0053  3420               	retlw	32	;' '
   405  0054  3425               	retlw	37	;'%'
   406  0055  3464               	retlw	100	;'d'
   407  0056  3400               	retlw	0
   408  0057                     STR_5:	
   409  0057  342E               	retlw	46	;'.'
   410  0058  3425               	retlw	37	;'%'
   411  0059  3464               	retlw	100	;'d'
   412  005A  3425               	retlw	37	;'%'
   413  005B  3400               	retlw	0
   414  005C                     STR_7:	
   415  005C  342E               	retlw	46	;'.'
   416  005D  3425               	retlw	37	;'%'
   417  005E  3464               	retlw	100	;'d'
   418  005F  3443               	retlw	67	;'C'
   419  0060  3400               	retlw	0
   420                           
   421                           ; #config settings
   422  0000                     
   423                           	psect	cinit
   424  07F5                     start_initialization:	
   425  07F5                     __initialization:	
   426                           
   427                           ; Clear objects allocated to BANK0
   428  07F5  1383               	bcf	3,7	;select IRP bank0
   429  07F6  3020               	movlw	low __pbssBANK0
   430  07F7  0084               	movwf	4
   431  07F8  3038               	movlw	low (__pbssBANK0+24)
   432  07F9  120A  118A  244C   	fcall	clear_ram0
   433  07FC                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  07FC                     __end_of__initialization:	
   437  07FC  0183               	clrf	3
   438  07FD  120A  118A  2EB0   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssBANK0
   441  0020                     __pbssBANK0:	
   442  0020                     dht11_read@temp:	
   443  0020                     	ds	1
   444  0021                     dht11_read@i:	
   445  0021                     	ds	1
   446  0022                     _counter:	
   447  0022                     	ds	1
   448  0023                     _total:	
   449  0023                     	ds	1
   450  0024                     _check:	
   451  0024                     	ds	1
   452  0025                     _hum_dec:	
   453  0025                     	ds	1
   454  0026                     _hum_int:	
   455  0026                     	ds	1
   456  0027                     _temp_dec:	
   457  0027                     	ds	1
   458  0028                     _temp_int:	
   459  0028                     	ds	1
   460  0029                     _show:	
   461  0029                     	ds	15
   462                           
   463                           	psect	clrtext
   464  044C                     clear_ram0:	
   465                           ;	Called with FSR containing the base address, and
   466                           ;	W with the last address+1
   467                           
   468  044C  0064               	clrwdt	;clear the watchdog before getting into this loop
   469  044D                     clrloop0:	
   470  044D  0180               	clrf	0	;clear RAM location pointed to by FSR
   471  044E  0A84               	incf	4,f	;increment pointer
   472  044F  0604               	xorwf	4,w	;XOR with final address
   473  0450  1903               	btfsc	3,2	;have we reached the end yet?
   474  0451  3400               	retlw	0	;all done for this memory range, return
   475  0452  0604               	xorwf	4,w	;XOR again to restore value
   476  0453  2C4D               	goto	clrloop0	;do the next byte
   477                           
   478                           	psect	cstackCOMMON
   479  0070                     __pcstackCOMMON:	
   480  0070                     ?_dht11_begin:	
   481  0070                     ??_dht11_begin:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_dht11_check:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ??_dht11_check:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_dht11_read:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ??_dht11_read:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_LCD8_write:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_LCD8_write:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_LCD8_cmd:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ??_LCD8_cmd:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_LCD8_clear:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_LCD8_begin:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_oscilator_begin:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ??_oscilator_begin:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_main:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?___lwdiv:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ___lwdiv@divisor:	
   527                           ; 2 bytes @ 0x0
   528                           
   529                           
   530                           ; 2 bytes @ 0x0
   531  0070                     	ds	1
   532  0071                     LCD8_write@data:	
   533  0071                     oscilator_begin@freq:	
   534                           ; 1 bytes @ 0x1
   535                           
   536                           
   537                           ; 1 bytes @ 0x1
   538  0071                     	ds	1
   539  0072                     ?_LCD8_strWrite:	
   540  0072                     LCD8_cmd@data:	
   541                           ; 1 bytes @ 0x2
   542                           
   543  0072                     LCD8_strWrite@data:	
   544                           ; 1 bytes @ 0x2
   545                           
   546  0072                     ___lwdiv@dividend:	
   547                           ; 2 bytes @ 0x2
   548                           
   549                           
   550                           ; 2 bytes @ 0x2
   551  0072                     	ds	1
   552  0073                     ?_LCD8_set_cursor:	
   553  0073                     ??_LCD8_clear:	
   554                           ; 1 bytes @ 0x3
   555                           
   556  0073                     ??_LCD8_begin:	
   557                           ; 1 bytes @ 0x3
   558                           
   559  0073                     LCD8_set_cursor@column:	
   560                           ; 1 bytes @ 0x3
   561                           
   562                           
   563                           ; 1 bytes @ 0x3
   564  0073                     	ds	1
   565  0074                     ??_LCD8_set_cursor:	
   566  0074                     ??_LCD8_strWrite:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0074                     ??___lwdiv:	
   570                           ; 1 bytes @ 0x4
   571                           
   572                           
   573                           ; 1 bytes @ 0x4
   574  0074                     	ds	1
   575  0075                     LCD8_set_cursor@cursor:	
   576  0075                     LCD8_strWrite@i:	
   577                           ; 1 bytes @ 0x5
   578                           
   579  0075                     ___lwdiv@quotient:	
   580                           ; 1 bytes @ 0x5
   581                           
   582                           
   583                           ; 2 bytes @ 0x5
   584  0075                     	ds	1
   585  0076                     LCD8_set_cursor@row:	
   586                           
   587                           ; 1 bytes @ 0x6
   588  0076                     	ds	1
   589  0077                     ___lwdiv@counter:	
   590                           
   591                           ; 1 bytes @ 0x7
   592  0077                     	ds	1
   593  0078                     ?___lwmod:	
   594  0078                     ___lwmod@divisor:	
   595                           ; 2 bytes @ 0x8
   596                           
   597                           
   598                           ; 2 bytes @ 0x8
   599  0078                     	ds	2
   600  007A                     ___lwmod@dividend:	
   601                           
   602                           ; 2 bytes @ 0xA
   603  007A                     	ds	2
   604  007C                     ??___lwmod:	
   605                           
   606                           ; 1 bytes @ 0xC
   607  007C                     	ds	1
   608  007D                     ___lwmod@counter:	
   609                           
   610                           ; 1 bytes @ 0xD
   611  007D                     	ds	1
   612                           
   613                           	psect	cstackBANK0
   614  0038                     __pcstackBANK0:	
   615  0038                     ?_sprintf:	
   616  0038                     sprintf@f:	
   617                           ; 2 bytes @ 0x0
   618                           
   619                           
   620                           ; 1 bytes @ 0x0
   621  0038                     	ds	3
   622  003B                     ??_sprintf:	
   623                           
   624                           ; 1 bytes @ 0x3
   625  003B                     	ds	3
   626  003E                     sprintf@ap:	
   627                           
   628                           ; 1 bytes @ 0x6
   629  003E                     	ds	1
   630  003F                     sprintf@flag:	
   631                           
   632                           ; 1 bytes @ 0x7
   633  003F                     	ds	1
   634  0040                     sprintf@prec:	
   635                           
   636                           ; 1 bytes @ 0x8
   637  0040                     	ds	1
   638  0041                     sprintf@val:	
   639                           
   640                           ; 2 bytes @ 0x9
   641  0041                     	ds	2
   642  0043                     sprintf@sp:	
   643                           
   644                           ; 1 bytes @ 0xB
   645  0043                     	ds	1
   646  0044                     sprintf@c:	
   647                           
   648                           ; 1 bytes @ 0xC
   649  0044                     	ds	1
   650  0045                     ??_main:	
   651                           
   652                           ; 1 bytes @ 0xD
   653  0045                     	ds	3
   654                           
   655                           	psect	maintext
   656  06B0                     __pmaintext:	
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 41 in file "humedad_main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : B00/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       3       0       0       0
   679 ;;      Totals:         0       3       0       0       0
   680 ;;Total ram usage:        3 bytes
   681 ;; Hardware stack levels required when called:    2
   682 ;; This function calls:
   683 ;;		_LCD8_begin
   684 ;;		_LCD8_clear
   685 ;;		_LCD8_set_cursor
   686 ;;		_LCD8_strWrite
   687 ;;		_dht11_begin
   688 ;;		_dht11_check
   689 ;;		_dht11_read
   690 ;;		_oscilator_begin
   691 ;;		_sprintf
   692 ;; This function is called by:
   693 ;;		Startup code after reset
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _main
   699  06B0                     _main:	
   700                           
   701                           ;humedad_main.c: 43:     ANSEL = 0;
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   705  06B0  1683               	bsf	3,5	;RP0=1, select bank3
   706  06B1  1703               	bsf	3,6	;RP1=1, select bank3
   707  06B2  0188               	clrf	8	;volatile
   708                           
   709                           ;humedad_main.c: 44:     TRISA1 = 0;
   710  06B3  1683               	bsf	3,5	;RP0=1, select bank1
   711  06B4  1303               	bcf	3,6	;RP1=0, select bank1
   712  06B5  1085               	bcf	5,1	;volatile
   713                           
   714                           ;humedad_main.c: 45:     TRISA2 = 0;
   715  06B6  1105               	bcf	5,2	;volatile
   716                           
   717                           ;humedad_main.c: 46:     TRISA3 = 0;
   718  06B7  1185               	bcf	5,3	;volatile
   719                           
   720                           ;humedad_main.c: 47:     PORTA = 0;
   721  06B8  1283               	bcf	3,5	;RP0=0, select bank0
   722  06B9  1303               	bcf	3,6	;RP1=0, select bank0
   723  06BA  0185               	clrf	5	;volatile
   724                           
   725                           ;humedad_main.c: 48:     PORTB = 0;
   726  06BB  0186               	clrf	6	;volatile
   727                           
   728                           ;humedad_main.c: 49:     TRISB = 0;
   729  06BC  1683               	bsf	3,5	;RP0=1, select bank1
   730  06BD  1303               	bcf	3,6	;RP1=0, select bank1
   731  06BE  0186               	clrf	6	;volatile
   732                           
   733                           ;humedad_main.c: 50:     oscilator_begin(7);
   734  06BF  3007               	movlw	7
   735  06C0  120A  118A  2468  120A  118A  	fcall	_oscilator_begin
   736                           
   737                           ;humedad_main.c: 51:     LCD8_begin();
   738  06C5  120A  118A  2584  120A  118A  	fcall	_LCD8_begin
   739                           
   740                           ;humedad_main.c: 52:     LCD8_clear();
   741  06CA  120A  118A  245D  120A  118A  	fcall	_LCD8_clear
   742                           
   743                           ;humedad_main.c: 53:     LCD8_set_cursor(1,1);
   744  06CF  01F3               	clrf	LCD8_set_cursor@column
   745  06D0  0AF3               	incf	LCD8_set_cursor@column,f
   746  06D1  3001               	movlw	1
   747  06D2  120A  118A  249A  120A  118A  	fcall	_LCD8_set_cursor
   748                           
   749                           ;humedad_main.c: 54:     LCD8_strWrite("Funciona");
   750  06D7  3033               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   751  06D8  00F2               	movwf	LCD8_strWrite@data
   752  06D9  3080               	movlw	128
   753  06DA  00F3               	movwf	LCD8_strWrite@data+1
   754  06DB  120A  118A  24EE  120A  118A  	fcall	_LCD8_strWrite
   755                           
   756                           ;humedad_main.c: 55:     _delay((unsigned long)((100)*(8000000/4000.0)));
   757  06E0  3002               	movlw	2
   758  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   759  06E2  1303               	bcf	3,6	;RP1=0, select bank0
   760  06E3  00C7               	movwf	??_main+2
   761  06E4  3004               	movlw	4
   762  06E5  00C6               	movwf	??_main+1
   763  06E6  30B9               	movlw	185
   764  06E7  00C5               	movwf	??_main
   765  06E8                     u637:	
   766  06E8  0BC5               	decfsz	??_main,f
   767  06E9  2EE8               	goto	u637
   768  06EA  0BC6               	decfsz	??_main+1,f
   769  06EB  2EE8               	goto	u637
   770  06EC  0BC7               	decfsz	??_main+2,f
   771  06ED  2EE8               	goto	u637
   772  06EE  2EEF               	nop2
   773  06EF                     l1273:	
   774                           
   775                           ;humedad_main.c: 57:     {;humedad_main.c: 58:        LCD8_clear();
   776  06EF  120A  118A  245D  120A  118A  	fcall	_LCD8_clear
   777                           
   778                           ;humedad_main.c: 59:        dht11_begin();
   779  06F4  120A  118A  24B1  120A  118A  	fcall	_dht11_begin
   780                           
   781                           ;humedad_main.c: 60:        dht11_check();
   782  06F9  120A  118A  2454  120A  118A  	fcall	_dht11_check
   783                           
   784                           ;humedad_main.c: 61:        hum_int = dht11_read();
   785  06FE  120A  118A  24CB  120A  118A  	fcall	_dht11_read
   786  0703  1283               	bcf	3,5	;RP0=0, select bank0
   787  0704  1303               	bcf	3,6	;RP1=0, select bank0
   788  0705  00C5               	movwf	??_main
   789  0706  0845               	movf	??_main,w
   790  0707  00A6               	movwf	_hum_int
   791                           
   792                           ;humedad_main.c: 62:        hum_dec = dht11_read();
   793  0708  120A  118A  24CB  120A  118A  	fcall	_dht11_read
   794  070D  1283               	bcf	3,5	;RP0=0, select bank0
   795  070E  1303               	bcf	3,6	;RP1=0, select bank0
   796  070F  00C5               	movwf	??_main
   797  0710  0845               	movf	??_main,w
   798  0711  00A5               	movwf	_hum_dec
   799                           
   800                           ;humedad_main.c: 63:        temp_int = dht11_read();
   801  0712  120A  118A  24CB  120A  118A  	fcall	_dht11_read
   802  0717  1283               	bcf	3,5	;RP0=0, select bank0
   803  0718  1303               	bcf	3,6	;RP1=0, select bank0
   804  0719  00C5               	movwf	??_main
   805  071A  0845               	movf	??_main,w
   806  071B  00A8               	movwf	_temp_int
   807                           
   808                           ;humedad_main.c: 64:        temp_dec = dht11_read();
   809  071C  120A  118A  24CB  120A  118A  	fcall	_dht11_read
   810  0721  1283               	bcf	3,5	;RP0=0, select bank0
   811  0722  1303               	bcf	3,6	;RP1=0, select bank0
   812  0723  00C5               	movwf	??_main
   813  0724  0845               	movf	??_main,w
   814  0725  00A7               	movwf	_temp_dec
   815                           
   816                           ;humedad_main.c: 65:        check = dht11_read();
   817  0726  120A  118A  24CB  120A  118A  	fcall	_dht11_read
   818  072B  1283               	bcf	3,5	;RP0=0, select bank0
   819  072C  1303               	bcf	3,6	;RP1=0, select bank0
   820  072D  00C5               	movwf	??_main
   821  072E  0845               	movf	??_main,w
   822  072F  00A4               	movwf	_check
   823                           
   824                           ;humedad_main.c: 66:        total = hum_int+hum_dec+temp_int+temp_dec;
   825  0730  0825               	movf	_hum_dec,w
   826  0731  0726               	addwf	_hum_int,w
   827  0732  00C5               	movwf	??_main
   828  0733  0828               	movf	_temp_int,w
   829  0734  0745               	addwf	??_main,w
   830  0735  00C6               	movwf	??_main+1
   831  0736  0827               	movf	_temp_dec,w
   832  0737  0746               	addwf	??_main+1,w
   833  0738  00C7               	movwf	??_main+2
   834  0739  0847               	movf	??_main+2,w
   835  073A  00A3               	movwf	_total
   836                           
   837                           ;humedad_main.c: 69:        if (check != total){
   838  073B  0824               	movf	_check,w
   839  073C  0623               	xorwf	_total,w
   840  073D  1903               	skipnz
   841  073E  2F66               	goto	l1299
   842                           
   843                           ;humedad_main.c: 70:            LCD8_clear();
   844  073F  120A  118A  245D  120A  118A  	fcall	_LCD8_clear
   845                           
   846                           ;humedad_main.c: 71:            LCD8_set_cursor(1,1);
   847  0744  01F3               	clrf	LCD8_set_cursor@column
   848  0745  0AF3               	incf	LCD8_set_cursor@column,f
   849  0746  3001               	movlw	1
   850  0747  120A  118A  249A  120A  118A  	fcall	_LCD8_set_cursor
   851                           
   852                           ;humedad_main.c: 72:            LCD8_strWrite("Error, revisar");
   853  074C  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   854  074D  00F2               	movwf	LCD8_strWrite@data
   855  074E  3080               	movlw	128
   856  074F  00F3               	movwf	LCD8_strWrite@data+1
   857  0750  120A  118A  24EE  120A  118A  	fcall	_LCD8_strWrite
   858                           
   859                           ;humedad_main.c: 73:            LCD8_set_cursor(2,1);
   860  0755  01F3               	clrf	LCD8_set_cursor@column
   861  0756  0AF3               	incf	LCD8_set_cursor@column,f
   862  0757  3002               	movlw	2
   863  0758  120A  118A  249A  120A  118A  	fcall	_LCD8_set_cursor
   864                           
   865                           ;humedad_main.c: 74:            LCD8_strWrite("comunicacion");
   866  075D  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   867  075E  00F2               	movwf	LCD8_strWrite@data
   868  075F  3080               	movlw	128
   869  0760  00F3               	movwf	LCD8_strWrite@data+1
   870  0761  120A  118A  24EE  120A  118A  	fcall	_LCD8_strWrite
   871  0766                     l1299:	
   872                           
   873                           ;humedad_main.c: 77:        LCD8_set_cursor(1,1);
   874  0766  01F3               	clrf	LCD8_set_cursor@column
   875  0767  0AF3               	incf	LCD8_set_cursor@column,f
   876  0768  3001               	movlw	1
   877  0769  120A  118A  249A  120A  118A  	fcall	_LCD8_set_cursor
   878                           
   879                           ;humedad_main.c: 78:        sprintf(show, "Humedad: %d",hum_int);
   880  076E  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   881  076F  1283               	bcf	3,5	;RP0=0, select bank0
   882  0770  1303               	bcf	3,6	;RP1=0, select bank0
   883  0771  00C5               	movwf	??_main
   884  0772  0845               	movf	??_main,w
   885  0773  00B8               	movwf	sprintf@f
   886  0774  0826               	movf	_hum_int,w
   887  0775  00C6               	movwf	??_main+1
   888  0776  01C7               	clrf	??_main+2
   889  0777  0846               	movf	??_main+1,w
   890  0778  00B9               	movwf	?_sprintf+1
   891  0779  0847               	movf	??_main+2,w
   892  077A  00BA               	movwf	?_sprintf+2
   893  077B  3029               	movlw	(low (_show| 0))& (0+255)
   894  077C  120A  118A  25D8  120A  118A  	fcall	_sprintf
   895                           
   896                           ;humedad_main.c: 79:        LCD8_strWrite(show);
   897  0781  3029               	movlw	(low (_show| 0))& (0+255)
   898  0782  00F2               	movwf	LCD8_strWrite@data
   899  0783  3000               	movlw	0
   900  0784  00F3               	movwf	LCD8_strWrite@data+1
   901  0785  120A  118A  24EE  120A  118A  	fcall	_LCD8_strWrite
   902                           
   903                           ;humedad_main.c: 80:        sprintf(show, ".%d%",hum_dec);
   904  078A  3045               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   905  078B  1283               	bcf	3,5	;RP0=0, select bank0
   906  078C  1303               	bcf	3,6	;RP1=0, select bank0
   907  078D  00C5               	movwf	??_main
   908  078E  0845               	movf	??_main,w
   909  078F  00B8               	movwf	sprintf@f
   910  0790  0825               	movf	_hum_dec,w
   911  0791  00C6               	movwf	??_main+1
   912  0792  01C7               	clrf	??_main+2
   913  0793  0846               	movf	??_main+1,w
   914  0794  00B9               	movwf	?_sprintf+1
   915  0795  0847               	movf	??_main+2,w
   916  0796  00BA               	movwf	?_sprintf+2
   917  0797  3029               	movlw	(low (_show| 0))& (0+255)
   918  0798  120A  118A  25D8  120A  118A  	fcall	_sprintf
   919                           
   920                           ;humedad_main.c: 81:        LCD8_strWrite(show);
   921  079D  3029               	movlw	(low (_show| 0))& (0+255)
   922  079E  00F2               	movwf	LCD8_strWrite@data
   923  079F  3000               	movlw	0
   924  07A0  00F3               	movwf	LCD8_strWrite@data+1
   925  07A1  120A  118A  24EE  120A  118A  	fcall	_LCD8_strWrite
   926                           
   927                           ;humedad_main.c: 83:        LCD8_set_cursor(2,1);
   928  07A6  01F3               	clrf	LCD8_set_cursor@column
   929  07A7  0AF3               	incf	LCD8_set_cursor@column,f
   930  07A8  3002               	movlw	2
   931  07A9  120A  118A  249A  120A  118A  	fcall	_LCD8_set_cursor
   932                           
   933                           ;humedad_main.c: 84:        sprintf(show, "Temp: %d",temp_int);
   934  07AE  303C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   935  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   936  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   937  07B1  00C5               	movwf	??_main
   938  07B2  0845               	movf	??_main,w
   939  07B3  00B8               	movwf	sprintf@f
   940  07B4  0828               	movf	_temp_int,w
   941  07B5  00C6               	movwf	??_main+1
   942  07B6  01C7               	clrf	??_main+2
   943  07B7  0846               	movf	??_main+1,w
   944  07B8  00B9               	movwf	?_sprintf+1
   945  07B9  0847               	movf	??_main+2,w
   946  07BA  00BA               	movwf	?_sprintf+2
   947  07BB  3029               	movlw	(low (_show| 0))& (0+255)
   948  07BC  120A  118A  25D8  120A  118A  	fcall	_sprintf
   949                           
   950                           ;humedad_main.c: 85:        LCD8_strWrite(show);
   951  07C1  3029               	movlw	(low (_show| 0))& (0+255)
   952  07C2  00F2               	movwf	LCD8_strWrite@data
   953  07C3  3000               	movlw	0
   954  07C4  00F3               	movwf	LCD8_strWrite@data+1
   955  07C5  120A  118A  24EE  120A  118A  	fcall	_LCD8_strWrite
   956                           
   957                           ;humedad_main.c: 86:        sprintf(show, ".%dC",temp_dec);
   958  07CA  304A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   959  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   960  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   961  07CD  00C5               	movwf	??_main
   962  07CE  0845               	movf	??_main,w
   963  07CF  00B8               	movwf	sprintf@f
   964  07D0  0827               	movf	_temp_dec,w
   965  07D1  00C6               	movwf	??_main+1
   966  07D2  01C7               	clrf	??_main+2
   967  07D3  0846               	movf	??_main+1,w
   968  07D4  00B9               	movwf	?_sprintf+1
   969  07D5  0847               	movf	??_main+2,w
   970  07D6  00BA               	movwf	?_sprintf+2
   971  07D7  3029               	movlw	(low (_show| 0))& (0+255)
   972  07D8  120A  118A  25D8  120A  118A  	fcall	_sprintf
   973                           
   974                           ;humedad_main.c: 87:        LCD8_strWrite(show);
   975  07DD  3029               	movlw	(low (_show| 0))& (0+255)
   976  07DE  00F2               	movwf	LCD8_strWrite@data
   977  07DF  3000               	movlw	0
   978  07E0  00F3               	movwf	LCD8_strWrite@data+1
   979  07E1  120A  118A  24EE  120A  118A  	fcall	_LCD8_strWrite
   980                           
   981                           ;humedad_main.c: 88:        _delay((unsigned long)((1500)*(8000000/4000.0)));
   982  07E6  3010               	movlw	16
   983  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   984  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   985  07E9  00C7               	movwf	??_main+2
   986  07EA  3039               	movlw	57
   987  07EB  00C6               	movwf	??_main+1
   988  07EC  300D               	movlw	13
   989  07ED  00C5               	movwf	??_main
   990  07EE                     u647:	
   991  07EE  0BC5               	decfsz	??_main,f
   992  07EF  2FEE               	goto	u647
   993  07F0  0BC6               	decfsz	??_main+1,f
   994  07F1  2FEE               	goto	u647
   995  07F2  0BC7               	decfsz	??_main+2,f
   996  07F3  2FEE               	goto	u647
   997  07F4  2EEF               	goto	l1273
   998  07F5                     __end_of_main:	
   999                           
  1000                           	psect	text1
  1001  05D8                     __ptext1:	
  1002 ;; *************** function _sprintf *****************
  1003 ;; Defined at:
  1004 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  sp              1    wreg     PTR unsigned char 
  1007 ;;		 -> show(15), 
  1008 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1009 ;;		 -> STR_7(5), STR_6(9), STR_5(5), STR_4(12), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1012 ;;		 -> show(15), 
  1013 ;;  tmpval          4    0        struct .
  1014 ;;  val             2    9[BANK0 ] unsigned int 
  1015 ;;  cp              2    0        PTR const unsigned char 
  1016 ;;  len             2    0        unsigned int 
  1017 ;;  c               1   12[BANK0 ] unsigned char 
  1018 ;;  prec            1    8[BANK0 ] char 
  1019 ;;  flag            1    7[BANK0 ] unsigned char 
  1020 ;;  ap              1    6[BANK0 ] PTR void [1]
  1021 ;;		 -> ?_sprintf(2), 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2    0[BANK0 ] int 
  1024 ;; Registers used:
  1025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1031 ;;      Params:         0       3       0       0       0
  1032 ;;      Locals:         0       7       0       0       0
  1033 ;;      Temps:          0       3       0       0       0
  1034 ;;      Totals:         0      13       0       0       0
  1035 ;;Total ram usage:       13 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    1
  1038 ;; This function calls:
  1039 ;;		___lwdiv
  1040 ;;		___lwmod
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           
  1047                           ;psect for function _sprintf
  1048  05D8                     _sprintf:	
  1049                           
  1050                           ;incstack = 0
  1051                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1052                           ;sprintf@sp stored from wreg
  1053  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1054  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1055  05DA  00C3               	movwf	sprintf@sp
  1056                           
  1057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1058  05DB  3039               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1059  05DC  00BB               	movwf	??_sprintf
  1060  05DD  083B               	movf	??_sprintf,w
  1061  05DE  00BE               	movwf	sprintf@ap
  1062  05DF                     l1239:	
  1063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1064                           
  1065                           
  1066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1067  05DF  3001               	movlw	1
  1068  05E0  07B8               	addwf	sprintf@f,f
  1069  05E1  30FF               	movlw	-1
  1070  05E2  0738               	addwf	sprintf@f,w
  1071  05E3  0084               	movwf	4
  1072  05E4  120A  118A  200D  120A  118A  	fcall	stringdir
  1073  05E9  00BB               	movwf	??_sprintf
  1074  05EA  083B               	movf	??_sprintf,w
  1075  05EB  00C4               	movwf	sprintf@c
  1076  05EC  0844               	movf	sprintf@c,w
  1077  05ED  1903               	btfsc	3,2
  1078  05EE  2EAB               	goto	l1241
  1079                           
  1080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1081  05EF  3025               	movlw	37
  1082  05F0  0644               	xorwf	sprintf@c,w
  1083  05F1  1903               	btfsc	3,2
  1084  05F2  2DFF               	goto	l1195
  1085                           
  1086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1087  05F3  0844               	movf	sprintf@c,w
  1088  05F4  00BB               	movwf	??_sprintf
  1089  05F5  0843               	movf	sprintf@sp,w
  1090  05F6  0084               	movwf	4
  1091  05F7  083B               	movf	??_sprintf,w
  1092  05F8  1383               	bcf	3,7	;select IRP bank0
  1093  05F9  0080               	movwf	0
  1094  05FA  3001               	movlw	1
  1095  05FB  00BB               	movwf	??_sprintf
  1096  05FC  083B               	movf	??_sprintf,w
  1097  05FD  07C3               	addwf	sprintf@sp,f
  1098                           
  1099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1100  05FE  2DDF               	goto	l1239
  1101  05FF                     l1195:	
  1102                           
  1103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1104  05FF  01BF               	clrf	sprintf@flag
  1105                           
  1106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1107  0600  3001               	movlw	1
  1108  0601  07B8               	addwf	sprintf@f,f
  1109  0602  30FF               	movlw	-1
  1110  0603  0738               	addwf	sprintf@f,w
  1111  0604  0084               	movwf	4
  1112  0605  120A  118A  200D  120A  118A  	fcall	stringdir
  1113  060A  00C4               	movwf	sprintf@c
  1114  060B  00BB               	movwf	??_sprintf
  1115  060C  01BC               	clrf	??_sprintf+1
  1116                           
  1117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1118                           ; Switch size 1, requested type "simple"
  1119                           ; Number of cases is 1, Range of values is 0 to 0
  1120                           ; switch strategies available:
  1121                           ; Name         Instructions Cycles
  1122                           ; simple_byte            4     3 (average)
  1123                           ; direct_byte           11     8 (fixed)
  1124                           ; jumptable            260     6 (fixed)
  1125                           ;	Chosen strategy is simple_byte
  1126  060D  083C               	movf	??_sprintf+1,w
  1127  060E  3A00               	xorlw	0	; case 0
  1128  060F  1903               	skipnz
  1129  0610  2E12               	goto	l1333
  1130  0611  2DDF               	goto	l1239
  1131  0612                     l1333:	
  1132                           
  1133                           ; Switch size 1, requested type "simple"
  1134                           ; Number of cases is 3, Range of values is 0 to 105
  1135                           ; switch strategies available:
  1136                           ; Name         Instructions Cycles
  1137                           ; simple_byte           10     6 (average)
  1138                           ; jumptable            260     6 (fixed)
  1139                           ;	Chosen strategy is simple_byte
  1140  0612  083B               	movf	??_sprintf,w
  1141  0613  3A00               	xorlw	0	; case 0
  1142  0614  1903               	skipnz
  1143  0615  2EAB               	goto	l1241
  1144  0616  3A64               	xorlw	100	; case 100
  1145  0617  1903               	skipnz
  1146  0618  2E1D               	goto	l1201
  1147  0619  3A0D               	xorlw	13	; case 105
  1148  061A  1903               	skipnz
  1149  061B  2E1D               	goto	l1201
  1150  061C  2DDF               	goto	l1239
  1151  061D                     l1201:	
  1152                           
  1153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1154  061D  083E               	movf	sprintf@ap,w
  1155  061E  0084               	movwf	4
  1156  061F  1383               	bcf	3,7	;select IRP bank0
  1157  0620  0800               	movf	0,w
  1158  0621  00C1               	movwf	sprintf@val
  1159  0622  0A84               	incf	4,f
  1160  0623  0800               	movf	0,w
  1161  0624  00C2               	movwf	sprintf@val+1
  1162  0625  3002               	movlw	2
  1163  0626  00BB               	movwf	??_sprintf
  1164  0627  083B               	movf	??_sprintf,w
  1165  0628  07BE               	addwf	sprintf@ap,f
  1166                           
  1167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1168  0629  1FC2               	btfss	sprintf@val+1,7
  1169  062A  2E34               	goto	l1211
  1170                           
  1171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1172  062B  3003               	movlw	3
  1173  062C  00BB               	movwf	??_sprintf
  1174  062D  083B               	movf	??_sprintf,w
  1175  062E  04BF               	iorwf	sprintf@flag,f
  1176                           
  1177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1178  062F  09C1               	comf	sprintf@val,f
  1179  0630  09C2               	comf	sprintf@val+1,f
  1180  0631  0AC1               	incf	sprintf@val,f
  1181  0632  1903               	skipnz
  1182  0633  0AC2               	incf	sprintf@val+1,f
  1183  0634                     l1211:	
  1184                           
  1185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1186  0634  01C4               	clrf	sprintf@c
  1187  0635  0AC4               	incf	sprintf@c,f
  1188  0636                     l1217:	
  1189                           
  1190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1191  0636  0844               	movf	sprintf@c,w
  1192  0637  00BB               	movwf	??_sprintf
  1193  0638  073B               	addwf	??_sprintf,w
  1194  0639  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1195  063A  0084               	movwf	4
  1196  063B  120A  118A  200D  120A  118A  	fcall	stringdir
  1197  0640  00BC               	movwf	??_sprintf+1
  1198  0641  120A  118A  200D  120A  118A  	fcall	stringdir
  1199  0646  00BD               	movwf	??_sprintf+2
  1200  0647  083D               	movf	??_sprintf+2,w
  1201  0648  0242               	subwf	sprintf@val+1,w
  1202  0649  1D03               	skipz
  1203  064A  2E4D               	goto	u575
  1204  064B  083C               	movf	??_sprintf+1,w
  1205  064C  0241               	subwf	sprintf@val,w
  1206  064D                     u575:	
  1207  064D  1C03               	btfss	3,0
  1208  064E  2E57               	goto	l1223
  1209  064F  3001               	movlw	1
  1210  0650  00BB               	movwf	??_sprintf
  1211  0651  083B               	movf	??_sprintf,w
  1212  0652  07C4               	addwf	sprintf@c,f
  1213  0653  3005               	movlw	5
  1214  0654  0644               	xorwf	sprintf@c,w
  1215  0655  1D03               	btfss	3,2
  1216  0656  2E36               	goto	l1217
  1217  0657                     l1223:	
  1218                           
  1219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1220  0657  083F               	movf	sprintf@flag,w
  1221  0658  3903               	andlw	3
  1222  0659  1903               	btfsc	3,2
  1223  065A  2E66               	goto	l1229
  1224                           
  1225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1226  065B  302D               	movlw	45
  1227  065C  00BB               	movwf	??_sprintf
  1228  065D  0843               	movf	sprintf@sp,w
  1229  065E  0084               	movwf	4
  1230  065F  083B               	movf	??_sprintf,w
  1231  0660  1383               	bcf	3,7	;select IRP bank0
  1232  0661  0080               	movwf	0
  1233  0662  3001               	movlw	1
  1234  0663  00BB               	movwf	??_sprintf
  1235  0664  083B               	movf	??_sprintf,w
  1236  0665  07C3               	addwf	sprintf@sp,f
  1237  0666                     l1229:	
  1238                           
  1239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1240  0666  0844               	movf	sprintf@c,w
  1241  0667  00BB               	movwf	??_sprintf
  1242  0668  083B               	movf	??_sprintf,w
  1243  0669  00C0               	movwf	sprintf@prec
  1244  066A                     l1237:	
  1245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1246                           
  1247                           
  1248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1249  066A  30FF               	movlw	255
  1250  066B  00BB               	movwf	??_sprintf
  1251  066C  083B               	movf	??_sprintf,w
  1252  066D  07C0               	addwf	sprintf@prec,f
  1253  066E  0A40               	incf	sprintf@prec,w
  1254  066F  1903               	btfsc	3,2
  1255  0670  2DDF               	goto	l1239
  1256                           
  1257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1258  0671  300A               	movlw	10
  1259  0672  00F8               	movwf	___lwmod@divisor
  1260  0673  3000               	movlw	0
  1261  0674  00F9               	movwf	___lwmod@divisor+1
  1262  0675  0840               	movf	sprintf@prec,w
  1263  0676  00BB               	movwf	??_sprintf
  1264  0677  073B               	addwf	??_sprintf,w
  1265  0678  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1266  0679  0084               	movwf	4
  1267  067A  120A  118A  200D  120A  118A  	fcall	stringdir
  1268  067F  00F0               	movwf	___lwdiv@divisor
  1269  0680  120A  118A  200D  120A  118A  	fcall	stringdir
  1270  0685  00F1               	movwf	___lwdiv@divisor+1
  1271  0686  0842               	movf	sprintf@val+1,w
  1272  0687  00F3               	movwf	___lwdiv@dividend+1
  1273  0688  0841               	movf	sprintf@val,w
  1274  0689  00F2               	movwf	___lwdiv@dividend
  1275  068A  120A  118A  2548  120A  118A  	fcall	___lwdiv
  1276  068F  0871               	movf	?___lwdiv+1,w
  1277  0690  00FB               	movwf	___lwmod@dividend+1
  1278  0691  0870               	movf	?___lwdiv,w
  1279  0692  00FA               	movwf	___lwmod@dividend
  1280  0693  120A  118A  2516  120A  118A  	fcall	___lwmod
  1281  0698  0878               	movf	?___lwmod,w
  1282  0699  3E30               	addlw	48
  1283  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1284  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1285  069C  00BC               	movwf	??_sprintf+1
  1286  069D  083C               	movf	??_sprintf+1,w
  1287  069E  00C4               	movwf	sprintf@c
  1288                           
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1290  069F  0844               	movf	sprintf@c,w
  1291  06A0  00BB               	movwf	??_sprintf
  1292  06A1  0843               	movf	sprintf@sp,w
  1293  06A2  0084               	movwf	4
  1294  06A3  083B               	movf	??_sprintf,w
  1295  06A4  1383               	bcf	3,7	;select IRP bank0
  1296  06A5  0080               	movwf	0
  1297  06A6  3001               	movlw	1
  1298  06A7  00BB               	movwf	??_sprintf
  1299  06A8  083B               	movf	??_sprintf,w
  1300  06A9  07C3               	addwf	sprintf@sp,f
  1301  06AA  2E6A               	goto	l1237
  1302  06AB                     l1241:	
  1303                           
  1304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1305  06AB  0843               	movf	sprintf@sp,w
  1306  06AC  0084               	movwf	4
  1307  06AD  1383               	bcf	3,7	;select IRP bank0
  1308  06AE  0180               	clrf	0
  1309  06AF  0008               	return
  1310  06B0                     __end_of_sprintf:	
  1311                           
  1312                           	psect	text2
  1313  0516                     __ptext2:	
  1314 ;; *************** function ___lwmod *****************
  1315 ;; Defined at:
  1316 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  divisor         2    8[COMMON] unsigned int 
  1319 ;;  dividend        2   10[COMMON] unsigned int 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  counter         1   13[COMMON] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2    8[COMMON] unsigned int 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         4       0       0       0       0
  1332 ;;      Locals:         1       0       0       0       0
  1333 ;;      Temps:          1       0       0       0       0
  1334 ;;      Totals:         6       0       0       0       0
  1335 ;;Total ram usage:        6 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_sprintf
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function ___lwmod
  1346  0516                     ___lwmod:	
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1350  0516  0878               	movf	___lwmod@divisor,w
  1351  0517  0479               	iorwf	___lwmod@divisor+1,w
  1352  0518  1903               	btfsc	3,2
  1353  0519  2D43               	goto	l1099
  1354  051A  01FD               	clrf	___lwmod@counter
  1355  051B  0AFD               	incf	___lwmod@counter,f
  1356  051C                     l1089:	
  1357  051C  1BF9               	btfsc	___lwmod@divisor+1,7
  1358  051D  2D2A               	goto	l1091
  1359  051E  3001               	movlw	1
  1360  051F                     u405:	
  1361  051F  1003               	clrc
  1362  0520  0DF8               	rlf	___lwmod@divisor,f
  1363  0521  0DF9               	rlf	___lwmod@divisor+1,f
  1364  0522  3EFF               	addlw	-1
  1365  0523  1D03               	skipz
  1366  0524  2D1F               	goto	u405
  1367  0525  3001               	movlw	1
  1368  0526  00FC               	movwf	??___lwmod
  1369  0527  087C               	movf	??___lwmod,w
  1370  0528  07FD               	addwf	___lwmod@counter,f
  1371  0529  2D1C               	goto	l1089
  1372  052A                     l1091:	
  1373  052A  0879               	movf	___lwmod@divisor+1,w
  1374  052B  027B               	subwf	___lwmod@dividend+1,w
  1375  052C  1D03               	skipz
  1376  052D  2D30               	goto	u425
  1377  052E  0878               	movf	___lwmod@divisor,w
  1378  052F  027A               	subwf	___lwmod@dividend,w
  1379  0530                     u425:	
  1380  0530  1C03               	skipc
  1381  0531  2D38               	goto	l1095
  1382  0532  0878               	movf	___lwmod@divisor,w
  1383  0533  02FA               	subwf	___lwmod@dividend,f
  1384  0534  0879               	movf	___lwmod@divisor+1,w
  1385  0535  1C03               	skipc
  1386  0536  03FB               	decf	___lwmod@dividend+1,f
  1387  0537  02FB               	subwf	___lwmod@dividend+1,f
  1388  0538                     l1095:	
  1389  0538  3001               	movlw	1
  1390  0539                     u435:	
  1391  0539  1003               	clrc
  1392  053A  0CF9               	rrf	___lwmod@divisor+1,f
  1393  053B  0CF8               	rrf	___lwmod@divisor,f
  1394  053C  3EFF               	addlw	-1
  1395  053D  1D03               	skipz
  1396  053E  2D39               	goto	u435
  1397  053F  3001               	movlw	1
  1398  0540  02FD               	subwf	___lwmod@counter,f
  1399  0541  1D03               	btfss	3,2
  1400  0542  2D2A               	goto	l1091
  1401  0543                     l1099:	
  1402  0543  087B               	movf	___lwmod@dividend+1,w
  1403  0544  00F9               	movwf	?___lwmod+1
  1404  0545  087A               	movf	___lwmod@dividend,w
  1405  0546  00F8               	movwf	?___lwmod
  1406  0547  0008               	return
  1407  0548                     __end_of___lwmod:	
  1408                           
  1409                           	psect	text3
  1410  0548                     __ptext3:	
  1411 ;; *************** function ___lwdiv *****************
  1412 ;; Defined at:
  1413 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  divisor         2    0[COMMON] unsigned int 
  1416 ;;  dividend        2    2[COMMON] unsigned int 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  quotient        2    5[COMMON] unsigned int 
  1419 ;;  counter         1    7[COMMON] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  2    0[COMMON] unsigned int 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         4       0       0       0       0
  1430 ;;      Locals:         3       0       0       0       0
  1431 ;;      Temps:          1       0       0       0       0
  1432 ;;      Totals:         8       0       0       0       0
  1433 ;;Total ram usage:        8 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_sprintf
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function ___lwdiv
  1444  0548                     ___lwdiv:	
  1445                           
  1446                           ;incstack = 0
  1447                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1448  0548  01F5               	clrf	___lwdiv@quotient
  1449  0549  01F6               	clrf	___lwdiv@quotient+1
  1450  054A  0870               	movf	___lwdiv@divisor,w
  1451  054B  0471               	iorwf	___lwdiv@divisor+1,w
  1452  054C  1903               	btfsc	3,2
  1453  054D  2D7F               	goto	l1077
  1454  054E  01F7               	clrf	___lwdiv@counter
  1455  054F  0AF7               	incf	___lwdiv@counter,f
  1456  0550                     l1065:	
  1457  0550  1BF1               	btfsc	___lwdiv@divisor+1,7
  1458  0551  2D5E               	goto	l1067
  1459  0552  3001               	movlw	1
  1460  0553                     u335:	
  1461  0553  1003               	clrc
  1462  0554  0DF0               	rlf	___lwdiv@divisor,f
  1463  0555  0DF1               	rlf	___lwdiv@divisor+1,f
  1464  0556  3EFF               	addlw	-1
  1465  0557  1D03               	skipz
  1466  0558  2D53               	goto	u335
  1467  0559  3001               	movlw	1
  1468  055A  00F4               	movwf	??___lwdiv
  1469  055B  0874               	movf	??___lwdiv,w
  1470  055C  07F7               	addwf	___lwdiv@counter,f
  1471  055D  2D50               	goto	l1065
  1472  055E                     l1067:	
  1473  055E  3001               	movlw	1
  1474  055F                     u355:	
  1475  055F  1003               	clrc
  1476  0560  0DF5               	rlf	___lwdiv@quotient,f
  1477  0561  0DF6               	rlf	___lwdiv@quotient+1,f
  1478  0562  3EFF               	addlw	-1
  1479  0563  1D03               	skipz
  1480  0564  2D5F               	goto	u355
  1481  0565  0871               	movf	___lwdiv@divisor+1,w
  1482  0566  0273               	subwf	___lwdiv@dividend+1,w
  1483  0567  1D03               	skipz
  1484  0568  2D6B               	goto	u365
  1485  0569  0870               	movf	___lwdiv@divisor,w
  1486  056A  0272               	subwf	___lwdiv@dividend,w
  1487  056B                     u365:	
  1488  056B  1C03               	skipc
  1489  056C  2D74               	goto	l1073
  1490  056D  0870               	movf	___lwdiv@divisor,w
  1491  056E  02F2               	subwf	___lwdiv@dividend,f
  1492  056F  0871               	movf	___lwdiv@divisor+1,w
  1493  0570  1C03               	skipc
  1494  0571  03F3               	decf	___lwdiv@dividend+1,f
  1495  0572  02F3               	subwf	___lwdiv@dividend+1,f
  1496  0573  1475               	bsf	___lwdiv@quotient,0
  1497  0574                     l1073:	
  1498  0574  3001               	movlw	1
  1499  0575                     u375:	
  1500  0575  1003               	clrc
  1501  0576  0CF1               	rrf	___lwdiv@divisor+1,f
  1502  0577  0CF0               	rrf	___lwdiv@divisor,f
  1503  0578  3EFF               	addlw	-1
  1504  0579  1D03               	skipz
  1505  057A  2D75               	goto	u375
  1506  057B  3001               	movlw	1
  1507  057C  02F7               	subwf	___lwdiv@counter,f
  1508  057D  1D03               	btfss	3,2
  1509  057E  2D5E               	goto	l1067
  1510  057F                     l1077:	
  1511  057F  0876               	movf	___lwdiv@quotient+1,w
  1512  0580  00F1               	movwf	?___lwdiv+1
  1513  0581  0875               	movf	___lwdiv@quotient,w
  1514  0582  00F0               	movwf	?___lwdiv
  1515  0583  0008               	return
  1516  0584                     __end_of___lwdiv:	
  1517                           
  1518                           	psect	text4
  1519  0468                     __ptext4:	
  1520 ;; *************** function _oscilator_begin *****************
  1521 ;; Defined at:
  1522 ;;		line 9 in file "./Oscilator.h"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  freq            1    wreg     unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  freq            1    1[COMMON] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1536 ;;      Params:         0       0       0       0       0
  1537 ;;      Locals:         1       0       0       0       0
  1538 ;;      Temps:          1       0       0       0       0
  1539 ;;      Totals:         2       0       0       0       0
  1540 ;;Total ram usage:        2 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           
  1550                           ;psect for function _oscilator_begin
  1551  0468                     _oscilator_begin:	
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
  1555                           ;oscilator_begin@freq stored from wreg
  1556  0468  00F1               	movwf	oscilator_begin@freq
  1557                           
  1558                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
  1559  0469  0871               	movf	oscilator_begin@freq,w
  1560  046A  00F0               	movwf	??_oscilator_begin
  1561  046B  0EF0               	swapf	??_oscilator_begin,f
  1562  046C  1683               	bsf	3,5	;RP0=1, select bank1
  1563  046D  1303               	bcf	3,6	;RP1=0, select bank1
  1564  046E  080F               	movf	15,w	;volatile
  1565  046F  0670               	xorwf	??_oscilator_begin,w
  1566  0470  398F               	andlw	-113
  1567  0471  0670               	xorwf	??_oscilator_begin,w
  1568  0472  008F               	movwf	15	;volatile
  1569                           
  1570                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
  1571  0473  140F               	bsf	15,0	;volatile
  1572                           
  1573                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
  1574  0474  118F               	bcf	15,3	;volatile
  1575  0475  0008               	return
  1576  0476                     __end_of_oscilator_begin:	
  1577                           
  1578                           	psect	text5
  1579  04CB                     __ptext5:	
  1580 ;; *************** function _dht11_read *****************
  1581 ;; Defined at:
  1582 ;;		line 31 in file "dht11_h.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      unsigned char 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          2       0       0       0       0
  1599 ;;      Totals:         2       0       0       0       0
  1600 ;;Total ram usage:        2 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _dht11_read
  1611  04CB                     _dht11_read:	
  1612                           
  1613                           ;dht11_h.c: 33:     static uint8_t i = 0, temp;;dht11_h.c: 34:     for(i = 0; i < 8 ; i+
      +                          +)
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _dht11_read: [wreg+status,2+status,0]
  1617  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1618  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1619  04CD  01A1               	clrf	dht11_read@i
  1620  04CE                     l117:	
  1621  04CE  1C05               	btfss	5,0	;volatile
  1622  04CF  2CCE               	goto	l117
  1623                           
  1624                           ;dht11_h.c: 37:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  1625  04D0  3013               	movlw	19
  1626  04D1  00F0               	movwf	??_dht11_read
  1627  04D2                     u657:	
  1628  04D2  0BF0               	decfsz	??_dht11_read,f
  1629  04D3  2CD2               	goto	u657
  1630  04D4  2CD5               	nop2
  1631                           
  1632                           ;dht11_h.c: 38:         if (RA0)
  1633  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1634  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1635  04D7  1C05               	btfss	5,0	;volatile
  1636  04D8  2CDC               	goto	l1177
  1637                           
  1638                           ;dht11_h.c: 39:         {;dht11_h.c: 40:             temp = ((temp<<1) | 1);
  1639  04D9  1403               	setc
  1640  04DA  0DA0               	rlf	dht11_read@temp,f
  1641                           
  1642                           ;dht11_h.c: 41:         }
  1643  04DB  2CE2               	goto	l122
  1644  04DC                     l1177:	
  1645                           
  1646                           ;dht11_h.c: 43:           temp = (temp<<1);
  1647  04DC  0820               	movf	dht11_read@temp,w
  1648  04DD  00F0               	movwf	??_dht11_read
  1649  04DE  0770               	addwf	??_dht11_read,w
  1650  04DF  00F1               	movwf	??_dht11_read+1
  1651  04E0  0871               	movf	??_dht11_read+1,w
  1652  04E1  00A0               	movwf	dht11_read@temp
  1653  04E2                     l122:	
  1654  04E2  1805               	btfsc	5,0	;volatile
  1655  04E3  2CE2               	goto	l122
  1656                           
  1657                           ;dht11_h.c: 45:     }
  1658  04E4  3001               	movlw	1
  1659  04E5  00F0               	movwf	??_dht11_read
  1660  04E6  0870               	movf	??_dht11_read,w
  1661  04E7  07A1               	addwf	dht11_read@i,f
  1662  04E8  3008               	movlw	8
  1663  04E9  0221               	subwf	dht11_read@i,w
  1664  04EA  1C03               	skipc
  1665  04EB  2CCE               	goto	l117
  1666                           
  1667                           ;dht11_h.c: 46:     return temp;
  1668  04EC  0820               	movf	dht11_read@temp,w
  1669  04ED  0008               	return
  1670  04EE                     __end_of_dht11_read:	
  1671                           
  1672                           	psect	text6
  1673  0454                     __ptext6:	
  1674 ;; *************** function _dht11_check *****************
  1675 ;; Defined at:
  1676 ;;		line 24 in file "dht11_h.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		None
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0
  1693 ;;      Totals:         0       0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _dht11_check
  1705  0454                     _dht11_check:	
  1706  0454                     l99:	
  1707                           ;dht11_h.c: 26:     while(RA0);
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _dht11_check: []
  1711                           
  1712  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0456  1805               	btfsc	5,0	;volatile
  1715  0457  2C54               	goto	l99
  1716  0458                     l102:	
  1717  0458  1C05               	btfss	5,0	;volatile
  1718  0459  2C58               	goto	l102
  1719  045A                     l105:	
  1720  045A  1C05               	btfss	5,0	;volatile
  1721  045B  0008               	return
  1722  045C  2C5A               	goto	l105
  1723  045D                     __end_of_dht11_check:	
  1724                           
  1725                           	psect	text7
  1726  04B1                     __ptext7:	
  1727 ;; *************** function _dht11_begin *****************
  1728 ;; Defined at:
  1729 ;;		line 13 in file "dht11_h.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0
  1745 ;;      Temps:          2       0       0       0       0
  1746 ;;      Totals:         2       0       0       0       0
  1747 ;;Total ram usage:        2 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _dht11_begin
  1758  04B1                     _dht11_begin:	
  1759                           
  1760                           ;dht11_h.c: 15:     TRISA0 = 0;
  1761                           
  1762                           ;incstack = 0
  1763                           ; Regs used in _dht11_begin: [wreg]
  1764  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  1765  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  1766  04B3  1005               	bcf	5,0	;volatile
  1767                           
  1768                           ;dht11_h.c: 16:     RA0 = 0;
  1769  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1770  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1771  04B6  1005               	bcf	5,0	;volatile
  1772                           
  1773                           ;dht11_h.c: 17:     _delay((unsigned long)((18)*(8000000/4000.0)));
  1774  04B7  302F               	movlw	47
  1775  04B8  00F1               	movwf	??_dht11_begin+1
  1776  04B9  30BF               	movlw	191
  1777  04BA  00F0               	movwf	??_dht11_begin
  1778  04BB                     u667:	
  1779  04BB  0BF0               	decfsz	??_dht11_begin,f
  1780  04BC  2CBB               	goto	u667
  1781  04BD  0BF1               	decfsz	??_dht11_begin+1,f
  1782  04BE  2CBB               	goto	u667
  1783  04BF  2CC0               	nop2
  1784                           
  1785                           ;dht11_h.c: 18:     RA0 = 1;
  1786  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1787  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1788  04C2  1405               	bsf	5,0	;volatile
  1789                           
  1790                           ;dht11_h.c: 19:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  1791  04C3  300D               	movlw	13
  1792  04C4  00F0               	movwf	??_dht11_begin
  1793  04C5                     u677:	
  1794  04C5  0BF0               	decfsz	??_dht11_begin,f
  1795  04C6  2CC5               	goto	u677
  1796                           
  1797                           ;dht11_h.c: 20:     TRISA0 = 1;
  1798  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  1799  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  1800  04C9  1405               	bsf	5,0	;volatile
  1801  04CA  0008               	return
  1802  04CB                     __end_of_dht11_begin:	
  1803                           
  1804                           	psect	text8
  1805  04EE                     __ptext8:	
  1806 ;; *************** function _LCD8_strWrite *****************
  1807 ;; Defined at:
  1808 ;;		line 55 in file "./LCD8bit.h"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  data            2    2[COMMON] PTR unsigned char 
  1811 ;;		 -> show(15), STR_3(13), STR_2(15), STR_1(9), 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  i               1    5[COMMON] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         2       0       0       0       0
  1824 ;;      Locals:         1       0       0       0       0
  1825 ;;      Temps:          1       0       0       0       0
  1826 ;;      Totals:         4       0       0       0       0
  1827 ;;Total ram usage:        4 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    1
  1830 ;; This function calls:
  1831 ;;		_LCD8_write
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _LCD8_strWrite
  1839  04EE                     _LCD8_strWrite:	
  1840                           
  1841                           ;./LCD8bit.h: 56:     char i;;./LCD8bit.h: 57:         for(i=0; data[i] !='\0';i++ )
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _LCD8_strWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1845  04EE  01F5               	clrf	LCD8_strWrite@i
  1846  04EF                     l1147:	
  1847  04EF  0875               	movf	LCD8_strWrite@i,w
  1848  04F0  0772               	addwf	LCD8_strWrite@data,w
  1849  04F1  0084               	movwf	4
  1850  04F2  0873               	movf	LCD8_strWrite@data+1,w
  1851  04F3  1803               	skipnc
  1852  04F4  0A73               	incf	LCD8_strWrite@data+1,w
  1853  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1854  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1855  04F7  00FF               	movwf	127
  1856  04F8  120A  118A  2003  120A  118A  	fcall	stringtab
  1857  04FD  3A00               	xorlw	0
  1858  04FE  1903               	btfsc	3,2
  1859  04FF  0008               	return
  1860                           
  1861                           ;./LCD8bit.h: 58:             LCD8_write(data[i]);
  1862  0500  0875               	movf	LCD8_strWrite@i,w
  1863  0501  0772               	addwf	LCD8_strWrite@data,w
  1864  0502  0084               	movwf	4
  1865  0503  0873               	movf	LCD8_strWrite@data+1,w
  1866  0504  1803               	skipnc
  1867  0505  0A73               	incf	LCD8_strWrite@data+1,w
  1868  0506  00FF               	movwf	127
  1869  0507  120A  118A  2003  120A  118A  	fcall	stringtab
  1870  050C  120A  118A  2476  120A  118A  	fcall	_LCD8_write
  1871  0511  3001               	movlw	1
  1872  0512  00F4               	movwf	??_LCD8_strWrite
  1873  0513  0874               	movf	??_LCD8_strWrite,w
  1874  0514  07F5               	addwf	LCD8_strWrite@i,f
  1875  0515  2CEF               	goto	l1147
  1876  0516                     __end_of_LCD8_strWrite:	
  1877                           
  1878                           	psect	text9
  1879  0476                     __ptext9:	
  1880 ;; *************** function _LCD8_write *****************
  1881 ;; Defined at:
  1882 ;;		line 4 in file "./LCD8bit.h"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  data            1    wreg     unsigned char 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  data            1    1[COMMON] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       0       0       0
  1897 ;;      Locals:         1       0       0       0       0
  1898 ;;      Temps:          1       0       0       0       0
  1899 ;;      Totals:         2       0       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_LCD8_strWrite
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _LCD8_write
  1911  0476                     _LCD8_write:	
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _LCD8_write: [wreg]
  1915                           ;LCD8_write@data stored from wreg
  1916  0476  00F1               	movwf	LCD8_write@data
  1917                           
  1918                           ;./LCD8bit.h: 5:     RA1 = 1;
  1919  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1920  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1921  0479  1485               	bsf	5,1	;volatile
  1922                           
  1923                           ;./LCD8bit.h: 6:     PORTB = data;
  1924  047A  0871               	movf	LCD8_write@data,w
  1925  047B  0086               	movwf	6	;volatile
  1926                           
  1927                           ;./LCD8bit.h: 7:     RA2 = 1;
  1928  047C  1505               	bsf	5,2	;volatile
  1929                           
  1930                           ;./LCD8bit.h: 8:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1931  047D  301A               	movlw	26
  1932  047E  00F0               	movwf	??_LCD8_write
  1933  047F                     u687:	
  1934  047F  0BF0               	decfsz	??_LCD8_write,f
  1935  0480  2C7F               	goto	u687
  1936  0481  0000               	nop
  1937                           
  1938                           ;./LCD8bit.h: 9:     RA2 = 0;
  1939  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0484  1105               	bcf	5,2	;volatile
  1942  0485  0008               	return
  1943  0486                     __end_of_LCD8_write:	
  1944                           
  1945                           	psect	text10
  1946  049A                     __ptext10:	
  1947 ;; *************** function _LCD8_set_cursor *****************
  1948 ;; Defined at:
  1949 ;;		line 21 in file "./LCD8bit.h"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  row             1    wreg     unsigned char 
  1952 ;;  column          1    3[COMMON] unsigned char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  row             1    6[COMMON] unsigned char 
  1955 ;;  cursor          1    5[COMMON] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         1       0       0       0       0
  1966 ;;      Locals:         2       0       0       0       0
  1967 ;;      Temps:          1       0       0       0       0
  1968 ;;      Totals:         4       0       0       0       0
  1969 ;;Total ram usage:        4 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    1
  1972 ;; This function calls:
  1973 ;;		_LCD8_cmd
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           
  1980                           ;psect for function _LCD8_set_cursor
  1981  049A                     _LCD8_set_cursor:	
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _LCD8_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1985                           ;LCD8_set_cursor@row stored from wreg
  1986  049A  00F6               	movwf	LCD8_set_cursor@row
  1987                           
  1988                           ;./LCD8bit.h: 22:     char cursor;;./LCD8bit.h: 24:         if(row==1)
  1989  049B  0376               	decf	LCD8_set_cursor@row,w
  1990  049C  1D03               	btfss	3,2
  1991  049D  2CA3               	goto	l39
  1992                           
  1993                           ;./LCD8bit.h: 25:             cursor = 128 + column -1;
  1994  049E  0873               	movf	LCD8_set_cursor@column,w
  1995  049F  3E7F               	addlw	127
  1996  04A0  00F4               	movwf	??_LCD8_set_cursor
  1997  04A1  0874               	movf	??_LCD8_set_cursor,w
  1998  04A2  00F5               	movwf	LCD8_set_cursor@cursor
  1999  04A3                     l39:	
  2000                           
  2001                           ;./LCD8bit.h: 26:         if (row==2)
  2002  04A3  3002               	movlw	2
  2003  04A4  0676               	xorwf	LCD8_set_cursor@row,w
  2004  04A5  1D03               	btfss	3,2
  2005  04A6  2CAC               	goto	l1109
  2006                           
  2007                           ;./LCD8bit.h: 27:             cursor = 192 + column -1;
  2008  04A7  0873               	movf	LCD8_set_cursor@column,w
  2009  04A8  3EBF               	addlw	191
  2010  04A9  00F4               	movwf	??_LCD8_set_cursor
  2011  04AA  0874               	movf	??_LCD8_set_cursor,w
  2012  04AB  00F5               	movwf	LCD8_set_cursor@cursor
  2013  04AC                     l1109:	
  2014                           
  2015                           ;./LCD8bit.h: 29:         LCD8_cmd(cursor);
  2016  04AC  0875               	movf	LCD8_set_cursor@cursor,w
  2017  04AD  120A  118A  2486   	fcall	_LCD8_cmd
  2018  04B0  0008               	return
  2019  04B1                     __end_of_LCD8_set_cursor:	
  2020                           
  2021                           	psect	text11
  2022  045D                     __ptext11:	
  2023 ;; *************** function _LCD8_clear *****************
  2024 ;; Defined at:
  2025 ;;		line 32 in file "./LCD8bit.h"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, pclath, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2039 ;;      Params:         0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0
  2042 ;;      Totals:         0       0       0       0       0
  2043 ;;Total ram usage:        0 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    1
  2046 ;; This function calls:
  2047 ;;		_LCD8_cmd
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _LCD8_clear
  2055  045D                     _LCD8_clear:	
  2056                           
  2057                           ;./LCD8bit.h: 33:     LCD8_cmd(0);
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in _LCD8_clear: [wreg+status,2+status,0+pclath+cstack]
  2061  045D  3000               	movlw	0
  2062  045E  120A  118A  2486  120A  118A  	fcall	_LCD8_cmd
  2063                           
  2064                           ;./LCD8bit.h: 34:     LCD8_cmd(1);
  2065  0463  3001               	movlw	1
  2066  0464  120A  118A  2486   	fcall	_LCD8_cmd
  2067  0467  0008               	return
  2068  0468                     __end_of_LCD8_clear:	
  2069                           
  2070                           	psect	text12
  2071  0584                     __ptext12:	
  2072 ;; *************** function _LCD8_begin *****************
  2073 ;; Defined at:
  2074 ;;		line 37 in file "./LCD8bit.h"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, pclath, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0
  2090 ;;      Temps:          2       0       0       0       0
  2091 ;;      Totals:         2       0       0       0       0
  2092 ;;Total ram usage:        2 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    1
  2095 ;; This function calls:
  2096 ;;		_LCD8_cmd
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function _LCD8_begin
  2104  0584                     _LCD8_begin:	
  2105                           
  2106                           ;./LCD8bit.h: 38:     PORTB = 0;
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in _LCD8_begin: [wreg+status,2+status,0+pclath+cstack]
  2110  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0586  0186               	clrf	6	;volatile
  2113                           
  2114                           ;./LCD8bit.h: 39:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2115  0587  3034               	movlw	52
  2116  0588  00F4               	movwf	??_LCD8_begin+1
  2117  0589  30F1               	movlw	241
  2118  058A  00F3               	movwf	??_LCD8_begin
  2119  058B                     u697:	
  2120  058B  0BF3               	decfsz	??_LCD8_begin,f
  2121  058C  2D8B               	goto	u697
  2122  058D  0BF4               	decfsz	??_LCD8_begin+1,f
  2123  058E  2D8B               	goto	u697
  2124  058F  2D90               	nop2
  2125                           
  2126                           ;./LCD8bit.h: 40:     LCD8_cmd(48);
  2127  0590  3030               	movlw	48
  2128  0591  120A  118A  2486  120A  118A  	fcall	_LCD8_cmd
  2129                           
  2130                           ;./LCD8bit.h: 41:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2131  0596  300D               	movlw	13
  2132  0597  00F4               	movwf	??_LCD8_begin+1
  2133  0598  30FB               	movlw	251
  2134  0599  00F3               	movwf	??_LCD8_begin
  2135  059A                     u707:	
  2136  059A  0BF3               	decfsz	??_LCD8_begin,f
  2137  059B  2D9A               	goto	u707
  2138  059C  0BF4               	decfsz	??_LCD8_begin+1,f
  2139  059D  2D9A               	goto	u707
  2140  059E  2D9F               	nop2
  2141                           
  2142                           ;./LCD8bit.h: 42:     LCD8_cmd(48);
  2143  059F  3030               	movlw	48
  2144  05A0  120A  118A  2486  120A  118A  	fcall	_LCD8_cmd
  2145                           
  2146                           ;./LCD8bit.h: 43:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  2147  05A5  306D               	movlw	109
  2148  05A6  00F3               	movwf	??_LCD8_begin
  2149  05A7                     u717:	
  2150  05A7  0BF3               	decfsz	??_LCD8_begin,f
  2151  05A8  2DA7               	goto	u717
  2152  05A9  2DAA               	nop2
  2153                           
  2154                           ;./LCD8bit.h: 44:     LCD8_cmd(48);
  2155  05AA  3030               	movlw	48
  2156  05AB  120A  118A  2486  120A  118A  	fcall	_LCD8_cmd
  2157                           
  2158                           ;./LCD8bit.h: 45:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  2159  05B0  306D               	movlw	109
  2160  05B1  00F3               	movwf	??_LCD8_begin
  2161  05B2                     u727:	
  2162  05B2  0BF3               	decfsz	??_LCD8_begin,f
  2163  05B3  2DB2               	goto	u727
  2164  05B4  2DB5               	nop2
  2165                           
  2166                           ;./LCD8bit.h: 47:     LCD8_cmd(0b111000);
  2167  05B5  3038               	movlw	56
  2168  05B6  120A  118A  2486  120A  118A  	fcall	_LCD8_cmd
  2169                           
  2170                           ;./LCD8bit.h: 48:     LCD8_cmd(0b10100);
  2171  05BB  3014               	movlw	20
  2172  05BC  120A  118A  2486  120A  118A  	fcall	_LCD8_cmd
  2173                           
  2174                           ;./LCD8bit.h: 49:     LCD8_cmd(1);
  2175  05C1  3001               	movlw	1
  2176  05C2  120A  118A  2486  120A  118A  	fcall	_LCD8_cmd
  2177                           
  2178                           ;./LCD8bit.h: 50:     LCD8_cmd(0b110);
  2179  05C7  3006               	movlw	6
  2180  05C8  120A  118A  2486  120A  118A  	fcall	_LCD8_cmd
  2181                           
  2182                           ;./LCD8bit.h: 51:     LCD8_cmd(0b1100);
  2183  05CD  300C               	movlw	12
  2184  05CE  120A  118A  2486  120A  118A  	fcall	_LCD8_cmd
  2185                           
  2186                           ;./LCD8bit.h: 52:     LCD8_cmd(0b10);
  2187  05D3  3002               	movlw	2
  2188  05D4  120A  118A  2486   	fcall	_LCD8_cmd
  2189  05D7  0008               	return
  2190  05D8                     __end_of_LCD8_begin:	
  2191                           
  2192                           	psect	text13
  2193  0486                     __ptext13:	
  2194 ;; *************** function _LCD8_cmd *****************
  2195 ;; Defined at:
  2196 ;;		line 12 in file "./LCD8bit.h"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  data            1    wreg     unsigned char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  data            1    2[COMMON] unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       0       0       0       0
  2211 ;;      Locals:         1       0       0       0       0
  2212 ;;      Temps:          2       0       0       0       0
  2213 ;;      Totals:         3       0       0       0       0
  2214 ;;Total ram usage:        3 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_LCD8_set_cursor
  2220 ;;		_LCD8_clear
  2221 ;;		_LCD8_begin
  2222 ;;		_LCD8_shiftR
  2223 ;;		_LCD8_shiftL
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _LCD8_cmd
  2229  0486                     _LCD8_cmd:	
  2230                           
  2231                           ;incstack = 0
  2232                           ; Regs used in _LCD8_cmd: [wreg]
  2233                           ;LCD8_cmd@data stored from wreg
  2234  0486  00F2               	movwf	LCD8_cmd@data
  2235                           
  2236                           ;./LCD8bit.h: 13:     RA1 = 0;
  2237  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0489  1085               	bcf	5,1	;volatile
  2240                           
  2241                           ;./LCD8bit.h: 14:     PORTB = data;
  2242  048A  0872               	movf	LCD8_cmd@data,w
  2243  048B  0086               	movwf	6	;volatile
  2244                           
  2245                           ;./LCD8bit.h: 16:     RA2 = 1;
  2246  048C  1505               	bsf	5,2	;volatile
  2247                           
  2248                           ;./LCD8bit.h: 17:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2249  048D  300B               	movlw	11
  2250  048E  00F1               	movwf	??_LCD8_cmd+1
  2251  048F  3062               	movlw	98
  2252  0490  00F0               	movwf	??_LCD8_cmd
  2253  0491                     u737:	
  2254  0491  0BF0               	decfsz	??_LCD8_cmd,f
  2255  0492  2C91               	goto	u737
  2256  0493  0BF1               	decfsz	??_LCD8_cmd+1,f
  2257  0494  2C91               	goto	u737
  2258  0495  0000               	nop
  2259                           
  2260                           ;./LCD8bit.h: 18:     RA2 = 0;
  2261  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0498  1105               	bcf	5,2	;volatile
  2264  0499  0008               	return
  2265  049A                     __end_of_LCD8_cmd:	
  2266  007E                     btemp	set	126	;btemp
  2267  007E                     wtemp0	set	126


Data Sizes:
    Strings     68
    Constant    10
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_7(CODE[5]), STR_6(CODE[9]), STR_5(CODE[5]), STR_4(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> show(BANK0[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD8_strWrite@data	PTR unsigned char  size(2) Largest target is 15
		 -> show(BANK0[15]), STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD8_strWrite->_LCD8_write
    _LCD8_set_cursor->_LCD8_cmd
    _LCD8_clear->_LCD8_cmd
    _LCD8_begin->_LCD8_cmd

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2762
                                             13 BANK0      3     3      0
                         _LCD8_begin
                         _LCD8_clear
                    _LCD8_set_cursor
                      _LCD8_strWrite
                        _dht11_begin
                        _dht11_check
                         _dht11_read
                    _oscilator_begin
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1538
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _oscilator_begin                                      2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dht11_read                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dht11_check                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dht11_begin                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_strWrite                                        4     2      2     644
                                              2 COMMON     4     2      2
                         _LCD8_write
 ---------------------------------------------------------------------------------
 (2) _LCD8_write                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_set_cursor                                      4     3      1     514
                                              3 COMMON     4     3      1
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD8_clear                                           0     0      0      22
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD8_begin                                           2     2      0      22
                                              3 COMMON     2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD8_cmd                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD8_begin
     _LCD8_cmd
   _LCD8_clear
     _LCD8_cmd
   _LCD8_set_cursor
     _LCD8_cmd
   _LCD8_strWrite
     _LCD8_write
   _dht11_begin
   _dht11_check
   _dht11_read
   _oscilator_begin
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      28       5       50.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 24 13:32:32 2019

      LCD8_set_cursor@row 0076                         pc 0002               __CFG_CP$OFF 0000  
   LCD8_set_cursor@column 0073                        l39 04A3                        l99 0454  
   LCD8_set_cursor@cursor 0075                        fsr 0004      __size_of_dht11_begin 001A  
    __size_of_dht11_check 0009                       l102 0458                       l105 045A  
                     l122 04E2                       l117 04CE                       _RA0 0028  
                     _RA1 0029                       _RA2 002A                       u405 051F  
                     u335 0553                       u425 0530              __CFG_CPD$OFF 0000  
                     u355 055F                       u435 0539                       u365 056B  
                     u375 0575                       u707 059A                       u717 05A7  
                     u637 06E8                       u727 05B2                       u575 064D  
                     u647 07EE                       u737 0491                       u657 04D2  
                     u667 04BB                       u677 04C5                       u687 047F  
                     u697 058B                       fsr0 0004                       indf 0000  
            __CFG_LVP$OFF 0000                      l1201 061D                      l1211 0634  
                    l1109 04AC                      l1223 0657                      l1073 0574  
                    l1065 0550                      l1217 0636                      l1241 06AB  
                    l1147 04EF                      l1067 055E                      l1091 052A  
                    l1077 057F                      l1237 066A                      l1229 0666  
                    l1333 0612                      l1095 0538                      l1239 05DF  
                    l1177 04DC                      l1089 051C                      l1273 06EF  
                    l1099 0543                      l1195 05FF                      l1299 0766  
                    STR_1 0045                      STR_2 001D                      STR_3 002C  
                    STR_4 0039                      STR_5 0057                      STR_6 004E  
                    STR_7 005C              __CFG_WRT$OFF 0000                      _main 06B0  
                    _show 0029                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 0000             __CFG_IESO$OFF 0000   __end_of_oscilator_begin 0476  
        __end_of_LCD8_cmd 049A       __size_of_LCD8_begin 0054       __size_of_LCD8_clear 000B  
         _LCD8_set_cursor 049A                     ?_main 0070       __size_of_LCD8_write 0010  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188           __end_of___lwdiv 0584  
         __end_of___lwmod 0548                     _PORTA 0005                     _PORTB 0006  
                   _TRISB 0086            __CFG_FCMEN$OFF 0000                     _check 0024  
         __end_of_dpowers 001D                     _total 0023                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 06B0  
          __CFG_MCLRE$OFF 0000           __initialization 07F5              __end_of_main 07F5  
                  ??_main 0045                    _TRISA0 0428                    _TRISA1 0429  
                  _TRISA2 042A                    _TRISA3 042B            __CFG_PWRTE$OFF 0000  
 __end_of_LCD8_set_cursor 04B1          ?_oscilator_begin 0070                 ??___lwdiv 0074  
               ??___lwmod 007C            dht11_read@temp 0020              ??_LCD8_begin 0073  
               ??_sprintf 003B              ??_LCD8_clear 0073                 ?_LCD8_cmd 0070  
            ??_LCD8_write 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
              _dht11_read 04CB        __end_of_LCD8_begin 05D8        __end_of_LCD8_clear 0468  
      __end_of_LCD8_write 0486                ??_LCD8_cmd 0070                __pbssBANK0 0020  
   __end_of_LCD8_strWrite 0516                __pmaintext 06B0             ??_dht11_begin 0070  
           ??_dht11_check 0070          ?_LCD8_set_cursor 0073                __stringtab 0003  
             ?_dht11_read 0070                   ___lwdiv 0548                   ___lwmod 0516  
                 __ptext1 05D8                   __ptext2 0516                   __ptext3 0548  
                 __ptext4 0468                   __ptext5 04CB                   __ptext6 0454  
                 __ptext7 04B1                   __ptext8 04EE                   __ptext9 0476  
     __end_of_dht11_begin 04CB       __end_of_dht11_check 045D                   _counter 0022  
                 _dpowers 0013                   _hum_dec 0025         LCD8_strWrite@data 0072  
                 _hum_int 0026                   _sprintf 05D8                   clrloop0 044D  
    end_of_initialization 07FC       __size_of_dht11_read 0023         __size_of_LCD8_cmd 0014  
             _dht11_begin 04B1               _dht11_check 0454  __size_of_oscilator_begin 000E  
     start_initialization 07F5  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
           __pcstackBANK0 0038               dht11_read@i 0021               sprintf@flag 003F  
             sprintf@prec 0040          ___lwdiv@dividend 0072              ??_dht11_read 0070  
                ?___lwdiv 0070                  ?___lwmod 0078            LCD8_strWrite@i 0075  
               __pstrings 0003    __size_of_LCD8_strWrite 0028  __size_of_LCD8_set_cursor 0017  
          LCD8_write@data 0071          ___lwdiv@quotient 0075                  ?_sprintf 0038  
       ??_oscilator_begin 0070                  _LCD8_cmd 0486        __end_of_dht11_read 04EE  
               clear_ram0 044C               __stringbase 0012             _LCD8_strWrite 04EE  
     oscilator_begin@freq 0071              ?_dht11_begin 0070              ?_dht11_check 0070  
        __size_of___lwdiv 003C          __size_of___lwmod 0032        __end_of__stringtab 0013  
              sprintf@val 0041           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 049A                  __ptext11 045D                  __ptext12 0584  
                __ptext13 0486         __CFG_BOR4V$BOR40V 0000         ??_LCD8_set_cursor 0074  
              _LCD8_begin 0584                _LCD8_clear 045D          __size_of_sprintf 00D8  
          ?_LCD8_strWrite 0072                _LCD8_write 0476             __size_of_main 0145  
            LCD8_cmd@data 0072                  _temp_dec 0027                  _temp_int 0028  
               sprintf@ap 003E                 sprintf@sp 0043          ___lwmod@dividend 007A  
               stringcode 000D                _OSCCONbits 008F           _oscilator_begin 0468  
                sprintf@c 0044                  sprintf@f 0038           ___lwmod@divisor 0078  
         ___lwmod@counter 007D                  stringdir 000D                  stringtab 0003  
         ??_LCD8_strWrite 0074               ?_LCD8_begin 0070               ?_LCD8_clear 0070  
             ?_LCD8_write 0070  
