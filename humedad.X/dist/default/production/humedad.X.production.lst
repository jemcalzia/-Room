

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 23 20:46:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.05
    27                           ; Generated 20/12/2018 GMT
    28                           ; 
    29                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294                           
   295                           	psect	strings
   296  0003                     __pstrings:	
   297  0003                     stringtab:	
   298  0003                     __stringtab:	
   299                           
   300                           ;	String table - string pointers are 1 byte each
   301  0003  1BFF               	btfsc	btemp+1,7
   302  0004  280D               	ljmp	stringcode
   303  0005  1383               	bcf	3,7
   304  0006  187F               	btfsc	btemp+1,0
   305  0007  1783               	bsf	3,7
   306  0008  0800               	movf	0,w
   307  0009  0A84               	incf	4,f
   308  000A  1903               	skipnz
   309  000B  0AFF               	incf	btemp+1,f
   310  000C  0008               	return
   311  000D                     stringcode:	
   312  000D                     stringdir:	
   313  000D  3000               	movlw	high stringdir
   314  000E  008A               	movwf	10
   315  000F  0804               	movf	4,w
   316  0010  0A84               	incf	4,f
   317  0011  0782               	addwf	2,f
   318  0012                     __stringbase:	
   319  0012  3400               	retlw	0
   320  0013                     __end_of__stringtab:	
   321  0013                     _dpowers:	
   322  0013  3401               	retlw	1
   323  0014  3400               	retlw	0
   324  0015  340A               	retlw	10
   325  0016  3400               	retlw	0
   326  0017  3464               	retlw	100
   327  0018  3400               	retlw	0
   328  0019  34E8               	retlw	232
   329  001A  3403               	retlw	3
   330  001B  3410               	retlw	16
   331  001C  3427               	retlw	39
   332  001D                     __end_of_dpowers:	
   333  0006                     _PORTB	set	6
   334  0028                     _RA0	set	40
   335  002A                     _RA2	set	42
   336  0029                     _RA1	set	41
   337  008F                     _OSCCONbits	set	143
   338  0428                     _TRISA0	set	1064
   339  001D                     STR_1:	
   340  001D  3445               	retlw	69	;'E'
   341  001E  3472               	retlw	114	;'r'
   342  001F  3472               	retlw	114	;'r'
   343  0020  346F               	retlw	111	;'o'
   344  0021  3472               	retlw	114	;'r'
   345  0022  342C               	retlw	44	;','
   346  0023  3420               	retlw	32	;' '
   347  0024  3472               	retlw	114	;'r'
   348  0025  3465               	retlw	101	;'e'
   349  0026  3476               	retlw	118	;'v'
   350  0027  3469               	retlw	105	;'i'
   351  0028  3473               	retlw	115	;'s'
   352  0029  3461               	retlw	97	;'a'
   353  002A  3472               	retlw	114	;'r'
   354  002B  3400               	retlw	0
   355  002C                     STR_2:	
   356  002C  3463               	retlw	99	;'c'
   357  002D  346F               	retlw	111	;'o'
   358  002E  346D               	retlw	109	;'m'
   359  002F  3475               	retlw	117	;'u'
   360  0030  346E               	retlw	110	;'n'
   361  0031  3469               	retlw	105	;'i'
   362  0032  3463               	retlw	99	;'c'
   363  0033  3461               	retlw	97	;'a'
   364  0034  3463               	retlw	99	;'c'
   365  0035  3469               	retlw	105	;'i'
   366  0036  346F               	retlw	111	;'o'
   367  0037  346E               	retlw	110	;'n'
   368  0038  3400               	retlw	0
   369  0039                     STR_4:	
   370  0039  342E               	retlw	46	;'.'
   371  003A  3425               	retlw	37	;'%'
   372  003B  3464               	retlw	100	;'d'
   373  003C  3400               	retlw	0
   374  003A                     
   375                           ; #config settings
   376  0000                     
   377                           	psect	cinit
   378  07F5                     start_initialization:	
   379  07F5                     __initialization:	
   380                           
   381                           ; Clear objects allocated to BANK0
   382  07F5  1383               	bcf	3,7	;select IRP bank0
   383  07F6  3020               	movlw	low __pbssBANK0
   384  07F7  0084               	movwf	4
   385  07F8  3037               	movlw	low (__pbssBANK0+23)
   386  07F9  120A  118A  247F   	fcall	clear_ram0
   387  07FC                     end_of_initialization:	
   388                           ;End of C runtime variable initialization code
   389                           
   390  07FC                     __end_of__initialization:	
   391  07FC  0183               	clrf	3
   392  07FD  120A  118A  2EE3   	ljmp	_main	;jump to C main() function
   393                           
   394                           	psect	bssBANK0
   395  0020                     __pbssBANK0:	
   396  0020                     dht11_read@temp:	
   397  0020                     	ds	1
   398  0021                     dht11_read@i:	
   399  0021                     	ds	1
   400  0022                     _total:	
   401  0022                     	ds	1
   402  0023                     _check:	
   403  0023                     	ds	1
   404  0024                     _hum_dec:	
   405  0024                     	ds	1
   406  0025                     _hum_int:	
   407  0025                     	ds	1
   408  0026                     _temp_dec:	
   409  0026                     	ds	1
   410  0027                     _temp_int:	
   411  0027                     	ds	1
   412  0028                     _show:	
   413  0028                     	ds	15
   414                           
   415                           	psect	clrtext
   416  047F                     clear_ram0:	
   417                           ;	Called with FSR containing the base address, and
   418                           ;	W with the last address+1
   419                           
   420  047F  0064               	clrwdt	;clear the watchdog before getting into this loop
   421  0480                     clrloop0:	
   422  0480  0180               	clrf	0	;clear RAM location pointed to by FSR
   423  0481  0A84               	incf	4,f	;increment pointer
   424  0482  0604               	xorwf	4,w	;XOR with final address
   425  0483  1903               	btfsc	3,2	;have we reached the end yet?
   426  0484  3400               	retlw	0	;all done for this memory range, return
   427  0485  0604               	xorwf	4,w	;XOR again to restore value
   428  0486  2C80               	goto	clrloop0	;do the next byte
   429                           
   430                           	psect	cstackCOMMON
   431  0070                     __pcstackCOMMON:	
   432  0070                     ?_dht11_begin:	
   433  0070                     ??_dht11_begin:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_dht11_check:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_dht11_check:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_dht11_read:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??_dht11_read:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_LCD8_write:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ??_LCD8_write:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_LCD8_cmd:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ??_LCD8_cmd:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_LCD8_clear:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_LCD8_begin:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_oscilator_begin:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ??_oscilator_begin:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_main:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?___lwdiv:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ___lwdiv@divisor:	
   479                           ; 2 bytes @ 0x0
   480                           
   481                           
   482                           ; 2 bytes @ 0x0
   483  0070                     	ds	1
   484  0071                     LCD8_write@data:	
   485  0071                     oscilator_begin@freq:	
   486                           ; 1 bytes @ 0x1
   487                           
   488                           
   489                           ; 1 bytes @ 0x1
   490  0071                     	ds	1
   491  0072                     ?_LCD8_strWrite:	
   492  0072                     LCD8_cmd@data:	
   493                           ; 1 bytes @ 0x2
   494                           
   495  0072                     LCD8_strWrite@data:	
   496                           ; 1 bytes @ 0x2
   497                           
   498  0072                     ___lwdiv@dividend:	
   499                           ; 2 bytes @ 0x2
   500                           
   501                           
   502                           ; 2 bytes @ 0x2
   503  0072                     	ds	1
   504  0073                     ?_LCD8_set_cursor:	
   505  0073                     ??_LCD8_clear:	
   506                           ; 1 bytes @ 0x3
   507                           
   508  0073                     ??_LCD8_begin:	
   509                           ; 1 bytes @ 0x3
   510                           
   511  0073                     LCD8_set_cursor@column:	
   512                           ; 1 bytes @ 0x3
   513                           
   514                           
   515                           ; 1 bytes @ 0x3
   516  0073                     	ds	1
   517  0074                     ??_LCD8_set_cursor:	
   518  0074                     ??_LCD8_strWrite:	
   519                           ; 1 bytes @ 0x4
   520                           
   521  0074                     ??___lwdiv:	
   522                           ; 1 bytes @ 0x4
   523                           
   524                           
   525                           ; 1 bytes @ 0x4
   526  0074                     	ds	1
   527  0075                     LCD8_set_cursor@cursor:	
   528  0075                     LCD8_strWrite@i:	
   529                           ; 1 bytes @ 0x5
   530                           
   531  0075                     ___lwdiv@quotient:	
   532                           ; 1 bytes @ 0x5
   533                           
   534                           
   535                           ; 2 bytes @ 0x5
   536  0075                     	ds	1
   537  0076                     LCD8_set_cursor@row:	
   538                           
   539                           ; 1 bytes @ 0x6
   540  0076                     	ds	1
   541  0077                     ___lwdiv@counter:	
   542                           
   543                           ; 1 bytes @ 0x7
   544  0077                     	ds	1
   545  0078                     ?___lwmod:	
   546  0078                     ___lwmod@divisor:	
   547                           ; 2 bytes @ 0x8
   548                           
   549                           
   550                           ; 2 bytes @ 0x8
   551  0078                     	ds	2
   552  007A                     ___lwmod@dividend:	
   553                           
   554                           ; 2 bytes @ 0xA
   555  007A                     	ds	2
   556  007C                     ??___lwmod:	
   557                           
   558                           ; 1 bytes @ 0xC
   559  007C                     	ds	1
   560  007D                     ___lwmod@counter:	
   561                           
   562                           ; 1 bytes @ 0xD
   563  007D                     	ds	1
   564                           
   565                           	psect	cstackBANK0
   566  0037                     __pcstackBANK0:	
   567  0037                     ?_sprintf:	
   568  0037                     sprintf@f:	
   569                           ; 2 bytes @ 0x0
   570                           
   571                           
   572                           ; 1 bytes @ 0x0
   573  0037                     	ds	3
   574  003A                     ??_sprintf:	
   575                           
   576                           ; 1 bytes @ 0x3
   577  003A                     	ds	3
   578  003D                     sprintf@ap:	
   579                           
   580                           ; 1 bytes @ 0x6
   581  003D                     	ds	1
   582  003E                     sprintf@flag:	
   583                           
   584                           ; 1 bytes @ 0x7
   585  003E                     	ds	1
   586  003F                     sprintf@prec:	
   587                           
   588                           ; 1 bytes @ 0x8
   589  003F                     	ds	1
   590  0040                     sprintf@val:	
   591                           
   592                           ; 2 bytes @ 0x9
   593  0040                     	ds	2
   594  0042                     sprintf@sp:	
   595                           
   596                           ; 1 bytes @ 0xB
   597  0042                     	ds	1
   598  0043                     sprintf@c:	
   599                           
   600                           ; 1 bytes @ 0xC
   601  0043                     	ds	1
   602  0044                     ??_main:	
   603                           
   604                           ; 1 bytes @ 0xD
   605  0044                     	ds	3
   606                           
   607                           	psect	maintext
   608  06E3                     __pmaintext:	
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   611 ;;
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 41 in file "humedad_main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : B00/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          0       3       0       0       0
   631 ;;      Totals:         0       3       0       0       0
   632 ;;Total ram usage:        3 bytes
   633 ;; Hardware stack levels required when called:    2
   634 ;; This function calls:
   635 ;;		_LCD8_begin
   636 ;;		_LCD8_clear
   637 ;;		_LCD8_set_cursor
   638 ;;		_LCD8_strWrite
   639 ;;		_dht11_begin
   640 ;;		_dht11_check
   641 ;;		_dht11_read
   642 ;;		_oscilator_begin
   643 ;;		_sprintf
   644 ;; This function is called by:
   645 ;;		Startup code after reset
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function _main
   651  06E3                     _main:	
   652                           
   653                           ;humedad_main.c: 43:     oscilator_begin(7);
   654                           
   655                           ;incstack = 0
   656                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   657  06E3  3007               	movlw	7
   658  06E4  120A  118A  249B  120A  118A  	fcall	_oscilator_begin
   659                           
   660                           ;humedad_main.c: 44:     LCD8_begin();
   661  06E9  120A  118A  25B7  120A  118A  	fcall	_LCD8_begin
   662                           
   663                           ;humedad_main.c: 45:     LCD8_clear();
   664  06EE  120A  118A  2490  120A  118A  	fcall	_LCD8_clear
   665  06F3                     l69:	
   666                           ;humedad_main.c: 46:     while(1)
   667                           
   668                           
   669                           ;humedad_main.c: 47:     {;humedad_main.c: 48:        dht11_begin();
   670  06F3  120A  118A  24E4  120A  118A  	fcall	_dht11_begin
   671                           
   672                           ;humedad_main.c: 49:        dht11_check();
   673  06F8  120A  118A  2487  120A  118A  	fcall	_dht11_check
   674                           
   675                           ;humedad_main.c: 50:        hum_int = dht11_read();
   676  06FD  120A  118A  24FE  120A  118A  	fcall	_dht11_read
   677  0702  1283               	bcf	3,5	;RP0=0, select bank0
   678  0703  1303               	bcf	3,6	;RP1=0, select bank0
   679  0704  00C4               	movwf	??_main
   680  0705  0844               	movf	??_main,w
   681  0706  00A5               	movwf	_hum_int
   682                           
   683                           ;humedad_main.c: 51:        hum_dec = dht11_read();
   684  0707  120A  118A  24FE  120A  118A  	fcall	_dht11_read
   685  070C  1283               	bcf	3,5	;RP0=0, select bank0
   686  070D  1303               	bcf	3,6	;RP1=0, select bank0
   687  070E  00C4               	movwf	??_main
   688  070F  0844               	movf	??_main,w
   689  0710  00A4               	movwf	_hum_dec
   690                           
   691                           ;humedad_main.c: 52:        temp_int = dht11_read();
   692  0711  120A  118A  24FE  120A  118A  	fcall	_dht11_read
   693  0716  1283               	bcf	3,5	;RP0=0, select bank0
   694  0717  1303               	bcf	3,6	;RP1=0, select bank0
   695  0718  00C4               	movwf	??_main
   696  0719  0844               	movf	??_main,w
   697  071A  00A7               	movwf	_temp_int
   698                           
   699                           ;humedad_main.c: 53:        temp_dec = dht11_read();
   700  071B  120A  118A  24FE  120A  118A  	fcall	_dht11_read
   701  0720  1283               	bcf	3,5	;RP0=0, select bank0
   702  0721  1303               	bcf	3,6	;RP1=0, select bank0
   703  0722  00C4               	movwf	??_main
   704  0723  0844               	movf	??_main,w
   705  0724  00A6               	movwf	_temp_dec
   706                           
   707                           ;humedad_main.c: 54:        check = dht11_read();
   708  0725  120A  118A  24FE  120A  118A  	fcall	_dht11_read
   709  072A  1283               	bcf	3,5	;RP0=0, select bank0
   710  072B  1303               	bcf	3,6	;RP1=0, select bank0
   711  072C  00C4               	movwf	??_main
   712  072D  0844               	movf	??_main,w
   713  072E  00A3               	movwf	_check
   714                           
   715                           ;humedad_main.c: 55:        total = hum_int+hum_dec+temp_int+temp_dec;
   716  072F  0824               	movf	_hum_dec,w
   717  0730  0725               	addwf	_hum_int,w
   718  0731  00C4               	movwf	??_main
   719  0732  0827               	movf	_temp_int,w
   720  0733  0744               	addwf	??_main,w
   721  0734  00C5               	movwf	??_main+1
   722  0735  0826               	movf	_temp_dec,w
   723  0736  0745               	addwf	??_main+1,w
   724  0737  00C6               	movwf	??_main+2
   725  0738  0846               	movf	??_main+2,w
   726  0739  00A2               	movwf	_total
   727                           
   728                           ;humedad_main.c: 56:        if (check != total){
   729  073A  0823               	movf	_check,w
   730  073B  0622               	xorwf	_total,w
   731  073C  1903               	skipnz
   732  073D  2F65               	goto	l1241
   733                           
   734                           ;humedad_main.c: 57:            LCD8_clear();
   735  073E  120A  118A  2490  120A  118A  	fcall	_LCD8_clear
   736                           
   737                           ;humedad_main.c: 58:            LCD8_set_cursor(1,1);
   738  0743  01F3               	clrf	LCD8_set_cursor@column
   739  0744  0AF3               	incf	LCD8_set_cursor@column,f
   740  0745  3001               	movlw	1
   741  0746  120A  118A  24CD  120A  118A  	fcall	_LCD8_set_cursor
   742                           
   743                           ;humedad_main.c: 59:            LCD8_strWrite("Error, revisar");
   744  074B  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   745  074C  00F2               	movwf	LCD8_strWrite@data
   746  074D  3080               	movlw	128
   747  074E  00F3               	movwf	LCD8_strWrite@data+1
   748  074F  120A  118A  2521  120A  118A  	fcall	_LCD8_strWrite
   749                           
   750                           ;humedad_main.c: 60:            LCD8_set_cursor(2,1);
   751  0754  01F3               	clrf	LCD8_set_cursor@column
   752  0755  0AF3               	incf	LCD8_set_cursor@column,f
   753  0756  3002               	movlw	2
   754  0757  120A  118A  24CD  120A  118A  	fcall	_LCD8_set_cursor
   755                           
   756                           ;humedad_main.c: 61:            LCD8_strWrite("comunicacion");
   757  075C  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   758  075D  00F2               	movwf	LCD8_strWrite@data
   759  075E  3080               	movlw	128
   760  075F  00F3               	movwf	LCD8_strWrite@data+1
   761  0760  120A  118A  2521  120A  118A  	fcall	_LCD8_strWrite
   762  0765                     l1241:	
   763                           
   764                           ;humedad_main.c: 64:        LCD8_set_cursor(1,1);
   765  0765  01F3               	clrf	LCD8_set_cursor@column
   766  0766  0AF3               	incf	LCD8_set_cursor@column,f
   767  0767  3001               	movlw	1
   768  0768  120A  118A  24CD  120A  118A  	fcall	_LCD8_set_cursor
   769                           
   770                           ;humedad_main.c: 65:        sprintf(show, "%d",hum_int);
   771  076D  3028               	movlw	(low (((STR_4+1)-__stringbase)| (0+32768)))& (0+255)
   772  076E  1283               	bcf	3,5	;RP0=0, select bank0
   773  076F  1303               	bcf	3,6	;RP1=0, select bank0
   774  0770  00C4               	movwf	??_main
   775  0771  0844               	movf	??_main,w
   776  0772  00B7               	movwf	sprintf@f
   777  0773  0825               	movf	_hum_int,w
   778  0774  00C5               	movwf	??_main+1
   779  0775  01C6               	clrf	??_main+2
   780  0776  0845               	movf	??_main+1,w
   781  0777  00B8               	movwf	?_sprintf+1
   782  0778  0846               	movf	??_main+2,w
   783  0779  00B9               	movwf	?_sprintf+2
   784  077A  3028               	movlw	(low (_show| 0))& (0+255)
   785  077B  120A  118A  260B  120A  118A  	fcall	_sprintf
   786                           
   787                           ;humedad_main.c: 66:        LCD8_strWrite(show);
   788  0780  3028               	movlw	(low (_show| 0))& (0+255)
   789  0781  00F2               	movwf	LCD8_strWrite@data
   790  0782  3000               	movlw	0
   791  0783  00F3               	movwf	LCD8_strWrite@data+1
   792  0784  120A  118A  2521  120A  118A  	fcall	_LCD8_strWrite
   793                           
   794                           ;humedad_main.c: 67:        sprintf(show, ".%d",hum_dec);
   795  0789  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   796  078A  1283               	bcf	3,5	;RP0=0, select bank0
   797  078B  1303               	bcf	3,6	;RP1=0, select bank0
   798  078C  00C4               	movwf	??_main
   799  078D  0844               	movf	??_main,w
   800  078E  00B7               	movwf	sprintf@f
   801  078F  0824               	movf	_hum_dec,w
   802  0790  00C5               	movwf	??_main+1
   803  0791  01C6               	clrf	??_main+2
   804  0792  0845               	movf	??_main+1,w
   805  0793  00B8               	movwf	?_sprintf+1
   806  0794  0846               	movf	??_main+2,w
   807  0795  00B9               	movwf	?_sprintf+2
   808  0796  3028               	movlw	(low (_show| 0))& (0+255)
   809  0797  120A  118A  260B  120A  118A  	fcall	_sprintf
   810                           
   811                           ;humedad_main.c: 68:        LCD8_strWrite(show);
   812  079C  3028               	movlw	(low (_show| 0))& (0+255)
   813  079D  00F2               	movwf	LCD8_strWrite@data
   814  079E  3000               	movlw	0
   815  079F  00F3               	movwf	LCD8_strWrite@data+1
   816  07A0  120A  118A  2521  120A  118A  	fcall	_LCD8_strWrite
   817                           
   818                           ;humedad_main.c: 70:        LCD8_set_cursor(2,1);
   819  07A5  01F3               	clrf	LCD8_set_cursor@column
   820  07A6  0AF3               	incf	LCD8_set_cursor@column,f
   821  07A7  3002               	movlw	2
   822  07A8  120A  118A  24CD  120A  118A  	fcall	_LCD8_set_cursor
   823                           
   824                           ;humedad_main.c: 71:        sprintf(show, "%d",temp_int);
   825  07AD  3028               	movlw	(low (((STR_4+1)-__stringbase)| (0+32768)))& (0+255)
   826  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   827  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   828  07B0  00C4               	movwf	??_main
   829  07B1  0844               	movf	??_main,w
   830  07B2  00B7               	movwf	sprintf@f
   831  07B3  0827               	movf	_temp_int,w
   832  07B4  00C5               	movwf	??_main+1
   833  07B5  01C6               	clrf	??_main+2
   834  07B6  0845               	movf	??_main+1,w
   835  07B7  00B8               	movwf	?_sprintf+1
   836  07B8  0846               	movf	??_main+2,w
   837  07B9  00B9               	movwf	?_sprintf+2
   838  07BA  3028               	movlw	(low (_show| 0))& (0+255)
   839  07BB  120A  118A  260B  120A  118A  	fcall	_sprintf
   840                           
   841                           ;humedad_main.c: 72:        LCD8_strWrite(show);
   842  07C0  3028               	movlw	(low (_show| 0))& (0+255)
   843  07C1  00F2               	movwf	LCD8_strWrite@data
   844  07C2  3000               	movlw	0
   845  07C3  00F3               	movwf	LCD8_strWrite@data+1
   846  07C4  120A  118A  2521  120A  118A  	fcall	_LCD8_strWrite
   847                           
   848                           ;humedad_main.c: 73:        sprintf(show, ".%d",temp_dec);
   849  07C9  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   850  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   851  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   852  07CC  00C4               	movwf	??_main
   853  07CD  0844               	movf	??_main,w
   854  07CE  00B7               	movwf	sprintf@f
   855  07CF  0826               	movf	_temp_dec,w
   856  07D0  00C5               	movwf	??_main+1
   857  07D1  01C6               	clrf	??_main+2
   858  07D2  0845               	movf	??_main+1,w
   859  07D3  00B8               	movwf	?_sprintf+1
   860  07D4  0846               	movf	??_main+2,w
   861  07D5  00B9               	movwf	?_sprintf+2
   862  07D6  3028               	movlw	(low (_show| 0))& (0+255)
   863  07D7  120A  118A  260B  120A  118A  	fcall	_sprintf
   864                           
   865                           ;humedad_main.c: 74:        LCD8_strWrite(show);
   866  07DC  3028               	movlw	(low (_show| 0))& (0+255)
   867  07DD  00F2               	movwf	LCD8_strWrite@data
   868  07DE  3000               	movlw	0
   869  07DF  00F3               	movwf	LCD8_strWrite@data+1
   870  07E0  120A  118A  2521  120A  118A  	fcall	_LCD8_strWrite
   871                           
   872                           ;humedad_main.c: 75:        _delay((unsigned long)((200)*(8000000/4000.0)));
   873  07E5  3003               	movlw	3
   874  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   875  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   876  07E8  00C6               	movwf	??_main+2
   877  07E9  3008               	movlw	8
   878  07EA  00C5               	movwf	??_main+1
   879  07EB  3076               	movlw	118
   880  07EC  00C4               	movwf	??_main
   881  07ED                     u637:	
   882  07ED  0BC4               	decfsz	??_main,f
   883  07EE  2FED               	goto	u637
   884  07EF  0BC5               	decfsz	??_main+1,f
   885  07F0  2FED               	goto	u637
   886  07F1  0BC6               	decfsz	??_main+2,f
   887  07F2  2FED               	goto	u637
   888  07F3  0000               	nop
   889  07F4  2EF3               	goto	l69
   890  07F5                     __end_of_main:	
   891                           
   892                           	psect	text1
   893  060B                     __ptext1:	
   894 ;; *************** function _sprintf *****************
   895 ;; Defined at:
   896 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  sp              1    wreg     PTR unsigned char 
   899 ;;		 -> show(15), 
   900 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   901 ;;		 -> STR_6(4), STR_5(3), STR_4(4), STR_3(3), 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   904 ;;		 -> show(15), 
   905 ;;  tmpval          4    0        struct .
   906 ;;  val             2    9[BANK0 ] unsigned int 
   907 ;;  cp              2    0        PTR const unsigned char 
   908 ;;  len             2    0        unsigned int 
   909 ;;  c               1   12[BANK0 ] unsigned char 
   910 ;;  prec            1    8[BANK0 ] char 
   911 ;;  flag            1    7[BANK0 ] unsigned char 
   912 ;;  ap              1    6[BANK0 ] PTR void [1]
   913 ;;		 -> ?_sprintf(2), 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2    0[BANK0 ] int 
   916 ;; Registers used:
   917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         0       3       0       0       0
   924 ;;      Locals:         0       7       0       0       0
   925 ;;      Temps:          0       3       0       0       0
   926 ;;      Totals:         0      13       0       0       0
   927 ;;Total ram usage:       13 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    1
   930 ;; This function calls:
   931 ;;		___lwdiv
   932 ;;		___lwmod
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _sprintf
   940  060B                     _sprintf:	
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   944                           ;sprintf@sp stored from wreg
   945  060B  1283               	bcf	3,5	;RP0=0, select bank0
   946  060C  1303               	bcf	3,6	;RP1=0, select bank0
   947  060D  00C2               	movwf	sprintf@sp
   948                           
   949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
   950  060E  3038               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   951  060F  00BA               	movwf	??_sprintf
   952  0610  083A               	movf	??_sprintf,w
   953  0611  00BD               	movwf	sprintf@ap
   954  0612                     l1203:	
   955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
   956                           
   957                           
   958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
   959  0612  3001               	movlw	1
   960  0613  07B7               	addwf	sprintf@f,f
   961  0614  30FF               	movlw	-1
   962  0615  0737               	addwf	sprintf@f,w
   963  0616  0084               	movwf	4
   964  0617  120A  118A  200D  120A  118A  	fcall	stringdir
   965  061C  00BA               	movwf	??_sprintf
   966  061D  083A               	movf	??_sprintf,w
   967  061E  00C3               	movwf	sprintf@c
   968  061F  0843               	movf	sprintf@c,w
   969  0620  1903               	btfsc	3,2
   970  0621  2EDE               	goto	l1205
   971                           
   972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
   973  0622  3025               	movlw	37
   974  0623  0643               	xorwf	sprintf@c,w
   975  0624  1903               	btfsc	3,2
   976  0625  2E32               	goto	l1159
   977                           
   978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
   979  0626  0843               	movf	sprintf@c,w
   980  0627  00BA               	movwf	??_sprintf
   981  0628  0842               	movf	sprintf@sp,w
   982  0629  0084               	movwf	4
   983  062A  083A               	movf	??_sprintf,w
   984  062B  1383               	bcf	3,7	;select IRP bank0
   985  062C  0080               	movwf	0
   986  062D  3001               	movlw	1
   987  062E  00BA               	movwf	??_sprintf
   988  062F  083A               	movf	??_sprintf,w
   989  0630  07C2               	addwf	sprintf@sp,f
   990                           
   991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
   992  0631  2E12               	goto	l1203
   993  0632                     l1159:	
   994                           
   995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
   996  0632  01BE               	clrf	sprintf@flag
   997                           
   998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
   999  0633  3001               	movlw	1
  1000  0634  07B7               	addwf	sprintf@f,f
  1001  0635  30FF               	movlw	-1
  1002  0636  0737               	addwf	sprintf@f,w
  1003  0637  0084               	movwf	4
  1004  0638  120A  118A  200D  120A  118A  	fcall	stringdir
  1005  063D  00C3               	movwf	sprintf@c
  1006  063E  00BA               	movwf	??_sprintf
  1007  063F  01BB               	clrf	??_sprintf+1
  1008                           
  1009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1010                           ; Switch size 1, requested type "simple"
  1011                           ; Number of cases is 1, Range of values is 0 to 0
  1012                           ; switch strategies available:
  1013                           ; Name         Instructions Cycles
  1014                           ; simple_byte            4     3 (average)
  1015                           ; direct_byte           11     8 (fixed)
  1016                           ; jumptable            260     6 (fixed)
  1017                           ;	Chosen strategy is simple_byte
  1018  0640  083B               	movf	??_sprintf+1,w
  1019  0641  3A00               	xorlw	0	; case 0
  1020  0642  1903               	skipnz
  1021  0643  2E45               	goto	l1275
  1022  0644  2E12               	goto	l1203
  1023  0645                     l1275:	
  1024                           
  1025                           ; Switch size 1, requested type "simple"
  1026                           ; Number of cases is 3, Range of values is 0 to 105
  1027                           ; switch strategies available:
  1028                           ; Name         Instructions Cycles
  1029                           ; simple_byte           10     6 (average)
  1030                           ; jumptable            260     6 (fixed)
  1031                           ;	Chosen strategy is simple_byte
  1032  0645  083A               	movf	??_sprintf,w
  1033  0646  3A00               	xorlw	0	; case 0
  1034  0647  1903               	skipnz
  1035  0648  2EDE               	goto	l1205
  1036  0649  3A64               	xorlw	100	; case 100
  1037  064A  1903               	skipnz
  1038  064B  2E50               	goto	l1165
  1039  064C  3A0D               	xorlw	13	; case 105
  1040  064D  1903               	skipnz
  1041  064E  2E50               	goto	l1165
  1042  064F  2E12               	goto	l1203
  1043  0650                     l1165:	
  1044                           
  1045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1046  0650  083D               	movf	sprintf@ap,w
  1047  0651  0084               	movwf	4
  1048  0652  1383               	bcf	3,7	;select IRP bank0
  1049  0653  0800               	movf	0,w
  1050  0654  00C0               	movwf	sprintf@val
  1051  0655  0A84               	incf	4,f
  1052  0656  0800               	movf	0,w
  1053  0657  00C1               	movwf	sprintf@val+1
  1054  0658  3002               	movlw	2
  1055  0659  00BA               	movwf	??_sprintf
  1056  065A  083A               	movf	??_sprintf,w
  1057  065B  07BD               	addwf	sprintf@ap,f
  1058                           
  1059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1060  065C  1FC1               	btfss	sprintf@val+1,7
  1061  065D  2E67               	goto	l1175
  1062                           
  1063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1064  065E  3003               	movlw	3
  1065  065F  00BA               	movwf	??_sprintf
  1066  0660  083A               	movf	??_sprintf,w
  1067  0661  04BE               	iorwf	sprintf@flag,f
  1068                           
  1069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1070  0662  09C0               	comf	sprintf@val,f
  1071  0663  09C1               	comf	sprintf@val+1,f
  1072  0664  0AC0               	incf	sprintf@val,f
  1073  0665  1903               	skipnz
  1074  0666  0AC1               	incf	sprintf@val+1,f
  1075  0667                     l1175:	
  1076                           
  1077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1078  0667  01C3               	clrf	sprintf@c
  1079  0668  0AC3               	incf	sprintf@c,f
  1080  0669                     l1181:	
  1081                           
  1082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1083  0669  0843               	movf	sprintf@c,w
  1084  066A  00BA               	movwf	??_sprintf
  1085  066B  073A               	addwf	??_sprintf,w
  1086  066C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1087  066D  0084               	movwf	4
  1088  066E  120A  118A  200D  120A  118A  	fcall	stringdir
  1089  0673  00BB               	movwf	??_sprintf+1
  1090  0674  120A  118A  200D  120A  118A  	fcall	stringdir
  1091  0679  00BC               	movwf	??_sprintf+2
  1092  067A  083C               	movf	??_sprintf+2,w
  1093  067B  0241               	subwf	sprintf@val+1,w
  1094  067C  1D03               	skipz
  1095  067D  2E80               	goto	u575
  1096  067E  083B               	movf	??_sprintf+1,w
  1097  067F  0240               	subwf	sprintf@val,w
  1098  0680                     u575:	
  1099  0680  1C03               	btfss	3,0
  1100  0681  2E8A               	goto	l1187
  1101  0682  3001               	movlw	1
  1102  0683  00BA               	movwf	??_sprintf
  1103  0684  083A               	movf	??_sprintf,w
  1104  0685  07C3               	addwf	sprintf@c,f
  1105  0686  3005               	movlw	5
  1106  0687  0643               	xorwf	sprintf@c,w
  1107  0688  1D03               	btfss	3,2
  1108  0689  2E69               	goto	l1181
  1109  068A                     l1187:	
  1110                           
  1111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1112  068A  083E               	movf	sprintf@flag,w
  1113  068B  3903               	andlw	3
  1114  068C  1903               	btfsc	3,2
  1115  068D  2E99               	goto	l1193
  1116                           
  1117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1118  068E  302D               	movlw	45
  1119  068F  00BA               	movwf	??_sprintf
  1120  0690  0842               	movf	sprintf@sp,w
  1121  0691  0084               	movwf	4
  1122  0692  083A               	movf	??_sprintf,w
  1123  0693  1383               	bcf	3,7	;select IRP bank0
  1124  0694  0080               	movwf	0
  1125  0695  3001               	movlw	1
  1126  0696  00BA               	movwf	??_sprintf
  1127  0697  083A               	movf	??_sprintf,w
  1128  0698  07C2               	addwf	sprintf@sp,f
  1129  0699                     l1193:	
  1130                           
  1131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1132  0699  0843               	movf	sprintf@c,w
  1133  069A  00BA               	movwf	??_sprintf
  1134  069B  083A               	movf	??_sprintf,w
  1135  069C  00BF               	movwf	sprintf@prec
  1136  069D                     l1201:	
  1137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1138                           
  1139                           
  1140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1141  069D  30FF               	movlw	255
  1142  069E  00BA               	movwf	??_sprintf
  1143  069F  083A               	movf	??_sprintf,w
  1144  06A0  07BF               	addwf	sprintf@prec,f
  1145  06A1  0A3F               	incf	sprintf@prec,w
  1146  06A2  1903               	btfsc	3,2
  1147  06A3  2E12               	goto	l1203
  1148                           
  1149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1150  06A4  300A               	movlw	10
  1151  06A5  00F8               	movwf	___lwmod@divisor
  1152  06A6  3000               	movlw	0
  1153  06A7  00F9               	movwf	___lwmod@divisor+1
  1154  06A8  083F               	movf	sprintf@prec,w
  1155  06A9  00BA               	movwf	??_sprintf
  1156  06AA  073A               	addwf	??_sprintf,w
  1157  06AB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1158  06AC  0084               	movwf	4
  1159  06AD  120A  118A  200D  120A  118A  	fcall	stringdir
  1160  06B2  00F0               	movwf	___lwdiv@divisor
  1161  06B3  120A  118A  200D  120A  118A  	fcall	stringdir
  1162  06B8  00F1               	movwf	___lwdiv@divisor+1
  1163  06B9  0841               	movf	sprintf@val+1,w
  1164  06BA  00F3               	movwf	___lwdiv@dividend+1
  1165  06BB  0840               	movf	sprintf@val,w
  1166  06BC  00F2               	movwf	___lwdiv@dividend
  1167  06BD  120A  118A  257B  120A  118A  	fcall	___lwdiv
  1168  06C2  0871               	movf	?___lwdiv+1,w
  1169  06C3  00FB               	movwf	___lwmod@dividend+1
  1170  06C4  0870               	movf	?___lwdiv,w
  1171  06C5  00FA               	movwf	___lwmod@dividend
  1172  06C6  120A  118A  2549  120A  118A  	fcall	___lwmod
  1173  06CB  0878               	movf	?___lwmod,w
  1174  06CC  3E30               	addlw	48
  1175  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1176  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1177  06CF  00BB               	movwf	??_sprintf+1
  1178  06D0  083B               	movf	??_sprintf+1,w
  1179  06D1  00C3               	movwf	sprintf@c
  1180                           
  1181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1182  06D2  0843               	movf	sprintf@c,w
  1183  06D3  00BA               	movwf	??_sprintf
  1184  06D4  0842               	movf	sprintf@sp,w
  1185  06D5  0084               	movwf	4
  1186  06D6  083A               	movf	??_sprintf,w
  1187  06D7  1383               	bcf	3,7	;select IRP bank0
  1188  06D8  0080               	movwf	0
  1189  06D9  3001               	movlw	1
  1190  06DA  00BA               	movwf	??_sprintf
  1191  06DB  083A               	movf	??_sprintf,w
  1192  06DC  07C2               	addwf	sprintf@sp,f
  1193  06DD  2E9D               	goto	l1201
  1194  06DE                     l1205:	
  1195                           
  1196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1197  06DE  0842               	movf	sprintf@sp,w
  1198  06DF  0084               	movwf	4
  1199  06E0  1383               	bcf	3,7	;select IRP bank0
  1200  06E1  0180               	clrf	0
  1201  06E2  0008               	return
  1202  06E3                     __end_of_sprintf:	
  1203                           
  1204                           	psect	text2
  1205  0549                     __ptext2:	
  1206 ;; *************** function ___lwmod *****************
  1207 ;; Defined at:
  1208 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  divisor         2    8[COMMON] unsigned int 
  1211 ;;  dividend        2   10[COMMON] unsigned int 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  counter         1   13[COMMON] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  2    8[COMMON] unsigned int 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         4       0       0       0       0
  1224 ;;      Locals:         1       0       0       0       0
  1225 ;;      Temps:          1       0       0       0       0
  1226 ;;      Totals:         6       0       0       0       0
  1227 ;;Total ram usage:        6 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_sprintf
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function ___lwmod
  1238  0549                     ___lwmod:	
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1242  0549  0878               	movf	___lwmod@divisor,w
  1243  054A  0479               	iorwf	___lwmod@divisor+1,w
  1244  054B  1903               	btfsc	3,2
  1245  054C  2D76               	goto	l1063
  1246  054D  01FD               	clrf	___lwmod@counter
  1247  054E  0AFD               	incf	___lwmod@counter,f
  1248  054F                     l1053:	
  1249  054F  1BF9               	btfsc	___lwmod@divisor+1,7
  1250  0550  2D5D               	goto	l1055
  1251  0551  3001               	movlw	1
  1252  0552                     u405:	
  1253  0552  1003               	clrc
  1254  0553  0DF8               	rlf	___lwmod@divisor,f
  1255  0554  0DF9               	rlf	___lwmod@divisor+1,f
  1256  0555  3EFF               	addlw	-1
  1257  0556  1D03               	skipz
  1258  0557  2D52               	goto	u405
  1259  0558  3001               	movlw	1
  1260  0559  00FC               	movwf	??___lwmod
  1261  055A  087C               	movf	??___lwmod,w
  1262  055B  07FD               	addwf	___lwmod@counter,f
  1263  055C  2D4F               	goto	l1053
  1264  055D                     l1055:	
  1265  055D  0879               	movf	___lwmod@divisor+1,w
  1266  055E  027B               	subwf	___lwmod@dividend+1,w
  1267  055F  1D03               	skipz
  1268  0560  2D63               	goto	u425
  1269  0561  0878               	movf	___lwmod@divisor,w
  1270  0562  027A               	subwf	___lwmod@dividend,w
  1271  0563                     u425:	
  1272  0563  1C03               	skipc
  1273  0564  2D6B               	goto	l1059
  1274  0565  0878               	movf	___lwmod@divisor,w
  1275  0566  02FA               	subwf	___lwmod@dividend,f
  1276  0567  0879               	movf	___lwmod@divisor+1,w
  1277  0568  1C03               	skipc
  1278  0569  03FB               	decf	___lwmod@dividend+1,f
  1279  056A  02FB               	subwf	___lwmod@dividend+1,f
  1280  056B                     l1059:	
  1281  056B  3001               	movlw	1
  1282  056C                     u435:	
  1283  056C  1003               	clrc
  1284  056D  0CF9               	rrf	___lwmod@divisor+1,f
  1285  056E  0CF8               	rrf	___lwmod@divisor,f
  1286  056F  3EFF               	addlw	-1
  1287  0570  1D03               	skipz
  1288  0571  2D6C               	goto	u435
  1289  0572  3001               	movlw	1
  1290  0573  02FD               	subwf	___lwmod@counter,f
  1291  0574  1D03               	btfss	3,2
  1292  0575  2D5D               	goto	l1055
  1293  0576                     l1063:	
  1294  0576  087B               	movf	___lwmod@dividend+1,w
  1295  0577  00F9               	movwf	?___lwmod+1
  1296  0578  087A               	movf	___lwmod@dividend,w
  1297  0579  00F8               	movwf	?___lwmod
  1298  057A  0008               	return
  1299  057B                     __end_of___lwmod:	
  1300                           
  1301                           	psect	text3
  1302  057B                     __ptext3:	
  1303 ;; *************** function ___lwdiv *****************
  1304 ;; Defined at:
  1305 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  divisor         2    0[COMMON] unsigned int 
  1308 ;;  dividend        2    2[COMMON] unsigned int 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  quotient        2    5[COMMON] unsigned int 
  1311 ;;  counter         1    7[COMMON] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  2    0[COMMON] unsigned int 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         4       0       0       0       0
  1322 ;;      Locals:         3       0       0       0       0
  1323 ;;      Temps:          1       0       0       0       0
  1324 ;;      Totals:         8       0       0       0       0
  1325 ;;Total ram usage:        8 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_sprintf
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           
  1335                           ;psect for function ___lwdiv
  1336  057B                     ___lwdiv:	
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1340  057B  01F5               	clrf	___lwdiv@quotient
  1341  057C  01F6               	clrf	___lwdiv@quotient+1
  1342  057D  0870               	movf	___lwdiv@divisor,w
  1343  057E  0471               	iorwf	___lwdiv@divisor+1,w
  1344  057F  1903               	btfsc	3,2
  1345  0580  2DB2               	goto	l1041
  1346  0581  01F7               	clrf	___lwdiv@counter
  1347  0582  0AF7               	incf	___lwdiv@counter,f
  1348  0583                     l1029:	
  1349  0583  1BF1               	btfsc	___lwdiv@divisor+1,7
  1350  0584  2D91               	goto	l1031
  1351  0585  3001               	movlw	1
  1352  0586                     u335:	
  1353  0586  1003               	clrc
  1354  0587  0DF0               	rlf	___lwdiv@divisor,f
  1355  0588  0DF1               	rlf	___lwdiv@divisor+1,f
  1356  0589  3EFF               	addlw	-1
  1357  058A  1D03               	skipz
  1358  058B  2D86               	goto	u335
  1359  058C  3001               	movlw	1
  1360  058D  00F4               	movwf	??___lwdiv
  1361  058E  0874               	movf	??___lwdiv,w
  1362  058F  07F7               	addwf	___lwdiv@counter,f
  1363  0590  2D83               	goto	l1029
  1364  0591                     l1031:	
  1365  0591  3001               	movlw	1
  1366  0592                     u355:	
  1367  0592  1003               	clrc
  1368  0593  0DF5               	rlf	___lwdiv@quotient,f
  1369  0594  0DF6               	rlf	___lwdiv@quotient+1,f
  1370  0595  3EFF               	addlw	-1
  1371  0596  1D03               	skipz
  1372  0597  2D92               	goto	u355
  1373  0598  0871               	movf	___lwdiv@divisor+1,w
  1374  0599  0273               	subwf	___lwdiv@dividend+1,w
  1375  059A  1D03               	skipz
  1376  059B  2D9E               	goto	u365
  1377  059C  0870               	movf	___lwdiv@divisor,w
  1378  059D  0272               	subwf	___lwdiv@dividend,w
  1379  059E                     u365:	
  1380  059E  1C03               	skipc
  1381  059F  2DA7               	goto	l1037
  1382  05A0  0870               	movf	___lwdiv@divisor,w
  1383  05A1  02F2               	subwf	___lwdiv@dividend,f
  1384  05A2  0871               	movf	___lwdiv@divisor+1,w
  1385  05A3  1C03               	skipc
  1386  05A4  03F3               	decf	___lwdiv@dividend+1,f
  1387  05A5  02F3               	subwf	___lwdiv@dividend+1,f
  1388  05A6  1475               	bsf	___lwdiv@quotient,0
  1389  05A7                     l1037:	
  1390  05A7  3001               	movlw	1
  1391  05A8                     u375:	
  1392  05A8  1003               	clrc
  1393  05A9  0CF1               	rrf	___lwdiv@divisor+1,f
  1394  05AA  0CF0               	rrf	___lwdiv@divisor,f
  1395  05AB  3EFF               	addlw	-1
  1396  05AC  1D03               	skipz
  1397  05AD  2DA8               	goto	u375
  1398  05AE  3001               	movlw	1
  1399  05AF  02F7               	subwf	___lwdiv@counter,f
  1400  05B0  1D03               	btfss	3,2
  1401  05B1  2D91               	goto	l1031
  1402  05B2                     l1041:	
  1403  05B2  0876               	movf	___lwdiv@quotient+1,w
  1404  05B3  00F1               	movwf	?___lwdiv+1
  1405  05B4  0875               	movf	___lwdiv@quotient,w
  1406  05B5  00F0               	movwf	?___lwdiv
  1407  05B6  0008               	return
  1408  05B7                     __end_of___lwdiv:	
  1409                           
  1410                           	psect	text4
  1411  049B                     __ptext4:	
  1412 ;; *************** function _oscilator_begin *****************
  1413 ;; Defined at:
  1414 ;;		line 9 in file "./Oscilator.h"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  freq            1    wreg     unsigned char 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  freq            1    1[COMMON] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       0       0       0       0
  1429 ;;      Locals:         1       0       0       0       0
  1430 ;;      Temps:          1       0       0       0       0
  1431 ;;      Totals:         2       0       0       0       0
  1432 ;;Total ram usage:        2 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _oscilator_begin
  1443  049B                     _oscilator_begin:	
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
  1447                           ;oscilator_begin@freq stored from wreg
  1448  049B  00F1               	movwf	oscilator_begin@freq
  1449                           
  1450                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
  1451  049C  0871               	movf	oscilator_begin@freq,w
  1452  049D  00F0               	movwf	??_oscilator_begin
  1453  049E  0EF0               	swapf	??_oscilator_begin,f
  1454  049F  1683               	bsf	3,5	;RP0=1, select bank1
  1455  04A0  1303               	bcf	3,6	;RP1=0, select bank1
  1456  04A1  080F               	movf	15,w	;volatile
  1457  04A2  0670               	xorwf	??_oscilator_begin,w
  1458  04A3  398F               	andlw	-113
  1459  04A4  0670               	xorwf	??_oscilator_begin,w
  1460  04A5  008F               	movwf	15	;volatile
  1461                           
  1462                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
  1463  04A6  140F               	bsf	15,0	;volatile
  1464                           
  1465                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
  1466  04A7  118F               	bcf	15,3	;volatile
  1467  04A8  0008               	return
  1468  04A9                     __end_of_oscilator_begin:	
  1469                           
  1470                           	psect	text5
  1471  04FE                     __ptext5:	
  1472 ;; *************** function _dht11_read *****************
  1473 ;; Defined at:
  1474 ;;		line 31 in file "dht11_h.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      unsigned char 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0
  1490 ;;      Temps:          2       0       0       0       0
  1491 ;;      Totals:         2       0       0       0       0
  1492 ;;Total ram usage:        2 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _dht11_read
  1503  04FE                     _dht11_read:	
  1504                           
  1505                           ;dht11_h.c: 33:     static uint8_t i = 0, temp;;dht11_h.c: 34:     for(i = 0; i < 8 ; i+
      +                          +)
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _dht11_read: [wreg+status,2+status,0]
  1509  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1510  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0500  01A1               	clrf	dht11_read@i
  1512  0501                     l103:	
  1513  0501  1C05               	btfss	5,0	;volatile
  1514  0502  2D01               	goto	l103
  1515                           
  1516                           ;dht11_h.c: 37:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  1517  0503  3013               	movlw	19
  1518  0504  00F0               	movwf	??_dht11_read
  1519  0505                     u647:	
  1520  0505  0BF0               	decfsz	??_dht11_read,f
  1521  0506  2D05               	goto	u647
  1522  0507  2D08               	nop2
  1523                           
  1524                           ;dht11_h.c: 38:         if (RA0)
  1525  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1527  050A  1C05               	btfss	5,0	;volatile
  1528  050B  2D0F               	goto	l1141
  1529                           
  1530                           ;dht11_h.c: 39:         {;dht11_h.c: 40:             temp = ((temp<<1) | 1);
  1531  050C  1403               	setc
  1532  050D  0DA0               	rlf	dht11_read@temp,f
  1533                           
  1534                           ;dht11_h.c: 41:         }
  1535  050E  2D15               	goto	l108
  1536  050F                     l1141:	
  1537                           
  1538                           ;dht11_h.c: 43:           temp = (temp<<1);
  1539  050F  0820               	movf	dht11_read@temp,w
  1540  0510  00F0               	movwf	??_dht11_read
  1541  0511  0770               	addwf	??_dht11_read,w
  1542  0512  00F1               	movwf	??_dht11_read+1
  1543  0513  0871               	movf	??_dht11_read+1,w
  1544  0514  00A0               	movwf	dht11_read@temp
  1545  0515                     l108:	
  1546  0515  1805               	btfsc	5,0	;volatile
  1547  0516  2D15               	goto	l108
  1548                           
  1549                           ;dht11_h.c: 45:     }
  1550  0517  3001               	movlw	1
  1551  0518  00F0               	movwf	??_dht11_read
  1552  0519  0870               	movf	??_dht11_read,w
  1553  051A  07A1               	addwf	dht11_read@i,f
  1554  051B  3008               	movlw	8
  1555  051C  0221               	subwf	dht11_read@i,w
  1556  051D  1C03               	skipc
  1557  051E  2D01               	goto	l103
  1558                           
  1559                           ;dht11_h.c: 46:     return temp;
  1560  051F  0820               	movf	dht11_read@temp,w
  1561  0520  0008               	return
  1562  0521                     __end_of_dht11_read:	
  1563                           
  1564                           	psect	text6
  1565  0487                     __ptext6:	
  1566 ;; *************** function _dht11_check *****************
  1567 ;; Defined at:
  1568 ;;		line 24 in file "dht11_h.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		None
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0
  1585 ;;      Totals:         0       0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _dht11_check
  1597  0487                     _dht11_check:	
  1598  0487                     l85:	
  1599                           ;dht11_h.c: 26:     while(RA0);
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in _dht11_check: []
  1603                           
  1604  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0489  1805               	btfsc	5,0	;volatile
  1607  048A  2C87               	goto	l85
  1608  048B                     l88:	
  1609  048B  1C05               	btfss	5,0	;volatile
  1610  048C  2C8B               	goto	l88
  1611  048D                     l91:	
  1612  048D  1C05               	btfss	5,0	;volatile
  1613  048E  0008               	return
  1614  048F  2C8D               	goto	l91
  1615  0490                     __end_of_dht11_check:	
  1616                           
  1617                           	psect	text7
  1618  04E4                     __ptext7:	
  1619 ;; *************** function _dht11_begin *****************
  1620 ;; Defined at:
  1621 ;;		line 13 in file "dht11_h.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          2       0       0       0       0
  1638 ;;      Totals:         2       0       0       0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _dht11_begin
  1650  04E4                     _dht11_begin:	
  1651                           
  1652                           ;dht11_h.c: 15:     TRISA0 = 0;
  1653                           
  1654                           ;incstack = 0
  1655                           ; Regs used in _dht11_begin: [wreg]
  1656  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  1657  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  1658  04E6  1005               	bcf	5,0	;volatile
  1659                           
  1660                           ;dht11_h.c: 16:     RA0 = 0;
  1661  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1662  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1663  04E9  1005               	bcf	5,0	;volatile
  1664                           
  1665                           ;dht11_h.c: 17:     _delay((unsigned long)((18)*(8000000/4000.0)));
  1666  04EA  302F               	movlw	47
  1667  04EB  00F1               	movwf	??_dht11_begin+1
  1668  04EC  30BF               	movlw	191
  1669  04ED  00F0               	movwf	??_dht11_begin
  1670  04EE                     u657:	
  1671  04EE  0BF0               	decfsz	??_dht11_begin,f
  1672  04EF  2CEE               	goto	u657
  1673  04F0  0BF1               	decfsz	??_dht11_begin+1,f
  1674  04F1  2CEE               	goto	u657
  1675  04F2  2CF3               	nop2
  1676                           
  1677                           ;dht11_h.c: 18:     RA0 = 1;
  1678  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1679  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1680  04F5  1405               	bsf	5,0	;volatile
  1681                           
  1682                           ;dht11_h.c: 19:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  1683  04F6  300D               	movlw	13
  1684  04F7  00F0               	movwf	??_dht11_begin
  1685  04F8                     u667:	
  1686  04F8  0BF0               	decfsz	??_dht11_begin,f
  1687  04F9  2CF8               	goto	u667
  1688                           
  1689                           ;dht11_h.c: 20:     TRISA0 = 1;
  1690  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  1691  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  1692  04FC  1405               	bsf	5,0	;volatile
  1693  04FD  0008               	return
  1694  04FE                     __end_of_dht11_begin:	
  1695                           
  1696                           	psect	text8
  1697  0521                     __ptext8:	
  1698 ;; *************** function _LCD8_strWrite *****************
  1699 ;; Defined at:
  1700 ;;		line 55 in file "./LCD8bit.h"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  data            2    2[COMMON] PTR unsigned char 
  1703 ;;		 -> show(15), STR_2(13), STR_1(15), 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  i               1    5[COMMON] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         2       0       0       0       0
  1716 ;;      Locals:         1       0       0       0       0
  1717 ;;      Temps:          1       0       0       0       0
  1718 ;;      Totals:         4       0       0       0       0
  1719 ;;Total ram usage:        4 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    1
  1722 ;; This function calls:
  1723 ;;		_LCD8_write
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _LCD8_strWrite
  1731  0521                     _LCD8_strWrite:	
  1732                           
  1733                           ;./LCD8bit.h: 56:     char i;;./LCD8bit.h: 57:         for(i=0; data[i] !='\0';i++ )
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _LCD8_strWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1737  0521  01F5               	clrf	LCD8_strWrite@i
  1738  0522                     l1111:	
  1739  0522  0875               	movf	LCD8_strWrite@i,w
  1740  0523  0772               	addwf	LCD8_strWrite@data,w
  1741  0524  0084               	movwf	4
  1742  0525  0873               	movf	LCD8_strWrite@data+1,w
  1743  0526  1803               	skipnc
  1744  0527  0A73               	incf	LCD8_strWrite@data+1,w
  1745  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1747  052A  00FF               	movwf	127
  1748  052B  120A  118A  2003  120A  118A  	fcall	stringtab
  1749  0530  3A00               	xorlw	0
  1750  0531  1903               	btfsc	3,2
  1751  0532  0008               	return
  1752                           
  1753                           ;./LCD8bit.h: 58:             LCD8_write(data[i]);
  1754  0533  0875               	movf	LCD8_strWrite@i,w
  1755  0534  0772               	addwf	LCD8_strWrite@data,w
  1756  0535  0084               	movwf	4
  1757  0536  0873               	movf	LCD8_strWrite@data+1,w
  1758  0537  1803               	skipnc
  1759  0538  0A73               	incf	LCD8_strWrite@data+1,w
  1760  0539  00FF               	movwf	127
  1761  053A  120A  118A  2003  120A  118A  	fcall	stringtab
  1762  053F  120A  118A  24A9  120A  118A  	fcall	_LCD8_write
  1763  0544  3001               	movlw	1
  1764  0545  00F4               	movwf	??_LCD8_strWrite
  1765  0546  0874               	movf	??_LCD8_strWrite,w
  1766  0547  07F5               	addwf	LCD8_strWrite@i,f
  1767  0548  2D22               	goto	l1111
  1768  0549                     __end_of_LCD8_strWrite:	
  1769                           
  1770                           	psect	text9
  1771  04A9                     __ptext9:	
  1772 ;; *************** function _LCD8_write *****************
  1773 ;; Defined at:
  1774 ;;		line 4 in file "./LCD8bit.h"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  data            1    wreg     unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  data            1    1[COMMON] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       0       0       0       0
  1789 ;;      Locals:         1       0       0       0       0
  1790 ;;      Temps:          1       0       0       0       0
  1791 ;;      Totals:         2       0       0       0       0
  1792 ;;Total ram usage:        2 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_LCD8_strWrite
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function _LCD8_write
  1803  04A9                     _LCD8_write:	
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in _LCD8_write: [wreg]
  1807                           ;LCD8_write@data stored from wreg
  1808  04A9  00F1               	movwf	LCD8_write@data
  1809                           
  1810                           ;./LCD8bit.h: 5:     RA1 = 1;
  1811  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1812  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1813  04AC  1485               	bsf	5,1	;volatile
  1814                           
  1815                           ;./LCD8bit.h: 6:     PORTB = data;
  1816  04AD  0871               	movf	LCD8_write@data,w
  1817  04AE  0086               	movwf	6	;volatile
  1818                           
  1819                           ;./LCD8bit.h: 7:     RA2 = 1;
  1820  04AF  1505               	bsf	5,2	;volatile
  1821                           
  1822                           ;./LCD8bit.h: 8:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1823  04B0  301A               	movlw	26
  1824  04B1  00F0               	movwf	??_LCD8_write
  1825  04B2                     u677:	
  1826  04B2  0BF0               	decfsz	??_LCD8_write,f
  1827  04B3  2CB2               	goto	u677
  1828  04B4  0000               	nop
  1829                           
  1830                           ;./LCD8bit.h: 9:     RA2 = 0;
  1831  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1832  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1833  04B7  1105               	bcf	5,2	;volatile
  1834  04B8  0008               	return
  1835  04B9                     __end_of_LCD8_write:	
  1836                           
  1837                           	psect	text10
  1838  04CD                     __ptext10:	
  1839 ;; *************** function _LCD8_set_cursor *****************
  1840 ;; Defined at:
  1841 ;;		line 21 in file "./LCD8bit.h"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  row             1    wreg     unsigned char 
  1844 ;;  column          1    3[COMMON] unsigned char 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  row             1    6[COMMON] unsigned char 
  1847 ;;  cursor          1    5[COMMON] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         1       0       0       0       0
  1858 ;;      Locals:         2       0       0       0       0
  1859 ;;      Temps:          1       0       0       0       0
  1860 ;;      Totals:         4       0       0       0       0
  1861 ;;Total ram usage:        4 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    1
  1864 ;; This function calls:
  1865 ;;		_LCD8_cmd
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _LCD8_set_cursor
  1873  04CD                     _LCD8_set_cursor:	
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _LCD8_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1877                           ;LCD8_set_cursor@row stored from wreg
  1878  04CD  00F6               	movwf	LCD8_set_cursor@row
  1879                           
  1880                           ;./LCD8bit.h: 22:     char cursor;;./LCD8bit.h: 24:         if(row==1)
  1881  04CE  0376               	decf	LCD8_set_cursor@row,w
  1882  04CF  1D03               	btfss	3,2
  1883  04D0  2CD6               	goto	l27
  1884                           
  1885                           ;./LCD8bit.h: 25:             cursor = 128 + column -1;
  1886  04D1  0873               	movf	LCD8_set_cursor@column,w
  1887  04D2  3E7F               	addlw	127
  1888  04D3  00F4               	movwf	??_LCD8_set_cursor
  1889  04D4  0874               	movf	??_LCD8_set_cursor,w
  1890  04D5  00F5               	movwf	LCD8_set_cursor@cursor
  1891  04D6                     l27:	
  1892                           
  1893                           ;./LCD8bit.h: 26:         if (row==2)
  1894  04D6  3002               	movlw	2
  1895  04D7  0676               	xorwf	LCD8_set_cursor@row,w
  1896  04D8  1D03               	btfss	3,2
  1897  04D9  2CDF               	goto	l1073
  1898                           
  1899                           ;./LCD8bit.h: 27:             cursor = 192 + column -1;
  1900  04DA  0873               	movf	LCD8_set_cursor@column,w
  1901  04DB  3EBF               	addlw	191
  1902  04DC  00F4               	movwf	??_LCD8_set_cursor
  1903  04DD  0874               	movf	??_LCD8_set_cursor,w
  1904  04DE  00F5               	movwf	LCD8_set_cursor@cursor
  1905  04DF                     l1073:	
  1906                           
  1907                           ;./LCD8bit.h: 29:         LCD8_cmd(cursor);
  1908  04DF  0875               	movf	LCD8_set_cursor@cursor,w
  1909  04E0  120A  118A  24B9   	fcall	_LCD8_cmd
  1910  04E3  0008               	return
  1911  04E4                     __end_of_LCD8_set_cursor:	
  1912                           
  1913                           	psect	text11
  1914  0490                     __ptext11:	
  1915 ;; *************** function _LCD8_clear *****************
  1916 ;; Defined at:
  1917 ;;		line 32 in file "./LCD8bit.h"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0
  1934 ;;      Totals:         0       0       0       0       0
  1935 ;;Total ram usage:        0 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    1
  1938 ;; This function calls:
  1939 ;;		_LCD8_cmd
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _LCD8_clear
  1947  0490                     _LCD8_clear:	
  1948                           
  1949                           ;./LCD8bit.h: 33:     LCD8_cmd(0);
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _LCD8_clear: [wreg+status,2+status,0+pclath+cstack]
  1953  0490  3000               	movlw	0
  1954  0491  120A  118A  24B9  120A  118A  	fcall	_LCD8_cmd
  1955                           
  1956                           ;./LCD8bit.h: 34:     LCD8_cmd(1);
  1957  0496  3001               	movlw	1
  1958  0497  120A  118A  24B9   	fcall	_LCD8_cmd
  1959  049A  0008               	return
  1960  049B                     __end_of_LCD8_clear:	
  1961                           
  1962                           	psect	text12
  1963  05B7                     __ptext12:	
  1964 ;; *************** function _LCD8_begin *****************
  1965 ;; Defined at:
  1966 ;;		line 37 in file "./LCD8bit.h"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0
  1982 ;;      Temps:          2       0       0       0       0
  1983 ;;      Totals:         2       0       0       0       0
  1984 ;;Total ram usage:        2 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    1
  1987 ;; This function calls:
  1988 ;;		_LCD8_cmd
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _LCD8_begin
  1996  05B7                     _LCD8_begin:	
  1997                           
  1998                           ;./LCD8bit.h: 38:     PORTB = 0;
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _LCD8_begin: [wreg+status,2+status,0+pclath+cstack]
  2002  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2003  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2004  05B9  0186               	clrf	6	;volatile
  2005                           
  2006                           ;./LCD8bit.h: 39:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2007  05BA  3034               	movlw	52
  2008  05BB  00F4               	movwf	??_LCD8_begin+1
  2009  05BC  30F1               	movlw	241
  2010  05BD  00F3               	movwf	??_LCD8_begin
  2011  05BE                     u687:	
  2012  05BE  0BF3               	decfsz	??_LCD8_begin,f
  2013  05BF  2DBE               	goto	u687
  2014  05C0  0BF4               	decfsz	??_LCD8_begin+1,f
  2015  05C1  2DBE               	goto	u687
  2016  05C2  2DC3               	nop2
  2017                           
  2018                           ;./LCD8bit.h: 40:     LCD8_cmd(48);
  2019  05C3  3030               	movlw	48
  2020  05C4  120A  118A  24B9  120A  118A  	fcall	_LCD8_cmd
  2021                           
  2022                           ;./LCD8bit.h: 41:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2023  05C9  300D               	movlw	13
  2024  05CA  00F4               	movwf	??_LCD8_begin+1
  2025  05CB  30FB               	movlw	251
  2026  05CC  00F3               	movwf	??_LCD8_begin
  2027  05CD                     u697:	
  2028  05CD  0BF3               	decfsz	??_LCD8_begin,f
  2029  05CE  2DCD               	goto	u697
  2030  05CF  0BF4               	decfsz	??_LCD8_begin+1,f
  2031  05D0  2DCD               	goto	u697
  2032  05D1  2DD2               	nop2
  2033                           
  2034                           ;./LCD8bit.h: 42:     LCD8_cmd(48);
  2035  05D2  3030               	movlw	48
  2036  05D3  120A  118A  24B9  120A  118A  	fcall	_LCD8_cmd
  2037                           
  2038                           ;./LCD8bit.h: 43:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  2039  05D8  306D               	movlw	109
  2040  05D9  00F3               	movwf	??_LCD8_begin
  2041  05DA                     u707:	
  2042  05DA  0BF3               	decfsz	??_LCD8_begin,f
  2043  05DB  2DDA               	goto	u707
  2044  05DC  2DDD               	nop2
  2045                           
  2046                           ;./LCD8bit.h: 44:     LCD8_cmd(48);
  2047  05DD  3030               	movlw	48
  2048  05DE  120A  118A  24B9  120A  118A  	fcall	_LCD8_cmd
  2049                           
  2050                           ;./LCD8bit.h: 45:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  2051  05E3  306D               	movlw	109
  2052  05E4  00F3               	movwf	??_LCD8_begin
  2053  05E5                     u717:	
  2054  05E5  0BF3               	decfsz	??_LCD8_begin,f
  2055  05E6  2DE5               	goto	u717
  2056  05E7  2DE8               	nop2
  2057                           
  2058                           ;./LCD8bit.h: 47:     LCD8_cmd(0b111000);
  2059  05E8  3038               	movlw	56
  2060  05E9  120A  118A  24B9  120A  118A  	fcall	_LCD8_cmd
  2061                           
  2062                           ;./LCD8bit.h: 48:     LCD8_cmd(0b10100);
  2063  05EE  3014               	movlw	20
  2064  05EF  120A  118A  24B9  120A  118A  	fcall	_LCD8_cmd
  2065                           
  2066                           ;./LCD8bit.h: 49:     LCD8_cmd(1);
  2067  05F4  3001               	movlw	1
  2068  05F5  120A  118A  24B9  120A  118A  	fcall	_LCD8_cmd
  2069                           
  2070                           ;./LCD8bit.h: 50:     LCD8_cmd(0b110);
  2071  05FA  3006               	movlw	6
  2072  05FB  120A  118A  24B9  120A  118A  	fcall	_LCD8_cmd
  2073                           
  2074                           ;./LCD8bit.h: 51:     LCD8_cmd(0b1100);
  2075  0600  300C               	movlw	12
  2076  0601  120A  118A  24B9  120A  118A  	fcall	_LCD8_cmd
  2077                           
  2078                           ;./LCD8bit.h: 52:     LCD8_cmd(0b10);
  2079  0606  3002               	movlw	2
  2080  0607  120A  118A  24B9   	fcall	_LCD8_cmd
  2081  060A  0008               	return
  2082  060B                     __end_of_LCD8_begin:	
  2083                           
  2084                           	psect	text13
  2085  04B9                     __ptext13:	
  2086 ;; *************** function _LCD8_cmd *****************
  2087 ;; Defined at:
  2088 ;;		line 12 in file "./LCD8bit.h"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  data            1    wreg     unsigned char 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  data            1    2[COMMON] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2102 ;;      Params:         0       0       0       0       0
  2103 ;;      Locals:         1       0       0       0       0
  2104 ;;      Temps:          2       0       0       0       0
  2105 ;;      Totals:         3       0       0       0       0
  2106 ;;Total ram usage:        3 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_LCD8_set_cursor
  2112 ;;		_LCD8_clear
  2113 ;;		_LCD8_begin
  2114 ;;		_LCD8_shiftR
  2115 ;;		_LCD8_shiftL
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           
  2120                           ;psect for function _LCD8_cmd
  2121  04B9                     _LCD8_cmd:	
  2122                           
  2123                           ;incstack = 0
  2124                           ; Regs used in _LCD8_cmd: [wreg]
  2125                           ;LCD8_cmd@data stored from wreg
  2126  04B9  00F2               	movwf	LCD8_cmd@data
  2127                           
  2128                           ;./LCD8bit.h: 13:     RA1 = 0;
  2129  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2130  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2131  04BC  1085               	bcf	5,1	;volatile
  2132                           
  2133                           ;./LCD8bit.h: 14:     PORTB = data;
  2134  04BD  0872               	movf	LCD8_cmd@data,w
  2135  04BE  0086               	movwf	6	;volatile
  2136                           
  2137                           ;./LCD8bit.h: 16:     RA2 = 1;
  2138  04BF  1505               	bsf	5,2	;volatile
  2139                           
  2140                           ;./LCD8bit.h: 17:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2141  04C0  300B               	movlw	11
  2142  04C1  00F1               	movwf	??_LCD8_cmd+1
  2143  04C2  3062               	movlw	98
  2144  04C3  00F0               	movwf	??_LCD8_cmd
  2145  04C4                     u727:	
  2146  04C4  0BF0               	decfsz	??_LCD8_cmd,f
  2147  04C5  2CC4               	goto	u727
  2148  04C6  0BF1               	decfsz	??_LCD8_cmd+1,f
  2149  04C7  2CC4               	goto	u727
  2150  04C8  0000               	nop
  2151                           
  2152                           ;./LCD8bit.h: 18:     RA2 = 0;
  2153  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2154  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2155  04CB  1105               	bcf	5,2	;volatile
  2156  04CC  0008               	return
  2157  04CD                     __end_of_LCD8_cmd:	
  2158  007E                     btemp	set	126	;btemp
  2159  007E                     wtemp0	set	126


Data Sizes:
    Strings     32
    Constant    10
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> show(BANK0[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD8_strWrite@data	PTR unsigned char  size(2) Largest target is 15
		 -> show(BANK0[15]), STR_2(CODE[13]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD8_strWrite->_LCD8_write
    _LCD8_set_cursor->_LCD8_cmd
    _LCD8_clear->_LCD8_cmd
    _LCD8_begin->_LCD8_cmd

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2610
                                             13 BANK0      3     3      0
                         _LCD8_begin
                         _LCD8_clear
                    _LCD8_set_cursor
                      _LCD8_strWrite
                        _dht11_begin
                        _dht11_check
                         _dht11_read
                    _oscilator_begin
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1538
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _oscilator_begin                                      2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dht11_read                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dht11_check                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dht11_begin                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_strWrite                                        4     2      2     568
                                              2 COMMON     4     2      2
                         _LCD8_write
 ---------------------------------------------------------------------------------
 (2) _LCD8_write                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_set_cursor                                      4     3      1     438
                                              3 COMMON     4     3      1
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD8_clear                                           0     0      0      22
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD8_begin                                           2     2      0      22
                                              3 COMMON     2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD8_cmd                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD8_begin
     _LCD8_cmd
   _LCD8_clear
     _LCD8_cmd
   _LCD8_set_cursor
     _LCD8_cmd
   _LCD8_strWrite
     _LCD8_write
   _dht11_begin
   _dht11_check
   _dht11_read
   _oscilator_begin
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      35       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      35      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 23 20:46:30 2019

      LCD8_set_cursor@row 0076                         pc 0002               __CFG_CP$OFF 0000  
   LCD8_set_cursor@column 0073                        l27 04D6                        l91 048D  
                      l85 0487                        l69 06F3                        l88 048B  
   LCD8_set_cursor@cursor 0075                        fsr 0004      __size_of_dht11_begin 001A  
    __size_of_dht11_check 0009                       l103 0501                       l108 0515  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
                     u405 0552                       u335 0586                       u425 0563  
            __CFG_CPD$OFF 0000                       u355 0592                       u435 056C  
                     u365 059E                       u375 05A8                       u707 05DA  
                     u717 05E5                       u637 07ED                       u727 04C4  
                     u647 0505                       u575 0680                       u657 04EE  
                     u667 04F8                       u677 04B2                       u687 05BE  
                     u697 05CD                       fsr0 0004                       indf 0000  
            __CFG_LVP$OFF 0000                      l1111 0522                      l1031 0591  
                    l1041 05B2                      l1201 069D                      l1203 0612  
                    l1141 050F                      l1037 05A7                      l1029 0583  
                    l1053 054F                      l1205 06DE                      l1055 055D  
                    l1063 0576                      l1073 04DF                      l1241 0765  
                    l1059 056B                      l1181 0669                      l1165 0650  
                    l1175 0667                      l1159 0632                      l1193 0699  
                    l1187 068A                      l1275 0645                      STR_1 001D  
                    STR_2 002C                      STR_3 003A                      STR_4 0039  
                    STR_5 003A                      STR_6 0039              __CFG_WRT$OFF 0000  
                    _main 06E3                      _show 0028                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0000             __CFG_IESO$OFF 0000  
 __end_of_oscilator_begin 04A9          __end_of_LCD8_cmd 04CD       __size_of_LCD8_begin 0054  
     __size_of_LCD8_clear 000B           _LCD8_set_cursor 04CD                     ?_main 0070  
     __size_of_LCD8_write 0010             __CFG_WDTE$OFF 0000           __end_of___lwdiv 05B7  
         __end_of___lwmod 057B                     _PORTB 0006            __CFG_FCMEN$OFF 0000  
                   _check 0023           __end_of_dpowers 001D                     _total 0022  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 06E3            __CFG_MCLRE$OFF 0000           __initialization 07F5  
            __end_of_main 07F5                    ??_main 0044                    _TRISA0 0428  
          __CFG_PWRTE$OFF 0000   __end_of_LCD8_set_cursor 04E4          ?_oscilator_begin 0070  
               ??___lwdiv 0074                 ??___lwmod 007C            dht11_read@temp 0020  
            ??_LCD8_begin 0073                 ??_sprintf 003A              ??_LCD8_clear 0073  
               ?_LCD8_cmd 0070              ??_LCD8_write 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070                _dht11_read 04FE        __end_of_LCD8_begin 060B  
      __end_of_LCD8_clear 049B        __end_of_LCD8_write 04B9                ??_LCD8_cmd 0070  
              __pbssBANK0 0020     __end_of_LCD8_strWrite 0549                __pmaintext 06E3  
           ??_dht11_begin 0070             ??_dht11_check 0070          ?_LCD8_set_cursor 0073  
              __stringtab 0003               ?_dht11_read 0070                   ___lwdiv 057B  
                 ___lwmod 0549                   __ptext1 060B                   __ptext2 0549  
                 __ptext3 057B                   __ptext4 049B                   __ptext5 04FE  
                 __ptext6 0487                   __ptext7 04E4                   __ptext8 0521  
                 __ptext9 04A9       __end_of_dht11_begin 04FE       __end_of_dht11_check 0490  
                 _dpowers 0013                   _hum_dec 0024         LCD8_strWrite@data 0072  
                 _hum_int 0025                   _sprintf 060B                   clrloop0 0480  
    end_of_initialization 07FC       __size_of_dht11_read 0023         __size_of_LCD8_cmd 0014  
             _dht11_begin 04E4               _dht11_check 0487  __size_of_oscilator_begin 000E  
     start_initialization 07F5  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
           __pcstackBANK0 0037               dht11_read@i 0021               sprintf@flag 003E  
             sprintf@prec 003F          ___lwdiv@dividend 0072              ??_dht11_read 0070  
                ?___lwdiv 0070                  ?___lwmod 0078            LCD8_strWrite@i 0075  
               __pstrings 0003    __size_of_LCD8_strWrite 0028  __size_of_LCD8_set_cursor 0017  
          LCD8_write@data 0071          ___lwdiv@quotient 0075                  ?_sprintf 0037  
       ??_oscilator_begin 0070                  _LCD8_cmd 04B9        __end_of_dht11_read 0521  
               clear_ram0 047F               __stringbase 0012             _LCD8_strWrite 0521  
     oscilator_begin@freq 0071              ?_dht11_begin 0070              ?_dht11_check 0070  
        __size_of___lwdiv 003C          __size_of___lwmod 0032        __end_of__stringtab 0013  
              sprintf@val 0040           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 04CD                  __ptext11 0490                  __ptext12 05B7  
                __ptext13 04B9         __CFG_BOR4V$BOR40V 0000         ??_LCD8_set_cursor 0074  
              _LCD8_begin 05B7                _LCD8_clear 0490          __size_of_sprintf 00D8  
          ?_LCD8_strWrite 0072                _LCD8_write 04A9             __size_of_main 0112  
            LCD8_cmd@data 0072                  _temp_dec 0026                  _temp_int 0027  
               sprintf@ap 003D                 sprintf@sp 0042          ___lwmod@dividend 007A  
               stringcode 000D                _OSCCONbits 008F           _oscilator_begin 049B  
                sprintf@c 0043                  sprintf@f 0037           ___lwmod@divisor 0078  
         ___lwmod@counter 007D                  stringdir 000D                  stringtab 0003  
         ??_LCD8_strWrite 0074               ?_LCD8_begin 0070               ?_LCD8_clear 0070  
             ?_LCD8_write 0070  
