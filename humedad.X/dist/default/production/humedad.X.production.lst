

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 24 14:22:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.05
    31                           ; Generated 20/12/2018 GMT
    32                           ; 
    33                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376                           
   377                           	psect	strings
   378  0267                     __pstrings:	
   379  0267                     stringtab:	
   380  0267                     __stringtab:	
   381                           
   382                           ;	String table - string pointers are 1 byte each
   383  0267  1BFF               	btfsc	btemp+1,7
   384  0268  2A71               	ljmp	stringcode
   385  0269  1383               	bcf	3,7
   386  026A  187F               	btfsc	btemp+1,0
   387  026B  1783               	bsf	3,7
   388  026C  0800               	movf	0,w
   389  026D  0A84               	incf	4,f
   390  026E  1903               	skipnz
   391  026F  0AFF               	incf	btemp+1,f
   392  0270  0008               	return
   393  0271                     stringcode:	
   394  0271                     stringdir:	
   395  0271  3002               	movlw	high stringdir
   396  0272  008A               	movwf	10
   397  0273  0804               	movf	4,w
   398  0274  0A84               	incf	4,f
   399  0275  0782               	addwf	2,f
   400  0276                     __stringbase:	
   401  0276  3400               	retlw	0
   402  0277                     __end_of__stringtab:	
   403  0277                     _dpowers:	
   404  0277  3401               	retlw	1
   405  0278  3400               	retlw	0
   406  0279  340A               	retlw	10
   407  027A  3400               	retlw	0
   408  027B  3464               	retlw	100
   409  027C  3400               	retlw	0
   410  027D  34E8               	retlw	232
   411  027E  3403               	retlw	3
   412  027F  3410               	retlw	16
   413  0280  3427               	retlw	39
   414  0281                     __end_of_dpowers:	
   415  000E                     _TMR1	set	14
   416  000C                     _PIR1bits	set	12
   417  000B                     _INTCONbits	set	11
   418  0010                     _T1CONbits	set	16
   419  0005                     _PORTA	set	5
   420  0006                     _PORTB	set	6
   421  0028                     _RA0	set	40
   422  002A                     _RA2	set	42
   423  0029                     _RA1	set	41
   424  008C                     _PIE1bits	set	140
   425  0086                     _TRISB	set	134
   426  008F                     _OSCCONbits	set	143
   427  0428                     _TRISA0	set	1064
   428  042B                     _TRISA3	set	1067
   429  042A                     _TRISA2	set	1066
   430  0429                     _TRISA1	set	1065
   431  0188                     _ANSEL	set	392
   432  0281                     STR_2:	
   433  0281  3445               	retlw	69	;'E'
   434  0282  3472               	retlw	114	;'r'
   435  0283  3472               	retlw	114	;'r'
   436  0284  346F               	retlw	111	;'o'
   437  0285  3472               	retlw	114	;'r'
   438  0286  342C               	retlw	44	;','
   439  0287  3420               	retlw	32	;' '
   440  0288  3472               	retlw	114	;'r'
   441  0289  3465               	retlw	101	;'e'
   442  028A  3476               	retlw	118	;'v'
   443  028B  3469               	retlw	105	;'i'
   444  028C  3473               	retlw	115	;'s'
   445  028D  3461               	retlw	97	;'a'
   446  028E  3472               	retlw	114	;'r'
   447  028F  3400               	retlw	0
   448  0290                     STR_3:	
   449  0290  3463               	retlw	99	;'c'
   450  0291  346F               	retlw	111	;'o'
   451  0292  346D               	retlw	109	;'m'
   452  0293  3475               	retlw	117	;'u'
   453  0294  346E               	retlw	110	;'n'
   454  0295  3469               	retlw	105	;'i'
   455  0296  3463               	retlw	99	;'c'
   456  0297  3461               	retlw	97	;'a'
   457  0298  3463               	retlw	99	;'c'
   458  0299  3469               	retlw	105	;'i'
   459  029A  346F               	retlw	111	;'o'
   460  029B  346E               	retlw	110	;'n'
   461  029C  3400               	retlw	0
   462  029D                     STR_4:	
   463  029D  3448               	retlw	72	;'H'
   464  029E  3475               	retlw	117	;'u'
   465  029F  346D               	retlw	109	;'m'
   466  02A0  3465               	retlw	101	;'e'
   467  02A1  3464               	retlw	100	;'d'
   468  02A2  3461               	retlw	97	;'a'
   469  02A3  3464               	retlw	100	;'d'
   470  02A4  343A               	retlw	58	;':'
   471  02A5  3420               	retlw	32	;' '
   472  02A6  3425               	retlw	37	;'%'
   473  02A7  3464               	retlw	100	;'d'
   474  02A8  3400               	retlw	0
   475  02A9                     STR_1:	
   476  02A9  3446               	retlw	70	;'F'
   477  02AA  3475               	retlw	117	;'u'
   478  02AB  346E               	retlw	110	;'n'
   479  02AC  3463               	retlw	99	;'c'
   480  02AD  3469               	retlw	105	;'i'
   481  02AE  346F               	retlw	111	;'o'
   482  02AF  346E               	retlw	110	;'n'
   483  02B0  3461               	retlw	97	;'a'
   484  02B1  3400               	retlw	0
   485  02B2                     STR_6:	
   486  02B2  3454               	retlw	84	;'T'
   487  02B3  3465               	retlw	101	;'e'
   488  02B4  346D               	retlw	109	;'m'
   489  02B5  3470               	retlw	112	;'p'
   490  02B6  343A               	retlw	58	;':'
   491  02B7  3420               	retlw	32	;' '
   492  02B8  3425               	retlw	37	;'%'
   493  02B9  3464               	retlw	100	;'d'
   494  02BA  3400               	retlw	0
   495  02BB                     STR_5:	
   496  02BB  342E               	retlw	46	;'.'
   497  02BC  3425               	retlw	37	;'%'
   498  02BD  3464               	retlw	100	;'d'
   499  02BE  3425               	retlw	37	;'%'
   500  02BF  3400               	retlw	0
   501  02C0                     STR_7:	
   502  02C0  342E               	retlw	46	;'.'
   503  02C1  3425               	retlw	37	;'%'
   504  02C2  3464               	retlw	100	;'d'
   505  02C3  3443               	retlw	67	;'C'
   506  02C4  3400               	retlw	0
   507  02A6                     
   508                           ; #config settings
   509  0000                     
   510                           	psect	cinit
   511  000F                     start_initialization:	
   512  000F                     __initialization:	
   513                           
   514                           ; Clear objects allocated to COMMON
   515  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   516  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   517  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   518                           
   519                           ; Clear objects allocated to BANK0
   520  0012  1383               	bcf	3,7	;select IRP bank0
   521  0013  3039               	movlw	low __pbssBANK0
   522  0014  0084               	movwf	4
   523  0015  304F               	movlw	low (__pbssBANK0+22)
   524  0016  120A  118A  2483   	fcall	clear_ram0
   525  0019                     end_of_initialization:	
   526                           ;End of C runtime variable initialization code
   527                           
   528  0019                     __end_of__initialization:	
   529  0019  0183               	clrf	3
   530  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   531                           
   532                           	psect	bssCOMMON
   533  0078                     __pbssCOMMON:	
   534  0078                     dht11_read@temp:	
   535  0078                     	ds	1
   536  0079                     _temp_int:	
   537  0079                     	ds	1
   538  007A                     _t1_count:	
   539  007A                     	ds	1
   540                           
   541                           	psect	bssBANK0
   542  0039                     __pbssBANK0:	
   543  0039                     dht11_read@i:	
   544  0039                     	ds	1
   545  003A                     _counter:	
   546  003A                     	ds	1
   547  003B                     _total:	
   548  003B                     	ds	1
   549  003C                     _check:	
   550  003C                     	ds	1
   551  003D                     _hum_dec:	
   552  003D                     	ds	1
   553  003E                     _hum_int:	
   554  003E                     	ds	1
   555  003F                     _temp_dec:	
   556  003F                     	ds	1
   557  0040                     _show:	
   558  0040                     	ds	15
   559                           
   560                           	psect	clrtext
   561  0483                     clear_ram0:	
   562                           ;	Called with FSR containing the base address, and
   563                           ;	W with the last address+1
   564                           
   565  0483  0064               	clrwdt	;clear the watchdog before getting into this loop
   566  0484                     clrloop0:	
   567  0484  0180               	clrf	0	;clear RAM location pointed to by FSR
   568  0485  0A84               	incf	4,f	;increment pointer
   569  0486  0604               	xorwf	4,w	;XOR with final address
   570  0487  1903               	btfsc	3,2	;have we reached the end yet?
   571  0488  3400               	retlw	0	;all done for this memory range, return
   572  0489  0604               	xorwf	4,w	;XOR again to restore value
   573  048A  2C84               	goto	clrloop0	;do the next byte
   574                           
   575                           	psect	cstackCOMMON
   576  0070                     __pcstackCOMMON:	
   577  0070                     ?_dht11_begin:	
   578  0070                     ?_dht11_check:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_dht11_read:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_LCD8_write:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_LCD8_cmd:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_LCD8_clear:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_LCD8_begin:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_oscilator_begin:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_main:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_isr:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ??_isr:	
   606                           ; 1 bytes @ 0x0
   607                           
   608                           
   609                           ; 1 bytes @ 0x0
   610  0070                     	ds	3
   611  0073                     ?_timer1_begin:	
   612  0073                     ??_dht11_begin:	
   613                           ; 1 bytes @ 0x3
   614                           
   615  0073                     ??_dht11_check:	
   616                           ; 1 bytes @ 0x3
   617                           
   618  0073                     ??_dht11_read:	
   619                           ; 1 bytes @ 0x3
   620                           
   621  0073                     ??_LCD8_write:	
   622                           ; 1 bytes @ 0x3
   623                           
   624  0073                     ??_LCD8_cmd:	
   625                           ; 1 bytes @ 0x3
   626                           
   627  0073                     ??_oscilator_begin:	
   628                           ; 1 bytes @ 0x3
   629                           
   630  0073                     ?___lwdiv:	
   631                           ; 1 bytes @ 0x3
   632                           
   633  0073                     timer1_begin@prescaler:	
   634                           ; 2 bytes @ 0x3
   635                           
   636  0073                     ___lwdiv@divisor:	
   637                           ; 1 bytes @ 0x3
   638                           
   639                           
   640                           ; 2 bytes @ 0x3
   641  0073                     	ds	1
   642  0074                     ??_timer1_begin:	
   643  0074                     LCD8_write@data:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     oscilator_begin@freq:	
   647                           ; 1 bytes @ 0x4
   648                           
   649                           
   650                           ; 1 bytes @ 0x4
   651  0074                     	ds	1
   652  0075                     ?_LCD8_strWrite:	
   653  0075                     LCD8_cmd@data:	
   654                           ; 1 bytes @ 0x5
   655                           
   656  0075                     LCD8_strWrite@data:	
   657                           ; 1 bytes @ 0x5
   658                           
   659  0075                     ___lwdiv@dividend:	
   660                           ; 2 bytes @ 0x5
   661                           
   662                           
   663                           ; 2 bytes @ 0x5
   664  0075                     	ds	1
   665  0076                     ?_LCD8_set_cursor:	
   666  0076                     ??_LCD8_clear:	
   667                           ; 1 bytes @ 0x6
   668                           
   669  0076                     ??_LCD8_begin:	
   670                           ; 1 bytes @ 0x6
   671                           
   672  0076                     LCD8_set_cursor@column:	
   673                           ; 1 bytes @ 0x6
   674                           
   675  0076                     timer1_begin@offset:	
   676                           ; 1 bytes @ 0x6
   677                           
   678                           
   679                           ; 1 bytes @ 0x6
   680  0076                     	ds	1
   681  0077                     ??_LCD8_set_cursor:	
   682  0077                     ??_LCD8_strWrite:	
   683                           ; 1 bytes @ 0x7
   684                           
   685  0077                     ??___lwdiv:	
   686                           ; 1 bytes @ 0x7
   687                           
   688                           
   689                           ; 1 bytes @ 0x7
   690  0077                     	ds	1
   691                           
   692                           	psect	cstackBANK0
   693  0020                     __pcstackBANK0:	
   694  0020                     LCD8_set_cursor@cursor:	
   695  0020                     LCD8_strWrite@i:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0020                     ___lwdiv@counter:	
   699                           ; 1 bytes @ 0x0
   700                           
   701                           
   702                           ; 1 bytes @ 0x0
   703  0020                     	ds	1
   704  0021                     LCD8_set_cursor@row:	
   705  0021                     ___lwdiv@quotient:	
   706                           ; 1 bytes @ 0x1
   707                           
   708                           
   709                           ; 2 bytes @ 0x1
   710  0021                     	ds	2
   711  0023                     ?___lwmod:	
   712  0023                     ___lwmod@divisor:	
   713                           ; 2 bytes @ 0x3
   714                           
   715                           
   716                           ; 2 bytes @ 0x3
   717  0023                     	ds	2
   718  0025                     ___lwmod@dividend:	
   719                           
   720                           ; 2 bytes @ 0x5
   721  0025                     	ds	2
   722  0027                     ??___lwmod:	
   723                           
   724                           ; 1 bytes @ 0x7
   725  0027                     	ds	1
   726  0028                     ___lwmod@counter:	
   727                           
   728                           ; 1 bytes @ 0x8
   729  0028                     	ds	1
   730  0029                     ?_sprintf:	
   731  0029                     sprintf@f:	
   732                           ; 2 bytes @ 0x9
   733                           
   734                           
   735                           ; 1 bytes @ 0x9
   736  0029                     	ds	3
   737  002C                     ??_sprintf:	
   738                           
   739                           ; 1 bytes @ 0xC
   740  002C                     	ds	3
   741  002F                     sprintf@ap:	
   742                           
   743                           ; 1 bytes @ 0xF
   744  002F                     	ds	1
   745  0030                     sprintf@flag:	
   746                           
   747                           ; 1 bytes @ 0x10
   748  0030                     	ds	1
   749  0031                     sprintf@prec:	
   750                           
   751                           ; 1 bytes @ 0x11
   752  0031                     	ds	1
   753  0032                     sprintf@val:	
   754                           
   755                           ; 2 bytes @ 0x12
   756  0032                     	ds	2
   757  0034                     sprintf@sp:	
   758                           
   759                           ; 1 bytes @ 0x14
   760  0034                     	ds	1
   761  0035                     sprintf@c:	
   762                           
   763                           ; 1 bytes @ 0x15
   764  0035                     	ds	1
   765  0036                     ??_main:	
   766                           
   767                           ; 1 bytes @ 0x16
   768  0036                     	ds	3
   769                           
   770                           	psect	maintext
   771  001D                     __pmaintext:	
   772 ;;
   773 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   774 ;;
   775 ;; *************** function _main *****************
   776 ;; Defined at:
   777 ;;		line 42 in file "humedad_main.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : B00/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0
   793 ;;      Temps:          0       3       0       0       0
   794 ;;      Totals:         0       3       0       0       0
   795 ;;Total ram usage:        3 bytes
   796 ;; Hardware stack levels required when called:    3
   797 ;; This function calls:
   798 ;;		_LCD8_begin
   799 ;;		_LCD8_clear
   800 ;;		_LCD8_set_cursor
   801 ;;		_LCD8_strWrite
   802 ;;		_dht11_begin
   803 ;;		_dht11_check
   804 ;;		_dht11_read
   805 ;;		_oscilator_begin
   806 ;;		_sprintf
   807 ;;		_timer1_begin
   808 ;; This function is called by:
   809 ;;		Startup code after reset
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _main
   815  001D                     _main:	
   816                           
   817                           ;humedad_main.c: 44:     ANSEL = 0;
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   821  001D  1683               	bsf	3,5	;RP0=1, select bank3
   822  001E  1703               	bsf	3,6	;RP1=1, select bank3
   823  001F  0188               	clrf	8	;volatile
   824                           
   825                           ;humedad_main.c: 45:     TRISA1 = 0;
   826  0020  1683               	bsf	3,5	;RP0=1, select bank1
   827  0021  1303               	bcf	3,6	;RP1=0, select bank1
   828  0022  1085               	bcf	5,1	;volatile
   829                           
   830                           ;humedad_main.c: 46:     TRISA2 = 0;
   831  0023  1105               	bcf	5,2	;volatile
   832                           
   833                           ;humedad_main.c: 47:     TRISA3 = 0;
   834  0024  1185               	bcf	5,3	;volatile
   835                           
   836                           ;humedad_main.c: 48:     PORTA = 0;
   837  0025  1283               	bcf	3,5	;RP0=0, select bank0
   838  0026  1303               	bcf	3,6	;RP1=0, select bank0
   839  0027  0185               	clrf	5	;volatile
   840                           
   841                           ;humedad_main.c: 49:     PORTB = 0;
   842  0028  0186               	clrf	6	;volatile
   843                           
   844                           ;humedad_main.c: 50:     TRISB = 0;
   845  0029  1683               	bsf	3,5	;RP0=1, select bank1
   846  002A  1303               	bcf	3,6	;RP1=0, select bank1
   847  002B  0186               	clrf	6	;volatile
   848                           
   849                           ;humedad_main.c: 51:     oscilator_begin(7);
   850  002C  3007               	movlw	7
   851  002D  120A  118A  2461  120A  118A  	fcall	_oscilator_begin
   852                           
   853                           ;humedad_main.c: 52:     LCD8_begin();
   854  0032  120A  118A  22C5  120A  118A  	fcall	_LCD8_begin
   855                           
   856                           ;humedad_main.c: 53:     LCD8_clear();
   857  0037  120A  118A  246F  120A  118A  	fcall	_LCD8_clear
   858                           
   859                           ;humedad_main.c: 54:     LCD8_set_cursor(1,1);
   860  003C  01F6               	clrf	LCD8_set_cursor@column
   861  003D  0AF6               	incf	LCD8_set_cursor@column,f
   862  003E  3001               	movlw	1
   863  003F  120A  118A  2412  120A  118A  	fcall	_LCD8_set_cursor
   864                           
   865                           ;humedad_main.c: 55:     LCD8_strWrite("Funciona");
   866  0044  3033               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   867  0045  00F5               	movwf	LCD8_strWrite@data
   868  0046  3080               	movlw	128
   869  0047  00F6               	movwf	LCD8_strWrite@data+1
   870  0048  120A  118A  238B  120A  118A  	fcall	_LCD8_strWrite
   871                           
   872                           ;humedad_main.c: 56:     _delay((unsigned long)((100)*(8000000/4000.0)));
   873  004D  3002               	movlw	2
   874  004E  1283               	bcf	3,5	;RP0=0, select bank0
   875  004F  1303               	bcf	3,6	;RP1=0, select bank0
   876  0050  00B8               	movwf	??_main+2
   877  0051  3004               	movlw	4
   878  0052  00B7               	movwf	??_main+1
   879  0053  30B9               	movlw	185
   880  0054  00B6               	movwf	??_main
   881  0055                     u857:	
   882  0055  0BB6               	decfsz	??_main,f
   883  0056  2855               	goto	u857
   884  0057  0BB7               	decfsz	??_main+1,f
   885  0058  2855               	goto	u857
   886  0059  0BB8               	decfsz	??_main+2,f
   887  005A  2855               	goto	u857
   888  005B  285C               	nop2
   889                           
   890                           ;humedad_main.c: 57:     timer1_begin((0),(2));
   891  005C  3002               	movlw	2
   892  005D  1283               	bcf	3,5	;RP0=0, select bank0
   893  005E  1303               	bcf	3,6	;RP1=0, select bank0
   894  005F  00B6               	movwf	??_main
   895  0060  0836               	movf	??_main,w
   896  0061  00F3               	movwf	timer1_begin@prescaler
   897  0062  3000               	movlw	0
   898  0063  120A  118A  23D8  120A  118A  	fcall	_timer1_begin
   899  0068                     l1619:	
   900                           
   901                           ;humedad_main.c: 60:     {;humedad_main.c: 61:        LCD8_clear();
   902  0068  120A  118A  246F  120A  118A  	fcall	_LCD8_clear
   903                           
   904                           ;humedad_main.c: 62:        if(t1_count == 10)
   905  006D  300A               	movlw	10
   906  006E  067A               	xorwf	_t1_count,w
   907  006F  1D03               	btfss	3,2
   908  0070  28E4               	goto	l1649
   909                           
   910                           ;humedad_main.c: 63:        {;humedad_main.c: 65:        dht11_begin();
   911  0071  120A  118A  23F8  120A  118A  	fcall	_dht11_begin
   912                           
   913                           ;humedad_main.c: 66:        dht11_check();
   914  0076  120A  118A  247A  120A  118A  	fcall	_dht11_check
   915                           
   916                           ;humedad_main.c: 67:        hum_int = dht11_read();
   917  007B  120A  118A  23B5  120A  118A  	fcall	_dht11_read
   918  0080  1283               	bcf	3,5	;RP0=0, select bank0
   919  0081  1303               	bcf	3,6	;RP1=0, select bank0
   920  0082  00B6               	movwf	??_main
   921  0083  0836               	movf	??_main,w
   922  0084  00BE               	movwf	_hum_int
   923                           
   924                           ;humedad_main.c: 68:        hum_dec = dht11_read();
   925  0085  120A  118A  23B5  120A  118A  	fcall	_dht11_read
   926  008A  1283               	bcf	3,5	;RP0=0, select bank0
   927  008B  1303               	bcf	3,6	;RP1=0, select bank0
   928  008C  00B6               	movwf	??_main
   929  008D  0836               	movf	??_main,w
   930  008E  00BD               	movwf	_hum_dec
   931                           
   932                           ;humedad_main.c: 69:        temp_int = dht11_read();
   933  008F  120A  118A  23B5  120A  118A  	fcall	_dht11_read
   934  0094  1283               	bcf	3,5	;RP0=0, select bank0
   935  0095  1303               	bcf	3,6	;RP1=0, select bank0
   936  0096  00B6               	movwf	??_main
   937  0097  0836               	movf	??_main,w
   938  0098  00F9               	movwf	_temp_int
   939                           
   940                           ;humedad_main.c: 70:        temp_dec = dht11_read();
   941  0099  120A  118A  23B5  120A  118A  	fcall	_dht11_read
   942  009E  1283               	bcf	3,5	;RP0=0, select bank0
   943  009F  1303               	bcf	3,6	;RP1=0, select bank0
   944  00A0  00B6               	movwf	??_main
   945  00A1  0836               	movf	??_main,w
   946  00A2  00BF               	movwf	_temp_dec
   947                           
   948                           ;humedad_main.c: 71:        check = dht11_read();
   949  00A3  120A  118A  23B5  120A  118A  	fcall	_dht11_read
   950  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   951  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   952  00AA  00B6               	movwf	??_main
   953  00AB  0836               	movf	??_main,w
   954  00AC  00BC               	movwf	_check
   955                           
   956                           ;humedad_main.c: 72:        total = hum_int+hum_dec+temp_int+temp_dec;
   957  00AD  083D               	movf	_hum_dec,w
   958  00AE  073E               	addwf	_hum_int,w
   959  00AF  00B6               	movwf	??_main
   960  00B0  0879               	movf	_temp_int,w
   961  00B1  0736               	addwf	??_main,w
   962  00B2  00B7               	movwf	??_main+1
   963  00B3  083F               	movf	_temp_dec,w
   964  00B4  0737               	addwf	??_main+1,w
   965  00B5  00B8               	movwf	??_main+2
   966  00B6  0838               	movf	??_main+2,w
   967  00B7  00BB               	movwf	_total
   968                           
   969                           ;humedad_main.c: 74:        if (check != total){
   970  00B8  083C               	movf	_check,w
   971  00B9  063B               	xorwf	_total,w
   972  00BA  1903               	skipnz
   973  00BB  28E3               	goto	l1647
   974                           
   975                           ;humedad_main.c: 75:            LCD8_clear();
   976  00BC  120A  118A  246F  120A  118A  	fcall	_LCD8_clear
   977                           
   978                           ;humedad_main.c: 76:            LCD8_set_cursor(1,1);
   979  00C1  01F6               	clrf	LCD8_set_cursor@column
   980  00C2  0AF6               	incf	LCD8_set_cursor@column,f
   981  00C3  3001               	movlw	1
   982  00C4  120A  118A  2412  120A  118A  	fcall	_LCD8_set_cursor
   983                           
   984                           ;humedad_main.c: 77:            LCD8_strWrite("Error, revisar");
   985  00C9  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   986  00CA  00F5               	movwf	LCD8_strWrite@data
   987  00CB  3080               	movlw	128
   988  00CC  00F6               	movwf	LCD8_strWrite@data+1
   989  00CD  120A  118A  238B  120A  118A  	fcall	_LCD8_strWrite
   990                           
   991                           ;humedad_main.c: 78:            LCD8_set_cursor(2,1);
   992  00D2  01F6               	clrf	LCD8_set_cursor@column
   993  00D3  0AF6               	incf	LCD8_set_cursor@column,f
   994  00D4  3002               	movlw	2
   995  00D5  120A  118A  2412  120A  118A  	fcall	_LCD8_set_cursor
   996                           
   997                           ;humedad_main.c: 79:            LCD8_strWrite("comunicacion");
   998  00DA  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   999  00DB  00F5               	movwf	LCD8_strWrite@data
  1000  00DC  3080               	movlw	128
  1001  00DD  00F6               	movwf	LCD8_strWrite@data+1
  1002  00DE  120A  118A  238B  120A  118A  	fcall	_LCD8_strWrite
  1003  00E3                     l1647:	
  1004                           
  1005                           ;humedad_main.c: 81:        t1_count = 0;
  1006  00E3  01FA               	clrf	_t1_count
  1007  00E4                     l1649:	
  1008                           
  1009                           ;humedad_main.c: 83:        LCD8_set_cursor(1,1);
  1010  00E4  01F6               	clrf	LCD8_set_cursor@column
  1011  00E5  0AF6               	incf	LCD8_set_cursor@column,f
  1012  00E6  3001               	movlw	1
  1013  00E7  120A  118A  2412  120A  118A  	fcall	_LCD8_set_cursor
  1014                           
  1015                           ;humedad_main.c: 84:        sprintf(show, "Humedad: %d",hum_int);
  1016  00EC  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1017  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1018  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1019  00EF  00B6               	movwf	??_main
  1020  00F0  0836               	movf	??_main,w
  1021  00F1  00A9               	movwf	sprintf@f
  1022  00F2  083E               	movf	_hum_int,w
  1023  00F3  00B7               	movwf	??_main+1
  1024  00F4  01B8               	clrf	??_main+2
  1025  00F5  0837               	movf	??_main+1,w
  1026  00F6  00AA               	movwf	?_sprintf+1
  1027  00F7  0838               	movf	??_main+2,w
  1028  00F8  00AB               	movwf	?_sprintf+2
  1029  00F9  3040               	movlw	(low (_show| 0))& (0+255)
  1030  00FA  120A  118A  218D  120A  118A  	fcall	_sprintf
  1031                           
  1032                           ;humedad_main.c: 85:        LCD8_strWrite(show);
  1033  00FF  3040               	movlw	(low (_show| 0))& (0+255)
  1034  0100  00F5               	movwf	LCD8_strWrite@data
  1035  0101  3000               	movlw	0
  1036  0102  00F6               	movwf	LCD8_strWrite@data+1
  1037  0103  120A  118A  238B  120A  118A  	fcall	_LCD8_strWrite
  1038                           
  1039                           ;humedad_main.c: 86:        sprintf(show, ".%d%",hum_dec);
  1040  0108  3045               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1041  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1042  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1043  010B  00B6               	movwf	??_main
  1044  010C  0836               	movf	??_main,w
  1045  010D  00A9               	movwf	sprintf@f
  1046  010E  083D               	movf	_hum_dec,w
  1047  010F  00B7               	movwf	??_main+1
  1048  0110  01B8               	clrf	??_main+2
  1049  0111  0837               	movf	??_main+1,w
  1050  0112  00AA               	movwf	?_sprintf+1
  1051  0113  0838               	movf	??_main+2,w
  1052  0114  00AB               	movwf	?_sprintf+2
  1053  0115  3040               	movlw	(low (_show| 0))& (0+255)
  1054  0116  120A  118A  218D  120A  118A  	fcall	_sprintf
  1055                           
  1056                           ;humedad_main.c: 87:        LCD8_strWrite(show);
  1057  011B  3040               	movlw	(low (_show| 0))& (0+255)
  1058  011C  00F5               	movwf	LCD8_strWrite@data
  1059  011D  3000               	movlw	0
  1060  011E  00F6               	movwf	LCD8_strWrite@data+1
  1061  011F  120A  118A  238B  120A  118A  	fcall	_LCD8_strWrite
  1062                           
  1063                           ;humedad_main.c: 89:        LCD8_set_cursor(2,1);
  1064  0124  01F6               	clrf	LCD8_set_cursor@column
  1065  0125  0AF6               	incf	LCD8_set_cursor@column,f
  1066  0126  3002               	movlw	2
  1067  0127  120A  118A  2412  120A  118A  	fcall	_LCD8_set_cursor
  1068                           
  1069                           ;humedad_main.c: 90:        sprintf(show, "Temp: %d",temp_int);
  1070  012C  303C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1071  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1072  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1073  012F  00B6               	movwf	??_main
  1074  0130  0836               	movf	??_main,w
  1075  0131  00A9               	movwf	sprintf@f
  1076  0132  0879               	movf	_temp_int,w
  1077  0133  00B7               	movwf	??_main+1
  1078  0134  01B8               	clrf	??_main+2
  1079  0135  0837               	movf	??_main+1,w
  1080  0136  00AA               	movwf	?_sprintf+1
  1081  0137  0838               	movf	??_main+2,w
  1082  0138  00AB               	movwf	?_sprintf+2
  1083  0139  3040               	movlw	(low (_show| 0))& (0+255)
  1084  013A  120A  118A  218D  120A  118A  	fcall	_sprintf
  1085                           
  1086                           ;humedad_main.c: 91:        LCD8_strWrite(show);
  1087  013F  3040               	movlw	(low (_show| 0))& (0+255)
  1088  0140  00F5               	movwf	LCD8_strWrite@data
  1089  0141  3000               	movlw	0
  1090  0142  00F6               	movwf	LCD8_strWrite@data+1
  1091  0143  120A  118A  238B  120A  118A  	fcall	_LCD8_strWrite
  1092                           
  1093                           ;humedad_main.c: 92:        sprintf(show, ".%dC",temp_dec);
  1094  0148  304A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1095  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1096  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1097  014B  00B6               	movwf	??_main
  1098  014C  0836               	movf	??_main,w
  1099  014D  00A9               	movwf	sprintf@f
  1100  014E  083F               	movf	_temp_dec,w
  1101  014F  00B7               	movwf	??_main+1
  1102  0150  01B8               	clrf	??_main+2
  1103  0151  0837               	movf	??_main+1,w
  1104  0152  00AA               	movwf	?_sprintf+1
  1105  0153  0838               	movf	??_main+2,w
  1106  0154  00AB               	movwf	?_sprintf+2
  1107  0155  3040               	movlw	(low (_show| 0))& (0+255)
  1108  0156  120A  118A  218D  120A  118A  	fcall	_sprintf
  1109                           
  1110                           ;humedad_main.c: 93:        LCD8_strWrite(show);
  1111  015B  3040               	movlw	(low (_show| 0))& (0+255)
  1112  015C  00F5               	movwf	LCD8_strWrite@data
  1113  015D  3000               	movlw	0
  1114  015E  00F6               	movwf	LCD8_strWrite@data+1
  1115  015F  120A  118A  238B  120A  118A  	fcall	_LCD8_strWrite
  1116                           
  1117                           ;humedad_main.c: 95:        LCD8_set_cursor(2,14);
  1118  0164  300E               	movlw	14
  1119  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0167  00B6               	movwf	??_main
  1122  0168  0836               	movf	??_main,w
  1123  0169  00F6               	movwf	LCD8_set_cursor@column
  1124  016A  3002               	movlw	2
  1125  016B  120A  118A  2412  120A  118A  	fcall	_LCD8_set_cursor
  1126                           
  1127                           ;humedad_main.c: 96:        sprintf(show, "%d",t1_count);
  1128  0170  3030               	movlw	(low (((STR_4+9)-__stringbase)| (0+32768)))& (0+255)
  1129  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0173  00B6               	movwf	??_main
  1132  0174  0836               	movf	??_main,w
  1133  0175  00A9               	movwf	sprintf@f
  1134  0176  087A               	movf	_t1_count,w
  1135  0177  00B7               	movwf	??_main+1
  1136  0178  01B8               	clrf	??_main+2
  1137  0179  0837               	movf	??_main+1,w
  1138  017A  00AA               	movwf	?_sprintf+1
  1139  017B  0838               	movf	??_main+2,w
  1140  017C  00AB               	movwf	?_sprintf+2
  1141  017D  3040               	movlw	(low (_show| 0))& (0+255)
  1142  017E  120A  118A  218D  120A  118A  	fcall	_sprintf
  1143                           
  1144                           ;humedad_main.c: 97:        LCD8_strWrite(show);
  1145  0183  3040               	movlw	(low (_show| 0))& (0+255)
  1146  0184  00F5               	movwf	LCD8_strWrite@data
  1147  0185  3000               	movlw	0
  1148  0186  00F6               	movwf	LCD8_strWrite@data+1
  1149  0187  120A  118A  238B  120A  118A  	fcall	_LCD8_strWrite
  1150  018C  2868               	goto	l1619
  1151  018D                     __end_of_main:	
  1152                           
  1153                           	psect	text1
  1154  03D8                     __ptext1:	
  1155 ;; *************** function _timer1_begin *****************
  1156 ;; Defined at:
  1157 ;;		line 8 in file "timer1.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  offset          1    wreg     unsigned char 
  1160 ;;  prescaler       1    3[COMMON] unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  offset          1    6[COMMON] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         1       0       0       0       0
  1173 ;;      Locals:         1       0       0       0       0
  1174 ;;      Temps:          2       0       0       0       0
  1175 ;;      Totals:         4       0       0       0       0
  1176 ;;Total ram usage:        4 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _timer1_begin
  1188  03D8                     _timer1_begin:	
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _timer1_begin: [wreg+status,2+status,0]
  1192                           ;timer1_begin@offset stored from wreg
  1193  03D8  00F6               	movwf	timer1_begin@offset
  1194                           
  1195                           ;timer1.c: 8: timer1_begin(uint8_t offset, uint8_t prescaler);timer1.c: 9:     {;timer1.
      +                          c: 10:     T1CONbits.T1GINV = 0;
  1196  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1197  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1198  03DB  1390               	bcf	16,7	;volatile
  1199                           
  1200                           ;timer1.c: 11:     T1CONbits.TMR1GE = 0;
  1201  03DC  1310               	bcf	16,6	;volatile
  1202                           
  1203                           ;timer1.c: 12:     T1CONbits.T1CKPS = prescaler;
  1204  03DD  0873               	movf	timer1_begin@prescaler,w
  1205  03DE  00F4               	movwf	??_timer1_begin
  1206  03DF  0EF4               	swapf	??_timer1_begin,f
  1207  03E0  0810               	movf	16,w	;volatile
  1208  03E1  0674               	xorwf	??_timer1_begin,w
  1209  03E2  39CF               	andlw	-49
  1210  03E3  0674               	xorwf	??_timer1_begin,w
  1211  03E4  0090               	movwf	16	;volatile
  1212                           
  1213                           ;timer1.c: 13:     T1CONbits.T1OSCEN = 0;
  1214  03E5  1190               	bcf	16,3	;volatile
  1215                           
  1216                           ;timer1.c: 14:     T1CONbits.TMR1CS = 0;
  1217  03E6  1090               	bcf	16,1	;volatile
  1218                           
  1219                           ;timer1.c: 15:     T1CONbits.TMR1ON = 1;
  1220  03E7  1410               	bsf	16,0	;volatile
  1221                           
  1222                           ;timer1.c: 17:     INTCONbits.PEIE = 1;
  1223  03E8  170B               	bsf	11,6	;volatile
  1224                           
  1225                           ;timer1.c: 18:     PIR1bits.TMR1IF = 0;
  1226  03E9  100C               	bcf	12,0	;volatile
  1227                           
  1228                           ;timer1.c: 19:     PIE1bits.TMR1IE = 1;
  1229  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  1230  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  1231  03EC  140C               	bsf	12,0	;volatile
  1232                           
  1233                           ;timer1.c: 20:     INTCONbits.GIE = 1;
  1234  03ED  178B               	bsf	11,7	;volatile
  1235                           
  1236                           ;timer1.c: 21:     TMR1 = offset;
  1237  03EE  0876               	movf	timer1_begin@offset,w
  1238  03EF  00F4               	movwf	??_timer1_begin
  1239  03F0  01F5               	clrf	??_timer1_begin+1
  1240  03F1  0874               	movf	??_timer1_begin,w
  1241  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1242  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1243  03F4  008E               	movwf	14	;volatile
  1244  03F5  0875               	movf	??_timer1_begin+1,w
  1245  03F6  008F               	movwf	15	;volatile
  1246  03F7  0008               	return
  1247  03F8                     __end_of_timer1_begin:	
  1248                           
  1249                           	psect	text2
  1250  018D                     __ptext2:	
  1251 ;; *************** function _sprintf *****************
  1252 ;; Defined at:
  1253 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  sp              1    wreg     PTR unsigned char 
  1256 ;;		 -> show(15), 
  1257 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1258 ;;		 -> STR_8(3), STR_7(5), STR_6(9), STR_5(5), 
  1259 ;;		 -> STR_4(12), 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1262 ;;		 -> show(15), 
  1263 ;;  tmpval          4    0        struct .
  1264 ;;  val             2   18[BANK0 ] unsigned int 
  1265 ;;  cp              2    0        PTR const unsigned char 
  1266 ;;  len             2    0        unsigned int 
  1267 ;;  c               1   21[BANK0 ] unsigned char 
  1268 ;;  prec            1   17[BANK0 ] char 
  1269 ;;  flag            1   16[BANK0 ] unsigned char 
  1270 ;;  ap              1   15[BANK0 ] PTR void [1]
  1271 ;;		 -> ?_sprintf(2), 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2    9[BANK0 ] int 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       3       0       0       0
  1282 ;;      Locals:         0       7       0       0       0
  1283 ;;      Temps:          0       3       0       0       0
  1284 ;;      Totals:         0      13       0       0       0
  1285 ;;Total ram usage:       13 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    2
  1288 ;; This function calls:
  1289 ;;		___lwdiv
  1290 ;;		___lwmod
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _sprintf
  1298  018D                     _sprintf:	
  1299                           
  1300                           ;incstack = 0
  1301                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1302                           ;sprintf@sp stored from wreg
  1303  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1304  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1305  018F  00B4               	movwf	sprintf@sp
  1306                           
  1307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1308  0190  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1309  0191  00AC               	movwf	??_sprintf
  1310  0192  082C               	movf	??_sprintf,w
  1311  0193  00AF               	movwf	sprintf@ap
  1312  0194                     l1583:	
  1313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1314                           
  1315                           
  1316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1317  0194  3001               	movlw	1
  1318  0195  07A9               	addwf	sprintf@f,f
  1319  0196  30FF               	movlw	-1
  1320  0197  0729               	addwf	sprintf@f,w
  1321  0198  0084               	movwf	4
  1322  0199  120A  118A  2271  120A  118A  	fcall	stringdir
  1323  019E  00AC               	movwf	??_sprintf
  1324  019F  082C               	movf	??_sprintf,w
  1325  01A0  00B5               	movwf	sprintf@c
  1326  01A1  0835               	movf	sprintf@c,w
  1327  01A2  1903               	btfsc	3,2
  1328  01A3  2A62               	goto	l1585
  1329                           
  1330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1331  01A4  3025               	movlw	37
  1332  01A5  0635               	xorwf	sprintf@c,w
  1333  01A6  1903               	btfsc	3,2
  1334  01A7  29B4               	goto	l1539
  1335                           
  1336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1337  01A8  0835               	movf	sprintf@c,w
  1338  01A9  00AC               	movwf	??_sprintf
  1339  01AA  0834               	movf	sprintf@sp,w
  1340  01AB  0084               	movwf	4
  1341  01AC  082C               	movf	??_sprintf,w
  1342  01AD  1383               	bcf	3,7	;select IRP bank0
  1343  01AE  0080               	movwf	0
  1344  01AF  3001               	movlw	1
  1345  01B0  00AC               	movwf	??_sprintf
  1346  01B1  082C               	movf	??_sprintf,w
  1347  01B2  07B4               	addwf	sprintf@sp,f
  1348                           
  1349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1350  01B3  2994               	goto	l1583
  1351  01B4                     l1539:	
  1352                           
  1353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1354  01B4  01B0               	clrf	sprintf@flag
  1355                           
  1356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1357  01B5  3001               	movlw	1
  1358  01B6  07A9               	addwf	sprintf@f,f
  1359  01B7  30FF               	movlw	-1
  1360  01B8  0729               	addwf	sprintf@f,w
  1361  01B9  0084               	movwf	4
  1362  01BA  120A  118A  2271  120A  118A  	fcall	stringdir
  1363  01BF  00B5               	movwf	sprintf@c
  1364  01C0  00AC               	movwf	??_sprintf
  1365  01C1  01AD               	clrf	??_sprintf+1
  1366                           
  1367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1368                           ; Switch size 1, requested type "simple"
  1369                           ; Number of cases is 1, Range of values is 0 to 0
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte            4     3 (average)
  1373                           ; direct_byte           11     8 (fixed)
  1374                           ; jumptable            260     6 (fixed)
  1375                           ;	Chosen strategy is simple_byte
  1376  01C2  082D               	movf	??_sprintf+1,w
  1377  01C3  3A00               	xorlw	0	; case 0
  1378  01C4  1903               	skipnz
  1379  01C5  29C7               	goto	l1695
  1380  01C6  2994               	goto	l1583
  1381  01C7                     l1695:	
  1382                           
  1383                           ; Switch size 1, requested type "simple"
  1384                           ; Number of cases is 3, Range of values is 0 to 105
  1385                           ; switch strategies available:
  1386                           ; Name         Instructions Cycles
  1387                           ; simple_byte           10     6 (average)
  1388                           ; jumptable            260     6 (fixed)
  1389                           ;	Chosen strategy is simple_byte
  1390  01C7  082C               	movf	??_sprintf,w
  1391  01C8  3A00               	xorlw	0	; case 0
  1392  01C9  1903               	skipnz
  1393  01CA  2A62               	goto	l1585
  1394  01CB  3A64               	xorlw	100	; case 100
  1395  01CC  1903               	skipnz
  1396  01CD  29D2               	goto	l1545
  1397  01CE  3A0D               	xorlw	13	; case 105
  1398  01CF  1903               	skipnz
  1399  01D0  29D2               	goto	l1545
  1400  01D1  2994               	goto	l1583
  1401  01D2                     l1545:	
  1402                           
  1403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1404  01D2  082F               	movf	sprintf@ap,w
  1405  01D3  0084               	movwf	4
  1406  01D4  1383               	bcf	3,7	;select IRP bank0
  1407  01D5  0800               	movf	0,w
  1408  01D6  00B2               	movwf	sprintf@val
  1409  01D7  0A84               	incf	4,f
  1410  01D8  0800               	movf	0,w
  1411  01D9  00B3               	movwf	sprintf@val+1
  1412  01DA  3002               	movlw	2
  1413  01DB  00AC               	movwf	??_sprintf
  1414  01DC  082C               	movf	??_sprintf,w
  1415  01DD  07AF               	addwf	sprintf@ap,f
  1416                           
  1417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1418  01DE  1FB3               	btfss	sprintf@val+1,7
  1419  01DF  29E9               	goto	l1555
  1420                           
  1421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1422  01E0  3003               	movlw	3
  1423  01E1  00AC               	movwf	??_sprintf
  1424  01E2  082C               	movf	??_sprintf,w
  1425  01E3  04B0               	iorwf	sprintf@flag,f
  1426                           
  1427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1428  01E4  09B2               	comf	sprintf@val,f
  1429  01E5  09B3               	comf	sprintf@val+1,f
  1430  01E6  0AB2               	incf	sprintf@val,f
  1431  01E7  1903               	skipnz
  1432  01E8  0AB3               	incf	sprintf@val+1,f
  1433  01E9                     l1555:	
  1434                           
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1436  01E9  01B5               	clrf	sprintf@c
  1437  01EA  0AB5               	incf	sprintf@c,f
  1438  01EB                     l1561:	
  1439                           
  1440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1441  01EB  0835               	movf	sprintf@c,w
  1442  01EC  00AC               	movwf	??_sprintf
  1443  01ED  072C               	addwf	??_sprintf,w
  1444  01EE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1445  01EF  0084               	movwf	4
  1446  01F0  120A  118A  2271  120A  118A  	fcall	stringdir
  1447  01F5  00AD               	movwf	??_sprintf+1
  1448  01F6  120A  118A  2271  120A  118A  	fcall	stringdir
  1449  01FB  00AE               	movwf	??_sprintf+2
  1450  01FC  082E               	movf	??_sprintf+2,w
  1451  01FD  0233               	subwf	sprintf@val+1,w
  1452  01FE  1D03               	skipz
  1453  01FF  2A02               	goto	u785
  1454  0200  082D               	movf	??_sprintf+1,w
  1455  0201  0232               	subwf	sprintf@val,w
  1456  0202                     u785:	
  1457  0202  1C03               	btfss	3,0
  1458  0203  2A0C               	goto	l1567
  1459  0204  3001               	movlw	1
  1460  0205  00AC               	movwf	??_sprintf
  1461  0206  082C               	movf	??_sprintf,w
  1462  0207  07B5               	addwf	sprintf@c,f
  1463  0208  3005               	movlw	5
  1464  0209  0635               	xorwf	sprintf@c,w
  1465  020A  1D03               	btfss	3,2
  1466  020B  29EB               	goto	l1561
  1467  020C                     l1567:	
  1468                           
  1469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1470  020C  0830               	movf	sprintf@flag,w
  1471  020D  3903               	andlw	3
  1472  020E  1903               	btfsc	3,2
  1473  020F  2A1B               	goto	l1573
  1474                           
  1475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1476  0210  302D               	movlw	45
  1477  0211  00AC               	movwf	??_sprintf
  1478  0212  0834               	movf	sprintf@sp,w
  1479  0213  0084               	movwf	4
  1480  0214  082C               	movf	??_sprintf,w
  1481  0215  1383               	bcf	3,7	;select IRP bank0
  1482  0216  0080               	movwf	0
  1483  0217  3001               	movlw	1
  1484  0218  00AC               	movwf	??_sprintf
  1485  0219  082C               	movf	??_sprintf,w
  1486  021A  07B4               	addwf	sprintf@sp,f
  1487  021B                     l1573:	
  1488                           
  1489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1490  021B  0835               	movf	sprintf@c,w
  1491  021C  00AC               	movwf	??_sprintf
  1492  021D  082C               	movf	??_sprintf,w
  1493  021E  00B1               	movwf	sprintf@prec
  1494  021F                     l1581:	
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1496                           
  1497                           
  1498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1499  021F  30FF               	movlw	255
  1500  0220  00AC               	movwf	??_sprintf
  1501  0221  082C               	movf	??_sprintf,w
  1502  0222  07B1               	addwf	sprintf@prec,f
  1503  0223  0A31               	incf	sprintf@prec,w
  1504  0224  1903               	btfsc	3,2
  1505  0225  2994               	goto	l1583
  1506                           
  1507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1508  0226  300A               	movlw	10
  1509  0227  00A3               	movwf	___lwmod@divisor
  1510  0228  3000               	movlw	0
  1511  0229  00A4               	movwf	___lwmod@divisor+1
  1512  022A  0831               	movf	sprintf@prec,w
  1513  022B  00AC               	movwf	??_sprintf
  1514  022C  072C               	addwf	??_sprintf,w
  1515  022D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1516  022E  0084               	movwf	4
  1517  022F  120A  118A  2271  120A  118A  	fcall	stringdir
  1518  0234  00F3               	movwf	___lwdiv@divisor
  1519  0235  120A  118A  2271  120A  118A  	fcall	stringdir
  1520  023A  00F4               	movwf	___lwdiv@divisor+1
  1521  023B  0833               	movf	sprintf@val+1,w
  1522  023C  00F6               	movwf	___lwdiv@dividend+1
  1523  023D  0832               	movf	sprintf@val,w
  1524  023E  00F5               	movwf	___lwdiv@dividend
  1525  023F  120A  118A  2319  120A  118A  	fcall	___lwdiv
  1526  0244  0874               	movf	?___lwdiv+1,w
  1527  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0247  00A6               	movwf	___lwmod@dividend+1
  1530  0248  0873               	movf	?___lwdiv,w
  1531  0249  00A5               	movwf	___lwmod@dividend
  1532  024A  120A  118A  2357  120A  118A  	fcall	___lwmod
  1533  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0251  0823               	movf	?___lwmod,w
  1536  0252  3E30               	addlw	48
  1537  0253  00AD               	movwf	??_sprintf+1
  1538  0254  082D               	movf	??_sprintf+1,w
  1539  0255  00B5               	movwf	sprintf@c
  1540                           
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1542  0256  0835               	movf	sprintf@c,w
  1543  0257  00AC               	movwf	??_sprintf
  1544  0258  0834               	movf	sprintf@sp,w
  1545  0259  0084               	movwf	4
  1546  025A  082C               	movf	??_sprintf,w
  1547  025B  1383               	bcf	3,7	;select IRP bank0
  1548  025C  0080               	movwf	0
  1549  025D  3001               	movlw	1
  1550  025E  00AC               	movwf	??_sprintf
  1551  025F  082C               	movf	??_sprintf,w
  1552  0260  07B4               	addwf	sprintf@sp,f
  1553  0261  2A1F               	goto	l1581
  1554  0262                     l1585:	
  1555                           
  1556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1557  0262  0834               	movf	sprintf@sp,w
  1558  0263  0084               	movwf	4
  1559  0264  1383               	bcf	3,7	;select IRP bank0
  1560  0265  0180               	clrf	0
  1561  0266  0008               	return
  1562  0267                     __end_of_sprintf:	
  1563                           
  1564                           	psect	text3
  1565  0357                     __ptext3:	
  1566 ;; *************** function ___lwmod *****************
  1567 ;; Defined at:
  1568 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  divisor         2    3[BANK0 ] unsigned int 
  1571 ;;  dividend        2    5[BANK0 ] unsigned int 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  counter         1    8[BANK0 ] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2    3[BANK0 ] unsigned int 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       4       0       0       0
  1584 ;;      Locals:         0       1       0       0       0
  1585 ;;      Temps:          0       1       0       0       0
  1586 ;;      Totals:         0       6       0       0       0
  1587 ;;Total ram usage:        6 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_sprintf
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function ___lwmod
  1599  0357                     ___lwmod:	
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1603  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0359  0823               	movf	___lwmod@divisor,w
  1606  035A  0424               	iorwf	___lwmod@divisor+1,w
  1607  035B  1903               	btfsc	3,2
  1608  035C  2B86               	goto	l1171
  1609  035D  01A8               	clrf	___lwmod@counter
  1610  035E  0AA8               	incf	___lwmod@counter,f
  1611  035F                     l1161:	
  1612  035F  1BA4               	btfsc	___lwmod@divisor+1,7
  1613  0360  2B6D               	goto	l1163
  1614  0361  3001               	movlw	1
  1615  0362                     u425:	
  1616  0362  1003               	clrc
  1617  0363  0DA3               	rlf	___lwmod@divisor,f
  1618  0364  0DA4               	rlf	___lwmod@divisor+1,f
  1619  0365  3EFF               	addlw	-1
  1620  0366  1D03               	skipz
  1621  0367  2B62               	goto	u425
  1622  0368  3001               	movlw	1
  1623  0369  00A7               	movwf	??___lwmod
  1624  036A  0827               	movf	??___lwmod,w
  1625  036B  07A8               	addwf	___lwmod@counter,f
  1626  036C  2B5F               	goto	l1161
  1627  036D                     l1163:	
  1628  036D  0824               	movf	___lwmod@divisor+1,w
  1629  036E  0226               	subwf	___lwmod@dividend+1,w
  1630  036F  1D03               	skipz
  1631  0370  2B73               	goto	u445
  1632  0371  0823               	movf	___lwmod@divisor,w
  1633  0372  0225               	subwf	___lwmod@dividend,w
  1634  0373                     u445:	
  1635  0373  1C03               	skipc
  1636  0374  2B7B               	goto	l1167
  1637  0375  0823               	movf	___lwmod@divisor,w
  1638  0376  02A5               	subwf	___lwmod@dividend,f
  1639  0377  0824               	movf	___lwmod@divisor+1,w
  1640  0378  1C03               	skipc
  1641  0379  03A6               	decf	___lwmod@dividend+1,f
  1642  037A  02A6               	subwf	___lwmod@dividend+1,f
  1643  037B                     l1167:	
  1644  037B  3001               	movlw	1
  1645  037C                     u455:	
  1646  037C  1003               	clrc
  1647  037D  0CA4               	rrf	___lwmod@divisor+1,f
  1648  037E  0CA3               	rrf	___lwmod@divisor,f
  1649  037F  3EFF               	addlw	-1
  1650  0380  1D03               	skipz
  1651  0381  2B7C               	goto	u455
  1652  0382  3001               	movlw	1
  1653  0383  02A8               	subwf	___lwmod@counter,f
  1654  0384  1D03               	btfss	3,2
  1655  0385  2B6D               	goto	l1163
  1656  0386                     l1171:	
  1657  0386  0826               	movf	___lwmod@dividend+1,w
  1658  0387  00A4               	movwf	?___lwmod+1
  1659  0388  0825               	movf	___lwmod@dividend,w
  1660  0389  00A3               	movwf	?___lwmod
  1661  038A  0008               	return
  1662  038B                     __end_of___lwmod:	
  1663                           
  1664                           	psect	text4
  1665  0319                     __ptext4:	
  1666 ;; *************** function ___lwdiv *****************
  1667 ;; Defined at:
  1668 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  divisor         2    3[COMMON] unsigned int 
  1671 ;;  dividend        2    5[COMMON] unsigned int 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  quotient        2    1[BANK0 ] unsigned int 
  1674 ;;  counter         1    0[BANK0 ] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  2    3[COMMON] unsigned int 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1684 ;;      Params:         4       0       0       0       0
  1685 ;;      Locals:         0       3       0       0       0
  1686 ;;      Temps:          1       0       0       0       0
  1687 ;;      Totals:         5       3       0       0       0
  1688 ;;Total ram usage:        8 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_sprintf
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function ___lwdiv
  1700  0319                     ___lwdiv:	
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1704  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1705  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1706  031B  01A1               	clrf	___lwdiv@quotient
  1707  031C  01A2               	clrf	___lwdiv@quotient+1
  1708  031D  0873               	movf	___lwdiv@divisor,w
  1709  031E  0474               	iorwf	___lwdiv@divisor+1,w
  1710  031F  1903               	btfsc	3,2
  1711  0320  2B52               	goto	l1481
  1712  0321  01A0               	clrf	___lwdiv@counter
  1713  0322  0AA0               	incf	___lwdiv@counter,f
  1714  0323                     l1469:	
  1715  0323  1BF4               	btfsc	___lwdiv@divisor+1,7
  1716  0324  2B31               	goto	l1471
  1717  0325  3001               	movlw	1
  1718  0326                     u675:	
  1719  0326  1003               	clrc
  1720  0327  0DF3               	rlf	___lwdiv@divisor,f
  1721  0328  0DF4               	rlf	___lwdiv@divisor+1,f
  1722  0329  3EFF               	addlw	-1
  1723  032A  1D03               	skipz
  1724  032B  2B26               	goto	u675
  1725  032C  3001               	movlw	1
  1726  032D  00F7               	movwf	??___lwdiv
  1727  032E  0877               	movf	??___lwdiv,w
  1728  032F  07A0               	addwf	___lwdiv@counter,f
  1729  0330  2B23               	goto	l1469
  1730  0331                     l1471:	
  1731  0331  3001               	movlw	1
  1732  0332                     u695:	
  1733  0332  1003               	clrc
  1734  0333  0DA1               	rlf	___lwdiv@quotient,f
  1735  0334  0DA2               	rlf	___lwdiv@quotient+1,f
  1736  0335  3EFF               	addlw	-1
  1737  0336  1D03               	skipz
  1738  0337  2B32               	goto	u695
  1739  0338  0874               	movf	___lwdiv@divisor+1,w
  1740  0339  0276               	subwf	___lwdiv@dividend+1,w
  1741  033A  1D03               	skipz
  1742  033B  2B3E               	goto	u705
  1743  033C  0873               	movf	___lwdiv@divisor,w
  1744  033D  0275               	subwf	___lwdiv@dividend,w
  1745  033E                     u705:	
  1746  033E  1C03               	skipc
  1747  033F  2B47               	goto	l1477
  1748  0340  0873               	movf	___lwdiv@divisor,w
  1749  0341  02F5               	subwf	___lwdiv@dividend,f
  1750  0342  0874               	movf	___lwdiv@divisor+1,w
  1751  0343  1C03               	skipc
  1752  0344  03F6               	decf	___lwdiv@dividend+1,f
  1753  0345  02F6               	subwf	___lwdiv@dividend+1,f
  1754  0346  1421               	bsf	___lwdiv@quotient,0
  1755  0347                     l1477:	
  1756  0347  3001               	movlw	1
  1757  0348                     u715:	
  1758  0348  1003               	clrc
  1759  0349  0CF4               	rrf	___lwdiv@divisor+1,f
  1760  034A  0CF3               	rrf	___lwdiv@divisor,f
  1761  034B  3EFF               	addlw	-1
  1762  034C  1D03               	skipz
  1763  034D  2B48               	goto	u715
  1764  034E  3001               	movlw	1
  1765  034F  02A0               	subwf	___lwdiv@counter,f
  1766  0350  1D03               	btfss	3,2
  1767  0351  2B31               	goto	l1471
  1768  0352                     l1481:	
  1769  0352  0822               	movf	___lwdiv@quotient+1,w
  1770  0353  00F4               	movwf	?___lwdiv+1
  1771  0354  0821               	movf	___lwdiv@quotient,w
  1772  0355  00F3               	movwf	?___lwdiv
  1773  0356  0008               	return
  1774  0357                     __end_of___lwdiv:	
  1775                           
  1776                           	psect	text5
  1777  0461                     __ptext5:	
  1778 ;; *************** function _oscilator_begin *****************
  1779 ;; Defined at:
  1780 ;;		line 9 in file "./Oscilator.h"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  freq            1    wreg     unsigned char 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  freq            1    4[COMMON] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1794 ;;      Params:         0       0       0       0       0
  1795 ;;      Locals:         1       0       0       0       0
  1796 ;;      Temps:          1       0       0       0       0
  1797 ;;      Totals:         2       0       0       0       0
  1798 ;;Total ram usage:        2 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _oscilator_begin
  1810  0461                     _oscilator_begin:	
  1811                           
  1812                           ;incstack = 0
  1813                           ; Regs used in _oscilator_begin: [wreg+status,2+status,0]
  1814                           ;oscilator_begin@freq stored from wreg
  1815  0461  00F4               	movwf	oscilator_begin@freq
  1816                           
  1817                           ;./Oscilator.h: 10:     OSCCONbits.IRCF = freq;
  1818  0462  0874               	movf	oscilator_begin@freq,w
  1819  0463  00F3               	movwf	??_oscilator_begin
  1820  0464  0EF3               	swapf	??_oscilator_begin,f
  1821  0465  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0466  1303               	bcf	3,6	;RP1=0, select bank1
  1823  0467  080F               	movf	15,w	;volatile
  1824  0468  0673               	xorwf	??_oscilator_begin,w
  1825  0469  398F               	andlw	-113
  1826  046A  0673               	xorwf	??_oscilator_begin,w
  1827  046B  008F               	movwf	15	;volatile
  1828                           
  1829                           ;./Oscilator.h: 11:     OSCCONbits.SCS = 1;
  1830  046C  140F               	bsf	15,0	;volatile
  1831                           
  1832                           ;./Oscilator.h: 12:     OSCCONbits.OSTS = 0;
  1833  046D  118F               	bcf	15,3	;volatile
  1834  046E  0008               	return
  1835  046F                     __end_of_oscilator_begin:	
  1836                           
  1837                           	psect	text6
  1838  03B5                     __ptext6:	
  1839 ;; *************** function _dht11_read *****************
  1840 ;; Defined at:
  1841 ;;		line 31 in file "dht11_h.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      unsigned char 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1855 ;;      Params:         0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0
  1857 ;;      Temps:          2       0       0       0       0
  1858 ;;      Totals:         2       0       0       0       0
  1859 ;;Total ram usage:        2 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _dht11_read
  1871  03B5                     _dht11_read:	
  1872                           
  1873                           ;dht11_h.c: 33:     static uint8_t i = 0, temp;;dht11_h.c: 34:     for(i = 0; i < 8 ; i+
      +                          +)
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _dht11_read: [wreg+status,2+status,0]
  1877  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1878  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1879  03B7  01B9               	clrf	dht11_read@i
  1880  03B8                     l122:	
  1881  03B8  1C05               	btfss	5,0	;volatile
  1882  03B9  2BB8               	goto	l122
  1883                           
  1884                           ;dht11_h.c: 37:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  1885  03BA  3013               	movlw	19
  1886  03BB  00F3               	movwf	??_dht11_read
  1887  03BC                     u867:	
  1888  03BC  0BF3               	decfsz	??_dht11_read,f
  1889  03BD  2BBC               	goto	u867
  1890  03BE  2BBF               	nop2
  1891                           
  1892                           ;dht11_h.c: 38:         if (RA0)
  1893  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1894  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1895  03C1  1C05               	btfss	5,0	;volatile
  1896  03C2  2BC6               	goto	l1269
  1897                           
  1898                           ;dht11_h.c: 39:         {;dht11_h.c: 40:             temp = ((temp<<1) | 1);
  1899  03C3  1403               	setc
  1900  03C4  0DF8               	rlf	dht11_read@temp,f
  1901                           
  1902                           ;dht11_h.c: 41:         }
  1903  03C5  2BCC               	goto	l127
  1904  03C6                     l1269:	
  1905                           
  1906                           ;dht11_h.c: 43:           temp = (temp<<1);
  1907  03C6  0878               	movf	dht11_read@temp,w
  1908  03C7  00F3               	movwf	??_dht11_read
  1909  03C8  0773               	addwf	??_dht11_read,w
  1910  03C9  00F4               	movwf	??_dht11_read+1
  1911  03CA  0874               	movf	??_dht11_read+1,w
  1912  03CB  00F8               	movwf	dht11_read@temp
  1913  03CC                     l127:	
  1914  03CC  1805               	btfsc	5,0	;volatile
  1915  03CD  2BCC               	goto	l127
  1916                           
  1917                           ;dht11_h.c: 45:     }
  1918  03CE  3001               	movlw	1
  1919  03CF  00F3               	movwf	??_dht11_read
  1920  03D0  0873               	movf	??_dht11_read,w
  1921  03D1  07B9               	addwf	dht11_read@i,f
  1922  03D2  3008               	movlw	8
  1923  03D3  0239               	subwf	dht11_read@i,w
  1924  03D4  1C03               	skipc
  1925  03D5  2BB8               	goto	l122
  1926                           
  1927                           ;dht11_h.c: 46:     return temp;
  1928  03D6  0878               	movf	dht11_read@temp,w
  1929  03D7  0008               	return
  1930  03D8                     __end_of_dht11_read:	
  1931                           
  1932                           	psect	text7
  1933  047A                     __ptext7:	
  1934 ;; *************** function _dht11_check *****************
  1935 ;; Defined at:
  1936 ;;		line 24 in file "dht11_h.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		None
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1950 ;;      Params:         0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0
  1953 ;;      Totals:         0       0       0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           
  1965                           ;psect for function _dht11_check
  1966  047A                     _dht11_check:	
  1967  047A                     l104:	
  1968                           ;dht11_h.c: 26:     while(RA0);
  1969                           
  1970                           ;incstack = 0
  1971                           ; Regs used in _dht11_check: []
  1972                           
  1973  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1974  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1975  047C  1805               	btfsc	5,0	;volatile
  1976  047D  2C7A               	goto	l104
  1977  047E                     l107:	
  1978  047E  1C05               	btfss	5,0	;volatile
  1979  047F  2C7E               	goto	l107
  1980  0480                     l110:	
  1981  0480  1C05               	btfss	5,0	;volatile
  1982  0481  0008               	return
  1983  0482  2C80               	goto	l110
  1984  0483                     __end_of_dht11_check:	
  1985                           
  1986                           	psect	text8
  1987  03F8                     __ptext8:	
  1988 ;; *************** function _dht11_begin *****************
  1989 ;; Defined at:
  1990 ;;		line 13 in file "dht11_h.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0
  2006 ;;      Temps:          2       0       0       0       0
  2007 ;;      Totals:         2       0       0       0       0
  2008 ;;Total ram usage:        2 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    1
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _dht11_begin
  2020  03F8                     _dht11_begin:	
  2021                           
  2022                           ;dht11_h.c: 15:     TRISA0 = 0;
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _dht11_begin: [wreg]
  2026  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2027  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2028  03FA  1005               	bcf	5,0	;volatile
  2029                           
  2030                           ;dht11_h.c: 16:     RA0 = 0;
  2031  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2032  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2033  03FD  1005               	bcf	5,0	;volatile
  2034                           
  2035                           ;dht11_h.c: 17:     _delay((unsigned long)((18)*(8000000/4000.0)));
  2036  03FE  302F               	movlw	47
  2037  03FF  00F4               	movwf	??_dht11_begin+1
  2038  0400  30BF               	movlw	191
  2039  0401  00F3               	movwf	??_dht11_begin
  2040  0402                     u877:	
  2041  0402  0BF3               	decfsz	??_dht11_begin,f
  2042  0403  2C02               	goto	u877
  2043  0404  0BF4               	decfsz	??_dht11_begin+1,f
  2044  0405  2C02               	goto	u877
  2045  0406  2C07               	nop2
  2046                           
  2047                           ;dht11_h.c: 18:     RA0 = 1;
  2048  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0409  1405               	bsf	5,0	;volatile
  2051                           
  2052                           ;dht11_h.c: 19:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  2053  040A  300D               	movlw	13
  2054  040B  00F3               	movwf	??_dht11_begin
  2055  040C                     u887:	
  2056  040C  0BF3               	decfsz	??_dht11_begin,f
  2057  040D  2C0C               	goto	u887
  2058                           
  2059                           ;dht11_h.c: 20:     TRISA0 = 1;
  2060  040E  1683               	bsf	3,5	;RP0=1, select bank1
  2061  040F  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0410  1405               	bsf	5,0	;volatile
  2063  0411  0008               	return
  2064  0412                     __end_of_dht11_begin:	
  2065                           
  2066                           	psect	text9
  2067  038B                     __ptext9:	
  2068 ;; *************** function _LCD8_strWrite *****************
  2069 ;; Defined at:
  2070 ;;		line 55 in file "./LCD8bit.h"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  data            2    5[COMMON] PTR unsigned char 
  2073 ;;		 -> show(15), STR_3(13), STR_2(15), STR_1(9), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  i               1    0[BANK0 ] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         2       0       0       0       0
  2086 ;;      Locals:         0       1       0       0       0
  2087 ;;      Temps:          1       0       0       0       0
  2088 ;;      Totals:         3       1       0       0       0
  2089 ;;Total ram usage:        4 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    2
  2092 ;; This function calls:
  2093 ;;		_LCD8_write
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _LCD8_strWrite
  2101  038B                     _LCD8_strWrite:	
  2102                           
  2103                           ;./LCD8bit.h: 56:     char i;;./LCD8bit.h: 57:         for(i=0; data[i] !='\0';i++ )
  2104                           
  2105                           ;incstack = 0
  2106                           ; Regs used in _LCD8_strWrite: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2107  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2108  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2109  038D  01A0               	clrf	LCD8_strWrite@i
  2110  038E                     l1529:	
  2111  038E  0820               	movf	LCD8_strWrite@i,w
  2112  038F  0775               	addwf	LCD8_strWrite@data,w
  2113  0390  0084               	movwf	4
  2114  0391  0876               	movf	LCD8_strWrite@data+1,w
  2115  0392  1803               	skipnc
  2116  0393  0A76               	incf	LCD8_strWrite@data+1,w
  2117  0394  00FF               	movwf	127
  2118  0395  120A  118A  2267  120A  118A  	fcall	stringtab
  2119  039A  3A00               	xorlw	0
  2120  039B  1903               	btfsc	3,2
  2121  039C  0008               	return
  2122                           
  2123                           ;./LCD8bit.h: 58:             LCD8_write(data[i]);
  2124  039D  0820               	movf	LCD8_strWrite@i,w
  2125  039E  0775               	addwf	LCD8_strWrite@data,w
  2126  039F  0084               	movwf	4
  2127  03A0  0876               	movf	LCD8_strWrite@data+1,w
  2128  03A1  1803               	skipnc
  2129  03A2  0A76               	incf	LCD8_strWrite@data+1,w
  2130  03A3  00FF               	movwf	127
  2131  03A4  120A  118A  2267  120A  118A  	fcall	stringtab
  2132  03A9  120A  118A  2451  120A  118A  	fcall	_LCD8_write
  2133  03AE  3001               	movlw	1
  2134  03AF  00F7               	movwf	??_LCD8_strWrite
  2135  03B0  0877               	movf	??_LCD8_strWrite,w
  2136  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2137  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2138  03B3  07A0               	addwf	LCD8_strWrite@i,f
  2139  03B4  2B8E               	goto	l1529
  2140  03B5                     __end_of_LCD8_strWrite:	
  2141                           
  2142                           	psect	text10
  2143  0451                     __ptext10:	
  2144 ;; *************** function _LCD8_write *****************
  2145 ;; Defined at:
  2146 ;;		line 4 in file "./LCD8bit.h"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  data            1    wreg     unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  data            1    4[COMMON] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         0       0       0       0       0
  2161 ;;      Locals:         1       0       0       0       0
  2162 ;;      Temps:          1       0       0       0       0
  2163 ;;      Totals:         2       0       0       0       0
  2164 ;;Total ram usage:        2 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_LCD8_strWrite
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _LCD8_write
  2176  0451                     _LCD8_write:	
  2177                           
  2178                           ;incstack = 0
  2179                           ; Regs used in _LCD8_write: [wreg]
  2180                           ;LCD8_write@data stored from wreg
  2181  0451  00F4               	movwf	LCD8_write@data
  2182                           
  2183                           ;./LCD8bit.h: 5:     RA1 = 1;
  2184  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0454  1485               	bsf	5,1	;volatile
  2187                           
  2188                           ;./LCD8bit.h: 6:     PORTB = data;
  2189  0455  0874               	movf	LCD8_write@data,w
  2190  0456  0086               	movwf	6	;volatile
  2191                           
  2192                           ;./LCD8bit.h: 7:     RA2 = 1;
  2193  0457  1505               	bsf	5,2	;volatile
  2194                           
  2195                           ;./LCD8bit.h: 8:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2196  0458  301A               	movlw	26
  2197  0459  00F3               	movwf	??_LCD8_write
  2198  045A                     u897:	
  2199  045A  0BF3               	decfsz	??_LCD8_write,f
  2200  045B  2C5A               	goto	u897
  2201  045C  0000               	nop
  2202                           
  2203                           ;./LCD8bit.h: 9:     RA2 = 0;
  2204  045D  1283               	bcf	3,5	;RP0=0, select bank0
  2205  045E  1303               	bcf	3,6	;RP1=0, select bank0
  2206  045F  1105               	bcf	5,2	;volatile
  2207  0460  0008               	return
  2208  0461                     __end_of_LCD8_write:	
  2209                           
  2210                           	psect	text11
  2211  0412                     __ptext11:	
  2212 ;; *************** function _LCD8_set_cursor *****************
  2213 ;; Defined at:
  2214 ;;		line 21 in file "./LCD8bit.h"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  row             1    wreg     unsigned char 
  2217 ;;  column          1    6[COMMON] unsigned char 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  row             1    1[BANK0 ] unsigned char 
  2220 ;;  cursor          1    0[BANK0 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, pclath, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2230 ;;      Params:         1       0       0       0       0
  2231 ;;      Locals:         0       2       0       0       0
  2232 ;;      Temps:          1       0       0       0       0
  2233 ;;      Totals:         2       2       0       0       0
  2234 ;;Total ram usage:        4 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    2
  2237 ;; This function calls:
  2238 ;;		_LCD8_cmd
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _LCD8_set_cursor
  2246  0412                     _LCD8_set_cursor:	
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _LCD8_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  2250                           ;LCD8_set_cursor@row stored from wreg
  2251  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0414  00A1               	movwf	LCD8_set_cursor@row
  2254                           
  2255                           ;./LCD8bit.h: 22:     char cursor;;./LCD8bit.h: 24:         if(row==1)
  2256  0415  0321               	decf	LCD8_set_cursor@row,w
  2257  0416  1D03               	btfss	3,2
  2258  0417  2C1D               	goto	l41
  2259                           
  2260                           ;./LCD8bit.h: 25:             cursor = 128 + column -1;
  2261  0418  0876               	movf	LCD8_set_cursor@column,w
  2262  0419  3E7F               	addlw	127
  2263  041A  00F7               	movwf	??_LCD8_set_cursor
  2264  041B  0877               	movf	??_LCD8_set_cursor,w
  2265  041C  00A0               	movwf	LCD8_set_cursor@cursor
  2266  041D                     l41:	
  2267                           
  2268                           ;./LCD8bit.h: 26:         if (row==2)
  2269  041D  3002               	movlw	2
  2270  041E  0621               	xorwf	LCD8_set_cursor@row,w
  2271  041F  1D03               	btfss	3,2
  2272  0420  2C26               	goto	l1491
  2273                           
  2274                           ;./LCD8bit.h: 27:             cursor = 192 + column -1;
  2275  0421  0876               	movf	LCD8_set_cursor@column,w
  2276  0422  3EBF               	addlw	191
  2277  0423  00F7               	movwf	??_LCD8_set_cursor
  2278  0424  0877               	movf	??_LCD8_set_cursor,w
  2279  0425  00A0               	movwf	LCD8_set_cursor@cursor
  2280  0426                     l1491:	
  2281                           
  2282                           ;./LCD8bit.h: 29:         LCD8_cmd(cursor);
  2283  0426  0820               	movf	LCD8_set_cursor@cursor,w
  2284  0427  120A  118A  242B   	fcall	_LCD8_cmd
  2285  042A  0008               	return
  2286  042B                     __end_of_LCD8_set_cursor:	
  2287                           
  2288                           	psect	text12
  2289  046F                     __ptext12:	
  2290 ;; *************** function _LCD8_clear *****************
  2291 ;; Defined at:
  2292 ;;		line 32 in file "./LCD8bit.h"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0
  2309 ;;      Totals:         0       0       0       0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    2
  2313 ;; This function calls:
  2314 ;;		_LCD8_cmd
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _LCD8_clear
  2322  046F                     _LCD8_clear:	
  2323                           
  2324                           ;./LCD8bit.h: 33:     LCD8_cmd(0);
  2325                           
  2326                           ;incstack = 0
  2327                           ; Regs used in _LCD8_clear: [wreg+status,2+status,0+pclath+cstack]
  2328  046F  3000               	movlw	0
  2329  0470  120A  118A  242B  120A  118A  	fcall	_LCD8_cmd
  2330                           
  2331                           ;./LCD8bit.h: 34:     LCD8_cmd(1);
  2332  0475  3001               	movlw	1
  2333  0476  120A  118A  242B   	fcall	_LCD8_cmd
  2334  0479  0008               	return
  2335  047A                     __end_of_LCD8_clear:	
  2336                           
  2337                           	psect	text13
  2338  02C5                     __ptext13:	
  2339 ;; *************** function _LCD8_begin *****************
  2340 ;; Defined at:
  2341 ;;		line 37 in file "./LCD8bit.h"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, pclath, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2355 ;;      Params:         0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0
  2357 ;;      Temps:          2       0       0       0       0
  2358 ;;      Totals:         2       0       0       0       0
  2359 ;;Total ram usage:        2 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    2
  2362 ;; This function calls:
  2363 ;;		_LCD8_cmd
  2364 ;; This function is called by:
  2365 ;;		_main
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function _LCD8_begin
  2371  02C5                     _LCD8_begin:	
  2372                           
  2373                           ;./LCD8bit.h: 38:     PORTB = 0;
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _LCD8_begin: [wreg+status,2+status,0+pclath+cstack]
  2377  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2378  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2379  02C7  0186               	clrf	6	;volatile
  2380                           
  2381                           ;./LCD8bit.h: 39:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2382  02C8  3034               	movlw	52
  2383  02C9  00F7               	movwf	??_LCD8_begin+1
  2384  02CA  30F1               	movlw	241
  2385  02CB  00F6               	movwf	??_LCD8_begin
  2386  02CC                     u907:	
  2387  02CC  0BF6               	decfsz	??_LCD8_begin,f
  2388  02CD  2ACC               	goto	u907
  2389  02CE  0BF7               	decfsz	??_LCD8_begin+1,f
  2390  02CF  2ACC               	goto	u907
  2391  02D0  2AD1               	nop2
  2392                           
  2393                           ;./LCD8bit.h: 40:     LCD8_cmd(48);
  2394  02D1  3030               	movlw	48
  2395  02D2  120A  118A  242B  120A  118A  	fcall	_LCD8_cmd
  2396                           
  2397                           ;./LCD8bit.h: 41:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2398  02D7  300D               	movlw	13
  2399  02D8  00F7               	movwf	??_LCD8_begin+1
  2400  02D9  30FB               	movlw	251
  2401  02DA  00F6               	movwf	??_LCD8_begin
  2402  02DB                     u917:	
  2403  02DB  0BF6               	decfsz	??_LCD8_begin,f
  2404  02DC  2ADB               	goto	u917
  2405  02DD  0BF7               	decfsz	??_LCD8_begin+1,f
  2406  02DE  2ADB               	goto	u917
  2407  02DF  2AE0               	nop2
  2408                           
  2409                           ;./LCD8bit.h: 42:     LCD8_cmd(48);
  2410  02E0  3030               	movlw	48
  2411  02E1  120A  118A  242B  120A  118A  	fcall	_LCD8_cmd
  2412                           
  2413                           ;./LCD8bit.h: 43:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  2414  02E6  306D               	movlw	109
  2415  02E7  00F6               	movwf	??_LCD8_begin
  2416  02E8                     u927:	
  2417  02E8  0BF6               	decfsz	??_LCD8_begin,f
  2418  02E9  2AE8               	goto	u927
  2419  02EA  2AEB               	nop2
  2420                           
  2421                           ;./LCD8bit.h: 44:     LCD8_cmd(48);
  2422  02EB  3030               	movlw	48
  2423  02EC  120A  118A  242B  120A  118A  	fcall	_LCD8_cmd
  2424                           
  2425                           ;./LCD8bit.h: 45:     _delay((unsigned long)((165)*(8000000/4000000.0)));
  2426  02F1  306D               	movlw	109
  2427  02F2  00F6               	movwf	??_LCD8_begin
  2428  02F3                     u937:	
  2429  02F3  0BF6               	decfsz	??_LCD8_begin,f
  2430  02F4  2AF3               	goto	u937
  2431  02F5  2AF6               	nop2
  2432                           
  2433                           ;./LCD8bit.h: 47:     LCD8_cmd(0b111000);
  2434  02F6  3038               	movlw	56
  2435  02F7  120A  118A  242B  120A  118A  	fcall	_LCD8_cmd
  2436                           
  2437                           ;./LCD8bit.h: 48:     LCD8_cmd(0b10100);
  2438  02FC  3014               	movlw	20
  2439  02FD  120A  118A  242B  120A  118A  	fcall	_LCD8_cmd
  2440                           
  2441                           ;./LCD8bit.h: 49:     LCD8_cmd(1);
  2442  0302  3001               	movlw	1
  2443  0303  120A  118A  242B  120A  118A  	fcall	_LCD8_cmd
  2444                           
  2445                           ;./LCD8bit.h: 50:     LCD8_cmd(0b110);
  2446  0308  3006               	movlw	6
  2447  0309  120A  118A  242B  120A  118A  	fcall	_LCD8_cmd
  2448                           
  2449                           ;./LCD8bit.h: 51:     LCD8_cmd(0b1100);
  2450  030E  300C               	movlw	12
  2451  030F  120A  118A  242B  120A  118A  	fcall	_LCD8_cmd
  2452                           
  2453                           ;./LCD8bit.h: 52:     LCD8_cmd(0b10);
  2454  0314  3002               	movlw	2
  2455  0315  120A  118A  242B   	fcall	_LCD8_cmd
  2456  0318  0008               	return
  2457  0319                     __end_of_LCD8_begin:	
  2458                           
  2459                           	psect	text14
  2460  042B                     __ptext14:	
  2461 ;; *************** function _LCD8_cmd *****************
  2462 ;; Defined at:
  2463 ;;		line 12 in file "./LCD8bit.h"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  data            1    wreg     unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  data            1    5[COMMON] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       0       0       0       0
  2478 ;;      Locals:         1       0       0       0       0
  2479 ;;      Temps:          2       0       0       0       0
  2480 ;;      Totals:         3       0       0       0       0
  2481 ;;Total ram usage:        3 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_LCD8_set_cursor
  2488 ;;		_LCD8_clear
  2489 ;;		_LCD8_begin
  2490 ;;		_LCD8_shiftR
  2491 ;;		_LCD8_shiftL
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _LCD8_cmd
  2497  042B                     _LCD8_cmd:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _LCD8_cmd: [wreg]
  2501                           ;LCD8_cmd@data stored from wreg
  2502  042B  00F5               	movwf	LCD8_cmd@data
  2503                           
  2504                           ;./LCD8bit.h: 13:     RA1 = 0;
  2505  042C  1283               	bcf	3,5	;RP0=0, select bank0
  2506  042D  1303               	bcf	3,6	;RP1=0, select bank0
  2507  042E  1085               	bcf	5,1	;volatile
  2508                           
  2509                           ;./LCD8bit.h: 14:     PORTB = data;
  2510  042F  0875               	movf	LCD8_cmd@data,w
  2511  0430  0086               	movwf	6	;volatile
  2512                           
  2513                           ;./LCD8bit.h: 16:     RA2 = 1;
  2514  0431  1505               	bsf	5,2	;volatile
  2515                           
  2516                           ;./LCD8bit.h: 17:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2517  0432  300B               	movlw	11
  2518  0433  00F4               	movwf	??_LCD8_cmd+1
  2519  0434  3062               	movlw	98
  2520  0435  00F3               	movwf	??_LCD8_cmd
  2521  0436                     u947:	
  2522  0436  0BF3               	decfsz	??_LCD8_cmd,f
  2523  0437  2C36               	goto	u947
  2524  0438  0BF4               	decfsz	??_LCD8_cmd+1,f
  2525  0439  2C36               	goto	u947
  2526  043A  0000               	nop
  2527                           
  2528                           ;./LCD8bit.h: 18:     RA2 = 0;
  2529  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2530  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2531  043D  1105               	bcf	5,2	;volatile
  2532  043E  0008               	return
  2533  043F                     __end_of_LCD8_cmd:	
  2534                           
  2535                           	psect	text15
  2536  043F                     __ptext15:	
  2537 ;; *************** function _isr *****************
  2538 ;; Defined at:
  2539 ;;		line 25 in file "timer1.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0
  2555 ;;      Temps:          3       0       0       0       0
  2556 ;;      Totals:         3       0       0       0       0
  2557 ;;Total ram usage:        3 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		Interrupt level 1
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _isr
  2568  043F                     _isr:	
  2569                           
  2570                           ;timer1.c: 27:     if (PIR1bits.TMR1IF) {
  2571  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0441  1C0C               	btfss	12,0	;volatile
  2574  0442  2C4A               	goto	i1l151
  2575                           
  2576                           ;timer1.c: 28:         t1_count ++;
  2577  0443  3001               	movlw	1
  2578  0444  00F0               	movwf	??_isr
  2579  0445  0870               	movf	??_isr,w
  2580  0446  07FA               	addwf	_t1_count,f
  2581                           
  2582                           ;timer1.c: 29:         TMR1 = (0);
  2583  0447  018E               	clrf	14	;volatile
  2584  0448  018F               	clrf	15	;volatile
  2585                           
  2586                           ;timer1.c: 30:         PIR1bits.TMR1IF = 0;
  2587  0449  100C               	bcf	12,0	;volatile
  2588  044A                     i1l151:	
  2589  044A  0872               	movf	??_isr+2,w
  2590  044B  008A               	movwf	10
  2591  044C  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  2592  044D  0083               	movwf	3
  2593  044E  0EFE               	swapf	126,f
  2594  044F  0E7E               	swapf	126,w
  2595  0450  0009               	retfie
  2596  0451                     __end_of_isr:	
  2597  007E                     btemp	set	126	;btemp
  2598  007E                     wtemp0	set	126
  2599                           
  2600                           	psect	intentry
  2601  0004                     __pintentry:	
  2602                           ;incstack = 0
  2603                           ; Regs used in _isr: [wreg+status,2+status,0]
  2604                           
  2605  0004                     interrupt_function:	
  2606  007E                     saved_w	set	btemp
  2607  0004  00FE               	movwf	btemp
  2608  0005  0E03               	swapf	3,w
  2609  0006  00F1               	movwf	??_isr+1
  2610  0007  080A               	movf	10,w
  2611  0008  00F2               	movwf	??_isr+2
  2612  0009  120A  118A  2C3F   	ljmp	_isr


Data Sizes:
    Strings     68
    Constant    10
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[9]), STR_5(CODE[5]), 
		 -> STR_4(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> show(BANK0[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD8_strWrite@data	PTR unsigned char  size(2) Largest target is 15
		 -> show(BANK0[15]), STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_LCD8_begin
    _main->_LCD8_set_cursor
    _main->_LCD8_strWrite
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _LCD8_strWrite->_LCD8_write
    _LCD8_set_cursor->_LCD8_cmd
    _LCD8_clear->_LCD8_cmd
    _LCD8_begin->_LCD8_cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3875
                                             22 BANK0      3     3      0
                         _LCD8_begin
                         _LCD8_clear
                    _LCD8_set_cursor
                      _LCD8_strWrite
                        _dht11_begin
                        _dht11_check
                         _dht11_read
                    _oscilator_begin
                            _sprintf
                       _timer1_begin
 ---------------------------------------------------------------------------------
 (1) _timer1_begin                                         4     3      1     120
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2058
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _oscilator_begin                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dht11_read                                           2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dht11_check                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dht11_begin                                          2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_strWrite                                        4     2      2     881
                                              5 COMMON     3     1      2
                                              0 BANK0      1     1      0
                         _LCD8_write
 ---------------------------------------------------------------------------------
 (2) _LCD8_write                                           2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD8_set_cursor                                      4     3      1     732
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD8_clear                                           0     0      0      31
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD8_begin                                           2     2      0      31
                                              6 COMMON     2     2      0
                           _LCD8_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD8_cmd                                             3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD8_begin
     _LCD8_cmd
   _LCD8_clear
     _LCD8_cmd
   _LCD8_set_cursor
     _LCD8_cmd
   _LCD8_strWrite
     _LCD8_write
   _dht11_begin
   _dht11_check
   _dht11_read
   _oscilator_begin
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _timer1_begin

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      2F       5       58.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 24 14:22:22 2019

      LCD8_set_cursor@row 0021                         pc 0002               __CFG_CP$OFF 0000  
   LCD8_set_cursor@column 0076                        l41 041D     LCD8_set_cursor@cursor 0020  
                      fsr 0004      __size_of_dht11_begin 001A      __size_of_dht11_check 0009  
                     l110 0480                       l104 047A                       l122 03B8  
                     l107 047E                       l127 03CC                       _RA0 0028  
                     _RA1 0029                       _RA2 002A                       u425 0362  
            __CFG_CPD$OFF 0000                       u445 0373                       u455 037C  
                     u705 033E                       u715 0348                       u907 02CC  
                     u675 0326                       u917 02DB                       u927 02E8  
                     u695 0332                       u937 02F3                       u785 0202  
                     u857 0055                       u947 0436                       u867 03BC  
                     u877 0402                       u887 040C                       u897 045A  
                     _isr 043F                       fsr0 0004                       indf 0000  
            __CFG_LVP$OFF 0000                      l1161 035F                      l1163 036D  
                    l1171 0386                      l1167 037B                      l1269 03C6  
                    l1471 0331                      l1529 038E                      l1481 0352  
                    l1561 01EB                      l1545 01D2                      l1491 0426  
                    l1555 01E9                      l1539 01B4                      l1619 0068  
                    l1477 0347                      l1469 0323                      l1581 021F  
                    l1573 021B                      l1567 020C                      l1583 0194  
                    l1647 00E3                      l1585 0262                      l1649 00E4  
                    l1695 01C7                      ?_isr 0070                      STR_1 02A9  
                    STR_2 0281                      STR_3 0290                      STR_4 029D  
                    STR_5 02BB                      STR_6 02B2                      STR_7 02C0  
                    STR_8 02A6                      _TMR1 000E              __CFG_WRT$OFF 0000  
                    _main 001D                      _show 0040                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 000C             __CFG_IESO$OFF 0000  
 __end_of_oscilator_begin 046F          __end_of_LCD8_cmd 043F                     ??_isr 0070  
     __size_of_LCD8_begin 0054       __size_of_LCD8_clear 000B           _LCD8_set_cursor 0412  
                   ?_main 0070       __size_of_LCD8_write 0010             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188           __end_of___lwdiv 0357                     i1l151 044A  
         __end_of___lwmod 038B                     _PORTA 0005                     _PORTB 0006  
                   _TRISB 0086            __CFG_FCMEN$OFF 0000                     _check 003C  
         __end_of_dpowers 0281                     _total 003B                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0267  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 018D  
                  ??_main 0036                    _TRISA0 0428                    _TRISA1 0429  
                  _TRISA2 042A                    _TRISA3 042B            __CFG_PWRTE$OFF 0000  
 __end_of_LCD8_set_cursor 042B          ?_oscilator_begin 0070                 ??___lwdiv 0077  
               ??___lwmod 0027            dht11_read@temp 0078                    saved_w 007E  
            ??_LCD8_begin 0076                 ??_sprintf 002C              ??_LCD8_clear 0076  
               ?_LCD8_cmd 0070              ??_LCD8_write 0073   __end_of__initialization 0019  
          __pcstackCOMMON 0070                _dht11_read 03B5        __end_of_LCD8_begin 0319  
      __end_of_LCD8_clear 047A        __end_of_LCD8_write 0461                ??_LCD8_cmd 0073  
              __pbssBANK0 0039     __end_of_LCD8_strWrite 03B5                __pmaintext 001D  
           ??_dht11_begin 0073             ??_dht11_check 0073          ?_LCD8_set_cursor 0076  
              __pintentry 0004                __stringtab 0267               ?_dht11_read 0070  
                 ___lwdiv 0319                   ___lwmod 0357             ?_timer1_begin 0073  
                 __ptext1 03D8                   __ptext2 018D                   __ptext3 0357  
                 __ptext4 0319                   __ptext5 0461                   __ptext6 03B5  
                 __ptext7 047A                   __ptext8 03F8                   __ptext9 038B  
     __end_of_dht11_begin 0412       __end_of_dht11_check 0483                 _T1CONbits 0010  
                 _counter 003A                   _dpowers 0277              __size_of_isr 0012  
                 _hum_dec 003D         LCD8_strWrite@data 0075                   _hum_int 003E  
                 _sprintf 018D                   clrloop0 0484      end_of_initialization 0019  
          ??_timer1_begin 0074       __size_of_dht11_read 0023     timer1_begin@prescaler 0073  
       __size_of_LCD8_cmd 0014               _dht11_begin 03F8               _dht11_check 047A  
__size_of_oscilator_begin 000E       start_initialization 000F               __end_of_isr 0451  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0078                 ___latbits 0002  
           __pcstackBANK0 0020      __end_of_timer1_begin 03F8               dht11_read@i 0039  
             sprintf@flag 0030               sprintf@prec 0031          ___lwdiv@dividend 0075  
            ??_dht11_read 0073                  ?___lwdiv 0073                  ?___lwmod 0023  
          LCD8_strWrite@i 0020                 __pstrings 0267    __size_of_LCD8_strWrite 002A  
      timer1_begin@offset 0076  __size_of_LCD8_set_cursor 0019            LCD8_write@data 0074  
        ___lwdiv@quotient 0021                  ?_sprintf 0029         ??_oscilator_begin 0073  
                _LCD8_cmd 042B        __end_of_dht11_read 03D8         interrupt_function 0004  
               clear_ram0 0483                  _PIE1bits 008C                  _PIR1bits 000C  
             __stringbase 0276             _LCD8_strWrite 038B       oscilator_begin@freq 0074  
            ?_dht11_begin 0070              ?_dht11_check 0070                  _t1_count 007A  
        __size_of___lwdiv 003E          __size_of___lwmod 0034        __end_of__stringtab 0277  
              sprintf@val 0032           ___lwdiv@divisor 0073     __size_of_timer1_begin 0020  
         ___lwdiv@counter 0020                  __ptext10 0451                  __ptext11 0412  
                __ptext12 046F                  __ptext13 02C5                  __ptext14 042B  
                __ptext15 043F         __CFG_BOR4V$BOR40V 0000         ??_LCD8_set_cursor 0077  
              _LCD8_begin 02C5                _LCD8_clear 046F          __size_of_sprintf 00DA  
          ?_LCD8_strWrite 0075                _LCD8_write 0451             __size_of_main 0170  
            LCD8_cmd@data 0075                  _temp_dec 003F                  _temp_int 0079  
            _timer1_begin 03D8                _INTCONbits 000B                  intlevel1 0000  
               sprintf@ap 002F                 sprintf@sp 0034          ___lwmod@dividend 0025  
               stringcode 0271                _OSCCONbits 008F           _oscilator_begin 0461  
                sprintf@c 0035                  sprintf@f 0029           ___lwmod@divisor 0023  
         ___lwmod@counter 0028                  stringdir 0271                  stringtab 0267  
         ??_LCD8_strWrite 0077               ?_LCD8_begin 0070               ?_LCD8_clear 0070  
             ?_LCD8_write 0070  
